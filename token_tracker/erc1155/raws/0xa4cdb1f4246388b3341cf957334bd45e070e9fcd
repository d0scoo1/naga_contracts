{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/LARS.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Larsito\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC1155Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                        //\\n//                                                                                        //\\n//    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::    //\\n//    ::::::::::::::::::::::::~==?I7I7I7I7O$I7?+=+::::::::::::::::::::::::::::::::::::    //\\n//    ::::::::::::::::::::::=+77$ZZ$$IZZZOZZ87Z$$$Z7+:::::::::::::::::::::::::::::::::    //\\n//    ::::::::::::::::::::+$ZOZOZZOZO$Z7OZZO$DZOOZ$$O$?++:,:::::::::::::::::::::::::::    //\\n//    :::::::::::::::::=?$ZOZZ888O8Z78OZ$OOZOIOOOOZZO$77I+=?~=::::::::::::::::::::::::    //\\n//    :::::::::::::::+$ZOO88888DD8$7$$Z88$Z8ZOZ8D$O88ZZ$7I?7?~::::::::::::::::::::::::    //\\n//    :::::::::::::~7ZOO88ODD8DD87O$OO8O8OZO8DZ$DZNDOOOZ$$$7?7=:::::,,,,::::::::::::::    //\\n//    ::::::::::=7$IZZOZ88OD8OO8$ZZO88DDDD8OO8O$8OO8O88OZZ$$$7I==+::,,,,,:::::::::::::    //\\n//    :::::::::::I7$ZOO8888OO88DO8O888DDDDD8O8ZOO8O88OOZZZZZZOZ$7+I+:,,,,:::::::::::::    //\\n//    :::::::::=~$ZOO88O8OZOOO8OOOO88888D88O8OOOOOO8ZOZOZOZ$OOOOOOOO$I~,,:::::::::::::    //\\n//    :::::::::~IIZOOOOZ$Z$$ZZ$ZOZZZZOO8OOOOOZZZZ$$777777I77$Z88O$77I?I:,,::::::::::::    //\\n//    :::::::::~7OOOOZ77IIII7III777$$ZZZZZ$Z$$777IIIIIII?IIII7ZOOOZZ$I~:::::::::::::::    //\\n//    :::::::~+77ZZO7I????????????IIII7$777II????????????????I7ZOZZZ$$=:::::::::::::::    //\\n//    ~~~:::::=?ZZO7??++???????????????III????????????????????I7Z8OZ$7=~::::::::::::::    //\\n//    ~~~~~:::~$ZZI+=+++?+?????????????????????????????????????I$ZOZ$7I~:::~~~~~~~~~~~    //\\n//    ~~~~::::=$Z7===+++?????????????????????????????????????++?IZZ7$$I~~~~~~~~~~~~~~~    //\\n//    ==~~~:::~7$+===?+?????????????????????????????????????+++?I7$$77+=~~~~~~========    //\\n//    ==~~~:::~$I====++?????????????????+???????????????I???++++?I7$77I~=~============    //\\n//    ==~~~:::+7+=~=++???????????????????????????????I??II??++=+?I$7$I$~~=============    //\\n//    ==~~~~::77+===++????????????????????????????????I?I???++=+??777+?+============~~    //\\n//    ====~~~~77?==+++???II?????????????????????????????????+++=??$$$II?~==========~~~    //\\n//    ========7II==+++?????????????????????????????????II???+++=+?7ZI7I?==============    //\\n//    ++++++++77?+++??????????????????????+??????????????????+===?I7777?:=============    //\\n//    ++++====77I++++???????????????????????????????????????+++===?$$7I$+=============    //\\n//    ++++====I$I?+++?????????????????????????????????????I?++=====?7$7?I=============    //\\n//    ++++====$7I?+=++???????I???????II??????IIIIIIII77$Z$$7I?+~===?I7$77==========+==    //\\n//    +++++===7$?++++?++????IIIIIIIIIIIIIIIIII7$Z8DD8OODDNNNDD8DDZ~~?7$7I============+    //\\n//    ===+++++7$+++==+?III7$ZZOZZ$777IIIIII7$Z87NNNDDDDDDDZZZZ$$IINZ=7:.7~==========++    //\\n//    ~~~~====I7++==7OZ8O$$ZO8DDDO$$OZ$Z$O88ONDDDDDDDDDDDDDDDI8OOZN??$OO7IIII=+++=====    //\\n//    :~~~~===77++?MNDDDNNNDDDDDDDDDDD8ZI?7O8DDDDDDDDDDDDDDDD8888OD?==$I77OOZ7===+++++    //\\n//    ~~~~====I$:8ODDDDDNDDDDNNDDDDDDNNI???ZNDDDDDDDDDDDDDDDD8888OD+==?II$ZZZ$++++++++    //\\n//    =========DNOO8DDDDDDDDNNNNDDDDDDNI???$ZDDDDDDDDDDDDDD88888OOD+===II7IZZ$======++    //\\n//    ===+====+ZIO8DDDDDDDDNDDDDDDDDDDO????I88DDDDDDDDDDDD88888OOOI?+==7$77$Z$=======+    //\\n//    ~~======ZI:O8D8DDDDDDDDDDDDDDDDD?????I78NDDDDDDDDDD888888OON??+==?ZZ$?7=========    //\\n//    ~~~~====Z?+N88OO88DDDDDDDDDDDDDMI?+??III$NDDDDDDDDDD8DDD8NI???+=+=IO$?7~=~~~~~~~    //\\n//    ~~~=====I7=7OOOO888DDDDDDDDDDDD7I++???III78DDDDDDDDDD8D8I????+===+?7$?7~=~~~~~~~    //\\n//    ~~~===~~~?==N8O8888DDDDDDDDDDDI7+++???III?IIZ8DDD8OOI?I??????++~=Z+I?II~~~~~~~~~    //\\n//    ~~~~~~~~~?~++?N888DDDDDDDDDDD+II?+++???I???????????????????????~+??I?II==~~~~~~~    //\\n//    ::~::::::==?I++?IZ8DDDDDOZIIIII?++????????I7III????????????????=?II???+==~======    //\\n//    :::::::::~$?+=+++????????III7I+++???????+??I777777IIIII???????+=+I$I++==========    //\\n//    ~~~~~::::~I+?+++???????IIII7I++???????II7I??II7$$$777IIIIII???+++I7$I?======++++    //\\n//    ====~~~~~=I???+?????IIII777III777IIII778N8$7IIII77$Z$7IIIIII?I?+?$7ZZ===+=+=++++    //\\n//    ====~~~~~~7+I????IIII777$$III$88Z77$$$$ZZOZZ7777777$$$7IIIIII7I??I78OO7+++++++++    //\\n//    ::::::::::?$7??IIII777$ZO$77$ZO8888888888888Z$ZZZZZZ$$$7IIIII777IIIDDNDDZ+++++++    //\\n//    ,,,,,,,,,,+$7?III777$ZOOOOOOZOO8888DD88888O8OOZZOOOOZ$Z7IIII7$7I+?I8NDDDDD8I++++    //\\n//    ......,,,,,:OIIII77$O8Z$888OO88O88O888OOOZOO8OOOOO888OZ7III77Z$$77IDDDDDDDDDD?++    //\\n//    ....,,=?~,::I77II7$$8Z8DD8OZOOZZOO8888OOOZZZ$ZOODDDD8OO777ZZ$7$7ZZZDDDDDDDDDDD7?    //\\n//    ,,:I7$$$$O87O$$7777$888888ZZZ$$$Z$$777III7$$ZZOZ77ZO8O$7$O8ZZZ87OZN88888888888OO    //\\n//    $8OZZZO88888Z$Z$$777ZOO8OZZ88OOOZ$$$$$$$$$$7I?IIII7Z8O7$$O8ZZ$OZZZI8D88888O8OO8O    //\\n//    8OOOOO8888OOZ8$$OO$77$OZ7IIII???++++??????????IIII7$OZ$ZOOZOZ78OO$7DD8888OOO8888    //\\n//    ZOOOO8888OOODO$OZO$$77$Z7IIIII++??++++??I??I?IIIII7OOOZO8O8OOO8Z7I7DDD8888888888    //\\n//    O888888OOO888D8OOOZZZZOZ$II?IIII7I$ZZ$$Z$777IIII?IZ7$ZZOOZO8O8Z777$DD8888888888D    //\\n//    8888888O8888O88OZZOOOOO8$$77?II7$$OOZZOZZZ$77II?I$ZZ$OZOOO888$77778DD88888888888    //\\n//    888888888DO8888DO8ZZ8O8888O7???I$ZOOOOOZZ$$III??II$$7OO8OO8D$7777$DD888888888D88    //\\n//    ODD8888888O88888D88888O8O8O$7I??I7OZO8OO$7III?II$$OZOO8888O$7777$OD8888888888D88    //\\n//    DDD888888O888888DDD88OOZ8OOZ$7IIIIII7Z7ZII7$77$7$Z8ZD$OO8Z$7777$O8D88888888DDD88    //\\n//    8D888888O8888888DDDDO8O88O$O77I7?$$I$77II?7I7$7$ZZO888D8Z$$7$$$Z8D8888888888D888    //\\n//    8888888888888888DDDD77O88O$Z$7$7I77$$$7?7I7IIZ77ZZDZ8DOZ$$$77$ZOD888888888888888    //\\n//    8888888888888888DDDD$II7$88OZO$$$$$$ZZI7$7O7?7+ZOO888ZZ$$$$$$ZZ88888888888888888    //\\n//    888888O888888888DDDD8III77OZ8DOOZZO8OOOZ$ZOZ$OZOD88OZZ$$$$$$ZZO888888888888DD888    //\\n//    8888888888888888DDDDD77II777ODN8D888888$ZOZDZ8888OZZZZ$$$$$ZZZ8888888888888DD888    //\\n//    88888888888888888DDDD$7II77777Z8DDNDDDDD8ODD88OZZZZZZZ$$$$ZZZODD8888888888DDDD88    //\\n//    88888888888888888DDDDD7III$$$$$ZZZ8D8888888OOZZZZZZZ$$$$$$ZZO8D8888888888DDDD888    //\\n//    888888888888888888DDDN$7III7$$ZZZOOOOOOOOOOOZZZZZZ$Z$$$$$$ZZZDD8888888888DDD8DDD    //\\n//    888888888888888888DDDDO7IIIII77$ZZOOOZOOOOOOZZ$ZZZ$$$$$$$ZZZOD8888888888DDDD8DDD    //\\n//    888888888888888D8DDDDDD$7IIIIII77$$$$$$$$Z$$$$$$$$$$$$$$$ZZZDD8888888888DDD8DDD8    //\\n//    888888888888888DDDDDD88O777IIIII777777$$$$$$Z$$$$$$$$$$$$ZZOD88888888888DDDDDD88    //\\n//    ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::    //\\n//                                                                                        //\\n//                                                                                        //\\n////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract LARS is ERC1155Creator {\\n    constructor() ERC1155Creator() {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC1155Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC1155Creator is Proxy {\\n\\n    constructor() {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x142FD5b9d67721EfDA3A5E2E9be47A96c9B724A4;\\n        Address.functionDelegateCall(\\n            0x142FD5b9d67721EfDA3A5E2E9be47A96c9B724A4,\\n            abi.encodeWithSignature(\\\"initialize()\\\")\\n        );\\n    }\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "LARS", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0x142fd5b9d67721efda3a5e2e9be47a96c9b724a4", "SwarmSource": ""}]}