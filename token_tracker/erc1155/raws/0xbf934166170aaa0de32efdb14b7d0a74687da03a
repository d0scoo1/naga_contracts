{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/AMOT.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: AMATSU OTOME\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC1155Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                //\\n//                                                                                                                                //\\n//                .J\\\"`````  .......(7<~:~:~~~~_~___~:~:(J:+===1?1dV1>~~~~~~~_-_<._....-?1-:~:::~____-~.                           //\\n//              .Y!```` `..>~_?=--=:~~~~_.~__~._~:~:~(J<_<?>><<jZ<(C~~~~~~~~~~_..?+--....._<-~::___.___?-                         //\\n//           .-= ````  `J` ``````(o~...._-??,_:~:~:(<~_:(;<<_(jZ<(Z~~~:~~:~~:~~_...(1_.-...__(1-~:-  ` `.(-                       //\\n//         .(=```    `  %``````  ` 6~.(/!``.=?+~:(J!_~:~~_.._zZ<_J<_~~:_~j+~~~~~~-..._<_-  .__~_<-~:_.```  ?,                     //\\n//        .=`` .__ ```.()`````    `.[J` ``````j(J!__:~__..._Jd!!  .~::~~<(<O-~~~~~j,-_.__. `  <-~_?-___.`` `-4.                   //\\n//      .C ` .~~_   .!` t` `````` `.P `  ```  .r__::~_.....Jw{`_j>~~:~~~~iI;?o.....1+~~_.<- ``  1.:__-.  ``` _?&           ..     //\\n//    .J^` .~~__(/(J-  _z.`````````(]```  ````.~:~~~~...~.(w>  (C~~~~~:~~~1;;?I_...(+I~~..(.```` ?v+:_.< _.``___I       ..$_?7    //\\n//    <` ..~~__J!(?``-?1.?- ````.  ,$ ```````.C::~~~..~._(S>. (D{_:_~~~~~~_>;;:1_~..<;1_~..?,```` (=z-``(. <_.(---.    .:_._~~    //\\n//    ` -~...(=..j_```````_7-..    G' ```` .v<:~~~~..~._(dI! -f+  ~_~(~..~_(<;:_1__._z;1~~~_(+```` j=z1.` i`.--(- .,   ,.~:_~~    //\\n//    .J~~~.(!..._I``.``....`?,   <!_.`..Z??!`J~~~..~__:jX{` J<:`.~~_d-...(-1<;:_<;__(<<1__~<(i```` 1z?<-``1` ~~j- .;...1::~~~    //\\n//    c~~~_/..~.._(UZ!.(^...?-.-+ux-_(I=  ```(~~~..__::(Sf``.>+: ~~~:d{___(I?c;:_.;;_~I;?2(<:<(l` ``(Oz1_i `~```.t. ,,``.z_:~~    //\\n//    ~~~(2~...-(ZC~l..`......_1?UfJ^<(.` ..v:~~.~_:~(JXd!`.C;j`_::~(zr+;;;Z<1(;:_<;;_(<<j<(<<~jl``` (1?v/<`.l.``(<. j,`.,7G.:    //\\n//    ~:(2_~.(jdf<~~~(<(.-(JJi-.(dV(-?<?=!~~_~.(-(:~(XwZf.`c;>2.::~:(+b>>?>I$(_;;<.>><(2;(r~1_` Il```-1zlx+>`(?i._<..`j; (` `?    //\\n//    ~(d(~_JQSV~~~_~:(v0OI~-J:~` `_~~~~~~_<_(v!?~1JSvrO\\\\`.>;j%_:~::j<k====tO~:(;;_<>><b;_1`.;``,x{ ` ((zO_1- C_O,(..  X..i.      //\\n//    (O61(XXU>~~:((J61<<(-?<_ `` ` -~~(?<<-_J:```.uZ=!?I Z;>d`` _~($:01==1jz<: ;;<(>?1w<<(.`1```C?,`` ~(zc~:.>_1dz_._ _I 1._.    //\\n//    ZJkuSXC~~~:(d6z<<_~-~/`````` ~_-<(_```.O. ` (>````(d>;jP```` (~:v(<<~.z{.`(>;(<<`J(;()`,-`.,.1..._~jl_<.>~<J4<.___(` 1.`    //\\n//    $dSSX3((,((d0>-J!.-(C___~_.-(?<::~1.``` _. ._`` ``.f;<d\\\\```` r.:>````.=) _ <;j:``(<;<t`.]..-[.z.._<(4+(_>~.(O--::~J    7    //\\n//    XJk?>~!~~(v=(/!.-Jj3~:~:(J7>:::~_ .Ji. .-_._<. ` .X><(X`````.!.;}````.=r`_`(>j:``,<(<I..b...t`(l..1(+I>(<~<_.(1_~(^         //\\n//    3~_....-+6+>..(zlv>:~(J7<;;:++JJJZ4>`  ___.~<~ Jr(3~`<P..`` r` <\\\\```..=}._`.>J{..J_(;>.(W.~~u..j_.(-(z:(I~__<_.?+)          //\\n//    .._~.~(9v<<_(=luZ<(JV<;;;;;;;<<:~:z `````. `  ` 1v~...!~~..(``.j{` ..Jj{~~` >j>~~Z._>c.(d..~dvvW[~~l(z__z_~__(i-(t4.        //\\n//    ..~.(JIz<(+11zOC;+Yj++++++<<<:~~:~?+- ``.v<(...,Z-..df~.~.(SzzdW~ .~(0v.(_``<j<~(%._>{.JJ~..z``.$~~(<1..<l~~___?>1.?l.      //\\n//    ~-JWWAwZllz++v1z1>>><;<<<:~:~:::::(+wV1<!.J-(~J,0vzXW%~~.(%```(Z` ~~Jv~_/```(+~~(!`_+>.fd.~.2```j_._1?-..(-~~<+_~j-.?>.     //\\n//    d9Y^..?THI=zvCO+<::::::::::::~:(+wwV<J!...+=_,JV7!(l2~~~(%```.1$..~(f~_J ```(z~:r`._j_(3z~.~r```.r.~_O>...1-:::(<-1_.1.-    //\\n//    ?,.~..~~_T+__<<?I+::::::~(((JxOOZ6zi7....C_`.Y `` +v~~.(^`.` +d~~(J:~(v````.<2~(!`.(v_J(c.~(>````?/~~~?+_..<?1+:::~t.(<.    //\\n//    1x1-..~~.~?c~.-._<vXwwUUUVI1?1d3<1/_...?~` (^``` (d>~-J!```?v<=~<~_(?!``.``.j>(%``.+\\\\($<}..J`.````?e_~~?x~_.?&+Cv+(/l.[`    //\\n//    -+G?1-_.._.?/~~.-._T&c>>>>>>j6jJ^..--<_ ..Y```` (j3~(=`````.<JI1zC:_ ````` ~Z->`.-(z~(;J.~(~ (c.._ R7G.-(n-~_.1?1R?h(.r`    //\\n//    TUrO,~~<_-._(/~~~_..._?6v1zC7<~..(<_..JwC!```` (J!(C--__:::++I<(C~```..```.J<2`..(+r(3j!-J~-(+H2<<j@-.._W04G-_._<9:1U L     //\\n//    <1Ovvo-...~_-(/~~~~~~..(JC7CTC<_:<<=zZC~......(v(v<~~$~_<?1z1(<_~..`.`..`.J(=``--+2_Jw-?!(e7+(MWWHH<~((dX<>?1?i--  _??Tz    //\\n//    _>OtrXuZw--_.(d+_..~~~(Y:J>~~~~j-+vC>_.....-J7uv++<<<dx<+gXGf-_~<__.(+-(Jo7~``.(v^(v<` .(<dWM#MWBHgMM#\\\"J>::;><<__j?O1K;1    //\\n//    (JllzduOtwvwOlzZ1+_~_J^(v~.~.(J<?n+~....-(zozCqc(.gMMMpWHnJO_<<ul___.``.````(7<1Z= ```-?QWMBYC-~..(UHhJI((I:;>>><d-1($(-    //\\n//    J==z>d0zzkOwtOd><:~~+%-Z~~~(>(:<><(?TUSO+7<<:jdMNMMMMHHWWkWWXsf!_<_..-``.```` ``````` ~.WP!:~.1<.~~jdWf7=~:::>_(<z>j O.(    //\\n//    ??<;>X1vzI1IzXI<:((<d.({.~J~:;>><_._<<<~j,~JWWMM9=  _z?><O+_?TX0&J?=```````.```````.`_.YC,.+++zW:(:(Z4n(-~~::><__([(<(i.    //\\n//    <<~_(K11z=zdY~_j>~~:J/~<.(t(;;><~_``(` !((WdWMC>;_-.+c(>>>z-~:~(T,```````````````````.z<+dOdC?~Z`` I~($~~~~:;>>.:.I.1-_>    //\\n//    .`_.jR==lz=_(Z=74x_~:?x~~(r:<>><```_ _..1tdB<Wz>>>jKtd2+z<(p_~~____```.``.````.``   ``d<>?<< <(=`` x-_S~~~::;?=_<.j;-l(.    //\\n//    ``..13=zC.(v!~~_:?VI<~(1~_b:<;;_ ```(..<.d=!_d><z<?Clz~_1>(D````` ``.`````.``... .~...(!`<__:(j!..J77~V7=<?C+&z>(_(X<_i:    //\\n//    `` ~(=zC_(O1JzA<:::?1++(1-?o:;;_..```````.!.`(h~___ _._(?!(/```````````.``.`......-_~..__-(<<+j?I-  ~.k:(+Ozv7&vzi-O.:.1    //\\n//    ``-.=jC(3jCf(vCOTU&<::::~4nJ1;;_..```.__-`` (+(S.~_ __<_-(d-`` .```.`````.`........~__.`.```` `-````..07?!~~~~~?Tx;?1j,.    //\\n//    `..=z0v==vkn(7<+x0tXs<:::(Ov4w+;_..``.<?;-!`_(v1--<1&<<iJ777\\\"< ``.``````.`......~.~._<_`.`````....```,,_~~~(,_~~~~?u+<j.    //\\n//     .I=dv==l=ZXc;:dZttrd>::::~O-(zs<_ ``.-._````` `_____'.. `.?<.`````````.`..........~~~?:..````(-  ..`,yV<<<<?3---``_J<f     //\\n//    J===rIl=l==vR(;?1OttS._:::~~1(:?U+_```````` ..Z=?r```````.\\\\  c?i``````````......  __.. _``...```-?!``.kdx?<(o~(: ```jW`     //\\n//    ====3Ill=l=zXn_<:<1wwOwUs::~~z::(w< ```.JY=<?<<~.%`````.!`!.__..\\\\````````````.``` -(.`(!`` : :`````.`.WY::(v~-{_```.f\\\\      //\\n//    ====vwzlllzOl=VG+~;;:<?4ZX_~~(I_~(P_. .Y~..~~~_(=``````(i,!__` 1```````````````` ```` ```` +-'```````,1JJJC:(J:````.W.      //\\n//    ===llzWylzrOl=llvWWVG++<?T<~~~I..($_(V!...._(dk-. ```````?.,!??```````````````````````````````````.`.3:::::x'``````($_      //\\n//    =zlllllZUWX9llllzf! _4=7=7u-~~+..(+Y:.....__.  `./7<?i.. ````````````````````````````````````````.`.3::~:+c `````` Zj)      //\\n//    zllllltOOw0llllls=!?_-.?77G+:_c.(v~~__.`.J_....,~....` _?4G...````````````.`.``.``` ...-````````.`(3:~::+'````````.I-\\\\_     //\\n//    llllltOO=XZllllzh``.c___```(kw~(d_~_...J0d-...`1_...`..<v  ` .4.`````` ....-((+7777:_~`````````..J<:((J7!````````..S-j`     //\\n//    lllttO==lvRlllllz+<+] `.n.-71:J7Xh_~~~~(Wyr..``,_... `.zr```   4,``````_!! `.......```````````..WwY=```````````` _ ?+(;     //\\n//    llllz==zOllZwlll<>;<4.JV>::(>d>:(ZW,~~~~(WX_.``._.``.` ?O ```  `(S,````````````````````````..J=```````````````` (w+(+_O     //\\n//    Ztv==??zlllllllv>>+<;;0::::<d3::(b:On_~~~_7[ `` {_`.``.<z_``` .-_`C````````````````````` .Z^````````````````` .ZI=l??<(;    //\\n//    O1?=??jIllllltl?>>v>>jK:::((D:~~:0~:?S-~~~~<.```>.`````.d:``` (r`.$``````````````.`.```.f``````````````````.J6z<1=lz?<.O    //\\n//    =?=??zSllltlttv>>j?+uf4k&-zK:::~~(:~~?W/~~~(-```(.````` w{````.].J<.``````````..`..`...V````````````````.,?1zz>>>+=l>>_(    //\\n//    ???=zZlltllltlz>jf!_' J.` -4-:~::(~:~:?k_~~~1_`.,< ````.<:`````.7&-...``````.`.`.`.`.J=\\\\.`````````````.v>  .zk<;;>+=<>:-    //\\n//    ???zdlllltlllv<+Xl .(^.?&..7?,:~(>~:~~:jn<;<<:...<_``` .:!``````` ?4,....`.``.`.`..Jf!..`.``````````.Z>:~  (Iwx:;;>+?/<-    //\\n//    ?=zdOllltl=zI<<vb.(h..-.z(1.,7~:<(+J7OJJ?U&+<:___<<...._~: `````````_?T1--...`...XWr..`.`.````````.J3>(:::<;?2W+<;>>=<-~    //\\n//    1zZIllllz1tZ<(J??z1+67d7<::?s<(JY12~+.(3_<>+7U&(::~~~~~~~~_...`..``````.`.7CwpVVI?=vl..`.``````` .(r<=-<::::;?cW(:<>+=_<    //\\n//    lIllllz1ztZ<(v??>?>>;:(:((JJTh.(JC~_#=~~_;>>>>>v6+-~~~~~~~~_......``.`..`.``` ?4z???+G--.`..`` .~~~?i==_+++:;><<0::<>+<_    //\\n//    4zllz1ztwC:(0&&&&zv7T9Xx:::::~:~~~~~O/~(>>>;;;<?>?vn._~~~~~~~~_-.....`.`.`..```.(kUe1zk__.._~~~~~~~~(XCz<<dZ3<<??Zr:<;>_    //\\n//    __?GJAy0+J\\\"<?1z-~~~~~~(__<<<<~~~~~~~~?x;;;;;;;;;;<??z4x_~~~~~~~~~~.....`..`..`.`.S:?R?dI_~...~.~~~~~~?s<:~;~~~:::d+J-;;<    //\\n//    <++<1-__._?<___1+?__<UXwuw+_~~~~~~.~~.(W+;;;;;;;;;:<<??7n.~~~~~~~~~~~.._.`.`.....J>;Jf?Xc~~......~~~~~?I~~<<~_ ~_(_(d2:;    //\\n//    ..__??1J/....__(:``.'     ?n-_~~.~~~~~..?m;:;:;;:::::;<>>1TG._~.~~~~~~~~~-......_d<;;WudW+~~.~....~~~~~(l~_<~~-.+v= _D-(    //\\n//    ...`..._~_....._?(-r  `.+`. z2_~~.~.~~~~.-W+;;:;;::;;;;;>>>>;?T&J<<~~_~~..~..~.(Z!~:;WslOX-.........~~~~(o~(K4+J!````1_7    //\\n//    .`..`....(u_~.~.._un.-.C:<<<::~~.~~~.~~~...Tx<;;;;:::::;;;;;+++dk~~((-.~.~.~..~J>~~jYTCllwk_~.......~_(J7^` ._``` ```(_~    //\\n//    ..`.____:::?,~~.~._jO<:::::::::~~~~~~.~~~~_.(h+;;;;::::+Jzu(IjzWm<c(J3_.~(JJ---d~~JIz<+ttuXn-_.._((,.X~~~ ` __```_ ``(<~    //\\n//    4,..`.....-_jx-~.~..?O(::::_<:<_.~.~~~..~~~..-4x>>;;;;:d<AJm&Kj0+(GdJiC.._G~::~?Tr<(d9K+wb~~dx_4<~~k(?_~~ `.~_`` : ` d~_    //\\n//                                                                                                                                //\\n//                                                                                                                                //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract AMOT is ERC1155Creator {\\n    constructor() ERC1155Creator() {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC1155Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC1155Creator is Proxy {\\n\\n    constructor() {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x142FD5b9d67721EfDA3A5E2E9be47A96c9B724A4;\\n        Address.functionDelegateCall(\\n            0x142FD5b9d67721EfDA3A5E2E9be47A96c9B724A4,\\n            abi.encodeWithSignature(\\\"initialize()\\\")\\n        );\\n    }\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AMOT", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0x142fd5b9d67721efda3a5e2e9be47a96c9b724a4", "SwarmSource": ""}]}