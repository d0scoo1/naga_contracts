{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/HCART.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: HENRY CHEN ARTWORK\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                                       //\\n//                                                                                                                                                       //\\n//                                                                                                                                                       //\\n//                                                      ...'''';;;c;:,:d::;;;,'.'.,.....                                                                 //\\n//                                                  ...,.':'lllo:olc:ldodcl;cOcllllcc::coc::lc;:,'.....                                                  //\\n//                                          ...;,cl,dl;d;ck:xxdxcdol:cdodcc;lOcclloccccldcclooldllllllc;::;...                                           //\\n//                                     .,'l:cockdkO:xo;d;ck:dxdkcddo:coldol;o0c:cloc::cldlclooodcllllol:lddlooc:;'..                                     //\\n//                               ...'c.:Ocxxlockdx0ckd;d;:x:dxdx:ooo::oldll;l0lcccoc:;cldlllooldcllllol:lddoooolocllc;.'.                                //\\n//                            .,':O:;k;;kcdxlockdx0lkx;d:;xcdxdkldoo:coldll;lOllllllccclxlclolloclllclc:lxddolold:lldo:d;;,..                            //\\n//                        ..,o:kd:Ol,xc,klodcdlxdd0cxx;d:;xcdkxkldooccoldll;lOcllclllllldccllclo:cllclc:lxdoololo:cldlcd;oc;d,,'                         //\\n//                     .',xl:Olxk:Ox,dl'xoldcdcddo0ldk;xl,dcxOxkldlolcololl;lkcllclllccloccllccl:ccllc::oxoolcoldccloclo,o::d:ddc;.                      //\\n//                   ''lk:xd:OooO:xk,oo.ddldco:oxo0loO:xo;dcdkxkldlollococl;lkclocccc::ldccolccoclcoolccddoolclldllolcll;d;lo:xodl:c..                   //\\n//                .';xlckcok:xdlOcoO;ld.oxldcocoxoOco0cdd;dcokdxcolol:lcocc;cx:loll:c:cldlcolccolllollccdollllllolldl:occd;olcxox:od:o,.                 //\\n//              .,:dldd:klckcxdc0lcO;:x,cxldloclxlOll0cod;dcokdxcdloc:l:lcc;cx:clllcc;cldlcolccolololcccxolcoollllloc:o:lo;dcldod:dlld:o;                //\\n//              .doddoxckd:klokcOd:Oc;k;:xldloccxlOdl0cox;dllxdxldllc:l:ccc,:d:clcc:c;clolcocccoloooollldcc:lolollloccd:ol:dcdddocd:olcd:l;              //\\n//               ldoxlxcdx:xdoOlkk;xo,x:;xldooocklkdcOlok;oolxdxcoclc:l:ccc,:x::cc:::,lloccdlcclldoooclldcc:loldloooclo:dcco:xdxcco:dclo:x;              //\\n//               ;xododolk:dxlOodk,od'oc;xloooo:klxkl0llk:oolxxxloclc:l:ccc;ck::lll::;llolcdlccllddllclldllcloldlooolol:x:llcxddcolld:dllx.              //\\n//               .dddoodlOllklxdoO;lx'lc,xloooo:xldklOolk:oocxkkldcll:l:ccc;lkcclclcc,lllccoll:clooll:oodllclocollooooccd:dclxddcdcdlcd:do               //\\n//                cxxddxlkdckldxoOcck,co,dololl;dodkckdlkcoo:dkOldlol;l:ccc,ckcclclcl;llllco:c:clolll:ololcllocolooolo:locd:oddolocx:od:k:               //\\n//                'xkdoxodkcxooklkl;k::o,ddodll;oookcxock:oo:dxkodool;l::::,:k::lclll;lodlco:c:cooolo:oclcclcl:llldloo:ollocxdocolod:xllx.               //\\n//                .okkdxooOlddckoxo,xc,o;ddldlo:oooOcddck:lo:odkodoll;oc:cc,:k::cclcc,coxlcdcc:cooooo:dllcclcl:clldloo:oclllxoococdolk:do                //\\n//                 ;kkdoxlkoox:xddd,do'o:locdlo:ldoOcdd:xclo:odklooll;occcc;ckc:ccl::':odc:d:::lolooo:olll:occ;clldcolcococdddolllkcod:x;                //\\n//                 .dOdoxoxdcxlddok;od'l::dcdlo:cdoOlod:kccd:loklloll:occcc;ckc:lcl::,:odccx:::lollcl:olllcoccccoodclclllolxddolcdd:xlld.                //\\n//                  ckxlddokcdooxoOclx':c:dcdllccdo0ood:kllxcooxlllco:occc:;cOlclcl:c;:odclkcc:locccc;oollcocclclloclclllloxddolcxccxcdc                 //\\n//                  ;xkolxoklldoxokock;;l:dclllccxlOxdxlkllkcooxooococlccc:;cOlclcc:c,:dxlcxc::locccl;llllcllll:lllclclllloddoolok:oocd'                 //\\n//                  .dkdlddxdcxdxodx:kc;o:ocooolcxlkkdklklcOlodxdoocdcolcc:;cOlllcc;:,:dxlcdc:;colcco:lololooll:llclccclcloddoocddcxcol                  //\\n//                   ckkoodoxcddddlkcdd;ocooodolcxokkdklxlcOloodooococdolc;,:xcclll;:,:dxccxlc;cocccl:loldoodldlodcc:ccc:ldooolcxcodld'                  //\\n//                   ,xOdcooxoldodcxlok:oodooxoo:xoxkokoxlc0lodxoldcoldollc;;d:cdol;:;cdxllxlc;coclclclololodlooodllccl::loooolod:dlol                   //\\n//                   .oOklloodlxoxldxlklddoolxdocddxOokoxoc0oodxdldcoloollc::x::ool;:;cxxllklc;cdllclccoldooxlddodllllolllllodlxllold'                   //\\n//                    ,kOdldodoxxkdoklxooxxkxOOOk000X0KO00kXOO00OkOxkdxdolccck::ooollcdO0kkKkxxk0OkkOkxOkOkkOkkkxxolocdoooolooodcocl:                    //\\n//                    .oOkodddddkxxokO0XKNWWWMMMMMMMMMMMMMMMMMMMMMMWWWWNXK0kxKOOXXXXNNWMMWMMMMMMMMMMMMMMMMMWWWWNNXKOOddddkoooldllolo.                    //\\n//                     'xOxdxxxdk0KXNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNXK0kddodololo,                     //\\n//                      cO0xxxxOKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX0xdxooooc                      //\\n//                      .d0OdxKNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKOddddl.                      //\\n//                       'x0O0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXOdxd.                       //\\n//                        ,kKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKkx,                        //\\n//                         ,0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,                         //\\n//                         .xMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo                          //\\n//                         .kMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMx.                         //\\n//                         .kMMMMMMMMMMMMMWNNK0OkkO00000KXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXXK0OOkkkOOKXNWWMMMMMMMMMMMMd.                         //\\n//                         .kMMMMMMMMMNk;                  .ox0XWMMMMMMMMMMMMMMMMMMMMMMMMMMNX0Ok                YoOKNMMMMMMMMWd                          //\\n//                         .OMMMMMMWx     moXcoddddxxl:cc:;    lxO0NMMMMMMMMMMMMMMMMMMMNK0ko     ::clodxdddddolc    .xKWMMMMMWd                          //\\n//                         .OMMMMW.   cdkOKXXNWWMWWMWNXXKOdoc:    :okXWMMMMMMMMMMMMMWNOo:    cldxOKXNWWMMWWWWWNXK0kd   dKWMMMMd.                         //\\n//                         .OMMM.  jkKNWMMMMMMWNWMWXNMMWWMWWX0xc;   :o0WMMMMMMMMMMMMXo:    lk0NWMMWWMMNXWMMWWMMMMMMWWXOd .XMMMx.                         //\\n//                         .OMM od0NMMMMXkxXMXc dNO;;OWk .NX .XXOdl  lOWMMMMMMMMMMMM0l  :lkXXxdXNd:xW0;,OWk;lXW0kXMMMMMWXk NMMx.                         //\\n//                         '0MMNKWMMWNXW0' ,ONo  dKl  O0, o0c :KMWNXXXWMMMMMMMMMMMMMWXK00XN0; :Kx..kK; ;KO' lXk  xWNXWMMMWWWMMx.                         //\\n//                         '0MMMMMMM0 'dXk. 'OK: .dO; 'dc  cd. ,0WWWWWMMMMMMMMMMMMMMMWWWWNk' .ld. ,x: .d0: :XO' cKO;'dWMMMMMMMx.                         //\\n//                         '0MMMNOkXXc. lXO'   '                'OWWX0XWMMMMMMMMMMMWKKNWNx.                    ;Kk. ,0NKKWMMMMx.                         //\\n//                         '0MMMk. ;0Nd.          ........       'OWXko0WMMMMMMMMMNkxKNNd.        ........         ;0Kl  OMMMMx.                         //\\n//                         '0MMMNo. 'dd'      .:dOKXNWWNXKkl,     ,0Xx:;kWMMMMMMMNd;oOXx.     'cxOKXNNNNX0kl,.          cXMMMMx.                         //\\n//                         '0MMMMNo.        .oKWWKOkxddxk0NMNk:.   cKd..'OMMMMMMWk..'dk'   .ckNWN0kxxxdxkKNMNOc.       cXMMMMWd                          //\\n//                  ....   .OMMMMMNX      .lKWWOloxO000OxllkNMWO,  .xk'  :XMMMMMK; .c0l  .:0WMNkoodkO0kxoldOWMWO;     ;KMMMMMWo    ....                  //\\n//               .;x0KX0x:..OMMMMMMN.    ,OWMNd:dKKkoldOX0l,oXMMXl. :Ko. .xMMMMMk. 'OK; .dNMMXdlxK0dlclxK0d:xNMMNo.   OMMMMMMWo..ck0XK0x:.               //\\n//              .x0OkOKNMWx;xMMMMMMMN.  ,0MMMk:dX0:    .lKKo;xWMMNl '0K,  lWMMMMk. :XK, lNMMWxckXO\u00b4     c00o:OMMMNl  dWMMMMMMWo;OWMN0xdx0k'              //\\n//             .dd'.'lxOKNNoxWMMMMMMMK  .kWMWd;xXx  oo  'kXx;oNMMNc ,0k.  oWMMMM0' .kXc :XMMNdl0Nd  oo   OKd:xWMMK; cNMMMMMMMNdxWNOxdc'..ox'             //\\n//             od..lKWNOldKdoNMMMMMMMMK  'kWM0cl0Ko    'dKKo:kMMWx  oO;  ,0MMMMMWo. ;0O  dWMWOcxKKo    ,dKOlc0MMX: ,KMMMMMMMMNdkXocxXWNd..lo             //\\n//             kl.cNWO:. .ddlXMMMMMMMMMK  .oNWO:ck00kxk00kcckWMNx  l0xc,,xWMMMMMMKc,:xXd  xNMNkclOKKOkO00xccOWMXc  OWMMMMMMMMXdkd.  .oXWx.;x             //\\n//             xo.dWX; .lodlc0MMMMMMMMMMXl  :0WKxllloolcccdKWW0:  dNN0d.xNMMMMMMMWO.o0NNx  c0WWKxoooooolclxKWWO,  OWMMMMMMMMM0lxdox; .xWK;:d             //\\n//             :x:dW0'.kWOkd:OMMMMMMMMMMMNx  .cONNKOkxxOKNWXx:  c0WWWX.kNMMMMMMMMMWO.0NWWKo  ;xXWNKOxxxOKNWNk:  cKMMMMMMMMMMMOckkOW0'.dWKllc             //\\n//              lddXX::XXx0k;kMMMMMMMMMMMMMXo   'ldkO00Oxo:  ,oKWMWWX.kNMMMMMMMMMMMW0.KNWWWXd;  ;oxO000Oxdc'  cOWMMMMMMMMMMMMx:0KxKK;;KWkll.             //\\n//              .lxkXOdKOkNk,dMMMMMMMMMMMMMMMNOo,.        .x0NMMMMWX.xNMMMMMMMMMMMMMW0.0NWWWMWM...        ..kXWMMMMMMMMMMMMMWl;KWOkkl0WOdl.              //\\n//               .dOOX0kkxKk'oWMMMMMMMMMMMMMMMMMWNXKK0KXNWMMMMMMMW.CONMMMMMMMMMMMMMMMMK.0WWWWMMMWNXK0OO0XNWMMMMMMMMMMMMMMMMMX;;K0xxkKXkxo.               //\\n//                .kKOK0kxxo.cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX.XKMMMMMMMMMMMMMMMMMMMXO.NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO.,dxO000k0x'                //\\n//                 ,0XOKNKkl.;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMC.0WMMMMMMMMMMMMMMMMMMMMMW0.KWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo ,okNX0KNK;                 //\\n//                  ;KWNWXKx..OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.K0WMMMMMMMMMMMMMMMMMMMMMMMM0k.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK: ;0XWWWMNc                  //\\n//                   :XMMMMO'.oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.0KMMMMMMMMMMMMMMMMMMMMMMMMMNO.MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx..cXMMMMWx.                  //\\n//                   .xWMMMO' ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM 0WMWXOkk0XWMMMMMMNK00KNWMMK NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK;  cXMMMMK;                   //\\n//                    ;KWMWk' .oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWK Nk'    'dNMMMNd,     kW. NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo.  ;0MMWKc                    //\\n//                     .cddc.  .dNMMMMMMMMMMMMMMMMMMMMMMMMWNNXKKKk xoc:;;:dXMMMXd:,;:cd0 O0KXXXXNWMMMMMMMMMMMMMMMMMMMMMMWx'.. .:ddc'                     //\\n//                         .. . .dNMMMMMMMMMMMMMMMMMMMWKkdl: ,,' '.'...ooddddddoooooo....'''', ,:ld0XWMMMMMMMMMMMMMMMMMWk,... .                          //\\n//                         . .....oXMMMMMMMMMMMMMMMWKxc'..   ..  ..    .    ..  ...    .  ...     ..;cxXWMMMMMMMMMMMMMNx'..  .                           //\\n//                         .  .   .:OWMMMMMMMMMMMWOl'.   . .   . .       ..   .. . .  ..      ..      .;dKWMMMMMMMMMW0l.... ..                           //\\n//                         .. ..   ..lKWMMMMMMMWKl  . ., .\u00b4ol.olo.oll.llccccc.clc:c:;::;;:clcc.cn. ' .  .,xNMMMMMMWKo'...  ...                           //\\n//                         . ..   .. .'o0WMMMMXx; . ..,dOkk0KKXXNNNNNNNNNNNNNNNNNNNXXXXKKKKK00Okdddl.   ...oXMMMNOo,. ....  ..                           //\\n//                         ..    ...   .'cdOKk:.  ..  PxX xXNNO.NNNNKO.NNNNX0,KNNNNN.0XNNNX,0NNKk NkO      .;dOx:....   ..  ..                           //\\n//                         .. ..  ...   .............  OE FEKER DMMM0k XMMMWO 0MMMMX OXMMMG CXNWH OD   .     ........ ..  ....                           //\\n//                         ...  . .....   ...... ..       \u00b4vEW+ \u00b4CXRTY O00Odc KK00ON ZUEPX\u00b4 +OPu\u00b4          .........  .... ...                           //\\n//                         ......  .....   ......  ..                   \u2588         \u2588                    ....  .......... ......                           //\\n//                          ... .. . ...  ...   ...... .               \u2588 H E N R Y \u2588              .  ... . ....  ..... ......                            //\\n//                          .... . ....   .. .  ......':x ,            \u2588  C H E N  \u2588              xcc:..  ..... ...  ....  ..                            //\\n//                           . .. ......  .....  . ...'co xOkc.         \u2588  N F T  \u2588           cxxd xdc..  ..... ....  .... ..                            //\\n//                           ...  .....     ..  ..  ...'lddONWK Ac,.     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     .;cD XWNkooo:.. ...... ....   ...  ..                             //\\n//                            ....  ...  ......     ... .:dkkOO GWWXkc cdk00k OK0kxo lkXWMV O0Okxl'... ......... ... ......                              //\\n//                             ..  ......  ..   ...  ....:dOOxk0KNXOKM MMWOo0 MMMMXK NK0kxO0kl,. ... ..     .  ... ... ...                               //\\n//                             . . .....    .......     ..  .,cxKK0KOxOKKKXKdcxKK000OkO00KK0xc'...    ...  ...   ... .....                               //\\n//                              .. ....    ..... .....    ..  ..,lx0KXKKK000OOOOO0KXXNXKkdc'......   ..  ....   .........                                //\\n//                                ....  ..  ...  .   ......    .....;:loodkkkkO0Okxdoc;'.........   ..... ......   .. ..                                 //\\n//                                 ... ...  .. .    .  ....  ...  ...........  ....... ......   .. ... ...    ....  ...                                  //\\n//                                  .. .. .   .. .......    .....  ... ...... ....  ......  .... ...  .....     ......                                   //\\n//                                   .. .... .. ...  ...   ....   ...  ... ..  ..... ......  ............ ....  .....                                    //\\n//                                     .... ...      ..   .   ...... .....  ........   .....  ........ ..  ..... ...                                     //\\n//                                      . ...   ... ..    ......... ..  ..  ... ..    .......  .......   .......  .                                      //\\n//                                         ......   .   ...  .......  ...   .   ....   ... . ..   .....  ....  ..                                        //\\n//                                           ......  ....  ....   ...  .. .... .     .  .... ...  .. .........                                           //\\n//                                             .....  .....      ...  ......   .   .  ..   ....    . ......                                              //\\n//                                                ....  ...  .. ....  ... ... ..   ......    .. .  ..  .                                                 //\\n//                                                   ....    . .....   ..  .......        ......   ..                                                    //\\n//                                                      .. ...   ...    .......   .....   .... .                                                         //\\n//                                                            .   .......     ...    ....                                                                //\\n//                                                                                                                                                       //\\n//                                                                                                                                                       //\\n//                                                                                                                                                       //\\n//                               \u2588\u2588   \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588   \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588    \u2588\u2588         \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588   \u2588\u2588                                //\\n//                               \u2588\u2588   \u2588\u2588  \u2588\u2588       \u2588\u2588\u2588\u2588  \u2588\u2588  \u2588\u2588   \u2588\u2588  \u2588\u2588  \u2588\u2588          \u2588\u2588       \u2588\u2588   \u2588\u2588  \u2588\u2588       \u2588\u2588\u2588\u2588  \u2588\u2588                                //\\n//                               \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588 \u2588\u2588 \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588    \u2588\u2588\u2588\u2588           \u2588\u2588       \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588 \u2588\u2588 \u2588\u2588                                //\\n//                               \u2588\u2588   \u2588\u2588  \u2588\u2588       \u2588\u2588  \u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588    \u2588\u2588            \u2588\u2588       \u2588\u2588   \u2588\u2588  \u2588\u2588       \u2588\u2588  \u2588\u2588\u2588\u2588                                //\\n//                               \u2588\u2588   \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\u2588  \u2588\u2588    \u2588\u2588   \u2588\u2588            \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\u2588                                //\\n//                                                                                                                                                       //\\n//                                                                                                                                                       //\\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract HCART is ERC721Creator {\\n    constructor() ERC721Creator(\\\"HENRY CHEN ARTWORK\\\", \\\"HCART\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "HCART", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}