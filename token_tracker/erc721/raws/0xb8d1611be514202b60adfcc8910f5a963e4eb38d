{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity 0.8.10;\r\n\r\n/**\r\n * @title MirrorProxy\r\n * @author MirrorXYZ\r\n * The MirrorProxy contract is used to deploy minimal proxies.\r\n */\r\ncontract MirrorProxy {\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\r\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @notice Initializes a proxy by delegating logic to the implementation,\r\n     * and reverts if the call is not successful. Stores implementation logic.\r\n     * @param implementation - the implementation holds the logic for all proxies\r\n     * @param initializationData - initialization call\r\n     */\r\n    constructor(address implementation, bytes memory initializationData) {\r\n        // Delegatecall into the implementation, supplying initialization calldata.\r\n        (bool ok, ) = implementation.delegatecall(initializationData);\r\n\r\n        // Revert and include revert data if delegatecall to implementation reverts.\r\n        if (!ok) {\r\n            assembly {\r\n                returndatacopy(0, 0, returndatasize())\r\n                revert(0, returndatasize())\r\n            }\r\n        }\r\n\r\n        assembly {\r\n            sstore(_IMPLEMENTATION_SLOT, implementation)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice When any function is called on this contract, we delegate to\r\n     * the logic contract stored in the implementation storage slot.\r\n     */\r\n    fallback() external payable {\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n            let result := delegatecall(\r\n                gas(),\r\n                sload(_IMPLEMENTATION_SLOT),\r\n                ptr,\r\n                calldatasize(),\r\n                0,\r\n                0\r\n            )\r\n            let size := returndatasize()\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n            case 0 {\r\n                revert(ptr, size)\r\n            }\r\n            default {\r\n                return(ptr, size)\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializationData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "MirrorProxy", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "2000", "ConstructorArguments": "0000000000000000000000007ad52eceffcb3bd41bc434a9acfecdbc8ef8450e000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a46039dca90000000000000000000000000000000000000000000000000000000000000120000000000000000000000000942cbea64876ff0b2e23c0712b37dc0091804e9c000000000000000000000000942cbea64876ff0b2e23c0712b37dc0091804e9c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200b1b5f34d93337da6e23d2d2fa0744ddcabf943513e38335cbca1bd74ecf1a420000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001554657374204d6972726f72204f70656e2053616c650000000000000000000000000000000000000000000000000000000000000000000000000000000000000c544553544f50454e53414c450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003668747470733a2f2f6d6972726f722d6170692e636f6d2f65646974696f6e732f637573746f6d2f6f70656e2d73616c652d746573742f0000000000000000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "1", "Implementation": "0x7ad52eceffcb3bd41bc434a9acfecdbc8ef8450e", "SwarmSource": "ipfs://36b5b33695501d38010c0c4b54421ed69b6a79f3a7d5575de37b45130d39e15b"}]}