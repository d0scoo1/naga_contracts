// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

/**
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWWWWWWWWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWOk00000000000000000000OOKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMN0XWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNxd00OOOOOOOOOOOOOOOO0KNOdKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWK0NMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMNKxldOXWMMMNOkXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX000koccc:::::cccclkxdXKdKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKxONMMMWXOolxKNMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMWOookdlxXMMWOddxNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNXKKxoxxoxKKXNM0ccclKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXxddOWMMXxlxkoo0WMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMWNklxKWNOxkkKXOkkxKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0x00xOMMMMMKc,,cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKxkkOX0kkxONWKdoONWMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMWXNMMNOkkx0KkOOOXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXkkdoddodxkXWWOldol0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMXOOOkKOxkk0WMMNXWMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMWX0OkxxxllllkKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKkkxooddddddoldxxkkxxONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKxclllxxxkO0NWMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMWNXWMMMMXOxxxkkkkxolooldKWMMMWXNWMMMMMMMMMMMMMMMMMMMMMMMWNKdlddooollllllllc:dKXNMMMMMMMMMMMMMMMMMMMMMMMWNXWMMMW0dlooloxkkkkxxxONMMMMWXNWMMMMMMMMMMMM
MMMMMMMMMMMW0oo0WMMKxkOkkkkkkkkkkkxllOWWXkodOXMMMMMMMMMMMMMMMMMMWX0Okdolccccccccccccc:::::loxOXWMMMMMMMMMMMMMMMMMWXOookXWWOloxkkkkkkkkkkkOkxXMMW0odKWMMMMMMMMMMM
MMMMMMMMMWOddkkddOKxk0kkkxxddddxkkkxll0NkloolOWMMMMMMMMMMMMMMMN0kxoollccccccccccccllllllllcc::cdONMMMMMMMMMMMMMMMWOloolON0loxkkkxddddxxkkk0kxKOddOkdd0WMMMMMMMMM
MMMMMMMMMWXOxxxxO0kx0kxooc:c::;:oodxdcdNWKxkXMMMMMMMMMMMMMMMNOxxdoccccccccccccccclllllllllllllcc:lONMMMMMMMMMMMMMMWXkkXWXolxxdol:;:cc:cooxO0xk0OxdxxOXWMMMMMMMMM
MMMMMMMMMMMMNkkXMKxOOxlxOoc,..;cxkldxolOWMMMMMMMMMMMMMMMMMWKxxxlcccccccccccccccllllllllllooooolllccoKWMMMMMMMMMMMMMMMMMWkcoxooOx:;..,coOxlx0OxKMXkONMMMMMMMMMMMM
MMMMMMMMMMMMMMMMXxk0kxodxlc;',:cdxodxdll0WMMMMMMMMMMMMMMMWOxkdcccccccccccccccllllllllllooooooooolllccOWMMMMMMMMMMMMMMMW0lldxdoxoc:,';clxdoxk0kxXMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMN0xk0OkkxdolclllccodxkkxdllkXWMMMMMMMMMMMMWOxkoccccccccccccccclllllllllooooooooodoolllcckWMMMMMMMMMMMMWKxlldxkkxdlcclllclodkkkO0kx0NMMMMMMMMMMMMMM
MMMMMMMMMMMMXOkkOkxxxxdxxxxdddxxxxxdxdddollxKWMMMMMMMMMWOxkdcccccccccccccllllllllllooooooooooddddoollccOWMMMMMMMMMWKxlloddxdxxxxxxdddxxxxxxxxxkOkkONMMMMMMMMMMMM
MMMMMMMMMMMXxkOdllccc::;;,,;::;,,;::cccccclloKMMMMMMMMM0xOxlccclllccllllllllllloooooooooodddddddddoooocl0MMMMMMMMM0lllcccccc::;,,;:::,,;;::ccclldOxkNMMMMMMMMMMM
MMMMMMMMMMMKxkl,:cccc:;;,.':cc,.',;:ccccc;;lcOMMMMMMMMXxkkllllllllllcccccccccclllllllllloooodddddddoooocoXMMMMMMMMkcl;;cccc::;,'.,cc:'.,;;:cccc:,okxKMMMMMMMMMMM
MMMMMMMMMMMNxoc;::ccc:;;:;:llc;,;;;:cccc:;:coKMMMMMMMWkxOdllllllllcclllcccccccllllllllllllllcodxdxddooolckWMMMMMMMKl:;;:cccc:;;:;coc:,,:;;:ccc::;lokNMMMMMMMMMMM
MMMMMMMMMMMMXko:,,;::;,;c;lxoc;,::,,::;,,;lxKWMMMMMWKxoooccccccccc:cd:''''''cd:,::;,okkl,':l::llllllcccc:cdKWMMMMMWKdc;,,;:;,,:::oxl:,;:;,;::;,,:oONMMMMMMMMMMMM
MMMMMMMMMMMMMMNKOkxddooooclxoc;;loooodxxO0XWMMMMMMMXxO0kkkkkkkkkkkolo'.....;kd';o:.lXMK:..'cclxkkkxxddddddcdXMMMMMMMWX0kxxdoooolcoxl:,:ooooddxkOKNMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMWWWOdxoc;dNWWMMMMMMMMMMMMMMMWkdkxdddddddddddllo'....'xk,,:;':KMXl...'c:cdddddoooooool:kWMMMMMMMMMMMMMMWWWNkdxl::OWWWMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMMMMMMMMMMMMW0lddlcccccccccc:lo'....ok;'::',o0Ko....'c::lllllllccccc;c0WMMMMMMMMMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dNMMMMMMMMMMMMMMMMMWOx0Odddddddddddlld,...,ol:cllllccl;....,lcokkkkkkxdddddllOWMMMMMMMMMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dNMMMMMMMMMMMMMMMMW0x00xddddddddddxdlll:;:cclloddddoollc:;:cccdkkkkkkkxdddddll0WMMMMMMMMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMMMMMMMMMMNOx00kxxxxxxxxxxxxxdooollodxkkxxxxkkkxdoooooxkkkkkkkkkxdddddllOWMMMMMMMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMMMMMMMMWKkkK0kxxxxxxxxxxxxxxxxxkkkkkxolccccldkkOkkkkkkkkkkkkkkkxxdddddoldKWMMMMMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMMMMMMWKkk0KOkxxxxxxxxxxxxxxkkkkkkkkko::,'',::oOkOOkkkkkkkkkkkkkkxxdddddollxKWMMMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMMMMN0kO0K0kkkkkkkkkkkkkkkkkkkkkkkkkkoc:;'';::oOOOOOOOkkkkkkkkkkkkxxddddddolld0NMMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMWXOkOKKOkkkkkkkkkkkkkkkkkkkkkkkkkkkkkdllccclokOOOOOOOOOkkkkkkkkkkkxddddddddollokXMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMNOkOK0OkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkOkkxxkkkOOOOkkkkkkkkkkkkkkkkkxxdddddddoooollONMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dNMMMMNkkK0Okkkkkdoollllc::::::ccclllllcclolllcloooolclllc::lllllcc:::::::cccccclooooooolcxNMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dNMMMWkxK0kkkkdlccccccll:,:c:,;lllllcc:,ckkxxlcxOO0Ol:oool,,:clllll;,:c:,;lccc:::::looooolckWMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMXxk0OOkxl:clooooool:,:cc,,:::::::;;x0kkxclO000kclddoc,;:::::::,,:c:,;lllllllc:;:ooooocoXMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMXxk0OOkl;:c::::::::,,:cc,,clloll:,o0Okklck000Olcddol;,:ccllllc,,cc:,,:::::::::;,:oooocoXMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMNxxOOOxc;:cccccllll:,:cc;;ccc::::;d0kkxco0000x:lxdoc,;c:::::cc;,:c:,;lcccc:::::,;oooocdNMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMOdkOOkc:oooooooooo:;:cc,,::clll:;dOkkxco00KKx:lxdoc',:cllcc::,,ccc,:llllllllll;;ooolcOMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dNMMMMNxoxkxo:cllcccc:::;,clc;;looc:::;o0Okkock000Ol:ddol;;c:::clol;,clc,,::::::ccc:;cooocxNMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMNxloxxoc;,;:cccll:;clc;;c:::clolck0kkxclO000kccddoc,:olc:::c;,clc;;ccc::;,,,:loolcxNMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMW0doodxdlccccccc;;clc;,:clooooo:lOOkkock0000l:ddol;;looolc;',clc;;c::::::cloolld0WMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0xxoc;dWMMMMMMMMWKkdooodddolll;;clc;,cccccccc;ckOkkocx0000o:dddo;,:ccccc:,,clc,;ccllooollodkKWMMMMMMMMWkdxl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMM0dxoc;oNMMMMMMMMMMMWX0Okxddooo:;clc;;oooooddocoOkkklck000Ol:ddol;;ooooool;,clc;:lloodxxk0XWMMMMMMMMMMMWkddl::OMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMKxdoc;lKMMMMMMMMMMMMMMMMWWNXKOl;llc;lkkkkkkkocO0kkxco0000x:lddoc:oxxkkkkkl;:cl;cOKXNWWMMMMMMMMMMMMMMMMXxdol:cKMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMWkoolc:dNMMMMMMMMMMMMMMMMMMMW0ccll:lKMMMMMMWkx0kkklck00KOccddol:kWMMMMMMMXl;clccOWMMMMMMMMMMMMMMMMMMMNkoolc;dWMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMXdcllc:dXMMMMMMMMMMMMMMMMMWOccll::OWMMMMMMWxdOkkxco000Kx:lxdoclKMMMMMMMMMOc:clcckNMMMMMMMMMMMMMMMMMXxoolc:lKMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMKocllc:ckXWMMMMMMMMMMMMN0occll:ckWMMMMMMMWxx0kkxcl000Kkclxdocc0MMMMMMMMMWOc:clccoONMMMMMMMMMMMMWXOolllc:lKMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMXxccllc:cdk0XNWWWWXKOxoccllc:l0WMMMMMMMMMOd0Okkocx0000o:odoo:oNMMMMMMMMMWKo:cllcclxOKXNWWWNXKOxollll::dXMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKdcccllc:clloooolccclllc:lkNMMMMMMMMMMMNxx0kkkllO000kccddol:OMMMMMMMMMMMNOl:ccllc:clooooolccllll:co0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKkoccccllllllllllc::ldONMMMMMMMMMMMMMM0dkOkkockK000l:dddo:dWMMMMMMMMMMMMN0dlc:cllllllllllcc:coxKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKOxdollcccclooxk0NWMMMMMMMMMMMMMMMMKdkOkkocx0000l:dddo:dWMMMMMMMMMMMMMMWN0kxdollcccllodxOKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXXKKXXNWMMMMMMMMMMMMMMMMMWWWNxdOkxxlck0O0kc:oool:xNWWMMMMMMMMMMMMMMMMMWNNXXKXXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXkkkxodxdddlllccodllooolldxdxXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKxooxdxxkkOO00dccx0OOOkkxxdoccd0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWOddo::llllllloo:,,coolllllll:;cllkWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKxdxdcldddddddddc;;cdddddddddl:loloKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkdxxlcddddddddddc;;ldddddddddo:coolxNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkdkxlcoddddddddol:,,:loddddddddl:coolxNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0xxkdlcoddddddocccc;,,:ccccoddddddl:cloodONWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXK0Okxxdoocldddddddl:coddc;;lddoc:lddddddoc:cclooxO0KXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOkolllolllllodddddddol;;llll:,,:llll;;loddddddolccc::c:cccokXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXkxkdllcllloddddollccoooodxxxxl;:okxxxdoooolclloddddolcc::cll:oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0lllcccccccc::;;:cc::oddddddddc;;lddddddddo:;cc:;;::cccc:::::;:OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKd:''',,',,,'';:cccccc;'',,,',:c::c:,',,,,';ccccccc;'',,,'','.';oKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNxldo;';;;cll:;:xXNNNXkc;:llc;;lONN0l;;cll:;:xXNNNXkc;:llc;;;':dxldNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0kxc,;cxxodxo::kWMWOc:oxdoxxc;oOOo;cxxodxo::kWMWOc:lxdoxxc;,cxk0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWOc;oOo;:xxc;xWMWx;:xxc;lko;codl;oOo;cxx:;xWMWx;:xkc;lOo;cOWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx::oddddc:l0MMMKl;cddddo::dKKx::oddddc;l0MMM0l;cddddo::dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOoc::::lxKWMMMWKxl:::::oONMMNOoc::::lxKWMMMWKxl:::::oONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX000KNWMMMMMMMWNK000XWMMMMMMWX000KNWMMMMMMMWNK000XWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 */
import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/security/Pausable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "@openzeppelin/contracts/utils/math/SafeMath.sol";

contract PsillySimon is Pausable, Ownable, ERC721Burnable {
    using Strings for uint256;
    using SafeMath for uint256;
    using Counters for Counters.Counter;
    Counters.Counter private totalSupply;

    uint256 public priceToGetHigh = 0.0025 ether;
    bool public isCropReady = false;
    uint256 public constant TOTAL = 3000;
    uint256 public maxDosePerTrip = 4;

    mapping(address => uint256) public amountPerWook;

    string public uriSuffix = ".json";
    string public tokenUri;
    string public contractUri;

    constructor() ERC721("PsillySimon.ART", "PS.ART") {}

    function contractURI() public view returns (string memory) {
        return contractUri;
    }

    function price() public view returns (uint256) {
        return priceToGetHigh;
    }

    function _baseURI() internal view override returns (string memory) {
        return tokenUri;
    }

    function tokenURI(uint256 _tokenId)
        public
        view
        virtual
        override
        returns (string memory)
    {
        require(_exists(_tokenId), "Dose hasn't kicked in yet");

        string memory currentBaseURI = _baseURI();
        return
            bytes(currentBaseURI).length > 0
                ? string(
                    abi.encodePacked(
                        currentBaseURI,
                        _tokenId.toString(),
                        uriSuffix
                    )
                )
                : "";
    }

    function _beforeTokenTransfer(
        address from,
        address to,
        uint256 tokenId
    ) internal override whenNotPaused {
        super._beforeTokenTransfer(from, to, tokenId);
    }

    function getPsilly(uint256 _dose)
        public
        payable
        ableToParty(_dose)
        whenNotPaused
    {
        amountPerWook[msg.sender] = amountPerWook[msg.sender] + _dose;
        for (uint256 i = 0; i < _dose; i++) {
            totalSupply.increment();
            _safeMint(msg.sender, totalSupply.current());
        }
    }

    modifier ableToParty(uint256 _dose) {
        require(isCropReady, "Show has not started you lot lizard");
        amountPerWook[msg.sender] += _dose;
        require(amountPerWook[msg.sender] <= 4, "Can not get anymore");
        require(
            _dose > 0 && _dose < maxDosePerTrip + 1,
            "Exceeds maximum dose you can take at once, slow down"
        );
        require(
            msg.value >= priceToGetHigh.mul(_dose),
            "Shit I am going to need bout 350"
        );
        require(
            totalSupply.current() + _dose < TOTAL + 1,
            "Sorry pal shop is closed, wooks out front should of told ya so"
        );
        _;
    }

    function withdraw() public onlyOwner {
        (bool os, ) = payable(owner()).call{value: address(this).balance}("");
        require(os);
    }

    function setContractURI(string memory _contractUri) public onlyOwner {
        contractUri = _contractUri;
    }

    function setTokenURI(string memory _tokenUri) public onlyOwner {
        tokenUri = _tokenUri;
    }

    function setSale(bool isActive) public onlyOwner {
        isCropReady = isActive;
    }

    function setUriSuffix(string memory _uriSuffix) public onlyOwner {
        uriSuffix = _uriSuffix;
    }

    function setMaxDosePerTrip(uint256 _maxDosePerTrip) public onlyOwner {
        maxDosePerTrip = _maxDosePerTrip;
    }

    function pause() public onlyOwner {
        _pause();
    }

    function unpause() public onlyOwner {
        _unpause();
    }

    function setPrice(uint256 _newPrice) public onlyOwner {
        priceToGetHigh = _newPrice;
    }
}
