{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/////////////////////////////////////////////////////////////////////////////////\r\n//                                                                             //\r\n//                                            @@                               //    \r\n//                                         @@@,,@@(                            //    \r\n//                                     @@@@@@@@@,,#@@@@@@@@@                   //    \r\n//                                @@@@@**,,,,,,,,,,,,,,,,,,,@@@@@              //    \r\n//                           @@@@@**,,,,,,,,,,****,,,,,,,,,,,,,,,@@            //    \r\n//                         @@***,,,,,,,@@@@@@@*******,,,,,@@@@***,,@@          //    \r\n//                       @@**,,,,,,,@@@&&&&%%%@@@@#**,,,,,,,@@@@@,,@@          //    \r\n//                    @@@,,,,,,,**@@%%%%%&&%%%%%%%&@@**,,,,,@@@@@**,,@@@       //    \r\n//                  @@@@@**,,,,,@@%%%%%&&%%&&&%%%%%%%@@,,,,,@@%%%@@**@@@       //    \r\n//                @@@@***,,,,@@@%%&&%%%&&%%&&&%%%%%%%@@***,,@@&&&%%@@          //    \r\n//                @@@@***,,@@&&&&&&&&&&&&&&&&&&&%%%%%@@***@@%%&&&&&&&@@@       //    \r\n//             @@@&&@@***@@@@&&&&&&&@@@@@@@@@@&&&&&&&@@***@@@@@@@@@&&@@@       //    \r\n//             @@@@@@@***@@%%&&&@@@@(((///////@@@@@&&&&@@@@@/////**@@          //    \r\n//           @@&&&&&&&@@@&&&&@@@%%((///***********#@@@@@@@%%//*******@@@       //    \r\n//        (@@&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       //    \r\n//      @@@&&&&@@@((((@@@@@&&###%%%%(((((*********,,,,,...  ,,,,,  **///       //    \r\n//    @@@@@@@@@///**@@@@@**&&@@@((((**********,,,,...  ,,,,,  ***////(((       //    \r\n// ...@@@@@&&@@///**@@%%%&&&&@@@%%((///****,,,,,..   *********/////(((((       //    \r\n// ...@@&&&&&@@///**@@@@@**&&%%%@@%%(((/////////@@@@@@@///@@@@@@@**@@          //    \r\n// ...@@@@@&&&&@@@////*******&&&%%@@@@@@@(((((((@@&%%@@(((@@##@@@**@@          //    \r\n// @@@&&@@@@@@@&&&@@///////@@&&&&&&&&&&&&@@///(((((((////////////////@@@       //    \r\n// @@@&&&&&&&&&@@@@@@@@@@@@&&&&&&&&&&&&@@/////***********************///@@     //    \r\n// &&&&&&&&&&&&@@@@@@@&&&&&&&&&&&&&&@@@////*****************************@@     //    \r\n// &&&&&@@&%%%%@@@%%%%%%%%%%%%%%&&&&@@@((//@@@@@@@@@@@@@@@@@@@@@@@@@@***@@     //    \r\n// &&&&&&&&&&%%%%%%%%%%%%%%%%%%%&&@@@@@((//((((((((((//////////////((@@@       //    \r\n// &&&&&&&&%%%%%%%%%%%&&&%%%%%%%&&&&@@@%%((//////////****************@@@       //    \r\n// &&&&&%%&&&&&%%%&&%%%%%%%%%%%%&&@@@@@@@%%(((////*****************@@          //    \r\n// @@@&&&&&@@%%&&&&&%%%%%&&&&%%%&&&&&&&&&@@(((///////////////////@@&&@@@       //    \r\n// &&&&&&&&&&%%&&&&&%%%%%&&%%%%%&&&&%%%@@@@@@@@@@@@@@@@@@@@@@@@@@%%&&&&&@@     //    \r\n// &&&&&&&&&&%%&&&&&&&%%%&&&&%%%&&%%%%%%%&&@@@@@@@@@@&&@@@&&&&%%%&&%%%%%&&@@   //    \r\n// @@@&&&&&&&&&&&&&&%%&&&&&@@&&&&&%%%%%%%&&&&&@@&&&&&&&%%%&&%%%%%%%%%&&&%%@@   //    \r\n// @@@&&&&&&&&&&&&%%&&@@@&&&&&&&&&&&&&&&&&&&&&&&%%%%%&&&&&%%%%%%%%%%%%%%&&&&@@@//    \r\n/////////////////////////////////////////////////////////////////////////////////\r\n//           ____             __        _        __ __                         //\r\n//          / __ \\___    ____/ /  ___ _(_)__    / //_/__  ___  ___ ____        //\r\n//         / /_/ / _ \\  / __/ _ \\/ _ `/ / _ \\  / ,< / _ \\/ _ \\/ _ `/_ /        //\r\n//         \\____/_//_/  \\__/_//_/\\_,_/_/_//_/ /_/|_|\\___/_//_/\\_, //__/        //\r\n//         By: 0xInuarashi.eth                               /___/             //\r\n//                                                                             //\r\n/////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\r\n    On Chain Kongz. Created by 0xInuarashi with <3 https://twitter.com/0xInuarashi\r\n\r\n    100% On-Chain, Decoded from Kongz DNA, and recreated into groovy CyberKongz \r\n    that will live On-Chain forever.\r\n\r\n    These are KongzBound NFTs that cannot be traded or transferred. \r\n    The owner of each token will always be the owner of the \r\n    Cyberkongz at https://opensea.io/collection/cyberkongz.\r\n*/\r\n\r\nabstract contract Ownable {\r\n    address public owner; \r\n    constructor() { owner = msg.sender; }\r\n    modifier onlyOwner { require(owner == msg.sender, \"Not Owner!\"); _; }\r\n    function transferOwnership(address new_) external onlyOwner { owner = new_; }\r\n}\r\n\r\ninterface iOCK {\r\n    function tokenURI(uint256 tokenId_) external view returns (string memory);\r\n}\r\n\r\ninterface iKongz {\r\n    function totalSupply() external view returns (uint256);\r\n    function ownerOf(uint256 tokenId_) external view returns (address);\r\n    function balanceOf(address address_) external view returns (uint256); \r\n}\r\n\r\ncontract OnChainKongzGallery is Ownable {\r\n    \r\n    // Token Details\r\n    string public name = \"On Chain Kongz\";\r\n    string public symbol = \"OCKONGZ\";\r\n    function setNameAndSymbol(string calldata name_, string calldata symbol_)\r\n    external onlyOwner { name = name_; symbol = symbol_; }\r\n\r\n    // Interface\r\n    iOCK public OCK = iOCK(0x3Ce95E9aD8DCFBe45fc8267B83B3Ec188D792f40);\r\n    function setOCK(address address_) external onlyOwner {\r\n        OCK = iOCK(address_); }\r\n\r\n    iKongz public Kongz = iKongz(0x57a204AA1042f6E66DD7730813f4024114d74f37);\r\n    function setKongz(address address_) external onlyOwner {\r\n        Kongz = iKongz(address_); }\r\n    \r\n    // Magic Events\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, \r\n        address indexed fromAddress, address indexed toAddress);\r\n\r\n    // Magic Logic\r\n    function totalSupply() public view returns (uint256) {\r\n        return Kongz.totalSupply();\r\n    }\r\n    function ownerOf(uint256 tokenId_) public view returns (address) {\r\n        return Kongz.ownerOf(tokenId_);\r\n    }\r\n    function balanceOf(address address_) public view returns (uint256) {\r\n        return Kongz.balanceOf(address_);\r\n    }\r\n\r\n    // Token URI\r\n    function tokenURI(uint256 tokenId_) public view returns (string memory) {\r\n        return OCK.tokenURI(tokenId_);\r\n    }\r\n\r\n    // ERC721 OpenZeppelin Standard Stuff\r\n    function supportsInterface(bytes4 interfaceId_) public pure returns (bool) {\r\n        return (interfaceId_ == 0x80ac58cd || interfaceId_ == 0x5b5e139f);\r\n    }\r\n\r\n    // Initialization Methods\r\n    function initialize(uint256 start_, uint256 end_) external onlyOwner {\r\n        for (uint256 i = start_; i <= end_; i++) {\r\n            emit Transfer(address(0), address(this), i);\r\n        }\r\n    }\r\n    function initializeToOwners(uint256 start_, uint256 end_) external onlyOwner {\r\n        for (uint256 i = start_; i <= end_; i++) {\r\n            emit Transfer(address(0), Kongz.ownerOf(i), i);\r\n        }\r\n    }\r\n    function initializeToCalldata(uint256 start_, uint256 end_, \r\n    address[] calldata addresses_) external onlyOwner {\r\n        uint256 _length = start_ - end_ + 1;\r\n        require(_length == addresses_.length,\r\n            \"Addresses length incorrect!\");\r\n\r\n        uint256 _index;\r\n        for (uint256 i = start_; i <= end_; i++) {\r\n            emit Transfer(address(0), addresses_[_index++], i);\r\n        }\r\n    }\r\n    function initializeEIP2309(uint256 start_, uint256 end_) \r\n    external onlyOwner {\r\n        emit ConsecutiveTransfer(start_, end_, address(0), address(this));\r\n    }\r\n    function initializeEIP2309ToTarget(uint256 start_, uint256 end_, address to_) \r\n    external onlyOwner {\r\n        emit ConsecutiveTransfer(start_, end_, address(0), to_);\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Kongz\",\"outputs\":[{\"internalType\":\"contract iKongz\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OCK\",\"outputs\":[{\"internalType\":\"contract iOCK\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_\",\"type\":\"uint256\"}],\"name\":\"initializeEIP2309\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"initializeEIP2309ToTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"addresses_\",\"type\":\"address[]\"}],\"name\":\"initializeToCalldata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_\",\"type\":\"uint256\"}],\"name\":\"initializeToOwners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"setKongz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"setOCK\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId_\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OnChainKongzGallery", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6e48fc399ffe640c165bb244e2ba7455a563ecf78e46611c92e5e64e52727801"}]}