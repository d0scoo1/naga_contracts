{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.8.12;\r\n\r\ncontract TokenDepositer {\r\n    address constant bridgeWallet = address(0xc4DC891d5B5171f789829D6050D5eB64c447e0FE);\r\n\r\n    function deposit(address token, uint amount) public {\r\n        safeTransferFrom(token, msg.sender, bridgeWallet, amount);\r\n    }\r\n\r\n    function withdraw(address token, address to, uint amount) public {\r\n        require(msg.sender == bridgeWallet, \"NBW\");\r\n        safeTransferFrom(token, msg.sender, to, amount);\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) private {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TF\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TokenDepositer", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2dd1d6ff63e93adb03f45333ae771f77a3848e381d43ff5f736a7cd64cd4fc5d"}]}