{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\n/**\r\n *\r\n *\r\n * ,------. ,-----. ,--.   ,--. ,-----.     ,--.   ,--.,--.                                  ,--.   ,--.\r\n * |  .---''  .-.  '|   `.'   |'  .-.  '    |  |   |  |`--',--,--, ,--,--,  ,---. ,--.--.    |   `.'   | ,--,--.,--.--. ,---.\r\n * |  `--, |  | |  ||  |'.'|  ||  | |  |    |  |.'.|  |,--.|      \\|      \\| .-. :|  .--'    |  |'.'|  |' ,-.  ||  .--'(  .-'\r\n * |  |`   '  '-'  '|  |   |  |'  '-'  '    |   ,'.   ||  ||  ||  ||  ||  |\\   --.|  |       |  |   |  |\\ '-'  ||  |   .-'  `)\r\n * `--'     `-----' `--'   `--' `-----'     '--'   '--'`--'`--''--'`--''--' `----'`--'       `--'   `--' `--`--'`--'   `----'\r\n *\r\n *\r\n * \u6e90\u7801\u4e0d\u662f\u539f\u521b\uff0c\u4f46\u662f\u7ecf\u8fc7\u4e86\u672c\u4eba\u5ba1\u6838\uff0c\u4e0d\u5b58\u5728\u8d44\u91d1\u88ab\u8d85\u7ea7\u7ba1\u7406\u5458\u8f6c\u8d70\u7684\u53ef\u80fd\u6027\r\n * master#fomowinner.com\r\n */\r\n\r\n// \u98de\u5411\u706b\u661f\u4e8b\u4ef6\r\ncontract FlyToTheMarsEvents {\r\n\r\n  // \u7b2c\u4e00\u9636\u6bb5\u8d2d\u4e70key\u4e8b\u4ef6\r\n  event onFirStage\r\n  (\r\n    address indexed player,\r\n    uint256 indexed rndNo,\r\n    uint256 keys,\r\n    uint256 eth,\r\n    uint256 timeStamp\r\n  );\r\n\r\n  // \u7b2c\u4e8c\u9636\u6bb5\u6210\u4e3a\u8d62\u5bb6\u4e8b\u4ef6\r\n  event onSecStage\r\n  (\r\n    address indexed player,\r\n    uint256 indexed rndNo,\r\n    uint256 eth,\r\n    uint256 timeStamp\r\n  );\r\n\r\n  // \u73a9\u5bb6\u63d0\u73b0\u4e8b\u4ef6\r\n  event onWithdraw\r\n  (\r\n    address indexed player,\r\n    uint256 indexed rndNo,\r\n    uint256 eth,\r\n    uint256 timeStamp\r\n  );\r\n\r\n  // \u83b7\u5956\u4e8b\u4ef6\r\n  event onAward\r\n  (\r\n    address indexed player,\r\n    uint256 indexed rndNo,\r\n    uint256 eth,\r\n    uint256 timeStamp\r\n  );\r\n}\r\n\r\n// \u98de\u5411\u706b\u661f\u4e3b\u5408\u7ea6\r\ncontract FlyToTheMars is FlyToTheMarsEvents {\r\n\r\n  using SafeMath for *;           // \u5bfc\u5165\u6570\u5b66\u51fd\u6570\r\n  using KeysCalc for uint256;     // \u5bfc\u5165key\u8ba1\u7b97\r\n\r\n  //\u6bcf\u8f6e\u6e38\u620f\u7684\u6570\u636e\u7ed3\u6784\r\n  struct Round {\r\n    uint256 eth;        // eth\u603b\u91cf\r\n    uint256 keys;       // key\u603b\u91cf\r\n    uint256 startTime;  // \u5f00\u59cb\u65f6\u95f4\r\n    uint256 endTime;    // \u7ed3\u675f\u65f6\u95f4\r\n    address leader;     // \u8d62\u5bb6\r\n    uint256 lastPrice;  // \u7b2c\u4e8c\u9636\u6bb5\u7684\u6700\u8fd1\u51fa\u4ef7\r\n    bool award;         // \u5df2\u7ecf\u7ed3\u675f\r\n  }\r\n\r\n  //\u73a9\u5bb6\u6570\u636e\u7ed3\u6784\r\n  struct PlayerRound {\r\n    uint256 eth;        // \u73a9\u5bb6\u5df2\u7ecf\u82b1\u4e86\u591a\u5c11eth\r\n    uint256 keys;       // \u73a9\u5bb6\u4e70\u5230\u7684key\u6570\u91cf\r\n    uint256 withdraw;   // \u73a9\u5bb6\u5df2\u7ecf\u63d0\u73b0\u7684\u6570\u91cf\r\n  }\r\n\r\n  uint256 public rndNo = 1;                                   // \u5f53\u524d\u6e38\u620f\u7684\u8f6e\u6570\r\n  uint256 public totalEth = 0;                                // eth\u603b\u91cf\r\n\r\n  uint256 constant private rndFirStage_ = 12 hours;           // \u7b2c\u4e00\u8f6e\u5012\u8ba1\u65f6\u957f\r\n  uint256 constant private rndSecStage_ = 12 hours;           // \u7b2c\u4e8c\u8f6e\u5012\u8ba1\u65f6\u957f\r\n\r\n  mapping(uint256 => Round) public round_m;                  // (rndNo => Round) \u6e38\u620f\u5b58\u50a8\u673a\u6784\r\n  mapping(uint256 => mapping(address => PlayerRound)) public playerRound_m;   // (rndNo => addr => PlayerRound) \u73a9\u5bb6\u5b58\u50a8\u7ed3\u6784\r\n\r\n  address public owner;               // \u521b\u5efa\u8005\u5730\u5740\r\n  uint256 public ownerWithdraw = 0;   // \u521b\u5efa\u8005\u63d0\u8d70\u4e86\u591a\u5c11eth\r\n\r\n  //\u6784\u9020\u51fd\u6570\r\n  constructor()\r\n    public\r\n  {\r\n    //\u53d1\u5e03\u5408\u7ea6\u8bbe\u5b9a\u7b2c\u4e00\u8f6e\u6e38\u620f\u5f00\u59cb\r\n    round_m[1].startTime = now;\r\n    round_m[1].endTime = now + rndFirStage_;\r\n\r\n    //\u6240\u6709\u4eba\u5c31\u662f\u53d1\u5e03\u5408\u7ea6\u7684\u4eba\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * \u9632\u6b62\u5176\u4ed6\u5408\u7ea6\u8c03\u7528\r\n   */\r\n  modifier onlyHuman()\r\n  {\r\n    address _addr = msg.sender;\r\n    uint256 _codeLength;\r\n\r\n    assembly {_codeLength := extcodesize(_addr)}\r\n    require(_codeLength == 0, \"sorry humans only\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * \u8bbe\u7f6eeth\u8f6c\u5165\u7684\u8fb9\u754c\r\n   */\r\n  modifier isWithinLimits(uint256 _eth)\r\n  {\r\n    require(_eth >= 1000000000, \"pocket lint: not a valid currency\"); //\u6700\u5c0f8\u4f4d\u5c0f\u6570\u91d1\u989d\r\n    require(_eth <= 100000000000000000000000, \"no vitalik, no\"); //\u6700\u592710\u4e07eth\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * \u53ea\u6709\u521b\u5efa\u8005\u80fd\u8c03\u7528\r\n   */\r\n  modifier onlyOwner()\r\n  {\r\n    require(owner == msg.sender, \"only owner can do it\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * \u533f\u540d\u51fd\u6570\r\n   * \u81ea\u52a8\u63a5\u53d7\u6c47\u6b3e\uff0c\u5b9e\u73b0\u8d2d\u4e70key\r\n   */\r\n  function()\r\n  onlyHuman()\r\n  isWithinLimits(msg.value)\r\n  public\r\n  payable\r\n  {\r\n    uint256 _eth = msg.value;     //\u7528\u6237\u8f6c\u5165\u7684eth\u91cf\r\n    uint256 _now = now;           //\u73b0\u5728\u65f6\u95f4\r\n    uint256 _rndNo = rndNo;       //\u5f53\u524d\u6e38\u620f\u8f6e\u6570\r\n    uint256 _ethUse = msg.value;  //\u7528\u6237\u53ef\u7528\u6765\u4e70key\u7684eth\u6570\u91cf\r\n\r\n    // \u662f\u5426\u8981\u5f00\u542f\u4e0b\u4e00\u5c40\r\n    if (_now > round_m[_rndNo].endTime)\r\n    {\r\n      _rndNo = _rndNo.add(1);     //\u5f00\u542f\u65b0\u7684\u4e00\u8f6e\r\n      rndNo = _rndNo;\r\n\r\n      round_m[_rndNo].startTime = _now;\r\n      round_m[_rndNo].endTime = _now + rndFirStage_;\r\n    }\r\n\r\n    // \u5224\u65ad\u662f\u5426\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u4ece\u540e\u9762\u903b\u8f91\u6765\u770bkey\u4e0d\u4f1a\u8d85\u5356\u7684\r\n    if (round_m[_rndNo].keys < 10000000000000000000000000)\r\n    {\r\n      // \u8ba1\u7b97\u6c47\u5165\u7684eth\u80fd\u4e70\u591a\u5c11key\r\n      uint256 _keys = (round_m[_rndNo].eth).keysRec(_eth);\r\n\r\n      // key\u603b\u91cf 10,000,000, \u8d85\u8fc7\u5219\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\r\n      if (_keys.add(round_m[_rndNo].keys) >= 10000000000000000000000000)\r\n      {\r\n        // \u91cd\u65b0\u8ba1\u7b97\u5269\u4f59key\u7684\u603b\u91cf\r\n        _keys = (10000000000000000000000000).sub(round_m[_rndNo].keys);\r\n\r\n        // \u5982\u679c\u6e38\u620f\u7b2c\u4e00\u9636\u6bb5\u8fbe\u52308562.5\u4e2aeth\u90a3\u4e48\u5c31\u4e0d\u80fd\u518d\u4e70key\u4e86\r\n        if (round_m[_rndNo].eth >= 8562500000000000000000)\r\n        {\r\n          _ethUse = 0;\r\n        } else {\r\n          _ethUse = (8562500000000000000000).sub(round_m[_rndNo].eth);\r\n        }\r\n\r\n        // \u5982\u679c\u6c47\u5165\u7684\u91d1\u989d\u5927\u4e8e\u53ef\u4ee5\u4e70\u7684\u91d1\u989d\u5219\u9000\u6389\u591a\u4f59\u7684\u90e8\u5206\r\n        if (_eth > _ethUse)\r\n        {\r\n          // \u9000\u6b3e\r\n          msg.sender.transfer(_eth.sub(_ethUse));\r\n        } else {\r\n          // fix\r\n          _ethUse = _eth;\r\n        }\r\n      }\r\n\r\n      // \u81f3\u5c11\u8981\u4e701\u4e2akey\u624d\u4f1a\u89e6\u53d1\u6e38\u620f\u89c4\u5219\uff0c\u5c11\u4e8e\u4e00\u4e2akey\u4e0d\u4f1a\u6210\u4e3a\u8d62\u5bb6\r\n      if (_keys >= 1000000000000000000)\r\n      {\r\n        round_m[_rndNo].endTime = _now + rndFirStage_;\r\n        round_m[_rndNo].leader = msg.sender;\r\n      }\r\n\r\n      // \u4fee\u6539\u73a9\u5bb6\u6570\u636e\r\n      playerRound_m[_rndNo][msg.sender].keys = _keys.add(playerRound_m[_rndNo][msg.sender].keys);\r\n      playerRound_m[_rndNo][msg.sender].eth = _ethUse.add(playerRound_m[_rndNo][msg.sender].eth);\r\n\r\n      // \u4fee\u6539\u8fd9\u8f6e\u6570\u636e\r\n      round_m[_rndNo].keys = _keys.add(round_m[_rndNo].keys);\r\n      round_m[_rndNo].eth = _ethUse.add(round_m[_rndNo].eth);\r\n\r\n      // \u4fee\u6539\u5168\u5c40eth\u603b\u91cf\r\n      totalEth = _ethUse.add(totalEth);\r\n\r\n      // \u89e6\u53d1\u7b2c\u4e00\u9636\u6bb5\u6210\u4e3a\u8d62\u5bb6\u4e8b\u4ef6\r\n      emit FlyToTheMarsEvents.onFirStage\r\n      (\r\n        msg.sender,\r\n        _rndNo,\r\n        _keys,\r\n        _ethUse,\r\n        _now\r\n      );\r\n    } else {\r\n      // \u7b2c\u4e8c\u9636\u6bb5\u5df2\u7ecf\u6ca1\u6709key\u4e86\r\n\r\n      // lastPrice + 0.1Ether <= newPrice <= lastPrice + 10Ether\r\n      // \u65b0\u4ef7\u683c\u5fc5\u987b\u662f\u5728\u524d\u4e00\u6b21\u51fa\u4ef7+0.1\u523010eth\u4e4b\u95f4\r\n      uint256 _lastPrice = round_m[_rndNo].lastPrice;\r\n      uint256 _maxPrice = (10000000000000000000).add(_lastPrice);\r\n\r\n      // less than (lastPrice + 0.1Ether) ?\r\n      // \u51fa\u4ef7\u5fc5\u987b\u5927\u4e8e\u6700\u540e\u4e00\u6b21\u51fa\u4ef7\u81f3\u5c110.1eth\r\n      require(_eth >= (100000000000000000).add(_lastPrice), \"Need more Ether\");\r\n\r\n      // more than (lastPrice + 10Ether) ?\r\n      // \u68c0\u67e5\u51fa\u4ef7\u662f\u5426\u5df2\u7ecf\u8d85\u8fc7\u6700\u540e\u4e00\u6b21\u51fa\u4ef710eth\r\n      if (_eth > _maxPrice)\r\n      {\r\n        _ethUse = _maxPrice;\r\n\r\n        // \u51fa\u4ef7\u5927\u4e8e10eth\u90e8\u5206\u81ea\u52a8\u9000\u6b3e\r\n        msg.sender.transfer(_eth.sub(_ethUse));\r\n      }\r\n\r\n      // \u66f4\u65b0\u8fd9\u4e00\u5c40\u4fe1\u606f\r\n      round_m[_rndNo].endTime = _now + rndSecStage_;\r\n      round_m[_rndNo].leader = msg.sender;\r\n      round_m[_rndNo].lastPrice = _ethUse;\r\n\r\n      // \u66f4\u65b0\u73a9\u5bb6\u4fe1\u606f\r\n      playerRound_m[_rndNo][msg.sender].eth = _ethUse.add(playerRound_m[_rndNo][msg.sender].eth);\r\n\r\n      // \u66f4\u65b0\u8fd9\u4e00\u5c40\u7684eth\u603b\u91cf\r\n      round_m[_rndNo].eth = _ethUse.add(round_m[_rndNo].eth);\r\n\r\n      // \u66f4\u65b0\u5168\u5c40eth\u603b\u91cf\r\n      totalEth = _ethUse.add(totalEth);\r\n\r\n      // \u89e6\u53d1\u7b2c\u4e8c\u9636\u6bb5\u6210\u4e3a\u8d62\u5bb6\u4e8b\u4ef6\r\n      emit FlyToTheMarsEvents.onSecStage\r\n      (\r\n        msg.sender,\r\n        _rndNo,\r\n        _ethUse,\r\n        _now\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6839\u636e\u6e38\u620f\u8f6e\u6570\u63d0\u73b0\r\n   */\r\n  function withdrawByRndNo(uint256 _rndNo)\r\n  onlyHuman()\r\n  public\r\n  {\r\n    require(_rndNo <= rndNo, \"You're running too fast\");                      //\u522b\u8fd9\u4e48\u6025\uff0c\u4e0b\u4e00\u8f6e\u6e38\u620f\u518d\u6765\u9886\r\n\r\n    //\u8ba1\u7b9760%\u80fd\u63d0\u73b0\u7684\u91cf\r\n    uint256 _total = (((round_m[_rndNo].eth).mul(playerRound_m[_rndNo][msg.sender].keys)).mul(60) / ((round_m[_rndNo].keys).mul(100)));\r\n    uint256 _withdrawed = playerRound_m[_rndNo][msg.sender].withdraw;\r\n\r\n    require(_total > _withdrawed, \"No need to withdraw\");                     //\u63d0\u5b8c\u4e86\u5c31\u4e0d\u8981\u518d\u63d0\u4e86\r\n\r\n    uint256 _ethOut = _total.sub(_withdrawed);                                //\u8ba1\u7b97\u672c\u6b21\u771f\u5b9e\u80fd\u63d0\u6570\u91cf\r\n    playerRound_m[_rndNo][msg.sender].withdraw = _total;                      //\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e0b\u6b21\u518d\u60f3\u63d0\u5c31\u6ca1\u95e8\u4e86\r\n\r\n    msg.sender.transfer(_ethOut);                                             //\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u8f6c\u94b1\u5427\r\n\r\n    // \u53d1\u9001\u73a9\u5bb6\u63d0\u73b0\u4e8b\u4ef6\r\n    emit FlyToTheMarsEvents.onWithdraw\r\n    (\r\n      msg.sender,\r\n      _rndNo,\r\n      _ethOut,\r\n      now\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \u8fd9\u4e2a\u662f\u8981\u9886\u5927\u5956\u554a\uff0c\u6307\u5b9a\u6e38\u620f\u8f6e\u6570\r\n   */\r\n  function awardByRndNo(uint256 _rndNo)\r\n  onlyHuman()\r\n  public\r\n  {\r\n    require(_rndNo <= rndNo, \"You're running too fast\");                        //\u522b\u8fd9\u4e48\u6025\uff0c\u4e0b\u4e00\u8f6e\u6e38\u620f\u518d\u6765\u9886\r\n    require(now > round_m[_rndNo].endTime, \"Wait patiently\");                   //\u8fd8\u6ca1\u7ed3\u675f\u5462\uff0c\u6025\u4ec0\u4e48\u6025\r\n    require(round_m[_rndNo].leader == msg.sender, \"The prize is not yours\");    //\u5bf9\u4e0d\u8d77\uff0c\u773c\u795e\u4e0d\u5bf9\r\n    require(round_m[_rndNo].award == false, \"Can't get prizes repeatedly\");     //\u4f60\u8fd8\u60f3\u91cd\u590d\u62ff\u4e48\uff1f\u6ca1\u95e8\r\n\r\n    uint256 _ethOut = ((round_m[_rndNo].eth).mul(35) / (100));  //\u8ba1\u7b97\u90a3\u4e00\u8f6e\u6e38\u620f\u4e2d\u768435%\u7684\u8d44\u91d1\r\n    round_m[_rndNo].award = true;                               //\u6807\u8bb0\u5df2\u7ecf\u9886\u4e86\uff0c\u53ef\u4e0d\u80fd\u91cd\u590d\u9886\u4e86\r\n    msg.sender.transfer(_ethOut);                               //\u8f6c\u8d26\uff0c\u63a5\u597d\u4e86\r\n\r\n    // \u53d1\u9001\u9886\u5927\u5956\u4e8b\u4ef6\r\n    emit FlyToTheMarsEvents.onAward\r\n    (\r\n      msg.sender,\r\n      _rndNo,\r\n      _ethOut,\r\n      now\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \u5408\u7ea6\u6240\u6709\u8005\u63d0\u73b0\uff0c\u53ef\u5206\u6b21\u63d0\uff0c\u6700\u591a\u4e3a\u603b\u8d44\u91d1\u76d85%\r\n   * \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u6267\u884c\uff0c\u4f46\u662f\u53ea\u6709\u5408\u7ea6\u7684\u6240\u6709\u4eba\u6536\u5230\u6b3e\r\n   */\r\n  function feeWithdraw()\r\n  onlyHuman()\r\n  public\r\n  {\r\n    uint256 _total = (totalEth.mul(5) / (100));           //\u5f53\u524d\u603b\u91cf\u76845%\r\n    uint256 _withdrawed = ownerWithdraw;                  //\u5df2\u7ecf\u63d0\u8d70\u7684\u6570\u91cf\r\n\r\n    require(_total > _withdrawed, \"No need to withdraw\"); //\u5982\u679c\u5df2\u7ecf\u63d0\u8d70\u8d85\u8fc7\u4e86\u91cf\u90a3\u4e48\u4e0d\u80fd\u518d\u63d0\r\n\r\n    ownerWithdraw = _total;                               //\u66f4\u6539\u6240\u6709\u8005\u5df2\u7ecf\u63d0\u8d70\u7684\u91cf\uff0c\u56e0\u4e3a\u5408\u7ea6\u65b9\u6cd5\u672c\u8eab\u90fd\u662f\u4e8b\u52a1\u4fdd\u62a4\u7684\uff0c\u6240\u4ee5\u5148\u6267\u884c\u4e5f\u6ca1\u95ee\u9898\r\n    owner.transfer(_total.sub(_withdrawed));              //\u7ed9\u5408\u7ea6\u6240\u6709\u8005\u8f6c\u8d26\r\n  }\r\n\r\n  /**\r\n   * \u66f4\u6539\u5408\u7ea6\u6240\u6709\u8005\uff0c\u53ea\u6709\u5408\u7ea6\u521b\u5efa\u8005\u53ef\u4ee5\u8c03\u7528\r\n   */\r\n  function changeOwner(address newOwner)\r\n  onlyOwner()\r\n  public\r\n  {\r\n    owner = newOwner;\r\n  }\r\n\r\n  /**\r\n   * \u83b7\u53d6\u5f53\u524d\u8fd9\u8f6e\u6e38\u620f\u7684\u4fe1\u606f\r\n   *\r\n   * @return round id\r\n   * @return total eth for round\r\n   * @return total keys for round\r\n   * @return time round started\r\n   * @return time round ends\r\n   * @return current leader\r\n   * @return lastest price\r\n   * @return current key price\r\n   */\r\n  function getCurrentRoundInfo()\r\n  public\r\n  view\r\n  returns (uint256, uint256, uint256, uint256, uint256, address, uint256, uint256)\r\n  {\r\n\r\n    uint256 _rndNo = rndNo;\r\n\r\n    return (\r\n    _rndNo,\r\n    round_m[_rndNo].eth,\r\n    round_m[_rndNo].keys,\r\n    round_m[_rndNo].startTime,\r\n    round_m[_rndNo].endTime,\r\n    round_m[_rndNo].leader,\r\n    round_m[_rndNo].lastPrice,\r\n    getBuyPrice()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * \u83b7\u53d6\u8fd9\u8f6e\u6e38\u620f\u7684\u7b2c\u4e00\u9636\u6bb5\u7684\u8d2d\u4e70\u4ef7\u683c\r\n   *\r\n   * @return price for next key bought (in wei format)\r\n   */\r\n  function getBuyPrice()\r\n  public\r\n  view\r\n  returns (uint256)\r\n  {\r\n    uint256 _rndNo = rndNo;\r\n    uint256 _now = now;\r\n\r\n    // start next round?\r\n    if (_now > round_m[_rndNo].endTime)\r\n    {\r\n      return (75000000000000);\r\n    }\r\n    if (round_m[_rndNo].keys < 10000000000000000000000000)\r\n    {\r\n      return ((round_m[_rndNo].keys.add(1000000000000000000)).ethRec(1000000000000000000));\r\n    }\r\n    //second stage\r\n    return (0);\r\n  }\r\n}\r\n\r\n// key\u8ba1\u7b97\r\nlibrary KeysCalc {\r\n\r\n  //\u5f15\u5165\u6570\u5b66\u51fd\u6570\r\n  using SafeMath for *;\r\n\r\n  /**\r\n   * \u8ba1\u7b97\u6536\u5230\u4e00\u5b9aeth\u65f6\u5356\u51fa\u7684key\u6570\u91cf\r\n   *\r\n   * @param _curEth current amount of eth in contract\r\n   * @param _newEth eth being spent\r\n   * @return amount of ticket purchased\r\n   */\r\n  function keysRec(uint256 _curEth, uint256 _newEth)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    return (keys((_curEth).add(_newEth)).sub(keys(_curEth)));\r\n  }\r\n\r\n  /**\r\n   * \u8ba1\u7b97\u51fa\u552e\u4e00\u5b9akey\u65f6\u6536\u5230\u7684eth\u6570\u91cf\r\n   *\r\n   * @param _curKeys current amount of keys that exist\r\n   * @param _sellKeys amount of keys you wish to sell\r\n   * @return amount of eth received\r\n   */\r\n  function ethRec(uint256 _curKeys, uint256 _sellKeys)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    return ((eth(_curKeys)).sub(eth(_curKeys.sub(_sellKeys))));\r\n  }\r\n\r\n  /**\r\n   * \u8ba1\u7b97\u4e00\u5b9a\u6570\u91cf\u7684eth\u4f1a\u5151\u6362\u591a\u5c11key\r\n   *\r\n   * @param _eth eth \"in contract\"\r\n   * @return number of keys that would exist\r\n   */\r\n  function keys(uint256 _eth)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    return ((((((_eth).mul(1000000000000000000)).mul(312500000000000000000000000)).add(5624988281256103515625000000000000000000000000000000000000000000)).sqrt()).sub(74999921875000000000000000000000)) / (156250000);\r\n  }\r\n\r\n  /**\r\n   * \u8ba1\u7b97\u7ed9\u5b9akey\u6570\u7684\u60c5\u51b5\u4e0beth\u6570\u91cf\r\n   *\r\n   * @param _keys number of keys \"in contract\"\r\n   * @return eth that would exists\r\n   */\r\n  function eth(uint256 _keys)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    return ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) / ((1000000000000000000).sq());\r\n  }\r\n}\r\n\r\n/**\r\n * \u6570\u5b66\u51fd\u6570\u5e93\r\n *\r\n * @dev Math operations with safety checks that throw on error\r\n * - added sqrt\r\n * - added sq\r\n * - added pwr \r\n * - changed asserts to requires with error log outputs\r\n * - removed div, its useless\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * \u4e58\u6cd5\r\n  */\r\n  function mul(uint256 a, uint256 b)\r\n  internal\r\n  pure\r\n  returns (uint256 c)\r\n  {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    require(c / a == b, \"SafeMath mul failed\");\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * \u51cf\u6cd5\r\n  */\r\n  function sub(uint256 a, uint256 b)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    require(b <= a, \"SafeMath sub failed\");\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * \u52a0\u6cd5\r\n  */\r\n  function add(uint256 a, uint256 b)\r\n  internal\r\n  pure\r\n  returns (uint256 c)\r\n  {\r\n    c = a + b;\r\n    require(c >= a, \"SafeMath add failed\");\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * \u5e73\u65b9\u6839\r\n   */\r\n  function sqrt(uint256 x)\r\n  internal\r\n  pure\r\n  returns (uint256 y)\r\n  {\r\n    uint256 z = ((add(x, 1)) / 2);\r\n    y = x;\r\n    while (z < y)\r\n    {\r\n      y = z;\r\n      z = ((add((x / z), z)) / 2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5e73\u65b9\r\n   */\r\n  function sq(uint256 x)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    return (mul(x, x));\r\n  }\r\n\r\n  /**\r\n   * \u4e58\u6cd5\u9012\u589e\r\n   */\r\n  function pwr(uint256 x, uint256 y)\r\n  internal\r\n  pure\r\n  returns (uint256)\r\n  {\r\n    if (x == 0)\r\n      return (0);\r\n    else if (y == 0)\r\n      return (1);\r\n    else\r\n    {\r\n      uint256 z = x;\r\n      for (uint256 i = 1; i < y; i++)\r\n        z = mul(z, x);\r\n      return (z);\r\n    }\r\n  }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"getBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rndNo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rndNo\",\"type\":\"uint256\"}],\"name\":\"withdrawByRndNo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"feeWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentRoundInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"round_m\",\"outputs\":[{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"keys\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"},{\"name\":\"leader\",\"type\":\"address\"},{\"name\":\"lastPrice\",\"type\":\"uint256\"},{\"name\":\"award\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rndNo\",\"type\":\"uint256\"}],\"name\":\"awardByRndNo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerRound_m\",\"outputs\":[{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"keys\",\"type\":\"uint256\"},{\"name\":\"withdraw\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"rndNo\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"keys\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onFirStage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"rndNo\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onSecStage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"rndNo\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"rndNo\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onAward\",\"type\":\"event\"}]", "ContractName": "FlyToTheMars", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://d7ae56cffc2d91fdd702aa0df98812c03b5b8395aee7ce2f862b2bde72973e49"}]}