{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/PriceOracle/WstEthDelayOracle.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.16;\\n\\nimport \\\"./interfaces/WstEthInterface.sol\\\";\\nimport \\\"./interfaces/WstEthOracleInterface.sol\\\";\\n\\ncontract WstEthDelayOracle is WstEthOracleInterface {\\n    /// @notice Admin address\\n    address public admin;\\n\\n    /// @notice The last updated timestamp\\n    uint256 public lastUpdated;\\n\\n    /// @notice The wstEth address\\n    address public wstEth;\\n\\n    /// @notice The candidate price\\n    uint256 private _candidate;\\n\\n    /// @notice The price\\n    uint256 private _price;\\n\\n    /// @notice Oracle being paused or not\\n    bool private _paused;\\n\\n    /// @notice The cooldown period\\n    uint256 public constant PERIOD = 1 hours;\\n\\n    /// @notice Emitted when the candidate price is updated\\n    event CandidateUpdated(uint256 oldCandidate, uint256 newCandidate, uint256 timestamp);\\n\\n    /// @notice Emitted when the price is updated\\n    event PriceUpdated(uint256 oldPrice, uint256 newPrice, uint256 timestamp);\\n\\n    /// @notice Emitted when the oracle is paused\\n    event Paused();\\n\\n    /// @notice Emitted when the oracle is unpaused\\n    event Unpaused();\\n\\n    /* ========== CONSTRUCTOR ========== */\\n\\n    constructor(address admin_, address wstEth_) public {\\n        admin = admin_;\\n        wstEth = wstEth_;\\n        lastUpdated = getTimestamp();\\n\\n        uint256 price = WstEthInterface(wstEth).stEthPerToken();\\n        _price = price;\\n        _candidate = price;\\n    }\\n\\n    /* ========== MUTATIVE FUNCTIONS ========== */\\n\\n    function update() external {\\n        require(!_paused, \\\"paused\\\");\\n        require(getTimestamp() - lastUpdated > PERIOD, \\\"period not elapsed\\\");\\n\\n        uint256 price = WstEthInterface(wstEth).stEthPerToken();\\n        require(price > 0, \\\"invalid price\\\");\\n\\n        if (_candidate > 0 && _price != _candidate) {\\n            uint256 oldPrice = _price;\\n            _price = _candidate;\\n            emit PriceUpdated(oldPrice, _price, getTimestamp());\\n        }\\n\\n        if (_candidate != price) {\\n            uint256 oldCandidate = _candidate;\\n            _candidate = price;\\n            emit CandidateUpdated(oldCandidate, _candidate, getTimestamp());\\n        }\\n\\n        lastUpdated = getTimestamp();\\n    }\\n\\n    /* ========== ADMIN FUNCTIONS ========== */\\n\\n    function revokeCandidate() external {\\n        require(msg.sender == admin, \\\"unauthorized\\\");\\n\\n        uint256 oldCandidate = _candidate;\\n        _candidate = 0;\\n        emit CandidateUpdated(oldCandidate, _candidate, getTimestamp());\\n    }\\n\\n    function revokePrice() external {\\n        require(msg.sender == admin, \\\"unauthorized\\\");\\n\\n        uint256 oldPrice = _price;\\n        uint256 oldCandidate = _candidate;\\n        _price = 0;\\n        _candidate = 0;\\n        emit PriceUpdated(oldPrice, 0, getTimestamp());\\n        emit CandidateUpdated(oldCandidate, 0, getTimestamp());\\n\\n        _paused = true;\\n        emit Paused();\\n    }\\n\\n    function unpause() external {\\n        require(msg.sender == admin, \\\"unauthorized\\\");\\n\\n        uint256 price = WstEthInterface(wstEth).stEthPerToken();\\n        _price = price;\\n        _candidate = price;\\n        emit PriceUpdated(0, _price, getTimestamp());\\n        emit CandidateUpdated(0, _candidate, getTimestamp());\\n\\n        _paused = false;\\n        emit Unpaused();\\n    }\\n\\n    /* ========== VIEWS ========== */\\n\\n    function getPrice() external view returns (uint256) {\\n        return _price;\\n    }\\n\\n    function getCandidatePrice() external view returns (uint256) {\\n        return _candidate;\\n    }\\n\\n    function getTimestamp() public view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    function paused() public view returns (bool) {\\n        return _paused;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/PriceOracle/interfaces/WstEthInterface.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.16;\\n\\ninterface WstEthInterface {\\n    function stEthPerToken() external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"contracts/PriceOracle/interfaces/WstEthOracleInterface.sol\": {\r\n      \"content\": \"pragma solidity ^0.5.16;\\n\\ninterface WstEthOracleInterface {\\n    function getPrice() external view returns (uint256);\\n}\\n\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wstEth_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCandidate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCandidate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CandidateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCandidatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revokeCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revokePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wstEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WstEthDelayOracle", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000a5fc0bbfcd05827ed582869b7254b6f141ba84eb0000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}