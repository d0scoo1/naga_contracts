{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBackend {\r\n  function buy(uint256 listingId, uint256 number) external;\r\n}\r\n\r\ncontract Frontend {\r\n  IBackend private immutable BACKEND;\r\n\r\n  address private owner;\r\n  mapping(address => bool) private allowlisted;\r\n\r\n  constructor(IBackend backend) {\r\n    BACKEND = backend;\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner, \"O\");\r\n    _;\r\n  }\r\n\r\n  modifier onlyOwnerOrAllowed {\r\n    require(msg.sender == owner || allowlisted[msg.sender], \"OA\");\r\n    _;\r\n  }\r\n\r\n  function setAllowed(address addr, bool allowed) external onlyOwner {\r\n    allowlisted[addr] = allowed;\r\n  }\r\n\r\n  function buy(uint256 listingId, uint256 number) external onlyOwnerOrAllowed {\r\n    BACKEND.buy(listingId, number);\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IBackend\",\"name\":\"backend\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Frontend", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000bb515d355d75520adcacc4766f9fa96226c3d6ae", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://78cc65f6046a84ef063f416ca13db9af369ecb3439252b57a80d200bd624faaf"}]}