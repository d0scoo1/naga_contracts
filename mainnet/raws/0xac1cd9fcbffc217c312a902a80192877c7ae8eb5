{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC721 {\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n}\r\n\r\ncontract RedeemBlacklist {\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    IERC721 nftContract = IERC721(0xA8cf84dD46e59428a468E5267979a3400B785F33);\r\n\r\n    address public owner;\r\n    \r\n    uint256 public iterator;\r\n    \r\n    mapping (address => uint256) public howMany;\r\n\r\n    function addClaim(address[] memory _addresses, uint256[] memory _howMany) public {\r\n        require(msg.sender == owner, \"You are not the owner\");\r\n        for(uint i = 0; i < _addresses.length; i++){\r\n            howMany[_addresses[i]] = _howMany[i];\r\n        }\r\n    }\r\n\r\n    function setIterator(uint256 _iterator) public {\r\n        require(msg.sender == owner, \"You're not the owner\");\r\n        iterator = _iterator;\r\n    }\r\n\r\n    function claimNFT(uint256 numNFTs) public {\r\n        require(msg.sender == tx.origin, \"Only direct calls allowed\");\r\n        require(numNFTs <= howMany[msg.sender], \"You can't claim that many\");\r\n\r\n        for(uint256 i = 0; i < numNFTs; i++) {\r\n            nftContract.transferFrom(owner, msg.sender, iterator + i);\r\n        }\r\n\r\n        howMany[msg.sender] -= numNFTs;\r\n        iterator += numNFTs;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_howMany\",\"type\":\"uint256[]\"}],\"name\":\"addClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numNFTs\",\"type\":\"uint256\"}],\"name\":\"claimNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"howMany\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iterator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_iterator\",\"type\":\"uint256\"}],\"name\":\"setIterator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RedeemBlacklist", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5342b8c55576dbefb382c7171a4f6bc05a5498a716b21f1e966831df4eeed923"}]}