{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.11;\r\n\r\n//  \u2588\u2588\u2588\u2557___\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2557___\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2557___\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557_\u2588\u2588\u2588\u2588\u2588\u2588\u2557_____\u2588\u2588\u2588\u2557___\u2588\u2588\u2588\u2557_\u2588\u2588\u2588\u2588\u2588\u2588\u2557_\u2588\u2588\u2588\u2588\u2588\u2588\u2557_\u2588\u2588\u2557\r\n//  \u2588\u2588\u2588\u2588\u2557_\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2588\u2588\u2557_\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2588\u2588\u2557__\u2588\u2588\u2551\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557___\u2588\u2588\u2588\u2588\u2557_\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\r\n//  \u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557__\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557__\u2588\u2588\u2554\u2588\u2588\u2557_\u2588\u2588\u2551___\u2588\u2588\u2551___\u2588\u2588\u2551___\u2588\u2588\u2551____\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2551___\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\r\n//  \u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d__\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d__\u2588\u2588\u2551\u255a\u2588\u2588\u2557\u2588\u2588\u2551___\u2588\u2588\u2551___\u2588\u2588\u2551___\u2588\u2588\u2551____\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2551___\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\r\n//  \u2588\u2588\u2551_\u255a\u2550\u255d_\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551_\u255a\u2550\u255d_\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551_\u255a\u2588\u2588\u2588\u2588\u2551___\u2588\u2588\u2551___\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d____\u2588\u2588\u2551_\u255a\u2550\u255d_\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551__\u2588\u2588\u2551\u2588\u2588\u2551\r\n//  \u255a\u2550\u255d_____\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d_____\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d__\u255a\u2550\u2550\u2550\u255d___\u255a\u2550\u255d____\u255a\u2550\u2550\u2550\u2550\u2550\u255d_____\u255a\u2550\u255d_____\u255a\u2550\u255d_\u255a\u2550\u2550\u2550\u2550\u2550\u255d_\u255a\u2550\u255d__\u255a\u2550\u255d\u255a\u2550\u255d\r\n\r\ninterface IWhatTimeIsEth{    \r\n    function isFucked() external view  returns(string memory );\r\n    function whoGivesAFuck() external view  returns (address );\r\n    function Fuck(uint _fuckedTime) payable external  ;\r\n    function whatTimeIsEth(bool _isWhatTimeIsEth) external view returns (uint256 time);\r\n}\r\n\r\ncontract WhatTimeIsEth {\r\n    bool private fucked=false;\r\n    address fucker = address(0);\r\n    uint256 fuckedTime;\r\n\r\n    function isFucked() external view virtual returns(string memory ){\r\n        return fucked ? \"eth is fucked up.\" : \"eth is not fucked up.\";\r\n    }\r\n    \r\n    function whoGivesAFuck() external view virtual returns (address ){\r\n        return fucker;\r\n    }\r\n\r\n    function Fuck(uint _fuckedTime) payable external virtual {\r\n        require(msg.value > 100 ether);\r\n        require(!fucked,\"already fucked.\");\r\n        payable(address(0x000000070f91B6c56Fa08d4f3a26C7fc992b38f4)).call{\r\n      value: msg.value\r\n    }(\"\");\r\n        fucked = true;\r\n        fucker = msg.sender;\r\n        fuckedTime = _fuckedTime;\r\n    }\r\n\r\n    function whatTimeIsEth(bool _isWhatTimeIsEth) external view virtual returns (uint256 time) {\r\n        require(_isWhatTimeIsEth, \"It is not WhatTimeIsEth\");\r\n        if(fucked){\r\n            return fuckedTime;\r\n        }\r\n        return block.timestamp;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fuckedTime\",\"type\":\"uint256\"}],\"name\":\"Fuck\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFucked\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isWhatTimeIsEth\",\"type\":\"bool\"}],\"name\":\"whatTimeIsEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whoGivesAFuck\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WhatTimeIsEth", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0166bf3981fac08d7daa8061629fdee228f652b3c72c7a290f1ea0a41d7f4b8d"}]}