{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract Naive {\r\n    bytes32 public hash;\r\n\r\n    constructor(bytes32 _hash) payable {\r\n        hash = _hash;\r\n    }\r\n\r\n    function take(string calldata _secret) external {\r\n        if (keccak256(abi.encodePacked(_secret)) == hash) {\r\n            payable(msg.sender).transfer(address(this).balance);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_secret\",\"type\":\"string\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Naive", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "a173afea1581fdae1a7db94c95b24ff348cf655b630042458882e2cd625be121", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6f65f73126c03093b07eed0bfa5428fd254f8e0a46ad2deb4ae99feb779ed097"}]}