{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: AGPL-3.0\r\n\r\npragma solidity 0.8.1;\r\n\r\ninterface IMoonCatAcclimator {\r\n    function getApproved(uint256 tokenId) external view returns (address);\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\r\n}\r\n\r\ninterface IMoonCatRescue {\r\n    function rescueOrder(uint256 tokenId) external view returns (bytes5);\r\n    function catOwners(bytes5 catId) external view returns (address);\r\n    function catNames(bytes5 catId) external view returns (bytes32);\r\n}\r\n\r\ninterface IReverseResolver {\r\n    function claim(address owner) external returns (bytes32);\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IERC721 {\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n}\r\n\r\ninterface IMoonCatReference {\r\n    function doc (address contractAddress) external view returns (string memory name, string memory description, string memory details);\r\n    function setDoc (address contractAddress, string calldata name, string calldata description) external;\r\n}\r\n\r\n/**\r\n * @title MoonCatTraits\r\n * @notice On Chain MoonCat Trait Parsing\r\n * @dev Provides On Chain Reference for the MoonCat Traits\r\n */\r\ncontract MoonCatTraits {\r\n\r\n    /* Human-friendly trait names */\r\n\r\n    string[2] public facingNames = [\"left\", \"right\"];\r\n    string[4] public expressionNames = [\"smiling\", \"grumpy\", \"pouting\", \"shy\"];\r\n    string[4] public patternNames = [\"pure\", \"tabby\", \"spotted\", \"tortie\"];\r\n    string[4] public poseNames = [\"standing\", \"sleeping\", \"pouncing\", \"stalking\"];\r\n\r\n    /* External Contracts */\r\n\r\n    IMoonCatRescue MCR = IMoonCatRescue(0x60cd862c9C687A9dE49aecdC3A99b74A4fc54aB6);\r\n    IMoonCatReference MoonCatReference;\r\n\r\n    /* Traits */\r\n\r\n    /**\r\n     * @dev For a given MoonCat rescue order, return the calendar year it was rescued in.\r\n     */\r\n    function rescueYearOf (uint256 rescueOrder) public pure returns (uint16) {\r\n        if (rescueOrder <= 3364) {\r\n            return 2017;\r\n        } else if (rescueOrder <= 5683) {\r\n            return 2018;\r\n        } else if (rescueOrder <= 5754) {\r\n            return 2019;\r\n        } else if (rescueOrder <= 5757) {\r\n            return 2020;\r\n        } else {\r\n            return 2021;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat hex ID, extract the trait data from the \"K\" byte.\r\n     */\r\n    function kTraitsOf (bytes5 catId) public pure returns\r\n        (bool genesis,\r\n         bool pale,\r\n         uint8 facing,\r\n         uint8 expression,\r\n         uint8 pattern,\r\n         uint8 pose)\r\n    {\r\n        uint40 c = uint40(catId);\r\n        uint8 classification = uint8(c >> 32);\r\n        require(classification == 0 || classification == 255, \"Invalid Classification\");\r\n\r\n        genesis = (classification == 255);\r\n\r\n        uint8 r = uint8(c >> 16);\r\n        uint8 g = uint8(c >> 8);\r\n        uint8 b = uint8(c);\r\n\r\n        require(!genesis || (r == 0 && g == 12 && b == 167), \"Invalid Genesis Id\");\r\n\r\n        pale = ((c >> 31) & 1) == 1;\r\n        if (genesis) {\r\n            uint8 k = uint8(c >> 24);\r\n            bool even_k = k % 2 == 0;\r\n            pale = (even_k && pale) || (!even_k && !pale);\r\n        }\r\n\r\n        facing = uint8((c >> 30) & 1);\r\n        expression = uint8((c >> 28) & 3);\r\n        pattern = uint8((c >> 26) & 3);\r\n        pose = uint8((c >> 24) & 3);\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat rescue order, extract the trait data from the \"K\" byte.\r\n     */\r\n    function kTraitsOf (uint256 rescueOrder) public view returns\r\n        (bool genesis,\r\n         bool pale,\r\n         uint8 facing,\r\n         uint8 expression,\r\n         uint8 pattern,\r\n         uint8 pose)\r\n    {\r\n        require(rescueOrder < 25440, \"Invalid Rescue Order\");\r\n        return kTraitsOf(MCR.rescueOrder(rescueOrder));\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat hex ID, extract the trait data in a human-friendly format.\r\n     */\r\n    function traitsOf (bytes5 catId) public view returns\r\n        (bool genesis,\r\n         bool pale,\r\n         string memory facing,\r\n         string memory expression,\r\n         string memory pattern,\r\n         string memory pose)\r\n    {\r\n        (bool genesisBool, bool paleBool, uint8 facingInt, uint8 expressionInt, uint8 patternInt, uint8 poseInt) = kTraitsOf(catId);\r\n        return (\r\n            genesisBool,\r\n            paleBool,\r\n            facingNames[facingInt],\r\n            expressionNames[expressionInt],\r\n            patternNames[patternInt],\r\n            poseNames[poseInt]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat rescue order, extract the trait data in a human-friendly format.\r\n     */\r\n    function traitsOf (uint256 rescueOrder) public view returns\r\n        (bool genesis,\r\n         bool pale,\r\n         string memory facing,\r\n         string memory expression,\r\n         string memory pattern,\r\n         string memory pose,\r\n         bytes5 catId,\r\n         uint16 rescueYear,\r\n         bool isNamed\r\n         )\r\n    {\r\n        require(rescueOrder < 25440, \"Invalid Rescue Order\");\r\n        catId = MCR.rescueOrder(rescueOrder);\r\n        (genesis, pale, facing, expression, pattern, pose) = traitsOf(catId);\r\n        rescueYear = rescueYearOf(rescueOrder);\r\n        isNamed = (uint256(MCR.catNames(catId)) > 0);\r\n    }\r\n\r\n\r\n    mapping (address => bool) ERC721ProxyOwnership;\r\n\r\n    /**\r\n     * @dev Iterating function to find the final owner of a MoonCat (looping through any ERC721 wrappers).\r\n     */\r\n    function proxyOwner (uint256 rescueOrder, address ownerAddress) internal view returns (address) {\r\n        if (ERC721ProxyOwnership[ownerAddress]) {\r\n            return proxyOwner(rescueOrder, IERC721(ownerAddress).ownerOf(rescueOrder));\r\n        } else {\r\n            return ownerAddress;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat rescue order, return who owns that MoonCat.\r\n     */\r\n    function ownerOf (uint256 rescueOrder) public view returns (address) {\r\n        require(rescueOrder < 25440, \"Invalid Rescue Order\");\r\n        bytes5 catId = MCR.rescueOrder(rescueOrder);\r\n        return proxyOwner(rescueOrder, MCR.catOwners(catId));\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat rescue order, return the hex ID of that MoonCat.\r\n     */\r\n    function catIdOf (uint256 rescueOrder) public view returns (bytes5) {\r\n        require(rescueOrder < 25440, \"Invalid Rescue Order\");\r\n        return MCR.rescueOrder(rescueOrder);\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat hex ID, return the recorded name of that MoonCat.\r\n     */\r\n    function nameOf (bytes5 catId) public view returns (string memory) {\r\n        bytes32 nameRaw = MCR.catNames(catId);\r\n        uint8 i = 0;\r\n        while(i < 32 && nameRaw[i] != 0) {\r\n            i++;\r\n        }\r\n        bytes memory nameBytes = new bytes(i);\r\n        for (i = 0; i < 32 && nameRaw[i] != 0; i++) {\r\n            nameBytes[i] = nameRaw[i];\r\n        }\r\n        return string(nameBytes);\r\n    }\r\n\r\n    /**\r\n     * @dev For a given MoonCat rescue order, return the recorded name of that MoonCat.\r\n     */\r\n    function nameOf (uint256 rescueOrder) public view returns (string memory) {\r\n        require(rescueOrder < 25440, \"Invalid Rescue Order\");\r\n        return nameOf(MCR.rescueOrder(rescueOrder));\r\n    }\r\n\r\n    /* General */\r\n\r\n    /**\r\n     * @dev Get documentation about this contract.\r\n     */\r\n    function doc() public view returns (string memory name, string memory description, string memory details) {\r\n        return MoonCatReference.doc(address(this));\r\n    }\r\n\r\n    constructor (address MoonCatReferenceAddress) {\r\n        owner = payable(msg.sender);\r\n        // https://docs.ens.domains/contract-api-reference/reverseregistrar#claim-address\r\n        IReverseResolver(0x084b1c3C81545d370f3634392De611CaaBFf8148).claim(msg.sender);\r\n        ERC721ProxyOwnership[0xc3f733ca98E0daD0386979Eb96fb1722A1A05E69] = true;\r\n        MoonCatReference = IMoonCatReference(MoonCatReferenceAddress);\r\n    }\r\n\r\n    address payable public owner;\r\n\r\n    modifier onlyOwner () {\r\n        require(msg.sender == owner, \"Only Owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allow current `owner` to transfer ownership to another address.\r\n     */\r\n    function transferOwnership (address payable newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Update the ERC721 registry for a given address.\r\n     */\r\n    function setERC721Proxy (address proxyAddress, bool isProxy) public onlyOwner {\r\n        ERC721ProxyOwnership[proxyAddress] = isProxy;\r\n    }\r\n\r\n    /**\r\n     * @dev Update the location of the Reference Contract.\r\n     */\r\n    function setReferenceContract (address referenceContract) public onlyOwner {\r\n        MoonCatReference = IMoonCatReference(referenceContract);\r\n    }\r\n\r\n    /**\r\n     * @dev Rescue ERC20 assets sent directly to this contract.\r\n     */\r\n    function withdrawForeignERC20(address tokenContract) public onlyOwner {\r\n        IERC20 token = IERC20(tokenContract);\r\n        token.transfer(owner, token.balanceOf(address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Rescue ERC721 assets sent directly to this contract.\r\n     */\r\n    function withdrawForeignERC721(address tokenContract, uint256 tokenId) public onlyOwner {\r\n        IERC721(tokenContract).safeTransferFrom(address(this), owner, tokenId);\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"MoonCatReferenceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rescueOrder\",\"type\":\"uint256\"}],\"name\":\"catIdOf\",\"outputs\":[{\"internalType\":\"bytes5\",\"name\":\"\",\"type\":\"bytes5\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doc\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"expressionNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"facingNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rescueOrder\",\"type\":\"uint256\"}],\"name\":\"kTraitsOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"genesis\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pale\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"facing\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"expression\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pattern\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pose\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes5\",\"name\":\"catId\",\"type\":\"bytes5\"}],\"name\":\"kTraitsOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"genesis\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pale\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"facing\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"expression\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pattern\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pose\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rescueOrder\",\"type\":\"uint256\"}],\"name\":\"nameOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes5\",\"name\":\"catId\",\"type\":\"bytes5\"}],\"name\":\"nameOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rescueOrder\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patternNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poseNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rescueOrder\",\"type\":\"uint256\"}],\"name\":\"rescueYearOf\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isProxy\",\"type\":\"bool\"}],\"name\":\"setERC721Proxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referenceContract\",\"type\":\"address\"}],\"name\":\"setReferenceContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rescueOrder\",\"type\":\"uint256\"}],\"name\":\"traitsOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"genesis\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pale\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"facing\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expression\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pattern\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pose\",\"type\":\"string\"},{\"internalType\":\"bytes5\",\"name\":\"catId\",\"type\":\"bytes5\"},{\"internalType\":\"uint16\",\"name\":\"rescueYear\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isNamed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes5\",\"name\":\"catId\",\"type\":\"bytes5\"}],\"name\":\"traitsOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"genesis\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"pale\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"facing\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"expression\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pattern\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pose\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawForeignERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MoonCatTraits", "CompilerVersion": "v0.8.1+commit.df193b15", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000b78c64bce6d6d4447e58b09e53f3621f44a2a48", "EVMVersion": "Default", "Library": "", "LicenseType": "Unknown", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ca5247996b5c3eb3cbf502ae39079b7550a8d37d84fd7ef2887052c433fea028"}]}