{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.4.24;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @notice Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @notice Multiplies two numbers, throws on overflow.\r\n  * @param a Multiplier\r\n  * @param b Multiplicand\r\n  * @return {\"result\" : \"Returns product\"}\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"Error: Unsafe multiplication operation!\");\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @notice Integer division of two numbers, truncating the quotient.\r\n  * @param a Dividend\r\n  * @param b Divisor\r\n  * @return {\"result\" : \"Returns quotient\"}\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\r\n    // @dev require(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // @dev require(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @notice Subtracts two numbers, throws on underflow.\r\n  * @param a Subtrahend\r\n  * @param b Minuend\r\n  * @return {\"result\" : \"Returns difference\"}\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 result) {\r\n    // @dev throws on overflow (i.e. if subtrahend is greater than minuend)\r\n    require(b <= a, \"Error: Unsafe subtraction operation!\");\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @notice Adds two numbers, throws on overflow.\r\n  * @param a First addend\r\n  * @param b Second addend\r\n  * @return {\"result\" : \"Returns summation\"}\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 result) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"Error: Unsafe addition operation!\");\r\n    return c;\r\n  }\r\n}", "ABI": "[]", "ContractName": "SafeMath", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://50f4e221bb4114d8270b88c8af6307ea6c60ecc6f0aaf838d598316e5204a393"}]}