{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n// File: development/CloudyStake.sol\r\n\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface IERC721A {\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n}\r\n\r\ncontract CloudyStake {\r\n    address public cloudyAddress;\r\n    address public owner;\r\n    mapping(uint256 => address) public stakeOwnerOf;\r\n    mapping(address => uint256[]) internal depositories;\r\n    mapping(uint256 => uint256) internal tokenIdByIndex;\r\n\r\n    constructor(address _cloudyAddress) {\r\n        cloudyAddress = _cloudyAddress;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function stake(uint256 _tokenId) public {\r\n        require(\r\n            IERC721A(cloudyAddress).ownerOf(_tokenId) == msg.sender && stakeOwnerOf[_tokenId] == address(0),\r\n            \"You must own the NFT.\"\r\n        );\r\n        IERC721A(cloudyAddress).transferFrom(msg.sender,address(this),_tokenId);\r\n        depositories[msg.sender].push(_tokenId);\r\n        tokenIdByIndex[_tokenId] = depositories[msg.sender].length - 1;\r\n        stakeOwnerOf[_tokenId]=msg.sender;\r\n    }\r\n\r\n    function unStake(uint256 _tokenId) public {\r\n        require(stakeOwnerOf[_tokenId] == msg.sender, \"Not original owner\");\r\n        uint256 tokenIndex = tokenIdByIndex[_tokenId];\r\n        uint256 len = depositories[msg.sender].length;\r\n        uint256 lastTokenId = depositories[msg.sender][len - 1];\r\n        depositories[msg.sender][tokenIndex] = lastTokenId;\r\n        tokenIdByIndex[lastTokenId]=tokenIndex;\r\n        depositories[msg.sender].pop();\r\n        stakeOwnerOf[_tokenId] = address(0);\r\n        IERC721A(cloudyAddress).transferFrom(\r\n            address(this),\r\n            msg.sender,\r\n            _tokenId\r\n        );\r\n    }\r\n    \r\n    function batchStake(uint256[] memory _tokenIds) external {\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            stake(_tokenIds[i]);\r\n        }\r\n    }\r\n\r\n    function batchUnStake(uint256[] memory _tokenIds)external{\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            unStake(_tokenIds[i]);\r\n        }\r\n    }\r\n\r\n    function getDopositor(address _owner) external view returns (uint256[] memory) {\r\n        return depositories[_owner];\r\n    }\r\n\r\n    function setCloudyAddress(address _cloudyAddress)external onlyOwner{\r\n        cloudyAddress=_cloudyAddress;\r\n    }\r\n\r\n    function saveToken(uint256[] memory _tokenIds) external onlyOwner{\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            IERC721A(cloudyAddress).transferFrom(address(this),msg.sender,_tokenIds[i]);\r\n        }\r\n    }\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cloudyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchUnStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cloudyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getDopositor\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"saveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cloudyAddress\",\"type\":\"address\"}],\"name\":\"setCloudyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakeOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CloudyStake", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000003738f608b685320ea3f41254a5e0ca0dc4624617", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://bbef36ff294dd440af8a3c66982820c7c4f82cd273dbfb02b8960c1ee15641b1"}]}