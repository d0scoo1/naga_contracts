{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n/**\r\n*                                        ,   ,\r\n*                                        $,  $,     ,\r\n*                                        \"ss.$ss. .s'\r\n*                                ,     .ss$$$$$$$$$$s,\r\n*                                $. s$$$$$$$$$$$$$$`$$Ss\r\n*                                \"$$$$$$$$$$$$$$$$$$o$$$       ,\r\n*                               s$$$$$$$$$$$$$$$$$$$$$$$$s,  ,s\r\n*                              s$$$$$$$$$\"$$$$$$\"\"\"\"$$$$$$\"$$$$$,\r\n*                              s$$$$$$$$$$s\"\"$$$$ssssss\"$$$$$$$$\"\r\n*                             s$$$$$$$$$$'         `\"\"\"ss\"$\"$s\"\"\r\n*                             s$$$$$$$$$$,              `\"\"\"\"\"$  .s$$s\r\n*                             s$$$$$$$$$$$$s,...               `s$$'  `\r\n*                         `ssss$$$$$$$$$$$$$$$$$$$$####s.     .$$\"$.   , s-\r\n*                           `\"\"\"\"$$$$$$$$$$$$$$$$$$$$#####$$$$$$\"     $.$'\r\n* \u795d\u4f60\u6210\u529f                        \"$$$$$$$$$$$$$$$$$$$$$####s\"\"     .$$$|\r\n*   \u798f    \u559c\u559c                        \"$$$$$$$$$$$$$$$$$$$$$$$$##s    .$$\" $\r\n*                                   $$\"\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"   `\r\n*                                  $$\"  \"$\"$$$$$$$$$$$$$$$$$$$$S\"\"\"\"'\r\n*                             ,   ,\"     '  $$$$$$$$$$$$$$$$####s\r\n*                             $.          .s$$$$$$$$$$$$$$$$$####\"\r\n*                 ,           \"$s.   ..ssS$$$$$$$$$$$$$$$$$$$####\"\r\n*                 $           .$$$S$$$$$$$$$$$$$$$$$$$$$$$$#####\"\r\n*                 Ss     ..sS$$$$$$$$$$$$$$$$$$$$$$$$$$$######\"\"\r\n*                  \"$$sS$$$$$$$$$$$$$$$$$$$$$$$$$$$########\"\r\n*           ,      s$$$$$$$$$$$$$$$$$$$$$$$$#########\"\"'\r\n*           $    s$$$$$$$$$$$$$$$$$$$$$#######\"\"'      s'         ,\r\n*           $$..$$$$$$$$$$$$$$$$$$######\"'       ....,$$....    ,$\r\n*            \"$$$$$$$$$$$$$$$######\"' ,     .sS$$$$$$$$$$$$$$$$s$$\r\n*              $$$$$$$$$$$$#####\"     $, .s$$$$$$$$$$$$$$$$$$$$$$$$s.\r\n*   )          $$$$$$$$$$$#####'      `$$$$$$$$$###########$$$$$$$$$$$.\r\n*  ((          $$$$$$$$$$$#####       $$$$$$$$###\"       \"####$$$$$$$$$$\r\n*  ) \\         $$$$$$$$$$$$####.     $$$$$$###\"             \"###$$$$$$$$$   s'\r\n* (   )        $$$$$$$$$$$$$####.   $$$$$###\"                ####$$$$$$$$s$$'\r\n* )  ( (       $$\"$$$$$$$$$$$#####.$$$$$###'                .###$$$$$$$$$$\"\r\n* (  )  )   _,$\"   $$$$$$$$$$$$######.$$##'                .###$$$$$$$$$$\r\n* ) (  ( \\.         \"$$$$$$$$$$$$$#######,,,.          ..####$$$$$$$$$$$\"\r\n*(   )$ )  )        ,$$$$$$$$$$$$$$$$$$####################$$$$$$$$$$$\"\r\n*(   ($$  ( \\     _sS\"  `\"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$S$$,\r\n* )  )$$$s ) )  .      .   `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\"'  `$$\r\n*  (   $$$Ss/  .$,    .$,,s$$$$$$##S$$$$$$$$$$$$$$$$$$$$$$$$S\"\"        '\r\n*    \\)_$$$$$$$$$$$$$$$$$$$$$$$##\"  $$        `$$.        `$$.\r\n*        `\"S$$$$$$$$$$$$$$$$$#\"      $          `$          `$\r\n*            `\"\"\"\"\"\"\"\"\"\"\"\"\"'         '           '           '\r\n*/\r\n\r\ninterface PlayerBookReceiverInterface {\r\n    function receivePlayerInfo(uint256 _pID, address _addr, bytes32 _name, uint256 _laff) external;\r\n    function receivePlayerNameList(uint256 _pID, bytes32 _name) external;\r\n}\r\n\r\n\r\ncontract PlayerBook {\r\n    using NameFilter for string;\r\n    using SafeMath for uint256;\r\n\r\n    address private admin = msg.sender;\r\n//==============================================================================\r\n//     _| _ _|_ _    _ _ _|_    _   .\r\n//    (_|(_| | (_|  _\\(/_ | |_||_)  .\r\n//=============================|================================================\r\n    uint256 public registrationFee_ = 10 finney;            // \u6ce8\u518c\u540d\u79f0\u7684\u4ef7\u683c\r\n    mapping(uint256 => PlayerBookReceiverInterface) public games_;  // \u6620\u5c04\u6211\u4eec\u7684\u6e38\u620f\u754c\u9762\uff0c\u5c06\u60a8\u7684\u5e10\u6237\u4fe1\u606f\u53d1\u9001\u5230\u6e38\u620f\r\n    mapping(address => bytes32) public gameNames_;          // \u67e5\u627e\u6e38\u620f\u540d\u79f0\r\n    mapping(address => uint256) public gameIDs_;            // \u67e5\u627e\u6e38\u620fID\r\n    uint256 public gID_;        // \u6e38\u620f\u603b\u6570\r\n    uint256 public pID_;        // \u7403\u5458\u603b\u6570\r\n    mapping (address => uint256) public pIDxAddr_;          // (addr => pID) \u6309\u5730\u5740\u8fd4\u56de\u73a9\u5bb6ID\r\n    mapping (bytes32 => uint256) public pIDxName_;          // (name => pID) \u6309\u540d\u79f0\u8fd4\u56de\u73a9\u5bb6ID\r\n    mapping (uint256 => Player) public plyr_;               // (pID => data) \u7403\u5458\u6570\u636e\r\n    mapping (uint256 => mapping (bytes32 => bool)) public plyrNames_; // (pID => name => bool) \u73a9\u5bb6\u62e5\u6709\u7684\u540d\u5b57\u5217\u8868\u3002 \uff08\u7528\u4e8e\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u6539\u53d8\u4f60\u7684\u663e\u793a\u540d\u79f0\uff0c\u800c\u4e0d\u7ba1\u4f60\u62e5\u6709\u7684\u4efb\u4f55\u540d\u5b57\uff09\r\n    mapping (uint256 => mapping (uint256 => bytes32)) public plyrNameList_; // (pID => nameNum => name) \u73a9\u5bb6\u62e5\u6709\u7684\u540d\u5b57\u5217\u8868\r\n    struct Player {\r\n        address addr;\r\n        bytes32 name;\r\n        uint256 laff;\r\n        uint256 names;\r\n    }\r\n//==============================================================================\r\n//     _ _  _  __|_ _    __|_ _  _  .\r\n//    (_(_)| |_\\ | | |_|(_ | (_)|   .  \uff08\u5408\u540c\u90e8\u7f72\u65f6\u7684\u521d\u59cb\u6570\u636e\u8bbe\u7f6e\uff09\r\n//==============================================================================\r\n    constructor()\r\n        public\r\n    {\r\n        // premine the dev names (sorry not sorry)\r\n            // No keys are purchased with this method, it's simply locking our addresses,\r\n            // PID's and names for referral codes.\r\n        plyr_[1].addr = 0x8e0d985f3Ec1857BEc39B76aAabDEa6B31B67d53;\r\n        plyr_[1].name = \"justo\";\r\n        plyr_[1].names = 1;\r\n        pIDxAddr_[0x8e0d985f3Ec1857BEc39B76aAabDEa6B31B67d53] = 1;\r\n        pIDxName_[\"justo\"] = 1;\r\n        plyrNames_[1][\"justo\"] = true;\r\n        plyrNameList_[1][1] = \"justo\";\r\n\r\n        plyr_[2].addr = 0x8b4DA1827932D71759687f925D17F81Fc94e3A9D;\r\n        plyr_[2].name = \"mantso\";\r\n        plyr_[2].names = 1;\r\n        pIDxAddr_[0x8b4DA1827932D71759687f925D17F81Fc94e3A9D] = 2;\r\n        pIDxName_[\"mantso\"] = 2;\r\n        plyrNames_[2][\"mantso\"] = true;\r\n        plyrNameList_[2][1] = \"mantso\";\r\n\r\n        plyr_[3].addr = 0x7ac74Fcc1a71b106F12c55ee8F802C9F672Ce40C;\r\n        plyr_[3].name = \"sumpunk\";\r\n        plyr_[3].names = 1;\r\n        pIDxAddr_[0x7ac74Fcc1a71b106F12c55ee8F802C9F672Ce40C] = 3;\r\n        pIDxName_[\"sumpunk\"] = 3;\r\n        plyrNames_[3][\"sumpunk\"] = true;\r\n        plyrNameList_[3][1] = \"sumpunk\";\r\n\r\n        plyr_[4].addr = 0x18E90Fc6F70344f53EBd4f6070bf6Aa23e2D748C;\r\n        plyr_[4].name = \"inventor\";\r\n        plyr_[4].names = 1;\r\n        pIDxAddr_[0x18E90Fc6F70344f53EBd4f6070bf6Aa23e2D748C] = 4;\r\n        pIDxName_[\"inventor\"] = 4;\r\n        plyrNames_[4][\"inventor\"] = true;\r\n        plyrNameList_[4][1] = \"inventor\";\r\n\r\n        pID_ = 4;\r\n    }\r\n//==============================================================================\r\n//     _ _  _  _|. |`. _  _ _  .\r\n//    | | |(_)(_||~|~|(/_| _\\  .  \uff08\u8fd9\u4e9b\u662f\u5b89\u5168\u68c0\u67e5\uff09\r\n//==============================================================================\r\n    /**\r\n     * @dev \u9632\u6b62\u5408\u540c\u4e0eworldfomo\u4ea4\u4e92\r\n     */\r\n    modifier isHuman() {\r\n        address _addr = msg.sender;\r\n        uint256 _codeLength;\r\n\r\n        assembly {_codeLength := extcodesize(_addr)}\r\n        require(_codeLength == 0, \"sorry humans only\");\r\n        _;\r\n    }\r\n\r\n\r\n    modifier isRegisteredGame()\r\n    {\r\n        require(gameIDs_[msg.sender] != 0);\r\n        _;\r\n    }\r\n//==============================================================================\r\n//     _    _  _ _|_ _  .\r\n//    (/_\\/(/_| | | _\\  .\r\n//==============================================================================\r\n    // \u53ea\u8981\u73a9\u5bb6\u6ce8\u518c\u4e86\u540d\u5b57\u5c31\u4f1a\u88ab\u89e3\u96c7\r\n    event onNewName\r\n    (\r\n        uint256 indexed playerID,\r\n        address indexed playerAddress,\r\n        bytes32 indexed playerName,\r\n        bool isNewPlayer,\r\n        uint256 affiliateID,\r\n        address affiliateAddress,\r\n        bytes32 affiliateName,\r\n        uint256 amountPaid,\r\n        uint256 timeStamp\r\n    );\r\n//==============================================================================\r\n//     _  _ _|__|_ _  _ _  .\r\n//    (_|(/_ |  | (/_| _\\  . \uff08\u7528\u4e8eUI\u548c\u67e5\u770betherscan\u4e0a\u7684\u5185\u5bb9\uff09\r\n//=====_|=======================================================================\r\n    function checkIfNameValid(string _nameStr)\r\n        public\r\n        view\r\n        returns(bool)\r\n    {\r\n        bytes32 _name = _nameStr.nameFilter();\r\n        if (pIDxName_[_name] == 0)\r\n            return (true);\r\n        else\r\n            return (false);\r\n    }\r\n//==============================================================================\r\n//     _    |_ |. _   |`    _  __|_. _  _  _  .\r\n//    |_)|_||_)||(_  ~|~|_|| |(_ | |(_)| |_\\  .  \uff08\u4f7f\u7528\u8fd9\u4e9b\u4e0e\u5408\u540c\u4e92\u52a8\uff09\r\n//====|=========================================================================\r\n    /**\r\n     * @dev \u6ce8\u518c\u4e00\u4e2a\u540d\u5b57\u3002 UI\u5c06\u59cb\u7ec8\u663e\u793a\u60a8\u6ce8\u518c\u7684\u59d3\u6c0f\u3002\r\n     * \u4f46\u60a8\u4ecd\u5c06\u62e5\u6709\u6240\u6709\u4ee5\u524d\u6ce8\u518c\u7684\u540d\u79f0\u4ee5\u7528\u4f5c\u8054\u5c5e\u4f1a\u5458\r\n     * - \u5fc5\u987b\u652f\u4ed8\u6ce8\u518c\u8d39\u3002\r\n     * - \u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684\r\n     * - \u540d\u79f0\u5c06\u8f6c\u6362\u4e3a\u5c0f\u5199\r\n     * - \u540d\u79f0\u4e0d\u80fd\u4ee5\u7a7a\u683c\u5f00\u5934\u6216\u7ed3\u5c3e\r\n     * - \u8fde\u7eed\u4e0d\u80fd\u8d85\u8fc71\u4e2a\u7a7a\u683c\r\n     * - \u4e0d\u80fd\u53ea\u662f\u6570\u5b57\r\n     * - \u4e0d\u80fd\u4ee50x\u5f00\u5934\r\n     * - name\u5fc5\u987b\u81f3\u5c11\u4e3a1\u4e2a\u5b57\u7b26\r\n     * - \u6700\u5927\u957f\u5ea6\u4e3a32\u4e2a\u5b57\u7b26\r\n     * - \u5141\u8bb8\u7684\u5b57\u7b26\uff1aa-z\uff0c0-9\u548c\u7a7a\u683c\r\n     * -functionhash- 0x921dec21 (\u4f7f\u7528ID\u4f5c\u4e3a\u4f1a\u5458)\r\n     * -functionhash- 0x3ddd4698 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u5730\u5740)\r\n     * -functionhash- 0x685ffd83 (\u4f7f\u7528\u8054\u76df\u4f1a\u5458\u7684\u540d\u79f0)\r\n     * @param _nameString \u7403\u5458\u60f3\u8981\u7684\u540d\u5b57\r\n     * @param _affCode \u4f1a\u5458ID\uff0c\u5730\u5740\u6216\u8c01\u63d0\u5230\u4f60\u7684\u540d\u5b57\r\n     * @param _all \u5982\u679c\u60a8\u5e0c\u671b\u5c06\u4fe1\u606f\u63a8\u9001\u5230\u6240\u6709\u6e38\u620f\uff0c\u5219\u8bbe\u7f6e\u4e3atrue\r\n     * (\u8fd9\u53ef\u80fd\u4f1a\u8017\u8d39\u5927\u91cf\u6c14\u4f53)\r\n     */\r\n    function registerNameXID(string _nameString, uint256 _affCode, bool _all)\r\n        isHuman()\r\n        public\r\n        payable\r\n    {\r\n        // \u786e\u4fdd\u652f\u4ed8\u540d\u79f0\u8d39\u7528\r\n        require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\r\n\r\n        // \u8fc7\u6ee4\u5668\u540d\u79f0+\u6761\u4ef6\u68c0\u67e5\r\n        bytes32 _name = NameFilter.nameFilter(_nameString);\r\n\r\n        // \u8bbe\u7f6e\u5730\u5740\r\n        address _addr = msg.sender;\r\n\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        bool _isNewPlayer = determinePID(_addr);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\uff0c\u5219\u6ca1\u6709\u7ed9\u51fa\u65b0\u7684\u8054\u76df\u4ee3\u7801\uff0c\u6216\u8005\r\n        // \u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u81ea\u5df1\u7684pID\u4f5c\u4e3a\u8054\u76df\u4ee3\u7801\r\n        if (_affCode != 0 && _affCode != plyr_[_pID].laff && _affCode != _pID)\r\n        {\r\n            // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n            plyr_[_pID].laff = _affCode;\r\n        } else if (_affCode == _pID) {\r\n            _affCode = 0;\r\n        }\r\n\r\n        // \u6ce8\u518c\u540d\u79f0\r\n        registerNameCore(_pID, _addr, _affCode, _name, _isNewPlayer, _all);\r\n    }\r\n\r\n    function registerNameXaddr(string _nameString, address _affCode, bool _all)\r\n        isHuman()\r\n        public\r\n        payable\r\n    {\r\n        // \u786e\u4fdd\u652f\u4ed8\u540d\u79f0\u8d39\u7528\r\n        require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\r\n\r\n        // \u8fc7\u6ee4\u5668\u540d\u79f0+\u6761\u4ef6\u68c0\u67e5\r\n        bytes32 _name = NameFilter.nameFilter(_nameString);\r\n\r\n        // \u8bbe\u7f6e\u5730\u5740\r\n        address _addr = msg.sender;\r\n\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        bool _isNewPlayer = determinePID(_addr);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        uint256 _affID;\r\n        if (_affCode != address(0) && _affCode != _addr)\r\n        {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxAddr_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u6ce8\u518c\u540d\u79f0\r\n        registerNameCore(_pID, _addr, _affID, _name, _isNewPlayer, _all);\r\n    }\r\n\r\n    function registerNameXname(string _nameString, bytes32 _affCode, bool _all)\r\n        isHuman()\r\n        public\r\n        payable\r\n    {\r\n        // \u786e\u4fdd\u652f\u4ed8\u540d\u79f0\u8d39\u7528\r\n        require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\r\n\r\n        // \u8fc7\u6ee4\u5668\u540d\u79f0+\u6761\u4ef6\u68c0\u67e5\r\n        bytes32 _name = NameFilter.nameFilter(_nameString);\r\n\r\n        // \u8bbe\u7f6e\u5730\u5740\r\n        address _addr = msg.sender;\r\n\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        bool _isNewPlayer = determinePID(_addr);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        uint256 _affID;\r\n        if (_affCode != \"\" && _affCode != _name)\r\n        {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxName_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u6ce8\u518c\u540d\u79f0\r\n        registerNameCore(_pID, _addr, _affID, _name, _isNewPlayer, _all);\r\n    }\r\n\r\n    /**\r\n     * @dev \u73a9\u5bb6\uff0c\u5982\u679c\u60a8\u5728\u6e38\u620f\u53d1\u5e03\u4e4b\u524d\u6ce8\u518c\u4e86\u4e2a\u4eba\u8d44\u6599\uff0c\u6216\u8005\r\n     * \u6ce8\u518c\u65f6\u5c06all bool\u8bbe\u7f6e\u4e3afalse\uff0c\u4f7f\u7528\u6b64\u529f\u80fd\u8fdb\u884c\u63a8\u9001\r\n     * \u4f60\u5bf9\u4e00\u573a\u6bd4\u8d5b\u7684\u4e2a\u4eba\u8d44\u6599\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u66f4\u65b0\u4e86\u4f60\u7684\u540d\u5b57\uff0c\u90a3\u4e48\u4f60\r\n     * \u53ef\u4ee5\u4f7f\u7528\u6b64\u529f\u80fd\u5c06\u60a8\u7684\u540d\u5b57\u63a8\u9001\u5230\u60a8\u9009\u62e9\u7684\u6e38\u620f\u4e2d\u3002\r\n     * -functionhash- 0x81c5b206\r\n     * @param _gameID \u6e38\u620fID\r\n     */\r\n    function addMeToGame(uint256 _gameID)\r\n        isHuman()\r\n        public\r\n    {\r\n        require(_gameID <= gID_, \"silly player, that game doesn't exist yet\");\r\n        address _addr = msg.sender;\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n        require(_pID != 0, \"hey there buddy, you dont even have an account\");\r\n        uint256 _totalNames = plyr_[_pID].names;\r\n\r\n        // \u6dfb\u52a0\u73a9\u5bb6\u4e2a\u4eba\u8d44\u6599\u548c\u6700\u65b0\u540d\u79f0\r\n        games_[_gameID].receivePlayerInfo(_pID, _addr, plyr_[_pID].name, plyr_[_pID].laff);\r\n\r\n        // \u6dfb\u52a0\u6240\u6709\u540d\u79f0\u7684\u5217\u8868\r\n        if (_totalNames > 1)\r\n            for (uint256 ii = 1; ii <= _totalNames; ii++)\r\n                games_[_gameID].receivePlayerNameList(_pID, plyrNameList_[_pID][ii]);\r\n    }\r\n\r\n    /**\r\n     * @dev \u73a9\u5bb6\uff0c\u4f7f\u7528\u6b64\u529f\u80fd\u5c06\u60a8\u7684\u73a9\u5bb6\u8d44\u6599\u63a8\u9001\u5230\u6240\u6709\u5df2\u6ce8\u518c\u7684\u6e38\u620f\u3002\r\n     * -functionhash- 0x0c6940ea\r\n     */\r\n    function addMeToAllGames()\r\n        isHuman()\r\n        public\r\n    {\r\n        address _addr = msg.sender;\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n        require(_pID != 0, \"hey there buddy, you dont even have an account\");\r\n        uint256 _laff = plyr_[_pID].laff;\r\n        uint256 _totalNames = plyr_[_pID].names;\r\n        bytes32 _name = plyr_[_pID].name;\r\n\r\n        for (uint256 i = 1; i <= gID_; i++)\r\n        {\r\n            games_[i].receivePlayerInfo(_pID, _addr, _name, _laff);\r\n            if (_totalNames > 1)\r\n                for (uint256 ii = 1; ii <= _totalNames; ii++)\r\n                    games_[i].receivePlayerNameList(_pID, plyrNameList_[_pID][ii]);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @dev \u73a9\u5bb6\u4f7f\u7528\u5b83\u6765\u6539\u56de\u4f60\u7684\u4e00\u4e2a\u65e7\u540d\u5b57\u3002\u5c0f\u8d39\uff0c\u4f60\u4f1a\u7684\r\n     * \u4ecd\u7136\u9700\u8981\u5c06\u8be5\u4fe1\u606f\u63a8\u9001\u5230\u73b0\u6709\u6e38\u620f\u3002\r\n     * -functionhash- 0xb9291296\r\n     * @param _nameString \u60a8\u8981\u4f7f\u7528\u7684\u540d\u79f0\r\n     */\r\n    function useMyOldName(string _nameString)\r\n        isHuman()\r\n        public\r\n    {\r\n        // \u8fc7\u6ee4\u5668\u540d\u79f0\uff0c\u5e76\u83b7\u53d6pID\r\n        bytes32 _name = _nameString.nameFilter();\r\n        uint256 _pID = pIDxAddr_[msg.sender];\r\n\r\n        // \u786e\u4fdd\u4ed6\u4eec\u62e5\u6709\u8fd9\u4e2a\u540d\u5b57\r\n        require(plyrNames_[_pID][_name] == true, \"umm... thats not a name you own\");\r\n\r\n        // \u66f4\u65b0\u4ed6\u4eec\u5f53\u524d\u7684\u540d\u5b57\r\n        plyr_[_pID].name = _name;\r\n    }\r\n\r\n//==============================================================================\r\n//     _ _  _ _   | _  _ . _  .\r\n//    (_(_)| (/_  |(_)(_||(_  .\r\n//=====================_|=======================================================\r\n    function registerNameCore(uint256 _pID, address _addr, uint256 _affID, bytes32 _name, bool _isNewPlayer, bool _all)\r\n        private\r\n    {\r\n        // \u5982\u679c\u5df2\u4f7f\u7528\u540d\u79f0\uff0c\u5219\u8981\u6c42\u5f53\u524d\u7684msg\u53d1\u4ef6\u4eba\u62e5\u6709\u8be5\u540d\u79f0\r\n        if (pIDxName_[_name] != 0)\r\n            require(plyrNames_[_pID][_name] == true, \"sorry that names already taken\");\r\n\r\n        // \u4e3a\u64ad\u653e\u5668\u914d\u7f6e\u6587\u4ef6\uff0c\u6ce8\u518c\u8868\u548c\u540d\u79f0\u7c3f\u6dfb\u52a0\u540d\u79f0\r\n        plyr_[_pID].name = _name;\r\n        pIDxName_[_name] = _pID;\r\n        if (plyrNames_[_pID][_name] == false)\r\n        {\r\n            plyrNames_[_pID][_name] = true;\r\n            plyr_[_pID].names++;\r\n            plyrNameList_[_pID][plyr_[_pID].names] = _name;\r\n        }\r\n\r\n        // \u6ce8\u518c\u8d39\u76f4\u63a5\u5f52\u4e8e\u793e\u533a\u5956\u52b1\r\n        admin.transfer(address(this).balance);\r\n\r\n        // \u5c06\u73a9\u5bb6\u4fe1\u606f\u63a8\u9001\u5230\u6e38\u620f\r\n        if (_all == true)\r\n            for (uint256 i = 1; i <= gID_; i++)\r\n                games_[i].receivePlayerInfo(_pID, _addr, _name, _affID);\r\n\r\n        // \u706b\u707e\u4e8b\u4ef6\r\n        emit onNewName(_pID, _addr, _name, _isNewPlayer, _affID, plyr_[_affID].addr, plyr_[_affID].name, msg.value, now);\r\n    }\r\n//==============================================================================\r\n//    _|_ _  _ | _  .\r\n//     | (_)(_)|_\\  .\r\n//==============================================================================\r\n    function determinePID(address _addr)\r\n        private\r\n        returns (bool)\r\n    {\r\n        if (pIDxAddr_[_addr] == 0)\r\n        {\r\n            pID_++;\r\n            pIDxAddr_[_addr] = pID_;\r\n            plyr_[pID_].addr = _addr;\r\n\r\n            // \u5c06\u65b0\u73a9\u5bb6bool\u8bbe\u7f6e\u4e3atrue\r\n            return (true);\r\n        } else {\r\n            return (false);\r\n        }\r\n    }\r\n//==============================================================================\r\n//   _   _|_ _  _ _  _ |   _ _ || _  .\r\n//  (/_>< | (/_| | |(_||  (_(_|||_\\  .\r\n//==============================================================================\r\n    function getPlayerID(address _addr)\r\n        isRegisteredGame()\r\n        external\r\n        returns (uint256)\r\n    {\r\n        determinePID(_addr);\r\n        return (pIDxAddr_[_addr]);\r\n    }\r\n    function getPlayerName(uint256 _pID)\r\n        external\r\n        view\r\n        returns (bytes32)\r\n    {\r\n        return (plyr_[_pID].name);\r\n    }\r\n    function getPlayerLAff(uint256 _pID)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return (plyr_[_pID].laff);\r\n    }\r\n    function getPlayerAddr(uint256 _pID)\r\n        external\r\n        view\r\n        returns (address)\r\n    {\r\n        return (plyr_[_pID].addr);\r\n    }\r\n    function getNameFee()\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return(registrationFee_);\r\n    }\r\n    function registerNameXIDFromDapp(address _addr, bytes32 _name, uint256 _affCode, bool _all)\r\n        isRegisteredGame()\r\n        external\r\n        payable\r\n        returns(bool, uint256)\r\n    {\r\n        // \u786e\u4fdd\u652f\u4ed8\u540d\u79f0\u8d39\u7528\r\n        require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\r\n\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        bool _isNewPlayer = determinePID(_addr);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\uff0c\u5219\u6ca1\u6709\u7ed9\u51fa\u65b0\u7684\u8054\u76df\u4ee3\u7801\uff0c\u6216\u8005\r\n        // \u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u81ea\u5df1\u7684pID\u4f5c\u4e3a\u8054\u76df\u4ee3\u7801\r\n        uint256 _affID = _affCode;\r\n        if (_affID != 0 && _affID != plyr_[_pID].laff && _affID != _pID)\r\n        {\r\n            // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n            plyr_[_pID].laff = _affID;\r\n        } else if (_affID == _pID) {\r\n            _affID = 0;\r\n        }\r\n\r\n        // \u6ce8\u518c\u540d\u79f0\r\n        registerNameCore(_pID, _addr, _affID, _name, _isNewPlayer, _all);\r\n\r\n        return(_isNewPlayer, _affID);\r\n    }\r\n    function registerNameXaddrFromDapp(address _addr, bytes32 _name, address _affCode, bool _all)\r\n        isRegisteredGame()\r\n        external\r\n        payable\r\n        returns(bool, uint256)\r\n    {\r\n        // \u786e\u4fdd\u652f\u4ed8\u540d\u79f0\u8d39\u7528\r\n        require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\r\n\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        bool _isNewPlayer = determinePID(_addr);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        uint256 _affID;\r\n        if (_affCode != address(0) && _affCode != _addr)\r\n        {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxAddr_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u6ce8\u518c\u540d\u79f0\r\n        registerNameCore(_pID, _addr, _affID, _name, _isNewPlayer, _all);\r\n\r\n        return(_isNewPlayer, _affID);\r\n    }\r\n    function registerNameXnameFromDapp(address _addr, bytes32 _name, bytes32 _affCode, bool _all)\r\n        isRegisteredGame()\r\n        external\r\n        payable\r\n        returns(bool, uint256)\r\n    {\r\n        // \u786e\u4fdd\u652f\u4ed8\u540d\u79f0\u8d39\u7528\r\n        require (msg.value >= registrationFee_, \"umm.....  you have to pay the name fee\");\r\n\r\n        // \u8bbe\u7f6e\u6211\u4eec\u7684tx\u4e8b\u4ef6\u6570\u636e\u5e76\u786e\u5b9a\u73a9\u5bb6\u662f\u5426\u662f\u65b0\u624b\r\n        bool _isNewPlayer = determinePID(_addr);\r\n\r\n        // \u83b7\u53d6\u73a9\u5bb6ID\r\n        uint256 _pID = pIDxAddr_[_addr];\r\n\r\n        // \u7ba1\u7406\u4f1a\u5458\u6b8b\u5dee\r\n        // \u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u8054\u76df\u4ee3\u7801\u6216\u8005\u73a9\u5bb6\u8bd5\u56fe\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\r\n        uint256 _affID;\r\n        if (_affCode != \"\" && _affCode != _name)\r\n        {\r\n            // \u4eceaff Code\u83b7\u53d6\u4f1a\u5458ID\r\n            _affID = pIDxName_[_affCode];\r\n\r\n            // \u5982\u679caffID\u4e0e\u5148\u524d\u5b58\u50a8\u7684\u4e0d\u540c\r\n            if (_affID != plyr_[_pID].laff)\r\n            {\r\n                // \u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u4f1a\u5458\r\n                plyr_[_pID].laff = _affID;\r\n            }\r\n        }\r\n\r\n        // \u6ce8\u518c\u540d\u79f0\r\n        registerNameCore(_pID, _addr, _affID, _name, _isNewPlayer, _all);\r\n\r\n        return(_isNewPlayer, _affID);\r\n    }\r\n\r\n//==============================================================================\r\n//   _ _ _|_    _   .\r\n//  _\\(/_ | |_||_)  .\r\n//=============|================================================================\r\n    function addGame(address _gameAddress, string _gameNameStr)\r\n        public\r\n    {\r\n        require(gameIDs_[_gameAddress] == 0, \"derp, that games already been registered\");\r\n            gID_++;\r\n            bytes32 _name = _gameNameStr.nameFilter();\r\n            gameIDs_[_gameAddress] = gID_;\r\n            gameNames_[_gameAddress] = _name;\r\n            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);\r\n\r\n            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);\r\n            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);\r\n            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);\r\n            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);\r\n    }\r\n\r\n    function setRegistrationFee(uint256 _fee)\r\n        public\r\n    {\r\n      registrationFee_ = _fee;\r\n    }\r\n\r\n}\r\n\r\n\r\nlibrary NameFilter {\r\n\r\n    /**\r\n     * @dev \u8fc7\u6ee4\u540d\u79f0\u5b57\u7b26\u4e32\r\n     * -\u5c06\u5927\u5199\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002\r\n     * -\u786e\u4fdd\u5b83\u4e0d\u4ee5\u7a7a\u683c\u5f00\u59cb/\u7ed3\u675f\r\n     * -\u786e\u4fdd\u5b83\u4e0d\u5305\u542b\u8fde\u7eed\u7684\u591a\u4e2a\u7a7a\u683c\r\n     * -\u4e0d\u80fd\u53ea\u662f\u6570\u5b57\r\n     * -\u4e0d\u80fd\u4ee50x\u5f00\u5934\r\n     * -\u5c06\u5b57\u7b26\u9650\u5236\u4e3aA-Z\uff0ca-z\uff0c0-9\u548c\u7a7a\u683c\u3002\r\n     * @return \u4ee5\u5b57\u828232\u683c\u5f0f\u91cd\u65b0\u5904\u7406\u7684\u5b57\u7b26\u4e32\r\n     */\r\n    function nameFilter(string _input)\r\n        internal\r\n        pure\r\n        returns(bytes32)\r\n    {\r\n        bytes memory _temp = bytes(_input);\r\n        uint256 _length = _temp.length;\r\n\r\n        //\u5bf9\u4e0d\u8d77\u9650\u4e8e32\u4e2a\u5b57\u7b26\r\n        require (_length <= 32 && _length > 0, \"string must be between 1 and 32 characters\");\r\n        //\u786e\u4fdd\u5b83\u4e0d\u4ee5\u7a7a\u683c\u5f00\u5934\u6216\u4ee5\u7a7a\u683c\u7ed3\u5c3e\r\n        require(_temp[0] != 0x20 && _temp[_length-1] != 0x20, \"string cannot start or end with space\");\r\n        // \u786e\u4fdd\u524d\u4e24\u4e2a\u5b57\u7b26\u4e0d\u662f0x\r\n        if (_temp[0] == 0x30)\r\n        {\r\n            require(_temp[1] != 0x78, \"string cannot start with 0x\");\r\n            require(_temp[1] != 0x58, \"string cannot start with 0X\");\r\n        }\r\n\r\n        // \u521b\u5efa\u4e00\u4e2abool\u6765\u8ddf\u8e2a\u6211\u4eec\u662f\u5426\u6709\u975e\u6570\u5b57\u5b57\u7b26\r\n        bool _hasNonNumber;\r\n\r\n        // \u8f6c\u6362\u548c\u68c0\u67e5\r\n        for (uint256 i = 0; i < _length; i++)\r\n        {\r\n            // \u5982\u679c\u5b83\u7684\u5927\u5199A-Z\r\n            if (_temp[i] > 0x40 && _temp[i] < 0x5b)\r\n            {\r\n                // \u8f6c\u6362\u4e3a\u5c0f\u5199a-z\r\n                _temp[i] = byte(uint(_temp[i]) + 32);\r\n\r\n                // \u6211\u4eec\u6709\u4e00\u4e2a\u975e\u6570\u5b57\r\n                if (_hasNonNumber == false)\r\n                    _hasNonNumber = true;\r\n            } else {\r\n                require\r\n                (\r\n                    // \u8981\u6c42\u89d2\u8272\u662f\u4e00\u4e2a\u7a7a\u95f4\r\n                    _temp[i] == 0x20 ||\r\n                    // \u6216\u5c0f\u5199a-z\r\n                    (_temp[i] > 0x60 && _temp[i] < 0x7b) ||\r\n                    // \u62160-9\r\n                    (_temp[i] > 0x2f && _temp[i] < 0x3a),\r\n                    \"string contains invalid characters\"\r\n                );\r\n                // \u786e\u4fdd\u8fde\u7eed\u4e24\u884c\u4e0d\u662f\u7a7a\u683c\r\n                if (_temp[i] == 0x20)\r\n                    require( _temp[i+1] != 0x20, \"string cannot contain consecutive spaces\");\r\n\r\n                // \u770b\u770b\u6211\u4eec\u662f\u5426\u6709\u4e00\u4e2a\u6570\u5b57\u4ee5\u5916\u7684\u5b57\u7b26\r\n                if (_hasNonNumber == false && (_temp[i] < 0x30 || _temp[i] > 0x39))\r\n                    _hasNonNumber = true;\r\n            }\r\n        }\r\n\r\n        require(_hasNonNumber == true, \"string cannot be only numbers\");\r\n\r\n        bytes32 _ret;\r\n        assembly {\r\n            _ret := mload(add(_temp, 32))\r\n        }\r\n        return (_ret);\r\n    }\r\n}\r\n\r\n/**\r\n * @title SafeMath v0.1.9\r\n * @dev \u5e26\u6709\u5b89\u5168\u68c0\u67e5\u7684\u6570\u5b66\u8fd0\u7b97\u4f1a\u5f15\u53d1\u9519\u8bef\r\n * - \u6dfb\u52a0 sqrt\r\n * - \u6dfb\u52a0 sq\r\n * - \u6dfb\u52a0 pwr\r\n * - \u5c06\u65ad\u8a00\u66f4\u6539\u4e3a\u9700\u8981\u5e26\u6709\u9519\u8bef\u65e5\u5fd7\u8f93\u51fa\r\n * - \u5220\u9664div\uff0c\u5b83\u6ca1\u7528\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev \u5c06\u4e24\u4e2a\u6570\u5b57\u76f8\u4e58\uff0c\u629b\u51fa\u6ea2\u51fa\u3002\r\n    */\r\n    function mul(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256 c)\r\n    {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        require(c / a == b, \"SafeMath mul failed\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev \u51cf\u53bb\u4e24\u4e2a\u6570\u5b57\uff0c\u5728\u6ea2\u51fa\u65f6\u629b\u51fa\uff08\u5373\uff0c\u5982\u679c\u51cf\u6570\u5927\u4e8e\u51cf\u6570\uff09\u3002\r\n    */\r\n    function sub(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        require(b <= a, \"SafeMath sub failed\");\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev \u6dfb\u52a0\u4e24\u4e2a\u6570\u5b57\uff0c\u6ea2\u51fa\u65f6\u629b\u51fa\u3002\r\n    */\r\n    function add(uint256 a, uint256 b)\r\n        internal\r\n        pure\r\n        returns (uint256 c)\r\n    {\r\n        c = a + b;\r\n        require(c >= a, \"SafeMath add failed\");\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev \u7ed9\u51fa\u7ed9\u5b9ax\u7684\u5e73\u65b9\u6839\u3002\r\n     */\r\n    function sqrt(uint256 x)\r\n        internal\r\n        pure\r\n        returns (uint256 y)\r\n    {\r\n        uint256 z = ((add(x,1)) / 2);\r\n        y = x;\r\n        while (z < y)\r\n        {\r\n            y = z;\r\n            z = ((add((x / z),z)) / 2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev \u7ed9\u5e7f\u573a\u3002\u5c06x\u4e58\u4ee5x\r\n     */\r\n    function sq(uint256 x)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return (mul(x,x));\r\n    }\r\n\r\n    /**\r\n     * @dev x\u5230y\u7684\u529b\u91cf\r\n     */\r\n    function pwr(uint256 x, uint256 y)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (x==0)\r\n            return (0);\r\n        else if (y==0)\r\n            return (1);\r\n        else\r\n        {\r\n            uint256 z = x;\r\n            for (uint256 i=1; i < y; i++)\r\n                z = mul(z,x);\r\n            return (z);\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[],\"name\":\"addMeToAllGames\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pIDxAddr_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrationFee_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNameFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"plyrNames_\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gameNames_\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pIDxName_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"},{\"name\":\"_affCode\",\"type\":\"address\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXaddr\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameAddress\",\"type\":\"address\"},{\"name\":\"_gameNameStr\",\"type\":\"string\"}],\"name\":\"addGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pID_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"getPlayerAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"},{\"name\":\"_affCode\",\"type\":\"bytes32\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXname\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_nameStr\",\"type\":\"string\"}],\"name\":\"checkIfNameValid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_affCode\",\"type\":\"bytes32\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXnameFromDapp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameID\",\"type\":\"uint256\"}],\"name\":\"addMeToGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"getPlayerName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"},{\"name\":\"_affCode\",\"type\":\"uint256\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXID\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plyrNameList_\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_affCode\",\"type\":\"address\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXaddrFromDapp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nameString\",\"type\":\"string\"}],\"name\":\"useMyOldName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gID_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_affCode\",\"type\":\"uint256\"},{\"name\":\"_all\",\"type\":\"bool\"}],\"name\":\"registerNameXIDFromDapp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setRegistrationFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games_\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gameIDs_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plyr_\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"laff\",\"type\":\"uint256\"},{\"name\":\"names\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"getPlayerLAff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getPlayerID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"playerID\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"playerAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"playerName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"isNewPlayer\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"affiliateID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"affiliateAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"affiliateName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"onNewName\",\"type\":\"event\"}]", "ContractName": "PlayerBook", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0efb7c10cb3596805c1b20c14421aac33ba08561639ce3582c7193be5f4135b5"}]}