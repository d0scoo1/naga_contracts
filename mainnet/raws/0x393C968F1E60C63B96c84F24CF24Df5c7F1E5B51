{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/lottery.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\ncontract Lottery {\\r\\n    address public owner;\\r\\n    address payable[] public players;\\r\\n    uint public lotteryId;\\r\\n    mapping (uint => address payable) public lotteryHistory;\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        lotteryId = 1;\\r\\n    }\\r\\n\\r\\n    function getWinnerByLottery(uint lottery) public view returns (address payable) {\\r\\n        return lotteryHistory[lottery];\\r\\n    }\\r\\n\\r\\n    function getBalance() public view returns (uint) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getPlayers() public view returns (address payable[] memory) {\\r\\n        return players;\\r\\n    }\\r\\n\\r\\n    function enter() public payable {\\r\\n        require(msg.value > .01 ether);\\r\\n\\r\\n        // address of player entering lottery\\r\\n        players.push(payable(msg.sender));\\r\\n    }\\r\\n\\r\\n    function getRandomNumber() public view returns (uint) {\\r\\n        return uint(keccak256(abi.encodePacked(owner, block.timestamp)));\\r\\n    }\\r\\n\\r\\n    function pickWinner() public onlyowner {\\r\\n        uint index = getRandomNumber() % players.length;\\r\\n        players[index].transfer(address(this).balance);\\r\\n\\r\\n        lotteryHistory[lotteryId] = players[index];\\r\\n        lotteryId++;\\r\\n        \\r\\n\\r\\n        // reset the state of the contract\\r\\n        players = new address payable[](0);\\r\\n    }\\r\\n\\r\\n    modifier onlyowner() {\\r\\n      require(msg.sender == owner);\\r\\n      _;\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lottery\",\"type\":\"uint256\"}],\"name\":\"getWinnerByLottery\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lotteryHistory\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lotteryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Lottery", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}