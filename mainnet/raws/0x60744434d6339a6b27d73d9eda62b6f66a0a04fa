{"status": "1", "message": "OK", "result": [{"SourceCode": "// hevm: flattened sources of src/flash.sol\r\n// SPDX-License-Identifier: AGPL-3.0-or-later\r\npragma solidity =0.6.12 >=0.6.12;\r\n\r\n////// src/interface/IERC3156FlashBorrower.sol\r\n// Copyright (C) 2021 Dai Foundation\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.6.12; */\r\n\r\ninterface IERC3156FlashBorrower {\r\n\r\n    /**\r\n     * @dev Receive a flash loan.\r\n     * @param initiator The initiator of the loan.\r\n     * @param token The loan currency.\r\n     * @param amount The amount of tokens lent.\r\n     * @param fee The additional amount of tokens to repay.\r\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\r\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\r\n     */\r\n    function onFlashLoan(\r\n        address initiator,\r\n        address token,\r\n        uint256 amount,\r\n        uint256 fee,\r\n        bytes calldata data\r\n    ) external returns (bytes32);\r\n}\r\n\r\n////// src/interface/IERC3156FlashLender.sol\r\n// Copyright (C) 2021 Dai Foundation\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.6.12; */\r\n\r\n/* import \"./IERC3156FlashBorrower.sol\"; */\r\n\r\ninterface IERC3156FlashLender {\r\n\r\n    /**\r\n     * @dev The amount of currency available to be lent.\r\n     * @param token The loan currency.\r\n     * @return The amount of `token` that can be borrowed.\r\n     */\r\n    function maxFlashLoan(\r\n        address token\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev The fee to be charged for a given loan.\r\n     * @param token The loan currency.\r\n     * @param amount The amount of tokens lent.\r\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\r\n     */\r\n    function flashFee(\r\n        address token,\r\n        uint256 amount\r\n    ) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Initiate a flash loan.\r\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\r\n     * @param token The loan currency.\r\n     * @param amount The amount of tokens lent.\r\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\r\n     */\r\n    function flashLoan(\r\n        IERC3156FlashBorrower receiver,\r\n        address token,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external returns (bool);\r\n}\r\n\r\n////// src/interface/IVatDaiFlashBorrower.sol\r\n// Copyright (C) 2021 Dai Foundation\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.6.12; */\r\n\r\ninterface IVatDaiFlashBorrower {\r\n\r\n    /**\r\n     * @dev Receive a flash loan.\r\n     * @param initiator The initiator of the loan.\r\n     * @param amount The amount of tokens lent. [rad]\r\n     * @param fee The additional amount of tokens to repay. [rad]\r\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\r\n     * @return The keccak256 hash of \"IVatDaiFlashLoanReceiver.onVatDaiFlashLoan\"\r\n     */\r\n    function onVatDaiFlashLoan(\r\n        address initiator,\r\n        uint256 amount,\r\n        uint256 fee,\r\n        bytes calldata data\r\n    ) external returns (bytes32);\r\n\r\n}\r\n\r\n////// src/interface/IVatDaiFlashLender.sol\r\n// Copyright (C) 2021 Dai Foundation\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.6.12; */\r\n\r\n/* import \"./IVatDaiFlashBorrower.sol\"; */\r\n\r\ninterface IVatDaiFlashLender {\r\n\r\n    /**\r\n     * @dev Initiate a flash loan.\r\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\r\n     * @param amount The amount of tokens lent. [rad]\r\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\r\n     */\r\n    function vatDaiFlashLoan(\r\n        IVatDaiFlashBorrower receiver,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external returns (bool);\r\n}\r\n\r\n////// src/flash.sol\r\n// Copyright (C) 2021 Dai Foundation\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity 0.6.12; */\r\n\r\n/* import \"./interface/IERC3156FlashLender.sol\"; */\r\n/* import \"./interface/IERC3156FlashBorrower.sol\"; */\r\n/* import \"./interface/IVatDaiFlashLender.sol\"; */\r\n\r\ninterface DaiLike {\r\n    function balanceOf(address) external returns (uint256);\r\n    function transferFrom(address, address, uint256) external returns (bool);\r\n    function approve(address, uint256) external returns (bool);\r\n}\r\n\r\ninterface DaiJoinLike {\r\n    function dai() external view returns (address);\r\n    function vat() external view returns (address);\r\n    function join(address, uint256) external;\r\n    function exit(address, uint256) external;\r\n}\r\n\r\ninterface VatLike_4 {\r\n    function hope(address) external;\r\n    function dai(address) external view returns (uint256);\r\n    function live() external view returns (uint256);\r\n    function move(address, address, uint256) external;\r\n    function heal(uint256) external;\r\n    function suck(address, address, uint256) external;\r\n}\r\n\r\ncontract DssFlash is IERC3156FlashLender, IVatDaiFlashLender {\r\n\r\n    // --- Auth ---\r\n    function rely(address usr) external auth { wards[usr] = 1; emit Rely(usr); }\r\n    function deny(address usr) external auth { wards[usr] = 0; emit Deny(usr); }\r\n    mapping (address => uint256) public wards;\r\n    modifier auth {\r\n        require(wards[msg.sender] == 1, \"DssFlash/not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- Data ---\r\n    VatLike_4     public immutable vat;\r\n    DaiJoinLike public immutable daiJoin;\r\n    DaiLike     public immutable dai;\r\n\r\n    uint256     public  max;     // Maximum borrowable Dai  [wad]\r\n    uint256     private locked;  // Reentrancy guard\r\n\r\n    bytes32 public constant CALLBACK_SUCCESS = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\r\n    bytes32 public constant CALLBACK_SUCCESS_VAT_DAI = keccak256(\"VatDaiFlashBorrower.onVatDaiFlashLoan\");\r\n\r\n    // --- Events ---\r\n    event Rely(address indexed usr);\r\n    event Deny(address indexed usr);\r\n    event File(bytes32 indexed what, uint256 data);\r\n    event FlashLoan(address indexed receiver, address token, uint256 amount, uint256 fee);\r\n    event VatDaiFlashLoan(address indexed receiver, uint256 amount, uint256 fee);\r\n\r\n    modifier lock {\r\n        require(locked == 0, \"DssFlash/reentrancy-guard\");\r\n        locked = 1;\r\n        _;\r\n        locked = 0;\r\n    }\r\n\r\n    // --- Init ---\r\n    constructor(address daiJoin_) public {\r\n        wards[msg.sender] = 1;\r\n        emit Rely(msg.sender);\r\n\r\n        VatLike_4 vat_ = vat = VatLike_4(DaiJoinLike(daiJoin_).vat());\r\n        daiJoin = DaiJoinLike(daiJoin_);\r\n        DaiLike dai_ = dai = DaiLike(DaiJoinLike(daiJoin_).dai());\r\n\r\n        vat_.hope(daiJoin_);\r\n        dai_.approve(daiJoin_, type(uint256).max);\r\n    }\r\n\r\n    // --- Math ---\r\n    uint256 constant RAY = 10 ** 27;\r\n    uint256 constant RAD = 10 ** 45;\r\n    function _mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(y == 0 || (z = x * y) / y == x);\r\n    }\r\n\r\n    // --- Administration ---\r\n    function file(bytes32 what, uint256 data) external auth {\r\n        if (what == \"max\") {\r\n            // Add an upper limit of 10^27 DAI to avoid breaking technical assumptions of DAI << 2^256 - 1\r\n            require((max = data) <= RAD, \"DssFlash/ceiling-too-high\");\r\n        }\r\n        else revert(\"DssFlash/file-unrecognized-param\");\r\n        emit File(what, data);\r\n    }\r\n\r\n    // --- ERC 3156 Spec ---\r\n    function maxFlashLoan(\r\n        address token\r\n    ) external override view returns (uint256) {\r\n        if (token == address(dai) && locked == 0) {\r\n            return max;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function flashFee(\r\n        address token,\r\n        uint256 amount\r\n    ) external override view returns (uint256) {\r\n        amount;\r\n        require(token == address(dai), \"DssFlash/token-unsupported\");\r\n\r\n        return 0;\r\n    }\r\n\r\n    function flashLoan(\r\n        IERC3156FlashBorrower receiver,\r\n        address token,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external override lock returns (bool) {\r\n        require(token == address(dai), \"DssFlash/token-unsupported\");\r\n        require(amount <= max, \"DssFlash/ceiling-exceeded\");\r\n        require(vat.live() == 1, \"DssFlash/vat-not-live\");\r\n\r\n        uint256 amt = _mul(amount, RAY);\r\n\r\n        vat.suck(address(this), address(this), amt);\r\n        daiJoin.exit(address(receiver), amount);\r\n\r\n        emit FlashLoan(address(receiver), token, amount, 0);\r\n\r\n        require(\r\n            receiver.onFlashLoan(msg.sender, token, amount, 0, data) == CALLBACK_SUCCESS,\r\n            \"DssFlash/callback-failed\"\r\n        );\r\n\r\n        dai.transferFrom(address(receiver), address(this), amount);\r\n        daiJoin.join(address(this), amount);\r\n        vat.heal(amt);\r\n\r\n        return true;\r\n    }\r\n\r\n    // --- Vat Dai Flash Loan ---\r\n    function vatDaiFlashLoan(\r\n        IVatDaiFlashBorrower receiver,          // address of conformant IVatDaiFlashBorrower\r\n        uint256 amount,                         // amount to flash loan [rad]\r\n        bytes calldata data                     // arbitrary data to pass to the receiver\r\n    ) external override lock returns (bool) {\r\n        require(amount <= _mul(max, RAY), \"DssFlash/ceiling-exceeded\");\r\n        require(vat.live() == 1, \"DssFlash/vat-not-live\");\r\n\r\n        vat.suck(address(this), address(receiver), amount);\r\n\r\n        emit VatDaiFlashLoan(address(receiver), amount, 0);\r\n\r\n        require(\r\n            receiver.onVatDaiFlashLoan(msg.sender, amount, 0, data) == CALLBACK_SUCCESS_VAT_DAI,\r\n            \"DssFlash/callback-failed\"\r\n        );\r\n\r\n        vat.heal(amount);\r\n\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daiJoin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"VatDaiFlashLoan\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS_VAT_DAI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract DaiLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiJoin\",\"outputs\":[{\"internalType\":\"contract DaiJoinLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vat\",\"outputs\":[{\"internalType\":\"contract VatLike_4\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVatDaiFlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"vatDaiFlashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DssFlash", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000009759a6ac90977b93b58547b4a71c78317f391a28", "EVMVersion": "Default", "Library": "", "LicenseType": "Unknown", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f774a3f26481d10f2bda755f612e56175f1c6717be6a323972f3c5088d9db37b"}]}