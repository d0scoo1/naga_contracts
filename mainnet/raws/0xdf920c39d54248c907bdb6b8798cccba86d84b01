{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.13;\r\n\r\n/// @title DPDRepository\r\n/// @notice The Decentralized Programmable Data (DPD) Repository stores data content identifiers, versions, authorized owners, and upgraders.\r\ncontract DPDRepository {\r\n    /// @notice Struct for a DPD.\r\n    struct DPD {\r\n        bytes cid;\r\n        address owner;\r\n    }\r\n\r\n    /// @notice DPD CIDs and owners mapped by DPD ID.\r\n    DPD[] public dpds;\r\n\r\n    /// @notice Versions mapped by DPD ID.\r\n    /// @dev Excluded from DPD struct to avoid unnecessary allocation memory.\r\n    mapping(uint256 => uint256) public versions;\r\n\r\n    /// @notice Updaters mapped by DPD ID.\r\n    /// @dev Excluded from DPD struct to avoid unnecessary allocation memory.\r\n    mapping(uint256 => address) public updaters;\r\n\r\n    /// @notice Event emitted when a new DPD is added to the repository.\r\n    event DPDAdded(uint256 indexed dpdId, address owner, address updater, bytes cid);\r\n\r\n    /// @notice Event emitted when a new DPD is added to the repository.\r\n    event DPDUpdated(uint256 indexed dpdId, uint256 indexed version, bytes cid);\r\n\r\n    /// @notice Event emitted when a DPD's owner is changed.\r\n    event DPDOwnerChanged(uint256 indexed dpdId, address newOwner);\r\n\r\n    /// @notice Event emitted when a DPD's upgrader is changed.\r\n    event DPDUpdaterChanged(uint256 indexed dpdId, address newUpdater);\r\n\r\n    /// @notice Function to add a new DPD.\r\n    /// @param cid DPD CID (content identifier).\r\n    /// @param owner DPD owner address.\r\n    /// @param updater DPD updater address.\r\n    function addDpd(bytes calldata cid, address owner, address updater) external returns (uint256) {\r\n        dpds.push(DPD(cid, owner));\r\n        uint256 dpdId = dpds.length - 1;\r\n        updaters[dpdId] = updater;\r\n        emit DPDAdded(dpdId, owner, updater, cid);\r\n        return dpdId;\r\n    }\r\n\r\n    /// @notice Function to update a DPD's CID.\r\n    /// @param dpdId DPD's ID in this repository.\r\n    /// @param cid New DPD CID (content identifier).\r\n    function updateDpd(uint256 dpdId, bytes memory cid) external returns (uint256) {\r\n        address updater = updaters[dpdId];\r\n        require(msg.sender == updater || (msg.sender == dpds[dpdId].owner && updater == address(0)), \"Only DPD updater (or owner if no updater) can update this DPD.\");\r\n        dpds[dpdId].cid = cid;\r\n        uint256 newVersion = versions[dpdId]++;\r\n        emit DPDUpdated(dpdId, newVersion, cid);\r\n        return newVersion;\r\n    }\r\n\r\n    /// @notice Function to set a DPD's owner.\r\n    /// @param dpdId DPD's ID in this repository.\r\n    /// @param newOwner New owner address for this DPD.\r\n    function setDpdOwner(uint256 dpdId, address newOwner) external {\r\n        require(msg.sender == dpds[dpdId].owner, \"Only DPD owner can update this DPD's owner.\");\r\n        dpds[dpdId].owner = newOwner;\r\n        emit DPDOwnerChanged(dpdId, newOwner);\r\n    }\r\n\r\n    /// @notice Function to set a DPD's upgrader.\r\n    /// @param dpdId DPD's ID in this repository.\r\n    /// @param newUpdater New updater address for this DPD.\r\n    function setDpdUpdater(uint256 dpdId, address newUpdater) external {\r\n        require(msg.sender == dpds[dpdId].owner, \"Only DPD owner can update this DPD's updater.\");\r\n        updaters[dpdId] = newUpdater;\r\n        emit DPDUpdaterChanged(dpdId, newUpdater);\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"}],\"name\":\"DPDAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"DPDOwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"}],\"name\":\"DPDUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"DPDUpdaterChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"addDpd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dpds\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setDpdOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"setDpdUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dpdId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"}],\"name\":\"updateDpd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"updaters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DPDRepository", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5090ecbad38c198a3660534d45b91d1af1db97f5fe2e64c0449d2c2e2ba403eb"}]}