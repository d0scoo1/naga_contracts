{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract preSale {\r\n    address public owner;\r\n    uint256 public min;\r\n    uint256 public limit;\r\n    address public tokenContract;\r\n    uint256 public initValue;\r\n    mapping (address => uint) public payments;\r\n\r\n    event Buy(address indexed user, uint256 ethers, uint256 tokens, uint256 timestamp);\r\n\r\n    constructor(uint256 min_buy, uint256 limit_buy, uint256 init, address token_address) {\r\n        owner = msg.sender;\r\n        min = min_buy;\r\n        limit = limit_buy;\r\n        initValue = init;\r\n        tokenContract = token_address;\r\n    }\r\n\r\n    receive() payable external {\r\n        \r\n    }\r\n    \r\n    function buy() public payable {\r\n        uint256 amount = msg.value / initValue;\r\n        require(amount >= min, \"The amount of payment is less than minimum amount to buy\");\r\n        uint256 temp_limit = payments[msg.sender] + amount;\r\n        require(temp_limit <= limit, \"The amount of payment is more than maximum amount to buy\");\r\n        payments[msg.sender] += amount;\r\n        IERC20 token = IERC20(tokenContract);\r\n        token.transfer(msg.sender, amount * 1000000000000000000);\r\n        emit Buy(msg.sender, msg.value, amount, block.timestamp);\r\n    }\r\n\r\n    function withdrawEthers() external {\r\n        require(msg.sender == owner, \"You are not an owner of this contract\");\r\n        address payable owner_temp = payable(owner);\r\n        address this_contract = address(this);\r\n        owner_temp.transfer(this_contract.balance);\r\n    }\r\n\r\n    function withdrawTokens() external {\r\n        require(msg.sender == owner, \"You are not an owner of this contract\");\r\n        IERC20 token = IERC20(tokenContract);\r\n        token.transfer(owner, token.balanceOf(address(this)));\r\n    }\r\n\r\n    function changeParams(uint256 min_buy, uint256 limit_buy, uint256 init, address token_address) external {\r\n        require(msg.sender == owner, \"You are not an owner of this contract\");\r\n        min = min_buy;\r\n        limit = limit_buy;\r\n        initValue = init;\r\n        tokenContract = token_address;\r\n    }\r\n\r\n    function transferOwnership(address new_owner) external {\r\n        require(msg.sender == owner, \"You are not an owner of this contract\");\r\n        owner = new_owner;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"init\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"init\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"changeParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEthers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "preSale", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c8000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000d3f01086687c83531d8bb2e666e3fc7bd03c9049", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://436b9b311adea2d71a2ee43f3ab6e20c6c6793f3ea89e640b1d0c3c9110eae3c"}]}