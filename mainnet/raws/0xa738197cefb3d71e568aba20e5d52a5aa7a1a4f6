{"status": "1", "message": "OK", "result": [{"SourceCode": "// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\npragma solidity ^0.7.1;\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not inclusde\r\n * the optional functions; to access them see {ERC20Detailed}.\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BondDepository {\r\n\r\n    IERC20 private _token;\r\n\r\n    address private _beneficiary;\r\n\r\n    uint256 private _releaseTime;\r\n\r\n    constructor (IERC20 token, address beneficiary, uint256 timeLockMinutes) public {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        _token = token;\r\n        _beneficiary = beneficiary;\r\n        _releaseTime = block.timestamp + (timeLockMinutes*60);\r\n        require(_releaseTime > block.timestamp, \"ERROR\");\r\n    }\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n    function balance() public view returns (uint256) {\r\n        return _token.balanceOf(address(this));\r\n    }\r\n    function beneficiary() public view returns (address) {\r\n        return _beneficiary;\r\n    }\r\n    function releaseTime() public view returns (uint256) {\r\n        return _releaseTime;\r\n    }\r\n    function getBlockTimestamp() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n    function canRelease() public view returns (bool) {\r\n        if(_releaseTime < block.timestamp){return true;}\r\n        else {return false;}\r\n    }\r\n    function release() public virtual {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(block.timestamp >= _releaseTime, \"TokenTimelock: current time is before release time\");\r\n\r\n        uint256 amount = _token.balanceOf(address(this));\r\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\r\n\r\n        _token.transfer(_beneficiary, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeLockMinutes\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "BondDepository", "CompilerVersion": "v0.7.1+commit.f4a555be", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000a9eb615dfbe56cd96a7e69f1e2a29cf1b28f46510000000000000000000000006995bf7f5d8243b4acfcb568b1d67b4801eafa5b0000000000000000000000000000000000000000000000000000000000000b40", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://73516bd2a9e3f224e1bac8003967925ecbbfc43397e934297e50602636e34a76"}]}