{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ninterface ERC20 {\r\n  function transfer (address _beneficiary, uint256 _tokenAmount) external returns (bool);  \r\n  function mint (address _to, uint256 _amount) external returns (bool);\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract Crowdsale is Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  modifier onlyWhileOpen {\r\n      require(\r\n        (now >= preICOStartDate && now < preICOEndDate) || \r\n        (now >= ICOStartDate && now < ICOEndDate)\r\n      );\r\n      _;\r\n  }\r\n\r\n  modifier onlyWhileICOOpen {\r\n      require(now >= ICOStartDate && now < ICOEndDate);\r\n      _;\r\n  }\r\n\r\n  // The token being sold\r\n  ERC20 public token;\r\n\r\n  // Address where funds are collected\r\n  address public wallet;\r\n\r\n  // \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0437\u0430 1 \u044d\u0444\u0438\u0440\r\n  uint256 public rate = 1000;\r\n\r\n  // \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u0444\u0438\u0440\u043e\u0432 \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u043e \u0432 \u0445\u043e\u0434\u0435 PreICO, wei\r\n  uint256 public preICOWeiRaised;\r\n\r\n  // \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u0444\u0438\u0440\u043e\u0432 \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u043e \u0432 \u0445\u043e\u0434\u0435 ICO, wei\r\n  uint256 public ICOWeiRaised;\r\n\r\n  // \u0426\u0435\u043d\u0430 ETH \u0432 \u0446\u0435\u043d\u0442\u0430\u0445\r\n  uint256 public ETHUSD;\r\n\r\n  // \u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 PreICO\r\n  uint256 public preICOStartDate;\r\n\r\n  // \u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f PreICO\r\n  uint256 public preICOEndDate;\r\n\r\n  // \u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430 ICO\r\n  uint256 public ICOStartDate;\r\n\r\n  // \u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f ICO\r\n  uint256 public ICOEndDate;\r\n\r\n  // \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043c \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0432 \u0445\u043e\u0434\u0435 ICO \u0432 \u0446\u0435\u043d\u0442\u0430\u0445\r\n  uint256 public softcap = 300000000;\r\n\r\n  // \u041f\u043e\u0442\u043e\u043b\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0432 \u0445\u043e\u0434\u0435 ICO \u0432 \u0446\u0435\u043d\u0442\u0430\u0445\r\n  uint256 public hardcap = 2500000000;\r\n\r\n  // \u0411\u043e\u043d\u0443\u0441 \u0440\u0435\u0444\u0435\u0440\u0430\u043b\u0430, %\r\n  uint8 public referalBonus = 3;\r\n\r\n  // \u0411\u043e\u043d\u0443\u0441 \u043f\u0440\u0438\u0433\u043b\u0430\u0448\u0435\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0444\u0435\u0440\u0430\u043b\u043e\u043c, %\r\n  uint8 public invitedByReferalBonus = 2; \r\n\r\n  // Whitelist\r\n  mapping(address => bool) public whitelist;\r\n\r\n  // \u0418\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u0443\u043f\u0438\u043b\u0438 \u0442\u043e\u043a\u0435\u043d\r\n  mapping (address => uint256) public investors;\r\n\r\n  event TokenPurchase(address indexed buyer, uint256 value, uint256 amount);\r\n\r\n  function Crowdsale( \r\n    address _wallet, \r\n    uint256 _preICOStartDate, \r\n    uint256 _preICOEndDate,\r\n    uint256 _ICOStartDate, \r\n    uint256 _ICOEndDate,\r\n    uint256 _ETHUSD\r\n  ) public {\r\n    require(_preICOEndDate > _preICOStartDate);\r\n    require(_ICOStartDate > _preICOEndDate);\r\n    require(_ICOEndDate > _ICOStartDate);\r\n\r\n    wallet = _wallet;\r\n    preICOStartDate = _preICOStartDate;\r\n    preICOEndDate = _preICOEndDate;\r\n    ICOStartDate = _ICOStartDate;\r\n    ICOEndDate = _ICOEndDate;\r\n    ETHUSD = _ETHUSD;\r\n  }\r\n\r\n  /* \u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b */\r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0442\u043e\u043a\u0435\u043d\u0430\r\n  function setRate (uint16 _rate) public onlyOwner {\r\n    require(_rate > 0);\r\n    rate = _rate;\r\n  }\r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0430\u0434\u0440\u0435\u0441 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u043e\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\r\n  function setWallet (address _wallet) public onlyOwner {\r\n    require (_wallet != 0x0);\r\n    wallet = _wallet;\r\n      \r\n  }\r\n  \r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0442\u043e\u0440\u0433\u0443\u0435\u043c\u044b\u0439 \u0442\u043e\u043a\u0435\u043d\r\n  function setToken (ERC20 _token) public onlyOwner {\r\n    token = _token;\r\n  }\r\n  \r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u043d\u0430\u0447\u0430\u043b\u0430 PreICO\r\n  function setPreICOStartDate (uint256 _preICOStartDate) public onlyOwner {\r\n    require(_preICOStartDate < preICOEndDate);\r\n    preICOStartDate = _preICOStartDate;\r\n  }\r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f PreICO\r\n  function setPreICOEndDate (uint256 _preICOEndDate) public onlyOwner {\r\n    require(_preICOEndDate > preICOStartDate);\r\n    preICOEndDate = _preICOEndDate;\r\n  }\r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u043d\u0430\u0447\u0430\u043b\u0430 ICO\r\n  function setICOStartDate (uint256 _ICOStartDate) public onlyOwner {\r\n    require(_ICOStartDate < ICOEndDate);\r\n    ICOStartDate = _ICOStartDate;\r\n  }\r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f PreICO\r\n  function setICOEndDate (uint256 _ICOEndDate) public onlyOwner {\r\n    require(_ICOEndDate > ICOStartDate);\r\n    ICOEndDate = _ICOEndDate;\r\n  }\r\n\r\n  // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u044d\u0444\u0438\u0440\u0430 \u0432 \u0446\u0435\u043d\u0442\u0430\u0445\r\n  function setETHUSD (uint256 _ETHUSD) public onlyOwner {\r\n    ETHUSD = _ETHUSD;\r\n  }\r\n\r\n  function () external payable {\r\n    address beneficiary = msg.sender;\r\n    uint256 weiAmount = msg.value;\r\n    uint256 tokens;\r\n\r\n    if(_isPreICO()){\r\n\r\n        _preValidatePreICOPurchase(beneficiary, weiAmount);\r\n        tokens = weiAmount.mul(rate.add(rate.mul(30).div(100)));\r\n        preICOWeiRaised = preICOWeiRaised.add(weiAmount);\r\n        wallet.transfer(weiAmount);\r\n        investors[beneficiary] = weiAmount;\r\n        _deliverTokens(beneficiary, tokens);\r\n        TokenPurchase(beneficiary, weiAmount, tokens);\r\n\r\n    } else if(_isICO()){\r\n\r\n        _preValidateICOPurchase(beneficiary, weiAmount);\r\n        tokens = _getTokenAmountWithBonus(weiAmount);\r\n        ICOWeiRaised = ICOWeiRaised.add(weiAmount);\r\n        investors[beneficiary] = weiAmount;\r\n        _deliverTokens(beneficiary, tokens);\r\n        TokenPurchase(beneficiary, weiAmount, tokens);\r\n\r\n    }\r\n  }\r\n\r\n    // \u041f\u043e\u043a\u0443\u043f\u043a\u0430 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0441 \u0440\u0435\u0444\u0435\u0440\u0430\u043b\u044c\u043d\u044b\u043c \u0431\u043e\u043d\u0443\u0441\u043e\u043c\r\n  function buyTokensWithReferal(address _referal) public onlyWhileICOOpen payable {\r\n    address beneficiary = msg.sender;    \r\n    uint256 weiAmount = msg.value;\r\n\r\n    _preValidateICOPurchase(beneficiary, weiAmount);\r\n\r\n    uint256 tokens = _getTokenAmountWithBonus(weiAmount).add(_getTokenAmountWithReferal(weiAmount, 2));\r\n    uint256 referalTokens = _getTokenAmountWithReferal(weiAmount, 3);\r\n\r\n    ICOWeiRaised = ICOWeiRaised.add(weiAmount);\r\n    investors[beneficiary] = weiAmount;\r\n\r\n    _deliverTokens(beneficiary, tokens);\r\n    _deliverTokens(_referal, referalTokens);\r\n\r\n    TokenPurchase(beneficiary, weiAmount, tokens);\r\n  }\r\n\r\n  // \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0430\u0434\u0440\u0435\u0441 \u0432 whitelist\r\n  function addToWhitelist(address _beneficiary) public onlyOwner {\r\n    whitelist[_beneficiary] = true;\r\n  }\r\n\r\n  // \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0432 whitelist\r\n  function addManyToWhitelist(address[] _beneficiaries) public onlyOwner {\r\n    for (uint256 i = 0; i < _beneficiaries.length; i++) {\r\n      whitelist[_beneficiaries[i]] = true;\r\n    }\r\n  }\r\n\r\n  // \u0418\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0430\u0434\u0440\u0435\u0441 \u0438\u0437 whitelist\r\n  function removeFromWhitelist(address _beneficiary) public onlyOwner {\r\n    whitelist[_beneficiary] = false;\r\n  }\r\n\r\n  // \u0423\u0437\u043d\u0430\u0442\u044c \u0438\u0441\u0442\u0435\u043a \u043b\u0438 \u0441\u0440\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f PreICO\r\n  function hasPreICOClosed() public view returns (bool) {\r\n    return now > preICOEndDate;\r\n  }\r\n\r\n  // \u0423\u0437\u043d\u0430\u0442\u044c \u0438\u0441\u0442\u0435\u043a \u043b\u0438 \u0441\u0440\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f ICO\r\n  function hasICOClosed() public view returns (bool) {\r\n    return now > ICOEndDate;\r\n  }\r\n\r\n  // \u041f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0441\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u043d\u0430 \u043a\u043e\u0448\u0435\u043b\u0435\u043a \u0434\u043b\u044f \u0441\u0431\u043e\u0440\u0430\r\n  function forwardFunds () public onlyOwner {\r\n    require(now > ICOEndDate);\r\n    require((preICOWeiRaised.add(ICOWeiRaised)).mul(ETHUSD).div(10**18) >= softcap);\r\n\r\n    wallet.transfer(ICOWeiRaised);\r\n  }\r\n\r\n  // \u0412\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u0440\u043e\u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0431\u044b\u043b \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 softcap\r\n  function refund() public {\r\n    require(now > ICOEndDate);\r\n    require(preICOWeiRaised.add(ICOWeiRaised).mul(ETHUSD).div(10**18) < softcap);\r\n    require(investors[msg.sender] > 0);\r\n    \r\n    address investor = msg.sender;\r\n    investor.transfer(investors[investor]);\r\n  }\r\n  \r\n\r\n  /* \u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b */\r\n\r\n   // \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 PreICO\r\n   function _isPreICO() internal view returns(bool) {\r\n       return now >= preICOStartDate && now < preICOEndDate;\r\n   }\r\n   \r\n   // \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 ICO\r\n   function _isICO() internal view returns(bool) {\r\n       return now >= ICOStartDate && now < ICOEndDate;\r\n   }\r\n\r\n   // \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u043a\u0443\u043f\u043a\u043e\u0439 \u0442\u043e\u043a\u0435\u043d\u043e\u0432\r\n\r\n  function _preValidatePreICOPurchase(address _beneficiary, uint256 _weiAmount) internal view {\r\n    require(_weiAmount != 0);\r\n    require(now >= preICOStartDate && now <= preICOEndDate);\r\n  }\r\n\r\n  function _preValidateICOPurchase(address _beneficiary, uint256 _weiAmount) internal view {\r\n    require(_weiAmount != 0);\r\n    require(whitelist[_beneficiary]);\r\n    require((preICOWeiRaised + ICOWeiRaised + _weiAmount).mul(ETHUSD).div(10**18) <= hardcap);\r\n    require(now >= ICOStartDate && now <= ICOEndDate);\r\n  }\r\n\r\n  // \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0431\u043e\u043d\u0443\u0441\u043e\u0432 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0431\u043e\u043d\u0443\u0441\u043e\u0432 \u0437\u0430 \u044d\u0442\u0430\u043f ICO \u0438 \u043e\u0431\u044a\u0435\u043c \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439\r\n  function _getTokenAmountWithBonus(uint256 _weiAmount) internal view returns(uint256) {\r\n    uint256 baseTokenAmount = _weiAmount.mul(rate);\r\n    uint256 tokenAmount = baseTokenAmount;\r\n    uint256 usdAmount = _weiAmount.mul(ETHUSD).div(10**18);\r\n\r\n    // \u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0431\u043e\u043d\u0443\u0441\u044b \u0437\u0430 \u043e\u0431\u044a\u0435\u043c \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439\r\n    if(usdAmount >= 10000000){\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(7).div(100));\r\n    } else if(usdAmount >= 5000000){\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(5).div(100));\r\n    } else if(usdAmount >= 1000000){\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(3).div(100));\r\n    }\r\n    \r\n    // \u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0431\u043e\u043d\u0443\u0441\u044b \u0437\u0430 \u044d\u0442\u0430\u043f ICO\r\n    if(now < ICOStartDate + 15 days) {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(20).div(100));\r\n    } else if(now < ICOStartDate + 28 days) {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(15).div(100));\r\n    } else if(now < ICOStartDate + 42 days) {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(10).div(100));\r\n    } else {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(5).div(100));\r\n    }\r\n\r\n    return tokenAmount;\r\n  }\r\n\r\n  // \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0431\u043e\u043d\u0443\u0441\u043e\u0432 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0431\u043e\u043d\u0443\u0441\u043e\u0432 \u0440\u0435\u0444\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b\r\n  function _getTokenAmountWithReferal(uint256 _weiAmount, uint8 _percent) internal view returns(uint256) {\r\n    return _weiAmount.mul(rate).mul(_percent).div(100);\r\n  }\r\n\r\n  // \u041f\u0435\u0440\u0435\u0432\u043e\u0434 \u0442\u043e\u043a\u0435\u043d\u043e\u0432\r\n  function _deliverTokens(address _beneficiary, uint256 _tokenAmount) internal {\r\n    token.mint(_beneficiary, _tokenAmount);\r\n  }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_preICOEndDate\",\"type\":\"uint256\"}],\"name\":\"setPreICOEndDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ICOEndDate\",\"type\":\"uint256\"}],\"name\":\"setICOEndDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_referal\",\"type\":\"address\"}],\"name\":\"buyTokensWithReferal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasICOClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referalBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasPreICOClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiaries\",\"type\":\"address[]\"}],\"name\":\"addManyToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"forwardFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOWeiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOWeiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ICOStartDate\",\"type\":\"uint256\"}],\"name\":\"setICOStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint16\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preICOStartDate\",\"type\":\"uint256\"}],\"name\":\"setPreICOStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"invitedByReferalBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ETHUSD\",\"type\":\"uint256\"}],\"name\":\"setETHUSD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_preICOStartDate\",\"type\":\"uint256\"},{\"name\":\"_preICOEndDate\",\"type\":\"uint256\"},{\"name\":\"_ICOStartDate\",\"type\":\"uint256\"},{\"name\":\"_ICOEndDate\",\"type\":\"uint256\"},{\"name\":\"_ETHUSD\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"}]", "ContractName": "Crowdsale", "CompilerVersion": "v0.4.21+commit.dfe3193c", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000b24516f8200fe09e90de0565b2d3422f7fe5c66f000000000000000000000000000000000000000000000000000000005accd170000000000000000000000000000000000000000000000000000000005afa22ff000000000000000000000000000000000000000000000000000000005afa2301000000000000000000000000000000000000000000000000000000005b4a8e7f000000000000000000000000000000000000000000000000000000000000018f", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://155659bce26bf1d6ff5d59f62d4b32ddcef20b70b7d866f5f78cbb8a17a89e0f"}]}