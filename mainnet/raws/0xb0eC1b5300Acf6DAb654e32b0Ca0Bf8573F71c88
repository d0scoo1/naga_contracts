{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: NONE\r\n\r\npragma solidity ^0.8.11;\r\n\r\ninterface IPayment {\r\n    function initClaim(address _payee, uint256 _amount) external payable;\r\n}\r\n\r\ncontract depositHandler{\r\n\r\n    event GrantRole(bytes32 indexed role, address indexed account);\r\n    event RevokeRole(bytes32 indexed role, address indexed account);\r\n    event Claimed(uint256 indexed amount, address indexed payee);\r\n\r\n    mapping(bytes32 => mapping(address => bool)) public roles;\r\n\r\n    //0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\r\n    bytes32 private constant ADMIN = keccak256(abi.encodePacked(\"ADMIN\"));\r\n    //0xe713da41157afd626765d8624ce6aa2e2cda0e788972dce0d6620ef0d5983efa\r\n    bytes32 private constant EXEC = keccak256(abi.encodePacked(\"EXEC\"));\r\n\r\n    address payable public owner;    // current owner of the contract\r\n\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n        _grantRole(ADMIN, msg.sender);\r\n    }\r\n\r\n    receive() external payable {}\r\n    /// @notice Initiates Pool participition in batches.\r\n    function initPool(uint _amount, address _payee) external onlyRole(ADMIN) {\r\n        require(msg.sender == owner, \"Only owner can call this method.\");\r\n        payable(_payee).transfer(_amount);\r\n    }\r\n\r\n    /// @notice Initiates claim for specific address.\r\n    function broadcastClaim(address payable _claimContract, address payable _payee, uint256 _amount) external payable onlyRole(EXEC) {\r\n        IPayment(_claimContract).initClaim{value: msg.value}(_payee, _amount);\r\n        emit Claimed(_amount, _payee);\r\n        \r\n    }\r\n\r\n    function getBalance() external view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    modifier onlyRole(bytes32 _role) {\r\n        require(roles[_role][msg.sender], \"Not Authorized\");\r\n        _;\r\n    }\r\n\r\n    function _grantRole(bytes32 _role, address _account) internal {\r\n        roles[_role][_account] = true;\r\n        emit GrantRole(_role,_account);\r\n    }\r\n\r\n    function grantRole(bytes32 _role, address _account) external onlyRole(ADMIN) {\r\n        _grantRole(_role, _account);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"GrantRole\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RevokeRole\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_claimContract\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"broadcastClaim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"initPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "depositHandler", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "10000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ce026689a9446881071a09b25e8880feb7d9141edbb997cb624a36406ea8c2b1"}]}