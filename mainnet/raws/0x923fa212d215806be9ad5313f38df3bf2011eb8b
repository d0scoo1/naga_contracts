{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.11;\r\n\r\ninterface IVF {\r\n    function deployVault(address) external returns(address);\r\n}\r\ninterface IVIM {\r\n    function initializeVault(address) external;\r\n}\r\ninterface IVoter {\r\n    function whitelistAsAuth(address) external;\r\n    function createGauge(address) external returns(address);\r\n}\r\ncontract VaultGaugeDoorman {\r\n\r\n    address immutable self;\r\n\r\n    modifier ensureDelegateCall() {\r\n        require(address(this) != self);\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        self = address(this);\r\n    }\r\n    //must be delegate called\r\n    function deployAndInitAsAuth(\r\n        address underlying,\r\n        address vf,\r\n        address vim,\r\n        address voter\r\n    ) ensureDelegateCall external {\r\n        address newVault = address(IVF(vf).deployVault(underlying));\r\n        IVIM(vim).initializeVault(newVault);\r\n        IVoter(voter).whitelistAsAuth(newVault);\r\n        IVoter(voter).createGauge(newVault);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vim\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"deployAndInitAsAuth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "VaultGaugeDoorman", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://446150387c329323695855aa949ac48601bdc948e7d70028bf9d2f9602eae26a"}]}