{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.8.7;\r\n\r\ninterface WnsRegistryInterface {\r\n    function getRecord(bytes32 _hash) external view returns (uint256);\r\n    function getRecord(uint256 _tokenId) external view returns (string memory);\r\n}\r\n\r\npragma solidity 0.8.7;\r\n\r\ninterface WnsAddressesInterface {\r\n    function owner() external view returns (address);\r\n    function getWnsAddress(string memory _label) external view returns(address);\r\n}\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.7;\r\n\r\ncontract WnsRegistry_v2 {\r\n    \r\n    address private WnsRegistry_v1;\r\n    address private WnsAddresses;\r\n    WnsRegistryInterface wnsRegistry_v1;\r\n    WnsAddressesInterface wnsAddresses;\r\n\r\n    constructor(address registry_, address addresses_) {\r\n        WnsRegistry_v1 = registry_;\r\n        wnsRegistry_v1 = WnsRegistryInterface(WnsRegistry_v1);\r\n        WnsAddresses = addresses_;\r\n        wnsAddresses = WnsAddressesInterface(WnsAddresses);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return wnsAddresses.owner();\r\n    }\r\n\r\n    function getWnsAddress(string memory _label) public view returns (address) {\r\n        return wnsAddresses.getWnsAddress(_label);\r\n    }\r\n\r\n    function setRegistry_v1(address _registry) public {\r\n        require(msg.sender == owner(), \"Not authorized.\");\r\n        WnsRegistry_v1 = _registry;\r\n        wnsRegistry_v1 = WnsRegistryInterface(WnsRegistry_v1);\r\n    }\r\n\r\n    function setAddresses(address addresses_) public {\r\n        require(msg.sender == owner(), \"Not authorized.\");\r\n        WnsAddresses = addresses_;\r\n        wnsAddresses = WnsAddressesInterface(WnsAddresses);\r\n    }\r\n\r\n    mapping(bytes32 => uint256) private _hashToTokenId;\r\n    mapping(uint256 => string) private _tokenIdToName;\r\n\r\n    function setRecord(bytes32 _hash, uint256 _tokenId, string memory _name) public {\r\n        require(msg.sender == getWnsAddress(\"_wnsRegistrar\") || msg.sender == getWnsAddress(\"_wnsMigration\"), \"Caller is not authorized.\");\r\n        _hashToTokenId[_hash] = _tokenId;\r\n        _tokenIdToName[_tokenId - 1] = _name;\r\n    }\r\n\r\n    function setRecord(uint256 _tokenId, string memory _name) public {\r\n        require(msg.sender == getWnsAddress(\"_wnsRegistrar\"), \"Caller is not Registrar\");\r\n        _tokenIdToName[_tokenId - 1] = _name;\r\n    }\r\n\r\n    function getRecord(bytes32 _hash) public view returns (uint256) {\r\n        if(_hashToTokenId[_hash] != 0) {\r\n            return _hashToTokenId[_hash];\r\n        } else {\r\n            return wnsRegistry_v1.getRecord(_hash);\r\n        }\r\n    }\r\n\r\n    function getRecord(uint256 _tokenId) public view returns (string memory) {\r\n        if(keccak256(abi.encodePacked(_tokenIdToName[_tokenId])) != keccak256(abi.encodePacked(\"\"))) {\r\n            return _tokenIdToName[_tokenId];\r\n        } else {\r\n            return wnsRegistry_v1.getRecord(_tokenId);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addresses_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_label\",\"type\":\"string\"}],\"name\":\"getWnsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addresses_\",\"type\":\"address\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry_v1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WnsRegistry_v2", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000082fe896e4969a3270c0bec103cf1ebdbda6e6bfc000000000000000000000000f3e15b3235b71685180e521fdc6c2da3c2d9dc82", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d2cf7c330a32549381af1e628c719939d8966b5eeebc876cd57bdab5d3c74db1"}]}