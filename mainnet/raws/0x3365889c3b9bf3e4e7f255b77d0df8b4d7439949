{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2022-03-28\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.12;\r\n\r\ninterface IFactory {\r\n    function withdraw(uint256 salt, address token, address receiver) external returns (address wallet);\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address, uint256) external;\r\n}\r\n\r\ncontract MultV5 {\r\n\r\n    address _ADMIN;\r\n\r\n    event IncreaseBalance(address sender, uint256 amount);\r\n\r\n    event DecreaseBalance(address target, uint256 amount);\r\n\r\n    mapping (address => bool) public Owners;\r\n\r\n    function modifyOwner(address _wallet, bool _enabled) external {\r\n        require(_ADMIN == msg.sender, \"Only for admin\");\r\n\r\n        Owners[_wallet]=_enabled;\r\n    }\r\n\r\n    function contains(address _wallet) public view returns (bool) {\r\n        return Owners[_wallet];\r\n    }\r\n\r\n    modifier ownerOnly () {\r\n      require(contains(msg.sender), \"Only for owners\");\r\n         _;\r\n    }\r\n\r\n    constructor () {\r\n        _ADMIN = msg.sender;\r\n        Owners[msg.sender]=true;\r\n    }\r\n\r\n    receive () external payable {\r\n        emit IncreaseBalance(msg.sender, msg.value);\r\n    }\r\n\r\n    function dumpFactory(address factory, uint[] memory salt, address[] memory token, address receiver) ownerOnly external {\r\n        uint arrayLength = salt.length;\r\n\r\n        for (uint i=0; i < arrayLength; i++) {\r\n            IFactory(factory).withdraw(salt[i], token[i], receiver);\r\n        }\r\n    }\r\n\r\n    function transferErc20(address[] memory token, address[] memory reviever, uint256[] memory amount) ownerOnly external {\r\n        for (uint i=0; i < token.length; i++) {\r\n            IERC20(token[i]).transfer(reviever[i], amount[i]);\r\n        }\r\n    }\r\n\r\n    function withdrawAsset(address[] memory targets, uint256[] memory amounts) ownerOnly external {\r\n        require(targets.length == amounts.length, \"Invalid params length\");\r\n\r\n        uint256 amountSum = 0;\r\n\r\n        for (uint i = 0; i < amounts.length; i++) {\r\n            amountSum += amounts[i];\r\n        }\r\n\r\n        uint256 balance = address(this).balance;\r\n\r\n        require(balance >= amountSum, \"Invalid factory balance\");\r\n\r\n        for (uint i=0; i < targets.length; i++) {\r\n            payable(targets[i]).transfer(amounts[i]);\r\n            emit DecreaseBalance(targets[i], amounts[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseBalance\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Owners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"salt\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"dumpFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"modifyOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"token\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"reviever\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"transferErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MultV5", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://031def9d96b23acd9aa93adec72b58b12a1993f2ea283d3ef9de30bc64b33ece"}]}