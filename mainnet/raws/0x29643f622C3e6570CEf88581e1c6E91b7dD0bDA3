{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Enumerator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.9 <0.9.0;\\n\\nimport \\\"@divergencetech/ethier/contracts/erc721/ERC721Enumerator.sol\\\";\\n\\ncontract Enumerator is ERC721Enumerator {}\\n\"\r\n    },\r\n    \"@divergencetech/ethier/contracts/erc721/ERC721Enumerator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// Copyright (c) 2022 the ethier authors (github.com/divergencetech/ethier)\\npragma solidity >=0.8.0 <0.9.0;\\n\\ninterface IERC721NotQuiteEnumerable {\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function ownerOf(uint256) external view returns (address);\\n\\n    function totalSupply() external view returns (uint256);\\n}\\n\\nerror NonExistentOwnerToken(address owner, uint256 index);\\n\\ncontract ERC721Enumerator {\\n    function tokenOfOwnerByIndex(\\n        IERC721NotQuiteEnumerable token,\\n        uint256 totalSupply,\\n        address owner,\\n        uint256 index\\n    ) public view returns (uint256 tokenId) {\\n        uint256 skip = index;\\n        for (uint256 i = 0; i < totalSupply; i++) {\\n            if (token.ownerOf(i) != owner) {\\n                continue;\\n            }\\n            if (skip == 0) {\\n                return i;\\n            }\\n            --skip;\\n        }\\n        revert NonExistentOwnerToken(owner, index);\\n    }\\n\\n    function tokenOfOwnerByIndex(\\n        IERC721NotQuiteEnumerable token,\\n        address owner,\\n        uint256 index\\n    ) external view returns (uint256 tokenId) {\\n        return tokenOfOwnerByIndex(token, token.totalSupply(), owner, index);\\n    }\\n\\n    function allTokensOwnedBy(\\n        IERC721NotQuiteEnumerable token,\\n        uint256 totalSupply,\\n        address owner\\n    ) public view returns (uint256[] memory) {\\n        uint256 balance = token.balanceOf(owner);\\n        uint256[] memory tokenIds = new uint256[](balance);\\n\\n        uint256 idx;\\n        for (uint256 i = 0; i < totalSupply; i++) {\\n            if (token.ownerOf(i) != owner) {\\n                continue;\\n            }\\n            tokenIds[idx] = i;\\n            idx++;\\n        }\\n        return tokenIds;\\n    }\\n\\n    function allTokensOwnedBy(IERC721NotQuiteEnumerable token, address owner)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        return allTokensOwnedBy(token, token.totalSupply(), owner);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NonExistentOwnerToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC721NotQuiteEnumerable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"allTokensOwnedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721NotQuiteEnumerable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"allTokensOwnedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721NotQuiteEnumerable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721NotQuiteEnumerable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Enumerator", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "10", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}