{"status": "1", "message": "OK", "result": [{"SourceCode": "// File: contracts/IERC2981Royalties.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/// @title IERC2981Royalties\r\n/// @dev Interface for the ERC2981 - Token Royalty standard\r\ninterface IERC2981Royalties {\r\n    /// @notice Called with the sale price to determine how much royalty\r\n    //          is owed and to whom.\r\n    /// @param _tokenId - the NFT asset queried for royalty information\r\n    /// @param _value - the sale price of the NFT asset specified by _tokenId\r\n    /// @return _receiver - address of who should be sent the royalty payment\r\n    /// @return _royaltyAmount - the royalty payment amount for value sale price\r\n    function royaltyInfo(uint256 _tokenId, uint256 _value)\r\n        external\r\n        view\r\n        returns (address _receiver, uint256 _royaltyAmount);\r\n}\r\n\r\n// File: contracts/utils/Address.sol\r\n\r\n\r\npragma solidity ^0.8.7;\r\n\r\nlibrary Address {\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Strings.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/Context.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n\r\n// File: contracts/ERC2981Base.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n/// @dev This is a contract used to add ERC2981 support to ERC721 and 1155\r\nabstract contract ERC2981Base is ERC165, IERC2981Royalties {\r\n    struct RoyaltyInfo {\r\n        address recipient;\r\n        uint24 amount;\r\n    }\r\n\r\n    /// @inheritdoc\tERC165\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return\r\n            interfaceId == type(IERC2981Royalties).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n\r\n// File: contracts/ERC2981ContractWideRoyalties.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n//import \"./utils/introspection/ERC165.sol\";\r\n\r\n\r\n/// @dev This is a contract used to add ERC2981 support to ERC721 and 1155\r\n/// @dev This implementation has the same royalties for each and every tokens\r\nabstract contract ERC2981ContractWideRoyalties is ERC2981Base {\r\n    RoyaltyInfo private _royalties;\r\n\r\n    /// @dev Sets token royalties\r\n    /// @param recipient recipient of the royalties\r\n    /// @param value percentage (using 2 decimals - 10000 = 100, 0 = 0)\r\n    function _setRoyalties(address recipient, uint256 value) internal {\r\n        require(value <= 10000, \"ERC2981Royalties: Too high\");\r\n        _royalties = RoyaltyInfo(recipient, uint24(value));\r\n    }\r\n\r\n    /// @inheritdoc\tIERC2981Royalties\r\n    function royaltyInfo(uint256, uint256 value)\r\n        external\r\n        view\r\n        override\r\n        returns (address receiver, uint256 royaltyAmount)\r\n    {\r\n        RoyaltyInfo memory royalties = _royalties;\r\n        receiver = royalties.recipient;\r\n        royaltyAmount = (value * royalties.amount) / 10000;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\r\n\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n\r\n// File: contracts/ERC721.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    address[] internal _owners;\r\n\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override(ERC165, IERC165)\r\n        returns (bool)\r\n    {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            owner != address(0),\r\n            \"ERC721: balance query for the zero address\"\r\n        );\r\n\r\n        uint256 count;\r\n        for (uint256 i; i < _owners.length; ++i) {\r\n            if (owner == _owners[i]) {\r\n                unchecked {\r\n                    ++count;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (address)\r\n    {\r\n        address owner;\r\n\r\n        owner = _owners[tokenId];\r\n        require(\r\n            owner != address(0),\r\n            \"ERC721: owner query for nonexistent token\"\r\n        );\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (address)\r\n    {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721: approved query for nonexistent token\"\r\n        );\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved)\r\n        public\r\n        virtual\r\n        override\r\n    {\r\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(\r\n            _isApprovedOrOwner(_msgSender(), tokenId),\r\n            \"ERC721: transfer caller is not owner nor approved\"\r\n        );\r\n\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        require(\r\n            _isApprovedOrOwner(_msgSender(), tokenId),\r\n            \"ERC721: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeTransfer(from, to, tokenId, _data);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(from, to, tokenId, _data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        //   if (tokenId != 999) {\r\n        return tokenId < _owners.length && _owners[tokenId] != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\r\n        internal\r\n        view\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721: operator query for nonexistent token\"\r\n        );\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner ||\r\n            getApproved(tokenId) == spender ||\r\n            isApprovedForAll(owner, spender));\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(address(0), to, tokenId, _data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId);\r\n        _owners.push(to);\r\n        emit Transfer(address(0), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {\r\n        require(\r\n            ERC721.ownerOf(tokenId) == from,\r\n            \"ERC721: transfer of token that is not own\"\r\n        );\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId);\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    function _premintBatch(address[] memory addresses) internal {\r\n        _owners = addresses;\r\n        for (uint256 index = 0; index < _owners.length; index++) {\r\n            emit Transfer(address(0), addresses[index], index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try\r\n                IERC721Receiver(to).onERC721Received(\r\n                    _msgSender(),\r\n                    from,\r\n                    tokenId,\r\n                    _data\r\n                )\r\n            returns (bytes4 retval) {\r\n                return retval == IERC721Receiver.onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\r\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\r\n                    );\r\n                } else {\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {}\r\n}\r\n\r\n// File: contracts/PunkPortraits.sol\r\n\r\n\r\npragma solidity ^0.8.2;\r\n\r\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\n\r\ncontract PunkPortraits is ERC721, ERC2981ContractWideRoyalties, Ownable {\r\n    uint256 public constant PRICE = 0.06 ether;\r\n    address public proxyRegistryAddress;\r\n    bool mintStatus;\r\n    uint256 public constant MAX = 1000;\r\n\r\n    using Strings for uint256;\r\n\r\n    constructor(address[] memory addresses) ERC721(\"Punk Portraits\", \"PP\") {\r\n        _premintBatch(addresses);\r\n\r\n        // TEST DATA\r\n        ///   _safeMint(msg.sender, 999);\r\n        _setRoyalties(msg.sender, 350);\r\n        // opensea rinkeby\r\n        proxyRegistryAddress = 0xF57B2c51dED3A29e6891aba85459d600256Cf317;\r\n    }\r\n\r\n    function tokenURI(uint256 _tokenId)\r\n        public\r\n        pure\r\n        override\r\n        returns (string memory)\r\n    {\r\n        return string(abi.encodePacked(_baseURI(), _tokenId.toString()));\r\n    }\r\n\r\n    function mint() external payable {\r\n        require(mintStatus, \"Not yet\");\r\n        require(msg.value == PRICE, \"Not Enough Eth\");\r\n        require(_owners.length < MAX, \"Sold Out\");\r\n        _safeMint(msg.sender, _owners.length);\r\n    }\r\n\r\n    function batchMint(address[] memory addresses) external onlyOwner {\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            _safeMint(addresses[i], _owners.length);\r\n        }\r\n    }\r\n\r\n    function _baseURI() internal pure returns (string memory) {\r\n        return \"ipfs://QmdJAmuwj6hbmiVee6CJXjrKZhafKu9MJaT1XNjwAgdtQR/\";\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override(ERC721, ERC2981Base)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _owners.length;\r\n    }\r\n\r\n    function startMint() external onlyOwner {\r\n        mintStatus = true;\r\n    }\r\n\r\n    function setProxyRegistryAddress(address _proxyRegistryAddress)\r\n        external\r\n        onlyOwner\r\n    {\r\n        proxyRegistryAddress = _proxyRegistryAddress;\r\n    }\r\n\r\n    function setRoyalties(address _to, uint256 _amount) external onlyOwner {\r\n        _setRoyalties(_to, _amount);\r\n    }\r\n\r\n    function whitdraw(address payable _to) external onlyOwner {\r\n        bool sent = _to.send(address(this).balance);\r\n        require(sent, \"Failed to send Ether\");\r\n    }\r\n\r\n    function isApprovedForAll(address _owner, address operator)\r\n        public\r\n        view\r\n        override\r\n        returns (bool)\r\n    {\r\n        OpenSeaProxyRegistry proxyRegistry = OpenSeaProxyRegistry(\r\n            proxyRegistryAddress\r\n        );\r\n        if (address(proxyRegistry.proxies(_owner)) == operator) return true;\r\n        return super.isApprovedForAll(_owner, operator);\r\n    }\r\n}\r\n\r\ncontract OwnableDelegateProxy {}\r\n\r\ncontract OpenSeaProxyRegistry {\r\n    mapping(address => OwnableDelegateProxy) public proxies;\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"whitdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PunkPortraits", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000003aa000000000000000000000000da73c6ea42be57f4209144af5f5fa74388ac38b7000000000000000000000000073e4118618f050c497eddde52720844c80c867b00000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed70000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000b93f2ef6bd2f7960c85185a45febe1aa62d076b4000000000000000000000000871e829bbaff2dc053600015bf40330838a8dc9900000000000000000000000029d106e38313ad2bdc21a8239c57c04bfc577b02000000000000000000000000c089b980202388b1320d6a6a48067016172e640a00000000000000000000000029d106e38313ad2bdc21a8239c57c04bfc577b0200000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed7000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000871e829bbaff2dc053600015bf40330838a8dc99000000000000000000000000628e97be4f101d5496568c2cbf55e6da39cd08b9000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000000001f568875f378bf6d170b790967fe429c81a000000000000000000000000871e829bbaff2dc053600015bf40330838a8dc9900000000000000000000000036e058332ae39efad2315776b9c844e30d07388b000000000000000000000000ef72d859fbf843ce0f5e8cc7392d7530192d32f9000000000000000000000000bf4aff525444cdbb225d02190bd07cb726dbb66700000000000000000000000078f9e07347d3ed6353a355be30c9757d35dcf66e000000000000000000000000d6c5d2eb8c1f2f8f28573b19a133cbfce581546f00000000000000000000000078f9e07347d3ed6353a355be30c9757d35dcf66e000000000000000000000000000001f568875f378bf6d170b790967fe429c81a0000000000000000000000003e09819c94407f3c657475c01808baa0998841980000000000000000000000008660fc66cf3e06d86e8013c3b6be5592a5fa916a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000002009b51ede557ed891158fd631f5d9615ebadbe1000000000000000000000000baca135d297d17b584327f7bb436df5d271a2ac10000000000000000000000006f83e104fc8490abbe410ff7960a7ebbbac6b3870000000000000000000000003c36520f737fd25ed48b00a60de92b620d7a1a8800000000000000000000000094c7c5f905fc888ddc48c51a90b68ddec44f8d8c000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a0000000000000000000000006fb3131cbc3bdb6a662b9dea36df00228dd6d1f8000000000000000000000000de19f47fea24b129b452be129ee6575084cd5d3f0000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd426000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000bd8b22428c4ced234d7093a47cd25827eff58364000000000000000000000000000001f568875f378bf6d170b790967fe429c81a000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a5200000000000000000000000000e8170bc2483571d06aadf73ed5f90e0719c6afa4000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd090000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000e7a8a504a82f0a829656261a54d0443f85e1960400000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000c20be80ea7cf5d28c6eea88b0130eb4e725ec176000000000000000000000000baca135d297d17b584327f7bb436df5d271a2ac10000000000000000000000000913adaecd9497261de4f3803bbf56b85f309c5d0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000e83f6a00e8b402fbbe21535fe02040c7f39a6e00000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000cc3b434bae594df04c60f5b534dd7e6e8bda534e000000000000000000000000dd1fc09c90269fbc95280e8b9e48fcae6aed515e000000000000000000000000c089b980202388b1320d6a6a48067016172e640a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b898456000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000003afae5d38342722b038ac91eb59ef23c67f24596000000000000000000000000529d6f651bf56a082dc1f7efcb41b23dc6888f9a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000020d64f7a9b31a08871a091414e1f757bf3eb47c60000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd090000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006d3fbea6bf920fed68f2f68a03427265948909490000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000bd8b22428c4ced234d7093a47cd25827eff58364000000000000000000000000888851dc68c2f675c48b9967dd234dbe0e955fb70000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000000913adaecd9497261de4f3803bbf56b85f309c5d000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000037ae84b2742b971648f198634abed0b3ed94fa460000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000000001f568875f378bf6d170b790967fe429c81a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000c50562d6932f5f0893b00f3faff93267163a278f000000000000000000000000b93f2ef6bd2f7960c85185a45febe1aa62d076b40000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000056d1a159e16811171a17c35464e7cb60648334ca000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000b993ee0ada2cae503cc9c61e7927269cca75df280000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000b93f2ef6bd2f7960c85185a45febe1aa62d076b4000000000000000000000000888851dc68c2f675c48b9967dd234dbe0e955fb70000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000871e829bbaff2dc053600015bf40330838a8dc990000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000c50562d6932f5f0893b00f3faff93267163a278f0000000000000000000000008ed7e05bdecaa4eb5e2063e0ae8b1bada450db85000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000bd8b22428c4ced234d7093a47cd25827eff583640000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006ec6a84f742b9fb988051b0678ade169a59be0510000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000baca135d297d17b584327f7bb436df5d271a2ac1000000000000000000000000e01a97fc4607a388a41626d5e039fdecbfc6acd90000000000000000000000009bb5df0baaa0094d84c6c36a260ed5ef8e2e426b0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000bd8b22428c4ced234d7093a47cd25827eff58364000000000000000000000000e01a97fc4607a388a41626d5e039fdecbfc6acd9000000000000000000000000c089b980202388b1320d6a6a48067016172e640a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000aa44259408189307edf54bb9bd956d8b97444cb0000000000000000000000000888851dc68c2f675c48b9967dd234dbe0e955fb7000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000721f6dbdbf6cae406939f2312f4193bebbc1e37e0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000529d6f651bf56a082dc1f7efcb41b23dc6888f9a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000033470396b46baa5796f91b0a61a83cf7476c1eac0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000359edfbc35a994d1af4c14e011bc5652e237c5f3000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000fa06722970f02f94e860e78dd5c4a6e8e76af96c000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000af34964b228d7c671fdac25a277f9d9a33fa97300000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000043247c7db36054ea50c64bb1d4bafb55703552eb0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000d8e04e29a127389d178c7d75f496cdeb1c28d1eb000000000000000000000000552b113950bd0bb654cc7c525981f8407306aa1e000000000000000000000000ddf3a4666dd562627c2cea9408a9f31af11da1820000000000000000000000006f83e104fc8490abbe410ff7960a7ebbbac6b38700000000000000000000000072a1bfd6d614bb868f4e5d3380777ad62b25702000000000000000000000000020d64f7a9b31a08871a091414e1f757bf3eb47c60000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b898456000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000baca135d297d17b584327f7bb436df5d271a2ac100000000000000000000000020d64f7a9b31a08871a091414e1f757bf3eb47c60000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c0000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c00000000000000000000000069fb9ddaa7f8b0cee98d2ea5b3dc0184fafd40360000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000036e058332ae39efad2315776b9c844e30d07388b0000000000000000000000008ed7e05bdecaa4eb5e2063e0ae8b1bada450db850000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000b993ee0ada2cae503cc9c61e7927269cca75df280000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000026103a34e06157a90a6c2c067c5a183fb1f1b4bc000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000005986591391b5dd78c7170e6e16a17aed05b50b1d00000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e00000000000000000000000036e058332ae39efad2315776b9c844e30d07388b0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed70000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000b93f2ef6bd2f7960c85185a45febe1aa62d076b4000000000000000000000000b032926aa3cfb0a2b7f6c25f04cbb00bbd7453c700000000000000000000000020d64f7a9b31a08871a091414e1f757bf3eb47c60000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed700000000000000000000000029e5f2b2f0f05dc05ee300fcd6b0435651864e710000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000037b321921061a2a80d55c395c48e182128628ab3000000000000000000000000d091ff8f518b2ceb5ecebedeaa123e73bf88f49d0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a5200000000000000000000000000504962d5c436b3a2a2ed65fdc336a26b06d16d680000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000069d0205af0a34609db87e4693c16428b773c5b47000000000000000000000000888851dc68c2f675c48b9967dd234dbe0e955fb70000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000000001f568875f378bf6d170b790967fe429c81a000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f000000000000000000000000dd7277595b2dbc64e2e4cf103415217896f006c8000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000bf4aff525444cdbb225d02190bd07cb726dbb6670000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000db6b6395b8a748ea7e9df7aac3a79f184a37651d0000000000000000000000008ed7e05bdecaa4eb5e2063e0ae8b1bada450db850000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000010d03387559f2395d5f920df9e63defcd7a453d4000000000000000000000000aa44259408189307edf54bb9bd956d8b97444cb00000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000cc3b434bae594df04c60f5b534dd7e6e8bda534e0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a52000000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000009543d139004c4318bfe823141744f937d977fc4d000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b898456000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000dd15a564d7f6060f82b15b8ab4e1222ca02de74a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c000000000000000000000000dd36775b71b764cc1530a87ad61760c8aa46d9660000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000043247c7db36054ea50c64bb1d4bafb55703552eb000000000000000000000000baca135d297d17b584327f7bb436df5d271a2ac10000000000000000000000001963fd1232e2fde8bf3180b9816d3262593956cd000000000000000000000000aa44259408189307edf54bb9bd956d8b97444cb0000000000000000000000000ae8de1366f97297b60944858efe88f811d5ebb570000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000020d64f7a9b31a08871a091414e1f757bf3eb47c60000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a52000000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000df85b9146d73a852d7b900d1abd974f2a8119f570000000000000000000000006f83e104fc8490abbe410ff7960a7ebbbac6b387000000000000000000000000c1551161c08da654704032a2475bf222e6cf00ad0000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b8984560000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd4260000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000f839413480bdd4d426558f0ef06c72751d0e769e0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000009d092a392a59a9963797e7c8b95515b26c720520000000000000000000000001085a3bf94a48fcf7c851a2a46de3cc975c3ed2f0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000e8d693f6859c278d4c4b17ef16bb218c46548242000000000000000000000000c1694183ac7178558682d12c68cd09462f1da884000000000000000000000000d3ea54bf679af8e50dc0a1fbd08d6c326e9e95b100000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b89845600000000000000000000000003433830468d771a921314d75b9a1dea53c165d70000000000000000000000006e2be4d0f24a8d9860aa5b7c4056adaa0d9d6193000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff10000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000484ec62385e780f2460feac34864a77ba5a18134000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c76289953000000000000000000000000ce451ed77ddfa4e06c02bc658bd32fb197591ca9000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff100000000000000000000000007224b9d5f89e3dc783049368724dfa2d98512559000000000000000000000000b164cb6268df6e4765fad0a39cad44d642d414030000000000000000000000000caf579be91a02a443303720a811bddf8bc96c90000000000000000000000000e05e5d7570a178347d184eee8f1d3b3c37ebb52f0000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd000000000000000000000000c183453cf81af2350be00c9f339e1d4dd7a289d30000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000004df36b12f518a6964a835dc82fb07bb7f7474193000000000000000000000000b164cb6268df6e4765fad0a39cad44d642d414030000000000000000000000000f045a0d77d24c326316e0315354e7df28b4ac50000000000000000000000000b032926aa3cfb0a2b7f6c25f04cbb00bbd7453c700000000000000000000000029e5f2b2f0f05dc05ee300fcd6b0435651864e71000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000f0d5127f685fe058247e03593d04cc2c4aa061a20000000000000000000000000717877d807f4d2206772f113e5326863b6d2131000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000b81a7cc5af4acb0294ee124b5ad01d8d46e80cf7000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000090aeddd45d3e4027ce75df02324569ab600c6e5c00000000000000000000000020b37032ea53ba81e78be3ecff8dd2fe3364684700000000000000000000000042a60d2f2ffa2150c568010a8d425f0aad284fd20000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000004d91838268f6d6d4e590e8fd2a001cd91c32e7a4000000000000000000000000dd1fc09c90269fbc95280e8b9e48fcae6aed515e00000000000000000000000020b37032ea53ba81e78be3ecff8dd2fe33646847000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd4260000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a52000000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd426000000000000000000000000acacc9bed6a9f547873ff261800643b2017afcfd0000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d000000000000000000000000d4db6d8ef756141de0d838808ddb8ffcd847d7ff00000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f000000000000000000000000c3e6911c2769ddff74a4e1b7ac859985fe415c730000000000000000000000004aa7ce7470281d66188a78f7f2cc6f912d20ad2f00000000000000000000000042a60d2f2ffa2150c568010a8d425f0aad284fd20000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e00000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000007d112b3216455499f848ad9371df0667a0d87eb6000000000000000000000000a2eb3547091a6393187ccc591ee499858325a1a4000000000000000000000000347d80606b41ce49145bc6ef92cc2917ced8ada2000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff10000000000000000000000000b993ee0ada2cae503cc9c61e7927269cca75df28000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c7628995300000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000c66135b1671ad1f2cae217ff19234a77f7a0b00c0000000000000000000000005e483aee66163f38974b775e4997e7dd7a90e0800000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000c50562d6932f5f0893b00f3faff93267163a278f000000000000000000000000cbb9ab939e21ceccaffe2b4c0591255336dbd9d800000000000000000000000009d092a392a59a9963797e7c8b95515b26c720520000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000ff33540c1210fe45f9c4c4ad876db2e42cdd36c9000000000000000000000000c3e6911c2769ddff74a4e1b7ac859985fe415c730000000000000000000000003800ac803890e767e9005bcdac5f75ec477640b40000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000006f83e104fc8490abbe410ff7960a7ebbbac6b3870000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d00000000000000000000000078f9e07347d3ed6353a355be30c9757d35dcf66e0000000000000000000000005688eedc08e9e7301c1d7102c95112253b393e1e000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000c8d770da0abd73f81df032d277094eaf406e6785000000000000000000000000a9f4f83ed4037bfd77070943f6030e11483caa85000000000000000000000000dc5b79a61367d39c528054763719d6c0cfbf6fcb000000000000000000000000defc78a7d86dbbc9a5326d8bdaf1c32264069a9300000000000000000000000099dc81489b75268baad66e2eb2301371d1ce235a0000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd00000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e0000000000000000000000008660fc66cf3e06d86e8013c3b6be5592a5fa916a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000036e058332ae39efad2315776b9c844e30d07388b000000000000000000000000acacc9bed6a9f547873ff261800643b2017afcfd00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b8984560000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000df85b9146d73a852d7b900d1abd974f2a8119f57000000000000000000000000a2272469c824d2b34407c08c1b377f3027406fea0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000006d0998e0513a739d1af438e35fe33b4dad258920000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f0000000000000000000000007d20fa735762f3f5148e7f2b5fa2add2e7919bdb000000000000000000000000b818c89f1a52e23fc157c7214166c8abd53806460000000000000000000000003900b9b7328e96aef2588cc7441509b85fa2f153000000000000000000000000aa9ef3940f260701bc12373a48d30356bc1ecb1b000000000000000000000000dd1fc09c90269fbc95280e8b9e48fcae6aed515e0000000000000000000000004d91838268f6d6d4e590e8fd2a001cd91c32e7a40000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000b982a385e99538181f1007e550cdb39f45bba3860000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000009e78a135e4feafe67361aa16842d834f26a9d57800000000000000000000000067e5ab5b573f01030a1076dda7a79ef0f31a1bfa00000000000000000000000081f3e1ae26955483943fced179f60d0eb965f2b70000000000000000000000008660fc66cf3e06d86e8013c3b6be5592a5fa916a000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000628e97be4f101d5496568c2cbf55e6da39cd08b9000000000000000000000000ed64e6548ffabff38695d5161445ef98054ad577000000000000000000000000b63347d5f92147e0517e7a21766256dfa8ce83a70000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000bf4aff525444cdbb225d02190bd07cb726dbb667000000000000000000000000b63347d5f92147e0517e7a21766256dfa8ce83a700000000000000000000000095fbae907107735ab59468643eaf473d4f1dcbda000000000000000000000000c3e6911c2769ddff74a4e1b7ac859985fe415c7300000000000000000000000039ee4fa36bb6bb3d100ab4929d8f8b1391bb58e20000000000000000000000009bd2f70a40067e77f0198f7ec3ffd12d9306184d0000000000000000000000006abc0b05b554212a6bcdc10f6bff26017d5adbb000000000000000000000000014430f963a07bf256e53ea27207f42ac93ac96a8000000000000000000000000cbb9ab939e21ceccaffe2b4c0591255336dbd9d800000000000000000000000039ee4fa36bb6bb3d100ab4929d8f8b1391bb58e20000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000b993ee0ada2cae503cc9c61e7927269cca75df280000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c0000000000000000000000005a0ca3defd08d7d2b0b172623353444ed41a58f40000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000000369aa0a8f78e6a8aaab866625913f47770cc7d000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c76289953000000000000000000000000bd8b22428c4ced234d7093a47cd25827eff5836400000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed7000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000ee80dd2eaa099b4720048b351cd6afbde75051510000000000000000000000006f3e50ac0df17a722dcf583e0162e3aef0f708e500000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff100000000000000000000000009c37782113bd825e9b5da1cf7140e6713b563d99000000000000000000000000ed64e6548ffabff38695d5161445ef98054ad5770000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000ad32842cc206fa7bbbc9437fc40f896bc5e511720000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000afd1e0562c91a933f4b40154045cee71939e95ea00000000000000000000000052b4df7b53523084673284301f4a02559f1a13d50000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000054ecad032486a010e5378bfb0aa2e6a752f335c40000000000000000000000000717877d807f4d2206772f113e5326863b6d213100000000000000000000000036e058332ae39efad2315776b9c844e30d07388b0000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c0000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d000000000000000000000000acb4716123fe8e40cf564f904e401e8435ac1caa000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000002378cb9c19bfa1fc503e1c4eb73516523c1201e000000000000000000000000a2272469c824d2b34407c08c1b377f3027406fea00000000000000000000000046ecb3f576c31290e1a4b359fd993e36e86ef9e100000000000000000000000091d8acec761d0c377e4ce43b9898a7bba3a50e2e0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000004d91838268f6d6d4e590e8fd2a001cd91c32e7a400000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000b3ab08e50adaf5d17b4ed045e660a5094a83bc01000000000000000000000000cae400e06b6d7d1632538c730223e9c06ee69f1200000000000000000000000008c033dffca38991d6ebf6a0c7609a93222fb65a0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000d4fa6e82c77716fa1ef7f5defc5fd6eeefbd3bff000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c76289953000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008d1f252306964cf4e7ff8171f2e361e8897fd997000000000000000000000000484ec62385e780f2460feac34864a77ba5a181340000000000000000000000008ed7e05bdecaa4eb5e2063e0ae8b1bada450db850000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000652012427447b31f77107041ecf01211f86c00f1000000000000000000000000951c8a7e3b3fb8b981c0dbb7a88fbb8c75608e5b000000000000000000000000bf96b053003f62c67dabd3d5fb64757033141ba3000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000de60bcc0f87564f4f4309a241ad9c9d762c43b120000000000000000000000006fb3131cbc3bdb6a662b9dea36df00228dd6d1f800000000000000000000000099dc81489b75268baad66e2eb2301371d1ce235a000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c76289953000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000d9c166b6b04328f4c10ca3d75b7315b622c67bc400000000000000000000000043c72b88ad5dcc2f3338ba23f2a35475ff0f41f1000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b8984560000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d00000000000000000000000042a60d2f2ffa2150c568010a8d425f0aad284fd2000000000000000000000000d9c166b6b04328f4c10ca3d75b7315b622c67bc4000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000000369aa0a8f78e6a8aaab866625913f47770cc7d000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a5200000000000000000000000000721f6dbdbf6cae406939f2312f4193bebbc1e37e000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000009e848c7b18006ece509b6e8e5b10b2b775929469000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000c432ae697dea94f6e9928f3a0828d0a4838b2d6100000000000000000000000073d4e8632ba37cc9bf9de5045e3e8834f78efa85000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c762899530000000000000000000000005377f74a2229216b2cc5081908582d66b193d7be000000000000000000000000ff6d777f00c09bc772408bf852d0f48891004417000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000ef566526b0b869e591e9bcbe72eabf6adc29522200000000000000000000000009d092a392a59a9963797e7c8b95515b26c720520000000000000000000000009e1a06aecb7bb2f96b67c6af9b4f4089b6a94501000000000000000000000000298f9986d957a41e4b975adc3a18e0245d65834b00000000000000000000000036e058332ae39efad2315776b9c844e30d07388b000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b8984560000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000acacc9bed6a9f547873ff261800643b2017afcfd000000000000000000000000ad7eae7b0912ed13161f8834efbc3d92e16193de000000000000000000000000e7a8a504a82f0a829656261a54d0443f85e19604000000000000000000000000d4db6d8ef756141de0d838808ddb8ffcd847d7ff000000000000000000000000ec1fbae15f17c1904a31947fbd0f8dec39590d920000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a00000000000000000000000027ad1a687c85acd4245516e9a42325bf91bbaf00000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f0000000000000000000000005774c601c1d485590949b99d386705164f31a953000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd090000000000000000000000005688eedc08e9e7301c1d7102c95112253b393e1e00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b89845600000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b89845600000000000000000000000043c72b88ad5dcc2f3338ba23f2a35475ff0f41f1000000000000000000000000f839413480bdd4d426558f0ef06c72751d0e769e000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000bf4aff525444cdbb225d02190bd07cb726dbb66700000000000000000000000084ae1f9ea46d6d5f4052863e837ba5c62e5f730f000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd090000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000006abc0b05b554212a6bcdc10f6bff26017d5adbb0000000000000000000000000bf4aff525444cdbb225d02190bd07cb726dbb667000000000000000000000000b993ee0ada2cae503cc9c61e7927269cca75df28000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000039ee4fa36bb6bb3d100ab4929d8f8b1391bb58e2000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000009a7c61f909f19b1b212ea45f3fddd173c13f2b640000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000005774c601c1d485590949b99d386705164f31a953000000000000000000000000e7a8a504a82f0a829656261a54d0443f85e19604000000000000000000000000816f1654a0a89893be7af4fed8c03dfdb10eac460000000000000000000000004d5f30669bf7130ebef6d74c04f443cfaf8e7877000000000000000000000000e656356d14cf0ace0932052a18e4c74f9074e0f40000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000000f045a0d77d24c326316e0315354e7df28b4ac50000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000046ecb3f576c31290e1a4b359fd993e36e86ef9e1000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c7628995300000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed7000000000000000000000000d4db6d8ef756141de0d838808ddb8ffcd847d7ff0000000000000000000000009a7c61f909f19b1b212ea45f3fddd173c13f2b64000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000d4db6d8ef756141de0d838808ddb8ffcd847d7ff000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a52000000000000000000000000000f045a0d77d24c326316e0315354e7df28b4ac500000000000000000000000005774c601c1d485590949b99d386705164f31a95300000000000000000000000009d092a392a59a9963797e7c8b95515b26c72052000000000000000000000000269d1fa49a0c33ff8f9842a7fa461c542755cb5800000000000000000000000049c8c6301fe4db765205daa67091a02bc4698220000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c76289953000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd0900000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000418cb257dcb714175bc97327bf28eb6397673f6f000000000000000000000000a0b28bfe494988b21375a1e91463e60c78f48b2c0000000000000000000000006fb3131cbc3bdb6a662b9dea36df00228dd6d1f80000000000000000000000003900b9b7328e96aef2588cc7441509b85fa2f153000000000000000000000000a5fd8aa778a554a88ecf80d5545a59d1892ff3df000000000000000000000000d3ea54bf679af8e50dc0a1fbd08d6c326e9e95b1000000000000000000000000cba7f4f44473e32dd01cd863622b2b8797681955000000000000000000000000b3ab08e50adaf5d17b4ed045e660a5094a83bc010000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000d9bdbde60f7646cc75bd2f58eea01049397ecef60000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000d4db6d8ef756141de0d838808ddb8ffcd847d7ff00000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e4800000000000000000000000043c72b88ad5dcc2f3338ba23f2a35475ff0f41f1000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000022f5a3dcebca514b19f85c04908d0902b1e2a74900000000000000000000000009d092a392a59a9963797e7c8b95515b26c720520000000000000000000000003a2ea5595098565e7362e04da30c5ec29435731f0000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c762899530000000000000000000000003900b9b7328e96aef2588cc7441509b85fa2f1530000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff100000000000000000000000005377f74a2229216b2cc5081908582d66b193d7be0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000007d112b3216455499f848ad9371df0667a0d87eb6000000000000000000000000d8893570a125b778eefd9e71390c8773bdf518f2000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd090000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf9600000000000000000000000029d106e38313ad2bdc21a8239c57c04bfc577b0200000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a00000000000000000000000046ecb3f576c31290e1a4b359fd993e36e86ef9e10000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000b2dd242312ba03807d06f51298b2830855f3837d0000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000009a45c63ef50d0cc8ccdaffc54ea5ac8007313a6f000000000000000000000000a5fd8aa778a554a88ecf80d5545a59d1892ff3df000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f0000000000000000000000003a2ea5595098565e7362e04da30c5ec29435731f0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000000f045a0d77d24c326316e0315354e7df28b4ac50000000000000000000000000bd9e322303fa0ee764d8efb497ca4b81589a281a000000000000000000000000f839413480bdd4d426558f0ef06c72751d0e769e0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000b2dd242312ba03807d06f51298b2830855f3837d00000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e48000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff1000000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000fc02b667501c16ac5e7c367cf8663d95dcf23d470000000000000000000000009663a4cf47174c02add34a60d9bac5252f59bf0c0000000000000000000000001085a3bf94a48fcf7c851a2a46de3cc975c3ed2f00000000000000000000000023400cd87ec153c8d899254a5bab74e3a2009cc9000000000000000000000000c219b4d0e3c0236a3effc48c4c6c9c3cd22deb1b000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000000369aa0a8f78e6a8aaab866625913f47770cc7d000000000000000000000000d84e3db11017d2cd1539582d033e15fde06927d200000000000000000000000009d092a392a59a9963797e7c8b95515b26c720520000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e00000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f00000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e480000000000000000000000006e7592ff3c32c93a520a11020379d66ab844bf5b000000000000000000000000040b1796ad2911e93013de5c703f0366a4171355000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c76289953000000000000000000000000b9a7329e124edb947255e58df434d4b495def0e9000000000000000000000000064143c8592fdc83e58c2c7efbbb38c5c599dd55000000000000000000000000ed64e6548ffabff38695d5161445ef98054ad5770000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d00000000000000000000000004f3c550216a29fdea8c7cf56823b7ed2fff8eff000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000004df36b12f518a6964a835dc82fb07bb7f747419300000000000000000000000087ae3929744864734cd009ad3be47d97fccb54d500000000000000000000000096261969759d851c928345f1872c6b99478a1292000000000000000000000000f8afad900fad71956e4e8cb4bbd143a51974286d000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e00000000000000000000000036e058332ae39efad2315776b9c844e30d07388b0000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd000000000000000000000000a2272469c824d2b34407c08c1b377f3027406fea000000000000000000000000e8d693f6859c278d4c4b17ef16bb218c465482420000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000001cabe07820d7e38bbe08026fe6474ef740e1e3910000000000000000000000006f83e104fc8490abbe410ff7960a7ebbbac6b387000000000000000000000000d9bdbde60f7646cc75bd2f58eea01049397ecef60000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000f0d5127f685fe058247e03593d04cc2c4aa061a20000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000000717877d807f4d2206772f113e5326863b6d21310000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd42600000000000000000000000047837546caf1951ab920618c27fdd96a372fd08300000000000000000000000068db7d679969f265b14ba8a495e4028360ad6759000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000eba59ee0f265a69a72f85765392aa8ce9601a0de000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000099dc81489b75268baad66e2eb2301371d1ce235a0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000000503ed50534614193fcd085c5de01728a482482200000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e480000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d000000000000000000000000b81a7cc5af4acb0294ee124b5ad01d8d46e80cf7000000000000000000000000f0d5127f685fe058247e03593d04cc2c4aa061a200000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b898456000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006eabb9bcdb1290ce289950b3f7b4566e74061e7f00000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a000000000000000000000000d8893570a125b778eefd9e71390c8773bdf518f20000000000000000000000003900b9b7328e96aef2588cc7441509b85fa2f1530000000000000000000000008e9fecc2f52b1bf356abb97467e2db33f8c4da83000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000b19fd0ab71d28eeef69a6641a85973e62a7290600000000000000000000000001649b7518ed8d64f07771ee16def11174afe8b120000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf96000000000000000000000000892e297c9d412feb1bc8d8fdb506da458f15d9610000000000000000000000003900b9b7328e96aef2588cc7441509b85fa2f153000000000000000000000000ae8de1366f97297b60944858efe88f811d5ebb57000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000a0b28bfe494988b21375a1e91463e60c78f48b2c00000000000000000000000039ee4fa36bb6bb3d100ab4929d8f8b1391bb58e2000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000d6c5d2eb8c1f2f8f28573b19a133cbfce581546f000000000000000000000000ec1fbae15f17c1904a31947fbd0f8dec39590d920000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd00000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e4800000000000000000000000046ecb3f576c31290e1a4b359fd993e36e86ef9e1000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a8000000000000000000000000e8592f7316cace6db12ba8b9bb65d8508c5f1dd10000000000000000000000001085a3bf94a48fcf7c851a2a46de3cc975c3ed2f0000000000000000000000008f00dd4fa196d287f9e862dbb39d66d8c7ef73640000000000000000000000009a45c63ef50d0cc8ccdaffc54ea5ac8007313a6f0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000006b071a40b7e778ca3f41fa00c2956daa5c2847a900000000000000000000000073ac93a7950af4e92be6ed06f1c9f0fc8d166838000000000000000000000000871e829bbaff2dc053600015bf40330838a8dc9900000000000000000000000076b31ca1c3b54336440c9c8ee5042d8ad10fe3f00000000000000000000000006f296016b95a05957a1d0a95a4f552010a6aa8b7000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000cc43055e3ce874307d4f19b66677e699a7b325520000000000000000000000000717877d807f4d2206772f113e5326863b6d21310000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000ae8de1366f97297b60944858efe88f811d5ebb57000000000000000000000000a9f4f83ed4037bfd77070943f6030e11483caa85000000000000000000000000b993ee0ada2cae503cc9c61e7927269cca75df28000000000000000000000000a56c04347abee42f663eff9bc2d0147b97c8f782000000000000000000000000b58639ac67ef8562c824e70e405d72185129d0080000000000000000000000000503ed50534614193fcd085c5de01728a4824822000000000000000000000000c8d770da0abd73f81df032d277094eaf406e6785000000000000000000000000484ec62385e780f2460feac34864a77ba5a181340000000000000000000000005c7ef5ae70072f7bdc3a546ce86b9e316af9f57b000000000000000000000000cca11a8edb05d64a654092e9551f9122d70ea80e0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a52000000000000000000000000005ffd27f190f3be421f5a9a770a2247b1decae8e3000000000000000000000000b58639ac67ef8562c824e70e405d72185129d008000000000000000000000000484ec62385e780f2460feac34864a77ba5a181340000000000000000000000006f83e104fc8490abbe410ff7960a7ebbbac6b387000000000000000000000000c2a801e009e1112616eb763f19e17d8ae7c5e3b1000000000000000000000000269d1fa49a0c33ff8f9842a7fa461c542755cb58000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f000000000000000000000000b93f2ef6bd2f7960c85185a45febe1aa62d076b4000000000000000000000000a8f7205cf1310d84da2d3698854de154d7dfdec70000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd4260000000000000000000000002e49e8df1aab74f276a873f6c65227f9444f576d000000000000000000000000d9bdbde60f7646cc75bd2f58eea01049397ecef6000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d57200000000000000000000000075b3705684114f6b5ff3a34760d2e11ddf4e1c8200000000000000000000000009d092a392a59a9963797e7c8b95515b26c720520000000000000000000000005688eedc08e9e7301c1d7102c95112253b393e1e0000000000000000000000001085a3bf94a48fcf7c851a2a46de3cc975c3ed2f0000000000000000000000008361740c844bab0bcb79a1344c6132e227c178d000000000000000000000000047837546caf1951ab920618c27fdd96a372fd083000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff1000000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b8984560000000000000000000000003146a2997e71155c144ae25fce2d866092bc91f3000000000000000000000000a23cb68780be74b254a5f7210ec6cf1c762899530000000000000000000000009683dc742a6bcaa683d2d806c7de567b7a005007000000000000000000000000484ec62385e780f2460feac34864a77ba5a181340000000000000000000000008933c63607d5759fd4f60675479d021d1204e3500000000000000000000000000913adaecd9497261de4f3803bbf56b85f309c5d00000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a0000000000000000000000000717877d807f4d2206772f113e5326863b6d213100000000000000000000000068db7d679969f265b14ba8a495e4028360ad67590000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000d8893570a125b778eefd9e71390c8773bdf518f20000000000000000000000008660fc66cf3e06d86e8013c3b6be5592a5fa916a00000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e000000000000000000000000db1c00a5cdc1849f999ff9e417a2556178cf73d7000000000000000000000000d3070893feae7a7b1c138dcdd5c0f5523912ad9a000000000000000000000000cca11a8edb05d64a654092e9551f9122d70ea80e0000000000000000000000001085a3bf94a48fcf7c851a2a46de3cc975c3ed2f000000000000000000000000484ec62385e780f2460feac34864a77ba5a18134000000000000000000000000e0f66ac65020ee81eb612ac865e9a35fb80ede8e000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000bd8b22428c4ced234d7093a47cd25827eff583640000000000000000000000003bf9c02f6164a68b9765469b3253fdbf5bd438e400000000000000000000000098e9de3364f73824b06fc6531c42b85e67a4a98c000000000000000000000000b81a7cc5af4acb0294ee124b5ad01d8d46e80cf7000000000000000000000000d3070893feae7a7b1c138dcdd5c0f5523912ad9a00000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e480000000000000000000000008ed7e05bdecaa4eb5e2063e0ae8b1bada450db8500000000000000000000000028784d9a5052ba0b559d457bfdf05c24d7598ed7000000000000000000000000cca11a8edb05d64a654092e9551f9122d70ea80e0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000ab400be42bdfba6db4d4dba455d92134538d34f30000000000000000000000004c47ab777f1f64d1f3d6efbf1cc7ab5a5224af4a000000000000000000000000f2d34ef188d20d36ad720489306dba86c8321ad30000000000000000000000003a2ea5595098565e7362e04da30c5ec29435731f000000000000000000000000c0d92f633ee8c8439783f5d2c06aafdb70e781b8000000000000000000000000000001f568875f378bf6d170b790967fe429c81a000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000dd1fc09c90269fbc95280e8b9e48fcae6aed515e00000000000000000000000093cb120ece0cabdf8eef969aedf21da074f16ccd00000000000000000000000073ac93a7950af4e92be6ed06f1c9f0fc8d1668380000000000000000000000003173303e94b4f2ec4e53406909513171afa5c64700000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e480000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd09000000000000000000000000073e4118618f050c497eddde52720844c80c867b00000000000000000000000039ee4fa36bb6bb3d100ab4929d8f8b1391bb58e2000000000000000000000000607123d3b88ff194153391c45e53a61137e4861d0000000000000000000000002506cd8c7bee35ebe54670bd28eb00692eacd42600000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000628e97be4f101d5496568c2cbf55e6da39cd08b9000000000000000000000000ccc78d2a72fa509f6e6834599f01be5864351157000000000000000000000000780c5432f01a83fd0368c47d08a806183368ce6b00000000000000000000000042a60d2f2ffa2150c568010a8d425f0aad284fd2000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000004a5dc87a3bfcba0e4c80de492c3f3af1cf06990c000000000000000000000000db1c00a5cdc1849f999ff9e417a2556178cf73d700000000000000000000000047837546caf1951ab920618c27fdd96a372fd08300000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e480000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a03500000000000000000000000078e6fe8e1d14a914c53b08e302e35443909dd24f00000000000000000000000042a60d2f2ffa2150c568010a8d425f0aad284fd20000000000000000000000000717877d807f4d2206772f113e5326863b6d2131000000000000000000000000e0485ffc7856b796a4d528812e7eac5d8cf3ff10000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd000000000000000000000000c66135b1671ad1f2cae217ff19234a77f7a0b00c00000000000000000000000046ecb3f576c31290e1a4b359fd993e36e86ef9e10000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000b557c389778881d050c7fb0ecc8ecad251a0fd0900000000000000000000000039ee4fa36bb6bb3d100ab4929d8f8b1391bb58e200000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e0000000000000000000000003c2262255793f2b4629f7b9a2d57ce78f7842a8d000000000000000000000000484ec62385e780f2460feac34864a77ba5a1813400000000000000000000000091d8acec761d0c377e4ce43b9898a7bba3a50e2e0000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000004d5f30669bf7130ebef6d74c04f443cfaf8e7877000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f0000000000000000000000008bbdfe1a25512e28754c5be6bb47ac384188da3a000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a800000000000000000000000055907cf476998d2f58591c6d0a10ecbbe249a8eb00000000000000000000000008d816526bdc9d077dd685bd9fa49f58a5ab8e48000000000000000000000000d6c5d2eb8c1f2f8f28573b19a133cbfce581546f000000000000000000000000606cca7f81b53c94ca321ffc122f0019b26cf7c0000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000003146a2997e71155c144ae25fce2d866092bc91f3000000000000000000000000b81a7cc5af4acb0294ee124b5ad01d8d46e80cf70000000000000000000000009a45c63ef50d0cc8ccdaffc54ea5ac8007313a6f00000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b898456000000000000000000000000e8170bc2483571d06aadf73ed5f90e0719c6afa400000000000000000000000020b37032ea53ba81e78be3ecff8dd2fe33646847000000000000000000000000607123d3b88ff194153391c45e53a61137e4861d0000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a035000000000000000000000000a6debd6cae8c688751fb0b112f2fb52f136c383400000000000000000000000020d64f7a9b31a08871a091414e1f757bf3eb47c6000000000000000000000000b2a0e4aacce3b5f1364ccdae92ce26002e7b3dc10000000000000000000000006f51e37f770b5c389ceaa42e1338a9c5c8d1a0350000000000000000000000003957efcb3d1c3f7e5a86520fd52e85b9e622dbac00000000000000000000000079c4213a328e3b4f1d87b4953c14759399db25e200000000000000000000000098e9de3364f73824b06fc6531c42b85e67a4a98c0000000000000000000000006b67623ff56c10d9dcfc2152425f90285fc74ddd0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000009067b919db6676aed26d15c184a752e6071f0042000000000000000000000000abd252cfbae138043e4fb5e667b489710964d5720000000000000000000000002c3b3fea418bf2d82ab2036ee3a35cd9648fab7a000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000abd252cfbae138043e4fb5e667b489710964d572000000000000000000000000e126b3e5d052f1f575828f61feba4f4f2603652a0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000003a2ea5595098565e7362e04da30c5ec29435731f0000000000000000000000009c6a5cb373b26774a3f91d13a8652db7618a520000000000000000000000000022f95c8bd456b565bdb1917aba5b0611c105ad5a000000000000000000000000e126b3e5d052f1f575828f61feba4f4f2603652a0000000000000000000000000f045a0d77d24c326316e0315354e7df28b4ac50000000000000000000000000724f321c4efed5e3c7cca40168610c258c82d02f000000000000000000000000cbc91045bfca0efe9fb01ad2dc2b72136caa4ef5000000000000000000000000b81a7cc5af4acb0294ee124b5ad01d8d46e80cf700000000000000000000000068db7d679969f265b14ba8a495e4028360ad6759000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000009a45c63ef50d0cc8ccdaffc54ea5ac8007313a6f000000000000000000000000040b1796ad2911e93013de5c703f0366a417135500000000000000000000000070a96ea5a3f8f0c4fc0fa010149cfed06b898456000000000000000000000000c93356bdeaf3cea6284a6cc747fa52dd04afb2a80000000000000000000000004c47ab777f1f64d1f3d6efbf1cc7ab5a5224af4a0000000000000000000000005688eedc08e9e7301c1d7102c95112253b393e1e00000000000000000000000036e058332ae39efad2315776b9c844e30d07388b0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000007d112b3216455499f848ad9371df0667a0d87eb600000000000000000000000002c52d0ad9be7181dfb12cd2e8f5f7d33e48787a0000000000000000000000003e17fac953de2cd729b0ace7f6d4353387717e9e0000000000000000000000007fb8f9e35b312a3828f1c24f1d2008e6cdf7bf960000000000000000000000009a45c63ef50d0cc8ccdaffc54ea5ac8007313a6f000000000000000000000000ad32842cc206fa7bbbc9437fc40f896bc5e5117200000000000000000000000065ba4f92d7dfa813ddbd849d9faf38a723dd9b1200000000000000000000000010c342c1188ce7c8b3444d8c7b99765dadd5026e000000000000000000000000ce30eb1e3ddc58a4195cae6b935e6cd7d1ead6ff000000000000000000000000ce30eb1e3ddc58a4195cae6b935e6cd7d1ead6ff000000000000000000000000ce30eb1e3ddc58a4195cae6b935e6cd7d1ead6ff00000000000000000000000065ba4f92d7dfa813ddbd849d9faf38a723dd9b12", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0f8fdc4704ce8def4e179e0eac5679450e063e241ff2d552e2b9d831f171d9df"}]}