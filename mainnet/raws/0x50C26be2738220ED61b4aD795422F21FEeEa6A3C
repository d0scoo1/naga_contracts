{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/FactoryOwner.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\ncontract FactoryOwner {\\r\\n    receive() external payable {}\\r\\n\\r\\n    address payable constant contract_dev = payable(0x3b558B92B2B00cDeA8dFadd39818A9EfE67409dA);\\r\\n    address payable constant designer = payable(0xa302D3E2e71962D014F784820e155a96A1A78d8C);\\r\\n    address payable constant frontend_dev = payable(0x339E29D563E4983701FAcACba5997DEbBc8AC05F);\\r\\n\\r\\n    function harvest() public {\\r\\n        uint bal = address(this).balance;\\r\\n        contract_dev.transfer(bal * 60 / 100);\\r\\n        designer.transfer(bal * 20 / 100);\\r\\n        frontend_dev.transfer(bal * 20 / 100);\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "FactoryOwner", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}