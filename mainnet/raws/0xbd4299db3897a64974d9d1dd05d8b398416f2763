{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"ISeederV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Originally deployed at https://etherscan.io/address/0x2Ed251752DA7F24F33CFbd38438748BB8eeb44e1\\ninterface ISeederV2 {\\n    function getBatch() external view returns (uint256);\\n    function getReqByBatch(uint256 batch) external view returns (bytes32);\\n}\\n\"},\"ISeedStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Originally deployed at https://etherscan.io/address/0xFc8f72Ac252d5409ba427629F0F1bab113a7492F\\ninterface ISeedStorage {\\n    function getRandomness(bytes32 key) external view returns (uint256);\\n}\\n\"},\"RpSeeder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\u0027./ISeederV2.sol\\u0027;\\nimport \\u0027./ISeedStorage.sol\\u0027;\\n\\n/// @title Access to the batch seeder used by the Raid Party game\\ncontract RpSeeder is ISeederV2, ISeedStorage {\\n    ISeederV2 private immutable seederV2;\\n    ISeedStorage private immutable seedStorage;\\n\\n    constructor(address seederV2_, address seedStorage_) {\\n        seederV2 = ISeederV2(seederV2_);\\n        seedStorage = ISeedStorage(seedStorage_);\\n    }\\n\\n    function getBatch() external override view returns (uint256) {\\n        return seederV2.getBatch();\\n    }\\n\\n    function getReqByBatch(uint256 batch) external override view returns (bytes32) {\\n        return seederV2.getReqByBatch(batch);\\n    }\\n\\n    function getRandomness(bytes32 key) external override view returns (uint256) {\\n        return seedStorage.getRandomness(key);\\n    }\\n}\\n\"}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seederV2_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seedStorage_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getRandomness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"}],\"name\":\"getReqByBatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "RpSeeder", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000002ed251752da7f24f33cfbd38438748bb8eeb44e1000000000000000000000000fc8f72ac252d5409ba427629f0f1bab113a7492f", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://77e42297a6af3f5e6ccab6ba384d449fce354c7336e8cf48900814f32584a94e"}]}