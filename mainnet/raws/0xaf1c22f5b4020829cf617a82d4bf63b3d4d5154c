{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract BadgerBridgeUtils {\r\n    /// @dev Helper function to encode parameters for recovering TX\r\n    function encodeUserParams(\r\n        // user args\r\n        address _token, // either renBTC or wBTC\r\n        uint256 _slippage,\r\n        address _user,\r\n        address _vault\r\n    ) external pure returns (bytes memory encoded, bytes32 hashed) {\r\n        encoded = abi.encode(_token, _slippage, _user, _vault);\r\n        hashed = keccak256(encoded);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"encodeUserParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hashed\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "BadgerBridgeUtils", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://63954646b50a95a088659792fe88ff697fbbeaacb392127f6277524965cba62e"}]}