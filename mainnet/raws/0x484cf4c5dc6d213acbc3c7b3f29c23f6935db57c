{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\ncontract reciever{\r\naddress immutable owner;\r\naddress payable recieverAccount;\r\n\r\nconstructor(address  _reciever){\r\n    owner=msg.sender;\r\n    recieverAccount=payable(_reciever);\r\n}\r\n receive() external payable {\r\n     recieverAccount.transfer(address(this).balance);\r\n }\r\n\r\n function updateReciever(address _reciever) public {\r\n     require(msg.sender==owner);\r\n     recieverAccount=payable(_reciever);\r\n }\r\n \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reciever\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reciever\",\"type\":\"address\"}],\"name\":\"updateReciever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "reciever", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000006b1d6e240c10e131886e016f4945f1d8d95dc3ee", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://93f7a56dd5ee974a4c5465ee2d95caf023057a5100e91057bd3b1c8549009b78"}]}