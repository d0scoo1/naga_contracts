{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract executor {\r\n\r\n    address public owner;\r\n    address public implementation;\r\n\r\n    modifier onlyOwner {\r\n        require(owner==msg.sender,\"Go away\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setImplementation(address _imp) public onlyOwner {\r\n        implementation = _imp;\r\n    }\r\n\r\n    function _delegate(address _imp) internal virtual {\r\n        assembly {\r\n            // calldatacopy(t, f, s)\r\n            // copy s bytes from calldata at position f to mem at position t\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // delegatecall(g, a, in, insize, out, outsize)\r\n            // - call contract at address a\r\n            // - with input mem[in\u2026(in+insize))\r\n            // - providing g gas\r\n            // - and output area mem[out\u2026(out+outsize))\r\n            // - returning 0 on error and 1 on success\r\n            let result := delegatecall(gas(), _imp, 0, calldatasize(), 0, 0)\r\n\r\n            // returndatacopy(t, f, s)\r\n            // copy s bytes from returndata at position f to mem at position t\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            case 0 {\r\n                // revert(p, s)\r\n                // end execution, revert state changes, return data mem[p\u2026(p+s))\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                // return(p, s)\r\n                // end execution, return data mem[p\u2026(p+s))\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        _delegate(implementation);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_imp\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "executor", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e112bb4723385f3bde0c5463d45b4c70cda6fb1b2a0aea7a0b90e0eb41790d8d"}]}