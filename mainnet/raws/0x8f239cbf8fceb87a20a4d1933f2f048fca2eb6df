{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n//     __  ___         __  _             __  ___         __       __   //\r\n//    /  |/  /__ _____/ /_(_)__ ____    /  |/  /__ _____/ /_____ / /_  //\r\n//   / /|_/ / _ `/ __/ __/ / _ `/ _ \\  / /|_/ / _ `/ __/  '_/ -_) __/  //\r\n//  /_/  /_/\\_,_/_/  \\__/_/\\_,_/_//_/ /_/  /_/\\_,_/_/ /_/\\_\\\\__/\\__/   //\r\n//                                                by 0xInuarashi.eth   //\r\n/////////////////////////////////////////////////////////////////////////\r\n\r\n/*\r\n    Martian Market by 0xInuarashi for Message to Martians (Martians)\r\n    A Fully functioning on-chain CMS system that can be tapped into front-ends\r\n    and create a responsive website based on contract-specific databases.\r\n\r\n    ** THIS IS A DECENTRALIZED AND TRUSTLESS WHITELIST MARKETPLACE CREATION SYSTEM **\r\n\r\n    We chose not to use a proxy contract as multiple approvals have to be done\r\n    for this contract. In this case, we chose the most decentralized approach\r\n    which is to create an immutable contract with minimal owner access and \r\n    allow full control of contract owners' functions over their own database, \r\n    which is not editable or tamperable even by the Ownable owner themself.\r\n\r\n    >>>> User Access <<<<\r\n\r\n    For authorized controllers:\r\n        \r\n        Authorized controllers are able to: \r\n            - Create WL Vending Items \r\n            - Modify WL Vending Items \r\n    \r\n    For ERC20 contract owners:\r\n\r\n        Contract Owners are able to:\r\n            - Register Project Info\r\n            - Set Treasury Address\r\n            - Manage Authorized Controllers\r\n            - Add WL Vending Items\r\n            - Modify WL Vending Items\r\n            - Delete WL Vending Items \r\n\r\n    >>>> Interfacing <<<<<\r\n\r\n    To draw a front-end interface:\r\n    \r\n        getAllEnabledContracts() - Enumerate all available contracts for selection\r\n        (for contract-specific front-end interfaces, just pull data from your \r\n        contract only)\r\n    \r\n        getWLVendingItemsAll(address contract_) - Enumerate all vending items\r\n        available for the contract. Supports over 1000 items in 1 call but\r\n        if you get gas errors, use a pagination method instead.\r\n\r\n        Pagination method: \r\n        getWLVendingItemsPaginated(address contract_, uint256 start_, uint256 end_)\r\n        for the start_, generally you can use 0, and for end_, inquire from function\r\n        getWLVendingItemsLength(address contract_)\r\n\r\n    For interaction of users:\r\n\r\n        purchaseWLVendingItem(address contract_, uint256 index_) can be used\r\n        and automatically populated to the correct buttons for each WLVendingItem\r\n        for that, an ethers.js call is invoked for the user to call the function\r\n        which will transfer their ERC20 token and add them to the purchasers list\r\n\r\n    For administration:\r\n\r\n        setTreasuryAddress(address contract_, address treasury_) can only be set\r\n        by the contract owner. For this, they are able to set where the ERC20 tokens\r\n        from the whitelist marketplace sales go to. By default, this is 0x...dead\r\n        effectively burning the tokens\r\n\r\n        addWLVendingItem(address contract_, string calldata title_, \r\n        string calldata imageUri_, string calldata projectUri_,\r\n        string calldata description_, uint32 amountAvailable_, uint32 deadline_,\r\n        uint256 price_) is used to create a new WLVendingItem for your contract\r\n        with the details as the input arguments stated.\r\n\r\n        modifyWLVendingItem(address contract_, uint256 index_, \r\n        WLVendingItem memory WLVendingItem_) lets you modify a WLVendingItem.\r\n        You have to pass in a tuple instead. Only use when necessary. Not\r\n        recommended to use.\r\n\r\n        deleteMostRecentWLVendingItem(address contract_) we use a .pop() for this so\r\n        it can only delete the most recent item. For some mistakes that you made and\r\n        want to erase them.\r\n\r\n        manageController(address contract_, address operator_, bool bool_) is a special\r\n        governance function which allows you to add controllers to the contract\r\n        to do actions on your behalf. \r\n*/\r\n\r\nabstract contract Ownable {\r\n    address public owner; \r\n    constructor() { owner = msg.sender; }\r\n    modifier onlyOwner { require(owner == msg.sender, \"Not Owner!\"); _; }\r\n    function transferOwnership(address new_) external onlyOwner { owner = new_; }\r\n}\r\n\r\ninterface IERC20 {\r\n    function owner() external view returns (address);\r\n    function balanceOf(address address_) external view returns (uint256);\r\n    function transferFrom(address from_, address to_, uint256 amount_) external;\r\n}\r\n\r\ncontract MartianMarketWL is Ownable {\r\n\r\n    // Governance\r\n    IERC20 public MES = IERC20(0x3C2Eb40D25a4b2B5A068a959a40d57D63Dc98B95);\r\n    function setMES(address address_) external onlyOwner {\r\n        MES = IERC20(address_);\r\n    }\r\n\r\n    // Setting the Governor\r\n    address public governorAddress;\r\n    address public registrationCollector;\r\n    \r\n    constructor() {\r\n        governorAddress = msg.sender;\r\n        registrationCollector = address(this);\r\n    }\r\n\r\n    uint256 public registrationPrice = 2000 ether; // 2000 $MES\r\n\r\n    // Registry Fee Collector\r\n    function withdrawMESfromContract(address receiver_) external onlyOwner {\r\n        MES.transferFrom(address(this), receiver_, MES.balanceOf(address(this)));\r\n    }\r\n    function setRegistrationCollector(address collector_) external onlyOwner {\r\n        registrationCollector = collector_;\r\n    }\r\n\r\n    // Governance Setup\r\n    function setGovernorAddress(address governor_) external onlyOwner {\r\n        governorAddress = governor_;\r\n    }\r\n    modifier onlyGovernor {\r\n        require(msg.sender == governorAddress,\r\n            \"You are not the contract governor!\");\r\n        _;\r\n    }\r\n    function setRegistrationPrice(uint256 price_) external onlyOwner {\r\n        registrationPrice = price_;\r\n    }\r\n\r\n    // Here be the core logic of WL Vending //\r\n    struct ProjectInfo {\r\n        string projectName;\r\n        string tokenImageUri;\r\n    }\r\n\r\n    // Note: Add UNIX timestamp deadline (for active/past)\r\n    struct WLVendingItem {\r\n        string title;\r\n        string imageUri;\r\n        string projectUri;\r\n        string description;\r\n        uint32 amountAvailable;\r\n        uint32 amountPurchased;\r\n        uint32 deadline;\r\n        uint256 price;\r\n    }\r\n\r\n    // Database of Project Info for ERC20\r\n    mapping(address => ProjectInfo) public contractToProjectInfo;\r\n\r\n    // Database of Vending Items for each ERC20\r\n    mapping(address => WLVendingItem[]) public contractToWLVendingItems;\r\n    \r\n    // Database of Vending Items Purchasers for each ERC20\r\n    mapping(address => mapping(uint256 => address[])) public contractToWLPurchasers;\r\n    mapping(address => mapping(uint256 => mapping(address => bool))) public \r\n        contractToWLPurchased;\r\n\r\n    function getWLPurchasersOf(address contract_, uint256 index_) external view \r\n    returns (address[] memory) { \r\n        return contractToWLPurchasers[contract_][index_];\r\n    }\r\n\r\n    // Database for Authorized Controllers of each ERC20 Contract\r\n    mapping(address => mapping(address => bool)) public contractToControllersApproved;\r\n\r\n    // Database for Receiver wallet of Project\r\n    address internal burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n    mapping(address => address) public contractToTreasuryAddress;\r\n    function _getTreasury(address contract_) internal view returns (address) {\r\n        return contractToTreasuryAddress[contract_] != address(0) ? \r\n            contractToTreasuryAddress[contract_] : burnAddress; \r\n    }\r\n\r\n    // Database Entry for Project Infos\r\n    function ownerSetContractToProjectInfo(address contract_, string calldata \r\n    projectName_, string calldata tokenImage_) external onlyOwner {\r\n        contractToProjectInfo[contract_] = ProjectInfo(projectName_, tokenImage_);\r\n        emit ProjectInfoPushed(contract_, msg.sender, projectName_, tokenImage_);\r\n    }\r\n    function registerProjectInfo(address contract_, string calldata projectName_,\r\n    string calldata tokenImage_) external onlyContractOwner(contract_) {\r\n        contractToProjectInfo[contract_] = ProjectInfo(projectName_, tokenImage_);\r\n        emit ProjectInfoPushed(contract_, msg.sender, projectName_, tokenImage_);\r\n    }\r\n\r\n    // Database Entry for Enabled Addresses + Enumeration System //\r\n    mapping(address => bool) public contractToEnabled;\r\n\r\n    // Enumeration Tools \r\n    address[] public enabledContracts;\r\n    mapping(address => uint256) public enabledContractsIndex;\r\n\r\n    function getAllEnabledContracts() external view returns (address[] memory) {\r\n        return enabledContracts;\r\n    }\r\n    function _addContractToEnum(address contract_) internal {\r\n        enabledContractsIndex[contract_] = enabledContracts.length;\r\n        enabledContracts.push(contract_);\r\n    }\r\n    function _removeContractFromEnum(address contract_) internal {\r\n        uint256 _lastIndex = enabledContracts.length - 1;\r\n        uint256 _currentIndex = enabledContractsIndex[contract_];\r\n\r\n        // If the contract is not the last contract in the array\r\n        if (_currentIndex != _lastIndex) {\r\n            // Replace the to-be-deleted address with the last address\r\n            address _lastAddress = enabledContracts[_lastIndex];\r\n            enabledContracts[_currentIndex] = _lastAddress;\r\n        }\r\n\r\n        // Remove the last item\r\n        enabledContracts.pop();\r\n        // Delete the index\r\n        delete enabledContractsIndex[contract_];\r\n    }\r\n\r\n    // Database Entry Tools\r\n    function ownerSetContractToVending(address contract_, bool bool_) external\r\n    onlyOwner {\r\n        require(contractToEnabled[contract_] != bool_,\r\n            \"Contract Already Set as Boolean!\");\r\n\r\n        // Enum Tracking on bool_ statement\r\n        contractToEnabled[contract_] = bool_;\r\n        bool_ ? _addContractToEnum(contract_) : _removeContractFromEnum(contract_);\r\n        emit ContractAdministered(contract_, msg.sender, bool_);\r\n    }\r\n    \r\n    // Contract Registry\r\n    function registerContractToVending(address contract_) external {\r\n        require(msg.sender == IERC20(contract_).owner(),\r\n            \"You are not the Contract Owner!\");\r\n        require(!contractToEnabled[contract_],\r\n            \"Your contract has already been registered!\");\r\n        require(MES.balanceOf(msg.sender) > registrationPrice,\r\n            \"You don't have enough $MES!\");\r\n        \r\n        MES.transferFrom(msg.sender, registrationCollector, registrationPrice);\r\n        \r\n        contractToEnabled[contract_] = true;\r\n        _addContractToEnum(contract_);\r\n        emit ContractRegistered(contract_, msg.sender, registrationPrice);\r\n    }\r\n\r\n    // Modifier of Authorization to Administrative Functions\r\n    modifier onlyContractOwner (address contract_) {\r\n        require(msg.sender == IERC20(contract_).owner(),\r\n            \"You are not the Contract Owner!\");\r\n        require(contractToEnabled[contract_],\r\n            \"Please register your Contract first!\");\r\n        _;\r\n    }\r\n    modifier onlyAuthorized (address contract_, address operator_) {\r\n        require(contractToControllersApproved[contract_][operator_]\r\n            || msg.sender == IERC20(contract_).owner(),\r\n            \"You are not Authorized for this ERC20 Contract!\");\r\n        _;\r\n    }\r\n\r\n    // Events\r\n    event TreasuryManaged(address indexed contract_, address treasury_);\r\n    event OperatorManaged(address indexed contract_, address operator_, bool bool_);\r\n    event WLVendingItemAdded(address indexed contract_, string title_, string imageUri_,\r\n        string projectUri_, string description_, uint32 amountAvailable_, \r\n        uint32 deadline_, uint256 price_);\r\n    event WLVendingItemRemoved(address indexed contract_, address operator_,\r\n        WLVendingItem item_);\r\n    event WLVendingItemPurchased(address indexed contract_, uint256 index_, \r\n        address buyer_, WLVendingItem item_);\r\n    event ContractRegistered(address indexed contract_, address registerer_,\r\n        uint256 registrationPrice_);\r\n    event ContractAdministered(address indexed contract_, address registerer_,\r\n        bool bool_);\r\n    event ProjectInfoPushed(address indexed contract_, address registerer_,\r\n        string projectName_, string tokenImage_);\r\n    event WLVendingItemModified(address indexed contract_, WLVendingItem before_,\r\n        WLVendingItem after_);\r\n\r\n    // Core Functions of WL Vending (Admin)\r\n    function setTreasuryAddress(address contract_, address treasury_) external \r\n    onlyContractOwner(contract_) {\r\n        contractToTreasuryAddress[contract_] = treasury_;\r\n        emit TreasuryManaged(contract_, treasury_);\r\n    }\r\n\r\n    function manageController(address contract_, address operator_, bool bool_) \r\n    external onlyContractOwner(contract_) {\r\n        contractToControllersApproved[contract_][operator_] = bool_;\r\n        emit OperatorManaged(contract_, operator_, bool_);\r\n    }\r\n\r\n    function addWLVendingItem(address contract_, string calldata title_, \r\n    string calldata imageUri_, string calldata projectUri_, \r\n    string calldata description_, uint32 amountAvailable_, \r\n    uint32 deadline_, uint256 price_) external \r\n    onlyAuthorized(contract_, msg.sender) {\r\n        require(bytes(title_).length > 0,\r\n            \"You must specify a Title!\");\r\n        require(uint256(deadline_) > block.timestamp,\r\n            \"Already expired timestamp!\");\r\n\r\n        contractToWLVendingItems[contract_].push(\r\n            WLVendingItem(\r\n                title_,\r\n                imageUri_,\r\n                projectUri_,\r\n                description_,\r\n                amountAvailable_,\r\n                0,\r\n                deadline_,\r\n                price_\r\n            )\r\n        );\r\n        emit WLVendingItemAdded(contract_, title_, imageUri_, projectUri_, description_,\r\n        amountAvailable_, deadline_, price_);\r\n    }\r\n    function modifyWLVendingItem(address contract_, uint256 index_,\r\n    WLVendingItem memory WLVendingItem_) external \r\n    onlyAuthorized(contract_, msg.sender) {\r\n        WLVendingItem memory _item = contractToWLVendingItems[contract_][index_];\r\n\r\n        require(bytes(_item.title).length > 0,\r\n            \"This WLVendingItem does not exist!\");\r\n        require(WLVendingItem_.amountAvailable >= _item.amountPurchased,\r\n            \"Amount Available must be >= Amount Purchased!\");\r\n        \r\n        contractToWLVendingItems[contract_][index_] = WLVendingItem_;\r\n        emit WLVendingItemModified(contract_, _item, WLVendingItem_);\r\n    }\r\n\r\n    function deleteMostRecentWLVendingItem(address contract_) external\r\n    onlyAuthorized(contract_, msg.sender) {\r\n        uint256 _lastIndex = contractToWLVendingItems[contract_].length - 1;\r\n\r\n        WLVendingItem memory _item = contractToWLVendingItems[contract_][_lastIndex];\r\n\r\n        require(_item.amountPurchased == 0,\r\n            \"Cannot delete item with already bought goods!\");\r\n        \r\n        contractToWLVendingItems[contract_].pop();\r\n        emit WLVendingItemRemoved(contract_, msg.sender, _item);\r\n    }\r\n\r\n    // Core Function of WL Vending (User)\r\n    function purchaseWLVendingItem(address contract_, uint256 index_) external {\r\n        \r\n        // Load the WLVendingItem to Memory\r\n        WLVendingItem memory _item = contractToWLVendingItems[contract_][index_];\r\n\r\n        // Check the necessary requirements to purchase\r\n        require(bytes(_item.title).length > 0,\r\n            \"This WLVendingItem does not exist!\");\r\n        require(_item.amountAvailable > _item.amountPurchased,\r\n            \"No more WL remaining!\");\r\n        require(_item.deadline > block.timestamp,\r\n            \"Passed deadline!\");\r\n        require(!contractToWLPurchased[contract_][index_][msg.sender], \r\n            \"Already purchased!\");\r\n        require(IERC20(contract_).balanceOf(msg.sender) > _item.price,\r\n            \"Not enough tokens!\");\r\n\r\n        // Pay for the WL\r\n        IERC20(contract_).transferFrom(\r\n            msg.sender, _getTreasury(contract_), _item.price);\r\n        \r\n        // Add the address into the WL List \r\n        contractToWLPurchased[contract_][index_][msg.sender] = true;\r\n        contractToWLPurchasers[contract_][index_].push(msg.sender);\r\n\r\n        // Increment Amount Purchased\r\n        contractToWLVendingItems[contract_][index_].amountPurchased++;\r\n\r\n        emit WLVendingItemPurchased(contract_, index_, msg.sender, _item);\r\n    }\r\n\r\n    // Here be the core logic of CMS html element generation //\r\n    function getWLVendingItemsAll(address contract_) external view \r\n    returns (WLVendingItem[] memory) {\r\n        return contractToWLVendingItems[contract_];\r\n    }\r\n    function getWLVendingItemsLength(address contract_) external view \r\n    returns (uint256) {\r\n        return contractToWLVendingItems[contract_].length;\r\n    }\r\n    function getWLVendingItemsPaginated(address contract_, uint256 start_, uint256 end_)\r\n    external view returns (WLVendingItem[] memory) {\r\n        uint256 _arrayLength = end_ - start_ + 1;\r\n        WLVendingItem[] memory _items = new WLVendingItem[] (_arrayLength);\r\n        uint256 _index;\r\n\r\n        for (uint256 i = 0; i < _arrayLength; i++) {\r\n            _items[_index++] = contractToWLVendingItems[contract_][start_ + i];\r\n        }\r\n\r\n        return _items;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registerer_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"name\":\"ContractAdministered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registerer_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationPrice_\",\"type\":\"uint256\"}],\"name\":\"ContractRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"name\":\"OperatorManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registerer_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"projectName_\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenImage_\",\"type\":\"string\"}],\"name\":\"ProjectInfoPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury_\",\"type\":\"address\"}],\"name\":\"TreasuryManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title_\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"imageUri_\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"projectUri_\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"amountAvailable_\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"deadline_\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"WLVendingItemAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct MartianMarketWL.WLVendingItem\",\"name\":\"before_\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct MartianMarketWL.WLVendingItem\",\"name\":\"after_\",\"type\":\"tuple\"}],\"name\":\"WLVendingItemModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct MartianMarketWL.WLVendingItem\",\"name\":\"item_\",\"type\":\"tuple\"}],\"name\":\"WLVendingItemPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct MartianMarketWL.WLVendingItem\",\"name\":\"item_\",\"type\":\"tuple\"}],\"name\":\"WLVendingItemRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MES\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable_\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline_\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"addWLVendingItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractToControllersApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractToEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractToProjectInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenImageUri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractToTreasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractToWLPurchased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractToWLPurchasers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractToWLVendingItems\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"deleteMostRecentWLVendingItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"enabledContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enabledContractsIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllEnabledContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"getWLPurchasersOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"getWLVendingItemsAll\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct MartianMarketWL.WLVendingItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"getWLVendingItemsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end_\",\"type\":\"uint256\"}],\"name\":\"getWLVendingItemsPaginated\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct MartianMarketWL.WLVendingItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"name\":\"manageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"amountAvailable\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"amountPurchased\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct MartianMarketWL.WLVendingItem\",\"name\":\"WLVendingItem_\",\"type\":\"tuple\"}],\"name\":\"modifyWLVendingItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"projectName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenImage_\",\"type\":\"string\"}],\"name\":\"ownerSetContractToProjectInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bool_\",\"type\":\"bool\"}],\"name\":\"ownerSetContractToVending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"purchaseWLVendingItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"}],\"name\":\"registerContractToVending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"projectName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenImage_\",\"type\":\"string\"}],\"name\":\"registerProjectInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrationCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"}],\"name\":\"setGovernorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"setMES\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collector_\",\"type\":\"address\"}],\"name\":\"setRegistrationCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"name\":\"setRegistrationPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasury_\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"}],\"name\":\"withdrawMESfromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MartianMarketWL", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ce8eeabc1f5dda0cb6d264a3c458f49ef12b1843b6dff25af1fece70f1b874c7"}]}