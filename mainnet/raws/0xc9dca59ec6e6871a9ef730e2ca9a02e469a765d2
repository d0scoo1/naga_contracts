{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"StaticCallLibrary.sol\": {\r\n      \"content\": \"pragma solidity ^0.4.23;\\n\\nlibrary StaticCallProxy {\\n    function read(address, bytes memory) public returns (bytes32) {\\n        assembly {\\n            let _calldatasize := calldatasize()\\n            calldatacopy(0, 0, _calldatasize)\\n            \\n            // 0x9569bf28 = keccak256(readInternal(address,bytes))\\n            mstore8(0, 0x95)\\n            mstore8(add(0, 1), 0x69)\\n            mstore8(add(0, 2), 0xbf)\\n            mstore8(add(0, 3), 0x28)\\n            pop(call(gas(), address(), 0, 0, _calldatasize, 0, 0))\\n            returndatacopy(0, 0, returndatasize())\\n            return(0, 32)\\n        }\\n    }\\n}\\n\\ncontract Test {\\n    bytes32 abc = 0x5;\\n    \\n    function readInternal(address _destination, bytes _calldata) public returns (bytes32) {\\n        uint256 _calldata_length = _calldata.length;\\n        assembly {\\n            pop(call(gas(), _destination, 0, add(_calldata, 0x20), _calldata_length, 0, 0))\\n            returndatacopy(0, 0, returndatasize())\\n            revert(0, 32)\\n        }\\n    }\\n    \\n    function fakeState() public returns (bytes32) {\\n        abc = 0xd0990;\\n        return abc;\\n    }\\n\\n    function newState() public view returns (bytes32) {\\n        return StaticCallProxy.read(address(this), abi.encodeWithSignature(\\\"fakeState()\\\"));\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StaticCallProxy", "CompilerVersion": "v0.4.23+commit.124ca40d", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}