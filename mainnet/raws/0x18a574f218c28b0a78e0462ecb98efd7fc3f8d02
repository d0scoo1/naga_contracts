{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.16;\r\n\r\n/*\r\n\r\n  _____  ______ _____  ______       \r\n |  __ \\|  ____|  __ \\|  ____|      \r\n | |__) | |__  | |__) | |__         \r\n |  ___/|  __| |  ___/|  __|        \r\n | |    | |____| |    | |____       \r\n |_|___ |______|_|  _ |______|    _ \r\n |  __ \\| |   | |  | |/ ____| |  | |\r\n | |__) | |   | |  | | (___ | |__| |\r\n |  ___/| |   | |  | |\\___ \\|  __  |\r\n | |    | |___| |__| |____) | |  | |\r\n |_|    |______\\____/|_____/|_|  |_|\r\n        \r\nTokenized asset solution to the Pepe Plush shortage.\r\nStrictly limited supply (300) and indivisible.\r\n##For the discerning collector##\r\n\r\n                                    \r\n\r\n*/\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount);\r\n}\r\n\r\ncontract Crowdsale {\r\n    uint public price;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n// Set price and token\r\n\r\n        function Crowdsale()\r\n    {\r\n        price = 10;\r\n        tokenReward = token(0x27E45EBe436034250E1269A6b85074c91CD87fd0);\r\n    }\r\n// Set crowdsaleClosed\r\n\r\n    function set_crowdsaleClosed(bool newVal) public{\r\n        require(msg.sender == 0x0b3F4B2e8E91cb8Ac9C394B4Fc693f0fbd27E3dB);\r\n        crowdsaleClosed = newVal;\r\n    \r\n    }\r\n\r\n// Set price\r\n\r\n    function set_price(uint newVal) public{\r\n        require(msg.sender == 0x0b3F4B2e8E91cb8Ac9C394B4Fc693f0fbd27E3dB);\r\n        price = newVal;\r\n    \r\n    }\r\n\r\n// fallback\r\n\r\n    function () payable {\r\n        require(!crowdsaleClosed);\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        tokenReward.transfer(msg.sender, amount * price);\r\n        FundTransfer(msg.sender, amount, true);\r\n        0xb993cbf2e0A57d7423C8B3b74A4E9f29C2989160.transfer(msg.value / 2);\r\n        0x0b3F4B2e8E91cb8Ac9C394B4Fc693f0fbd27E3dB.transfer(msg.value / 2);\r\n        \r\n    }\r\n\r\n               \r\n\r\n    \r\n\r\n\r\n\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"newVal\",\"type\":\"uint256\"}],\"name\":\"set_price\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newVal\",\"type\":\"bool\"}],\"name\":\"set_crowdsaleClosed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]", "ContractName": "Crowdsale", "CompilerVersion": "v0.4.21+commit.dfe3193c", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://2e7980da9f31ff99362ae4cba696f87f975b5d943368908627f165322ee5006d"}]}