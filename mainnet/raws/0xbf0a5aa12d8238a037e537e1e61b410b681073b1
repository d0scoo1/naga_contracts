{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/JVS.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Jenn Visuals\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                            //\\n//                                                                                                            //\\n//    BBGG#&#&&##@@@&##&&@&&&&&&&@@@@@&#BB&&&#GPPJ7!JY?7J?7&#JYPJ5PPP55??~~^JPBGBBP?Y?&#Y5^^::::::........    //\\n//    &&#P5G#B#&&#&@&B&#&&&&&&##&&&&#BGGGGPPG5G5?!7?JYJ7?J?5?~~~!YJ!~^^^^!7~75PP5YP5~:?7:^:::::::.........    //\\n//    &#B#PJBGG&&&@@&&&&&&&#GPPB&##BBP5PGP5J5P5?J~7!755GG5YJG57Y?J?!~7!777~!!7YJ!JPG?!J77^.::.............    //\\n//    BGB&&B@&&@&&@@@@@&&@@&#5PBB#G#BBGBGGGPP55GG?J!!7??J!75P#YY?!YG?JJ!^^?!~^^^:^!!^77Y5~::::::.:........    //\\n//    BBB#&@@G#&&&&&&&&@@@&BB&BGP5PGGGBGGP?JYJ?JY?!!7?5??JJYJ5YJJ?G57?7^^~7^~!~~!^~~:^~^!:::::::::........    //\\n//    ##&&&&&5GB&&&&&B#@@&&@@#GGPPG#BGYY5YJ???7!7PP??GG5Y7~!!!?7?JY!7PJ~^^^^?J777~^^^?!:^^:::::...........    //\\n//    &##&&&BY##&##BBG#&&&@&#BPGGGB&#BPYGB5?5?55YBPYGPJ?!~7YYJ7?~~J~^!~~~^^~!~^^^~^7Y?!!?:::.:::..........    //\\n//    &&#&##G5BBBB&@@&@@@@@&&&&&&#B#BP5B@#Y7Y55G5G#&GJ7~~7J?77!!7~!!!?~~^!!~^::^~7!J7::::::::.............    //\\n//    &&&@@@&&&#B#@@@@@@@@@@@@@@&@@&&&B##PP57G&&BGGY?~~!75YJJJJ!7?J!~~!~!~^~^:^^7?7J^:~^^::::.:...........    //\\n//    &@@@@&B#@@&&&@@@@@@@@@@@@@@@&#&@@@#?J5GG&#GB57???~~7Y?7?77!75775Y77J~~^~77J!!~~7?7~:.:.::..:........    //\\n//    &&@@&&B&@@@@@@@@@@@@@@@@&&&&&#&&@@&&G#BP55Y7??55Y?57?JJ~!!77~~7?J~~!~^!?!~7!?!~~^:::::..:...........    //\\n//    &&&&&&&&&@@@@&&@@@@@@@&&@@&&&&&&BG#B##5?JP?7JBG!~??!7?!!7?J7!7G7!7!^~~~7~::!!~^!!~^::::.............    //\\n//    Y5G#B###&&&&&&@&&@@@&&&&&&&&@&&&BGPPGJ!J?!??JGG7!!^~77??7!??YJY77^^^77~~:~!?~~~::!^::::::...........    //\\n//    ?55GBBBBB#&&&&##&&&&&&&&&#&&B#&#GY5#5JPGJ5YPPGGP???5557!77!~~~~^7J~~~~!!^~Y?!?~^~^^:.::::...........    //\\n//    5GGP#&GGB###&&&#&&&##BG#&##&&&&#PP#B#&&&GY5PG#BG??J!7!^^^^^^^^~^~::^~777?Y7777:~!!^^:::::::.........    //\\n//    55GBBPJBG#&&&&&&@@@@&B###&&@&B#&#&&&&&#GBBB55PP557~^~7~~~^~^!~~!~!~~^^?YJ!!57!YYJ?^^::::::..........    //\\n//    P5PB#P7PGB##&&&&#&&##&&###&&&@&&@@@&&#GGGG5?7?!??7777!7!!^!77??P57?7!^77Y?!?JJYP!^~:::.::...........    //\\n//    BPGBBY!YG#####BBB#&&&&#GGGB&&&&&&&&&#PPGGJ7?J7!77JY!7J7!7?7!?Y7?YPY7!^!?YY????!?~~:::..::...........    //\\n//    ####BJ!J5#&#&&&#&&&&&#&&&#&&&&&&&&&BGPGG?!Y?77~!!?YGB##B#BPY7!JPY?!!!~!77!~J55Y?7~:::.::...:........    //\\n//    PB###J?PGBBB##&&##&&&BB###&&&GPBGGGG#BG?!!~?7J!PPGGG55#&BJ5#BPPYJ??77????JY?!~7J5~.:::.::...........    //\\n//    Y5###P5GG#&&&&&&&&&&&&&##BPGP5YJ7YY5GYJ?~!!7!?7JY?G#BGPGJYPG#BBY!Y57!5Y5PPYJ77!?Y~:::::::.::....:..:    //\\n//    55PGY5555G###&&###B#&#&BBGGB##57?YJJYY5Y75G5YPPB#B#BP57?PG##PGBB###G5YPP##BP5PJY5!.:.:::::.:..:::.:.    //\\n//    GG#&5?P#GB&&&&#PPYYB#&#G###&&GGPYYYJJGYPB&BB5YB&B#GJ5?PGP5?P5PG##&555YG##&&##BY5J^::::::::::...:.:..    //\\n//    BG&&#7P&BG##&&P?J555B&GB#GB&@&#PGGP5B##&#GPBPJJ5PGBP?YB&B#BGYJGBG&BBGBBBG##BPB#P#!::::::::::.:.^..:.    //\\n//    GG&&B7B&&B5PB&&#B###&&&&#GBB&#BGBGG#&&&&BB&&GPBGGGPJGGG#&&##5G&BB#&###B#&#5YPGBGY^:::::::::.........    //\\n//    P5##G7#&#BG##PGGB#&#&&@@@&#B#BB5PPB@@&&&&&&&&B&&&GYGBBB#####B&&##&&&&&#P55P#&#&&Y:::::^::.::.:....:.    //\\n//    GG#&Y!5GP5G##GB###B#&&&&###&&#BGGPB&##GB#&&#GJY5JJGGPP##BGB##&&&##&&BGGBPY5G#PPBJ::^:^::::.:...:::..    //\\n//    BG##Y~?55GB#P?J7?YJ?YPB#BPBBP5PPPPGGYY555555Y55?5PGG555Y5PPB##&&&&&G5#@&BGPP555P!::^:~::.:::...:.:.:    //\\n//    &PGB?~YGG######BB#&BB##B##BP5Y5GGGGG55GPJJJ5P55PPPGGPP5JJPGGBB#&&BYP#&&&#GGGPBGP7:::^::.::::...:.:..    //\\n//    PY5?!~7Y55P555GB#&&##BP55JYYY5Y55G&&##&#GGGGBBBB#BPGBG5PPY5BPG#&#GG#B##P5PYP5#&#!^::^:::.......:.:..    //\\n//    !?YY!~5GGGB#BGBB#B&&57J7?YPGGG55YJPGBBGPGBGGGG##&&#BBGBBGJYB5G#G&P5#BBBPG5?PGG&#!^^:::^:.:::...:.:..    //\\n//    5GGG?!B5~?55YJYPPG#BGY5YYPPP5P5YJ5P55B#B##BGPBBJ~~~~7JB&&###BB#&PPB##&&&&&&&&BGG~:^:::::.::::.:.....    //\\n//    @&#BPP#BGPG&&##&&&&&&G5JYBBP555Y5GBBGBB#&GPGGBG!^^^.  .?#&&GG#BG?P##B##B#&&&B##G^^::::::::::.:......    //\\n//    &&##P?B&&&@&&&##&&BBGBBB##BPPPPY5GGGP###B5JPY7YYYYJ7:  .!B&&&&P755PGPPBGB#&&&#BJ:^:::::.:.:..:.:.:.:    //\\n//    P55P?~GGGB&&&PG55JJ5?JY?PB#PYYPY!?!!5BGBBGG5.7~~Y?^^^: ^!JG#BG5J5Y5BG###GG#&&B#Y^^:::::::::.....::..    //\\n//    GGGGJ~BBGGBB#B#&&&#B5J!7J5BYJJ~!^:!JGJ?GY5G:.Y775J7??7: .7?JP5PP?7?BB&#BBPP###&5:^::^:::::::........    //\\n//    PGGBJ~5PY5Y5GG5GBBBGYY5Y5GBJ?J77?J?JY?JG5PP:.P5YJ77JY?:  :7^JJJJJ?Y5YJGBGGBGGPB~:^:::::::.::........    //\\n//    B&&&Y!#B5GB#GGG##BBBBBBGB#BP55YYYP5YJJY5PG5: 7Y7?7!!?!.  ...^JPY??JYYJYYPG#BGBB~:::^:^:::.:::.::..:.    //\\n//    GGB#?!#&#####B######BBBB##BBBBBBBBBBBBBBBBP:  ^JYJJ7^.    ..!5B#BPPBBGGBBB##B#B!^:^:^:::::^:.::.:...    //\\n//    #BBB77B##BBBBB############################P::^. :Y?~~.    ..^?GB&########BBBBBG~^:^^^::^::::::.:....    //\\n//    #BBB!?#####BB#######&#####################B?~?:  :J??^    :!7JGB#&####BBBBBBBB5::^:^:::::::.::.:..:.    //\\n//    #BBG~Y#####&########&########B##############GY~~^~!?7:.  .?Y5#&&&#####BBBBBBB#Y:^^^^:^::::.:......:.    //\\n//    B##G~P&&###&#&&&&&&&##################&&#BP55J7??JJ?J!.  .?5JY5P#BG5####BBB###7:^^^:::::::.:.:.:.:..    //\\n//    BBBP~P&##&&&&&&###########BBB#########BGYJJ?!7JJYY555!   .:77?YYPPPY##########~:^^^::^:::..::.:.....    //\\n//    ###G~5##&&&################GPGBB###BPY??7!~~!?JJ555P!   .~!^~?55GGYPB########B~:::^.:::::::::.:.:...    //\\n//    &&&G~P####&###########&&&&#BPG##&#Y?77!~~!?5B&BY555P7.  .:JJ^^!!!?YPPPBB#####B~:^:::::::::::.:......    //\\n//    ###5~P&&&&##############&&&&#GG&@G~!!7JPG###&&&P555557 ...^^. . :JJGGPP5#####P:^^:.::..^:.::::......    //\\n//    ##&P~P&&&##########B#####&##GJ5&#J?G##&&####&&&GY5555~ .^:.......?J5Y5~Y&G###?:::.::.::::.:.........    //\\n//    B##G!5##&&&#####&&####B#BB#GY7YP^~JJYPB#5#&&&&&#YJYYY~.~!^.......7JY5~75B?G&B::::::...:..:.:.:......    //\\n//    G##G!5#####&&&&#&@&##B&&#BGY?77^^!777!!7?B#&##&BG?7?7~!~~:......^JYY5?Y5G:P#!.::::.:.:.:..:.........    //\\n//    Y&&G!Y#####&@@@&&@&&#B&&#&BJ77^~!7!!77!~!Y5G555??~^?77!!^^::^^:.!YYY?!!77!JJ:^::::.:.::.............    //\\n//    ^B#P!Y####&&&&###&&#G5B##&BJJJ!77!!!!?5#BYJ??Y?7!::?J7!7!!~~!!~^7JYY7^J55!^::^:......:..............    //\\n//    ^!55!5#5G##&&#GGBBBGPY5B#G5JJJJ77?J5G###PJ??7!7???J5Y77!~~~~!~~!JY5Y5PJ5J:^:........................    //\\n//    ^:^77?BYB#GPP5JJ?!7YY!5B5YY??JY?!!5J??777???!^!?JJJ?!~~~~~~~^^^!7?JJJY5Y~~~:........................    //\\n//    ~^?P55P#&#BGP5PGBGGBPPP5JYJ??JJ7^?J?777777777?J5PPP5J~^^:::^^^~!~77??5?^:~:.........................    //\\n//    B##BB###&&&&@@@&&#B5PPYJJJJ??J7^7JJ?7?77?7?Y5PY5555PP55J!~^^~7?7!7?J?^~:...:::^:....................    //\\n//    ######&&&@@&&&&&&G?55JJJ??????J?B5???5JY5Y5J5J??JJYY5555PY?7!777777?7:^:..^^^7?J~.............  .       //\\n//    &&&&&&&@@&&&&#BBY7G5JJ?!~~77!!5#P7?7?YJJYJ^~J!~~!~!7?JJJY5Y5J?!7JJ?7?^!^::^..^~!7. ............... .    //\\n//    ##&#&&&&&&#BB##Y!JYJ?7~^^!7!!~!?7!!!7!^!~~::^^^^~^^~~~!!!77??7?7!???7^^::!!7^::?7  ............:....    //\\n//    B##BBBGG5PGGG#B5JJ?!~~^~!7777?YJ!7~:~^::^~77~^:::^^:^^^~~~!77777!~~!:.   ..^PG7?!............ .  ..     //\\n//    BBBGP555555GP?7Y5!~!!~~!!YPY55Y!7~..::^^~~~!!~~^:.::::::^^^~~~~^~~:..::.:^7^YBP?!:........  .           //\\n//    555555JY5PBG?!~^!~7J55PGGPJ77!?~~:.:!7!~^~~^.....  .........................:^755Y?~::::::..........    //\\n//    BBBGBB#BGP5YY?!!^^JPPG#BPP?7~::^:...:!J77~:.                . . .......~^:......::^~~^:::.:::.......    //\\n//    5GG5GBGPPJ55YJ?JJ?7~^!?77!^~:.....  ..^^~^::.......................^J7JBG5PGP557:::....::....:::::..    //\\n//    5??77J7??!~^^:~~~^:..:^:::......................................::7GB#&#&&&#BPBGY?7:..:7:........       //\\n//    ?:...:^^:....:~~?~^^^^!~::::.::...::......................:.....^7GB##B#BBY!~:^:^:::...~:...........    //\\n//    B5PPJ?JBG5PP55Y5PYJ7~~!^^:^~!JJ!:^::^^:......:....::......:::!Y5G#&&&B5YYJ^.:^:^^~?5Y!^::...........    //\\n//    &@@&&&&&&##BGBGGPJ~^^~!YPPB###GJ?GBBB#GY~::::...::.:^7YPGGPPGBB#BGP5?7~^~~?55J^^JPBGP??J7^..........    //\\n//    GGGBBBBGJ7!~^~7777!!~~!!!JYY?JJ5PPP555GGY7^::::!JJJ5B#BY?PB#BBGBG55YJ?Y5YYJ?!:..:^~:..:::.......:...    //\\n//    !!~~^~77JY55PGGY?7JY7?YPJ~~5GPGB#&&##BPY77!!!~JGGBB#&&G??PB#&&&&&#BGY75P5Y~::::^JY?~:^::..:.....:::.    //\\n//    PY?!~77?P5B##BY7!JGBBY7??~:^~~?P5J~?PGG5Y5B#BB#B5Y55J?!^!?5G#&&###BB5^~^:.:::~!!J!~!YPP57:::....::..    //\\n//                                                                                                            //\\n//                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract JVS is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Jenn Visuals\\\", \\\"JVS\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "JVS", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}