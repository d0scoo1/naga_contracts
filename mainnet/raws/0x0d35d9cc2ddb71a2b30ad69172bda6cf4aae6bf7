{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.8.11;\r\n\r\ninterface IMerkleWalletClaimer {\r\n    function claimFor(address owner, uint256 index, address wallet, address initialSigningKey, bytes calldata claimantSignature, bytes32[] calldata merkleProof) external;\r\n}\r\n\r\nstruct ClaimArgs {\r\n    address owner;\r\n    uint256 index;\r\n    address wallet;\r\n    address initialSigningKey;\r\n    bytes claimantSignature;\r\n    bytes32[] merkleProof;\r\n}\r\n\r\ncontract ClaimFacilitator {\r\n    IMerkleWalletClaimer private constant _claimer = IMerkleWalletClaimer(\r\n        0xD8470a6d796d54F13f243A4cf1a890E65bF3670E\r\n    );\r\n\r\n    function claimForInBatch(ClaimArgs[] memory claims) external {\r\n        unchecked {\r\n            for (uint256 i = 0; i < claims.length; ++i) {\r\n                ClaimArgs memory claim = claims[i];\r\n                _claimer.claimFor(\r\n                    claim.owner,\r\n                    claim.index,\r\n                    claim.wallet,\r\n                    claim.initialSigningKey,\r\n                    claim.claimantSignature,\r\n                    claim.merkleProof\r\n                );\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialSigningKey\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"claimantSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ClaimArgs[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"name\":\"claimForInBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ClaimFacilitator", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://17de9633e14e485327bd86fe6906b201ca4a40ba0a513d1c97d1d98abe6b895e"}]}