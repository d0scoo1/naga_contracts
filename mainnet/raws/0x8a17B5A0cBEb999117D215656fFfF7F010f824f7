{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/resolvers/mainnet/v1.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface VaultInterface {\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function getCurrentExchangePrice()\\n        external\\n        view\\n        returns (\\n            uint256 exchangePrice_,\\n            uint256 newRevenue_,\\n            uint256 stEthCollateralAmount_,\\n            uint256 wethDebtAmount_\\n        );\\n\\n    struct Withdraw {\\n        uint128 amount;\\n        uint128 time;\\n    }\\n\\n    function userWithdrawals(address user_)\\n        external\\n        view\\n        returns (Withdraw[] memory);\\n}\\n\\ncontract VaultResolver {\\n    VaultInterface public immutable vault;\\n\\n    struct Withdraw {\\n        uint128 amount;\\n        uint128 time;\\n    }\\n\\n    function getUserInfo(address user_)\\n        public\\n        view\\n        returns (\\n            uint256 vtokenBal_,\\n            uint256 amount_,\\n            uint256 exchangePrice_,\\n            VaultInterface.Withdraw[] memory pendingWithdrawals\\n        )\\n    {\\n        vtokenBal_ = vault.balanceOf(user_);\\n        (exchangePrice_, , , ) = vault.getCurrentExchangePrice();\\n        amount_ = (vtokenBal_ * exchangePrice_) / 1e18;\\n        pendingWithdrawals = vault.userWithdrawals(user_);\\n    }\\n\\n    constructor(address vaultAddr_) {\\n        vault = VaultInterface(vaultAddr_);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultAddr_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vtokenBal_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice_\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"time\",\"type\":\"uint128\"}],\"internalType\":\"struct VaultInterface.Withdraw[]\",\"name\":\"pendingWithdrawals\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract VaultInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "VaultResolver", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000005e5558f9ac2c266ad1b2d39a3d14a395f1727fbc", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}