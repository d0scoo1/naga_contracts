{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"sources\": {\r\n    \"ILenderVerifier.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface ILenderVerifier {\\n    function isAllowed(\\n        address lender,\\n        uint256 amount,\\n        bytes memory signature\\n    ) external view returns (bool);\\n}\\n\"\r\n    },\r\n    \"IManageable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface IManageable {\\n    function manager() external view returns (address);\\n}\\n\"\r\n    },\r\n    \"WhitelistLenderVerifier.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport {ILenderVerifier} from \\\"ILenderVerifier.sol\\\";\\nimport {IManageable} from \\\"IManageable.sol\\\";\\n\\ncontract WhitelistLenderVerifier is ILenderVerifier {\\n    mapping(IManageable => mapping(address => bool)) public isWhitelisted;\\n\\n    event WhitelistStatusChanged(IManageable portfolio, address lender, bool status);\\n\\n    function isAllowed(\\n        address lender,\\n        uint256,\\n        bytes memory\\n    ) external view returns (bool) {\\n        return isWhitelisted[IManageable(msg.sender)][lender];\\n    }\\n\\n    function setLenderWhitelistStatus(\\n        IManageable portfolio,\\n        address lender,\\n        bool status\\n    ) external {\\n        require(msg.sender == portfolio.manager(), \\\"WhitelistLenderVerifier: Only portfolio manager can modify whitelist\\\");\\n        isWhitelisted[portfolio][lender] = status;\\n        emit WhitelistStatusChanged(portfolio, lender, status);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 20000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IManageable\",\"name\":\"portfolio\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"WhitelistStatusChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IManageable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IManageable\",\"name\":\"portfolio\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setLenderWhitelistStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WhitelistLenderVerifier", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "20000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}