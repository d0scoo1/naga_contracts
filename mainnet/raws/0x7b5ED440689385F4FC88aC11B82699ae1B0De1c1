{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.14;\r\n\r\ncontract EthDrops {\r\n\r\n    mapping(address => bool) isOwner;\r\n\r\n    constructor() {\r\n        isOwner[msg.sender] = true;\r\n    }\r\n\r\n    modifier owner {\r\n        require(isOwner[msg.sender] == true); _;\r\n    }\r\n\r\n    function addOwner(address user) public owner{\r\n        isOwner[user] = true;\r\n    }\r\n\r\n    function withdrawETH(address reciever) public owner{\r\n        uint contractBalance = address(this).balance;\r\n        payable(reciever).transfer(contractBalance);\r\n    }\r\n\r\n    function airDropEth(address[] memory accounts, uint256[] memory amounts) public owner {\r\n        require(accounts.length == amounts.length, \"Holders and amounts length must be the same\");\r\n        for(uint256 index = 0; index < accounts.length; index++){\r\n            address account = accounts[index];\r\n            uint256 amount = amounts[index];\r\n            payable(account).transfer(amount);\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airDropEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reciever\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "EthDrops", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://393dcebfb3fc9b314d08a548cdd17d4615316a0cb00507e66ff174cf2a944e14"}]}