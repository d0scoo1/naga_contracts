{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ThreeHexSimpleRenderer.sol\": {\r\n      \"content\": \"/// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\nimport {BytesUtils} from \\\"./utils/BytesUtils.sol\\\";\\n\\ncontract ThreeHexSimpleRenderer {\\n    using BytesUtils for uint256;\\n\\n    /// @param tokenId The tokenID to retrieve the URI of in\\n    /// format <baseURI>/<tokenId-as-hex-string>\\n    function render(uint256 tokenId, string calldata baseURI)\\n        public\\n        view\\n        virtual\\n        returns (string memory)\\n    {\\n        return\\n            bytes(baseURI).length > 0\\n                ? string.concat(baseURI, tokenId.toHexString3())\\n                : \\\"\\\";\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/utils/BytesUtils.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\n// forked from https://github.com/ensdomains/ens-contracts/blob/master/contracts/wrapper/BytesUtil.sol\\npragma solidity ^0.8.14;\\n\\nlibrary BytesUtils {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /*\\n    * @dev Returns the keccak-256 hash of a byte range.\\n    * @param self The byte string to hash.\\n    * @param offset The position to start hashing at.\\n    * @param len The number of bytes to hash.\\n    * @return The hash of the byte range.\\n    */\\n    function keccak(bytes memory self, uint offset, uint len) internal pure returns (bytes32 ret) {\\n        require(offset + len <= self.length);\\n        assembly {\\n            ret := keccak256(add(add(self, 32), offset), len)\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a unit less than 4096  to its ASCII `string` hexadecimal with length 3.\\n     * @dev Adapted from OpenZepplin's toHexString.\\n     * @param value The integer to convert.\\n     * @return string The hex string representation of the integer.\\n     */\\n    function toHexString3(uint256 value) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(3);            \\n        for (uint256 i = 3; i > 0; --i) {\\n            buffer[i-1] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"render\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ThreeHexSimpleRenderer", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}