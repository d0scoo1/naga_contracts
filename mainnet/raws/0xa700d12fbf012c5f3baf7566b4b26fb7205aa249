{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address tokenOwner) external view returns (uint balance);\r\n}\r\n\r\ncontract wallet\r\n{\r\n\r\n    function balances(address user, address[] memory tokens) external view returns (uint[] memory)\r\n    {\r\n        uint[] memory Balances = new uint[](tokens.length);\r\n\r\n      for (uint i = 0; i < tokens.length; i++)\r\n      {\r\n          if(tokens[i] != address(0x0))\r\n          { \r\n              Balances[i] = IERC20(address(tokens[i])).balanceOf(user);\r\n          } \r\n          else\r\n          {\r\n              Balances[i] = user.balance;\r\n          }\r\n      }\r\n      return Balances;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "wallet", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c1cef7bf436cc460508b73d8d01bd462e6aa4a77576ad314a6feeb9888f75306"}]}