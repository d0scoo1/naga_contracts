{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/common/LogoType.sol\": {\r\n      \"content\": \"//\\tSPDX-License-Identifier: MIT\\n/// @notice Helper to pick the logo types based on seed\\npragma solidity ^0.8.0;\\n\\nimport './Color.sol';\\n\\nlibrary LogoType {\\n  function getPalette(uint256 seed) public pure returns (Color.Palette memory) {\\n    Color.Palette[] memory palettes = Color.getPalettes();\\n    return palettes[seed % palettes.length];\\n  }\\n\\n  function getBackgroundType(uint256 seed) public pure returns (string memory) {\\n    string[7] memory backgroundTypes = ['Box', 'Pattern A', 'Pattern B', 'Pattern AX2', 'Pattern BX2', 'Pattern AB', 'GM'];\\n    uint256 index = random(seed) % 100;\\n    uint8[7] memory distribution = [8, 26, 39, 52, 65, 78, 100];\\n    for (uint8 i = 0; i < backgroundTypes.length; i++) {\\n      if (index < distribution[i]) {\\n        return backgroundTypes[i];\\n      }\\n    }\\n    return backgroundTypes[6];\\n  }\\n\\n  function getEmoticonType(uint256 seed) public pure returns (string memory) {\\n    string[3] memory emoticonTypes = ['The Flippening', 'Probably Nothing', 'Fren'];\\n    return emoticonTypes[seed % emoticonTypes.length];\\n  }\\n\\n  function getTextType(uint256 seed) public pure returns (string memory) {\\n    string[5] memory textTypes = ['Plain', 'Rug Pull', 'Mailbox', 'Warped Mailbox', 'NGMI'];\\n    uint256 index = random(seed) % 1000;\\n    uint16[5] memory distribution = [250, 350, 550, 750, 1000];\\n    for (uint8 i = 0; i < textTypes.length; i++) {\\n      if (index < distribution[i]) {\\n        return textTypes[i];\\n      }\\n    }\\n    return textTypes[0];\\n  }\\n  function getFillType(uint256 seed) public pure returns (string memory) {\\n    string[5] memory fillTypes = ['Solid', 'Linear Gradient', 'Radial Gradient', 'Blocked Linear Gradient', 'Blocked Radial Gradient'];\\n    return fillTypes[seed % fillTypes.length];\\n  }\\n\\n  function getFillTypeAlt(uint256 seed) public pure returns (string memory) {\\n    string[4] memory fillTypes = ['Linear Gradient', 'Radial Gradient', 'Blocked Linear Gradient', 'Blocked Radial Gradient'];\\n    return fillTypes[seed % fillTypes.length];\\n  }\\n\\n  function getFillColor(uint256 seed, string[] memory palette) public pure returns (string memory) {\\n    return palette[seed % palette.length];\\n  }\\n\\n  function getFilterType(uint256 seed) public pure returns (string memory) {\\n    string[2] memory filterTypes = ['None', 'A'];\\n    return filterTypes[seed % filterTypes.length];\\n  }\\n\\n  function getAnimationType(uint256 seed) public pure returns (bool) {\\n    bool[2] memory animationTypes = [true, false];\\n    return animationTypes[seed % animationTypes.length];\\n  }\\n\\n  function random(uint256 input) internal pure returns (uint256) {\\n    return uint256(keccak256(abi.encodePacked(input)));\\n  }\\n  \\n  function random(string memory input) internal pure returns (uint256) {\\n    return uint256(keccak256(abi.encodePacked(input)));\\n  }\\n}\"\r\n    },\r\n    \"contracts/common/Color.sol\": {\r\n      \"content\": \"//\\tSPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\nlibrary Color {\\n  \\n  struct Palette {\\n    string name;\\n    string[] backgroundColors;\\n    string[] emoticonColors;\\n    string[] textColors;\\n  }\\n\\n  function getPalettes() public pure returns (Palette[] memory) {\\n    Palette[] memory palettes = new Palette[](9);\\n    palettes[0] = getPalette1();\\n    palettes[1] = getPalette2();\\n    palettes[2] = getPalette3();\\n    palettes[3] = getPalette4();\\n    palettes[4] = getPalette5();\\n    palettes[5] = getPalette6();\\n    palettes[6] = getPalette7();\\n    palettes[7] = getPalette8();\\n    palettes[8] = getPalette9();\\n    return palettes;\\n  }\\n\\n  function getPalette1() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#D9D161';\\n    backgroundColors[1] = '#FFC9ED';\\n    backgroundColors[2] = '#C9CAF7';\\n    backgroundColors[3] = '#F2FA7F';\\n    backgroundColors[4] = '#53B7F0';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#AFA1C7';\\n    textColors[1] = '#644A91';\\n    textColors[2] = '#6C637A';\\n    textColors[3] = '#CCB9ED';\\n    textColors[4] = '#3F3A47';\\n\\n    return Palette('1', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette2() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#C25F4A';\\n    backgroundColors[1] = '#F5DDD7';\\n    backgroundColors[2] = '#8F4561';\\n    backgroundColors[3] = '#7D9C72';\\n    backgroundColors[4] = '#94C24A';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#3E7F8C';\\n    textColors[1] = '#425559';\\n    textColors[2] = '#1C3A40';\\n    textColors[3] = '#68868C';\\n    textColors[4] = '#998971';\\n\\n    return Palette('2', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette3() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#885FBD';\\n    backgroundColors[1] = '#80788D';\\n    backgroundColors[2] = '#495AF0';\\n    backgroundColors[3] = '#F5F1DF';\\n    backgroundColors[4] = '#BD955C';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#3E3D54';\\n    textColors[1] = '#716BDB';\\n    textColors[2] = '#9D9BD4';\\n    textColors[3] = '#312E5E';\\n    textColors[4] = '#7775A1';\\n\\n    return Palette('3', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette4() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#568F82';\\n    backgroundColors[1] = '#79DBC5';\\n    backgroundColors[2] = '#DBB36E';\\n    backgroundColors[3] = '#59478F';\\n    backgroundColors[4] = '#8163DB';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#5C441E';\\n    textColors[1] = '#E1C18E';\\n    textColors[2] = '#FFBE54';\\n    textColors[3] = '#574C3A';\\n    textColors[4] = '#A87D03';\\n\\n    return Palette('4', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette5() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#D9A561';\\n    backgroundColors[1] = '#FFEFED';\\n    backgroundColors[2] = '#FACAF7';\\n    backgroundColors[3] = '#CBED2E';\\n    backgroundColors[4] = '#78C7AC';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#B8A561';\\n    textColors[1] = '#856F1E';\\n    textColors[2] = '#C21D3E';\\n    textColors[3] = '#D1EAED';\\n    textColors[4] = '#769C96';\\n\\n    return Palette('5', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette6() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#D9D161';\\n    backgroundColors[1] = '#FFC9ED';\\n    backgroundColors[2] = '#C9CAF7';\\n    backgroundColors[3] = '#F2FA7F';\\n    backgroundColors[4] = '#53B7F0';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#AFA1C7';\\n    textColors[1] = '#644A91';\\n    textColors[2] = '#6C637A';\\n    textColors[3] = '#CCB9ED';\\n    textColors[4] = '#3F3A47';\\n\\n    return Palette('6', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette7() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#F5E564';\\n    backgroundColors[1] = '#F5C971';\\n    backgroundColors[2] = '#F5595B';\\n    backgroundColors[3] = '#D0C6F5';\\n    backgroundColors[4] = '#95BAF5';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#FFEE00';\\n    textColors[1] = '#F5A318';\\n    textColors[2] = '#F50008';\\n    textColors[3] = '#4B00F5';\\n    textColors[4] = '#1685F5';\\n\\n    return Palette('7', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette8() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#FDAD0E';\\n    backgroundColors[1] = '#F4671F';\\n    backgroundColors[2] = '#D60441';\\n    backgroundColors[3] = '#84265E';\\n    backgroundColors[4] = '#247D75';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#FFF6E1';\\n    textColors[1] = '#A01356';\\n    textColors[2] = '#4F516A';\\n    textColors[3] = '#F25322';\\n    textColors[4] = '#5B3486';\\n\\n    return Palette('8', backgroundColors, textColors, textColors);\\n  }\\n\\n  function getPalette9() public pure returns (Palette memory) {\\n    string[] memory backgroundColors = new string[](5);\\n    backgroundColors[0] = '#5E4D3D';\\n    backgroundColors[1] = '#FFFFE9';\\n    backgroundColors[2] = '#C1C9C3';\\n    backgroundColors[3] = '#F4F3F0';\\n    backgroundColors[4] = '#CFC9A5';\\n\\n    string[] memory textColors = new string[](5);\\n    textColors[0] = '#85A383';\\n    textColors[1] = '#CCCCBA';\\n    textColors[2] = '#A6ADA8';\\n    textColors[3] = '#4A4A48';\\n    textColors[4] = '#D1D0CD';\\n\\n    return Palette('9', backgroundColors, textColors, textColors);\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {\r\n      \"contracts/common/Color.sol\": {\r\n        \"Color\": \"0x5f7a340a7f1098ac10de93ffa4a08c3b1ba1f065\"\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getAnimationType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getBackgroundType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getEmoticonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"palette\",\"type\":\"string[]\"}],\"name\":\"getFillColor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getFillType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getFillTypeAlt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getFilterType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getPalette\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"backgroundColors\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"emoticonColors\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"textColors\",\"type\":\"string[]\"}],\"internalType\":\"struct Color.Palette\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"getTextType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "LogoType", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}