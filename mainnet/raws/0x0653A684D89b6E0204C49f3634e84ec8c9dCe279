{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/utils/DisperseButForERC721.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract DisperseButForERC721 {\\r\\n    function disperseToken(\\r\\n        IERC721 token,\\r\\n        address[] calldata recipients,\\r\\n        uint256[][] calldata tokenIds\\r\\n    ) external {\\r\\n        require(recipients.length == tokenIds.length, \\\"LENGTH_MISMATCH\\\");\\r\\n\\r\\n        for (uint256 i; i < recipients.length; i++) {\\r\\n            for (uint256 j; j < tokenIds[i].length; j++) {\\r\\n                token.transferFrom(msg.sender, recipients[i], tokenIds[i][j]);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function disperseTokenSafe(\\r\\n        IERC721 token,\\r\\n        address[] calldata recipients,\\r\\n        uint256[][] calldata tokenIds\\r\\n    ) external {\\r\\n        require(recipients.length == tokenIds.length, \\\"LENGTH_MISMATCH\\\");\\r\\n\\r\\n        for (uint256 i; i < recipients.length; i++) {\\r\\n            for (uint256 j; j < tokenIds[i].length; j++) {\\r\\n                token.safeTransferFrom(\\r\\n                    msg.sender,\\r\\n                    recipients[i],\\r\\n                    tokenIds[i][j]\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IERC721 {\\r\\n    function safeTransferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) external;\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) external;\\r\\n}\\r\\n\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokenIds\",\"type\":\"uint256[][]\"}],\"name\":\"disperseToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokenIds\",\"type\":\"uint256[][]\"}],\"name\":\"disperseTokenSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DisperseButForERC721", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}