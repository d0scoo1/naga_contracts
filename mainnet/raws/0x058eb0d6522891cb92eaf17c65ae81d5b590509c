{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\ninterface erc20 {\r\n  function balanceOf(address) external view returns (uint256);\r\n\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface vault {\r\n  function claimInsurance() external;\r\n}\r\n\r\ncontract DummyController {\r\n  address constant token = 0xA64BD6C70Cb9051F6A9ba1F163Fdc07E0DfB5F84;\r\n  address constant governance = 0x2D407dDb06311396fE14D4b49da5F0471447d45C;\r\n  address constant aLink = 0x29E240CFD7946BA20895a7a02eDb25C210f9f324;\r\n  address constant usdcStrategy = 0x25fAcA21dd2Ad7eDB3a027d543e617496820d8d6;\r\n\r\n  mapping(address => address) public vaults;\r\n  mapping(address => address) public strategies;\r\n\r\n  constructor() {\r\n    vaults[usdcStrategy] = aLink;\r\n    strategies[aLink] = usdcStrategy;\r\n  }\r\n\r\n  function want(address _vault) external view returns (address) {\r\n    return 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n  }\r\n\r\n  function balanceOf(address _vault) external view returns (uint256) {\r\n    return 0;\r\n  }\r\n\r\n  function claimInsurance(address _vault) external {\r\n    vault(_vault).claimInsurance();\r\n    _safeTransfer(token, governance, erc20(token).balanceOf(address(this)));\r\n  }\r\n\r\n  function withdraw(address _token) external {\r\n    _safeTransfer(_token, governance, erc20(_token).balanceOf(address(this)));\r\n  }\r\n\r\n  function _safeTransfer(\r\n    address _token,\r\n    address to,\r\n    uint256 value\r\n  ) internal {\r\n    (bool success, bytes memory data) = _token.call(\r\n      abi.encodeWithSelector(erc20.transfer.selector, to, value)\r\n    );\r\n    require(success && (data.length == 0 || abi.decode(data, (bool))));\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"claimInsurance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"want\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DummyController", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU LGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://aa4162fdf67fec7302485f840ca7a15a1389e759482815753d206405e32c704d"}]}