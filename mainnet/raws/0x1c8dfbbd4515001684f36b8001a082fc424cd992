{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/managementFeeStrategies/storage/ManagementFeeStorage.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.13;\\r\\n\\r\\ncontract ManagementFeeStorage {\\r\\n    address public manager;\\r\\n    uint256 platformFee;\\r\\n\\r\\n    constructor(uint256 _platformFee){\\r\\n        manager = msg.sender;\\r\\n        platformFee = _platformFee;\\r\\n    }\\r\\n\\r\\n    modifier onlyManager {\\r\\n        require(msg.sender == manager, \\\"Not Authorized\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @dev Function to set manager of the storage.\\r\\n    /// @param _manager Address of the new manager.\\r\\n    function setManager(address _manager) external onlyManager {\\r\\n        manager = _manager;\\r\\n    }\\r\\n\\r\\n    /// @dev Function to get percentage of the fee that goes to the platform.\\r\\n    function getPlatformFee() external view returns (uint256) {\\r\\n        return platformFee;\\r\\n    }\\r\\n\\r\\n    /// @dev Function to set percentage of the fee that goes to the platform.\\r\\n    /// @param _platformFee Percentage of the fee that goes to the platform.\\r\\n    function setPlatformFee(uint256 _platformFee) external onlyManager {\\r\\n        platformFee = _platformFee;\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"petersburg\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getPlatformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ManagementFeeStorage", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000006f05b59d3b20000", "EVMVersion": "petersburg", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}