{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n //SPDX-License-Identifier: UNLICENSED\r\n*/\r\npragma solidity ^0.8.4;\r\ncontract PaymentSplitter {\r\n    address payable private _address1;\r\n    address payable private _address2;\r\n    address payable private _address3;\r\n\r\n\r\n    receive() external payable {}\r\n\r\n    constructor() {\r\n        _address1 = payable(0x3F984dB117DD87204A40413Daf39B67D8628653F); // C\r\n        _address2 = payable(0x5F0B28110655c8A111072372c14dcA291C26d2b9); // R\r\n        _address3 = payable(0x527C3b8bDe79F956DA4FE311cA08C0C9a47d576a); // J\r\n    }\r\n\r\n    function withdraw() external {\r\n        require(\r\n            msg.sender == _address1 ||\r\n            msg.sender == _address2 ||\r\n            msg.sender == _address3 \r\n        , \"Invalid admin address\");\r\n\r\n        uint256 split =  address(this).balance / 3;\r\n        _address1.transfer(split);\r\n        _address2.transfer(split);\r\n        _address3.transfer(split);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PaymentSplitter", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3c3e9bc89d034b69c2c4d9dd73176c7ea55fe8df84e6a9400f8e267bf6860a49"}]}