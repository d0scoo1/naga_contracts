{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"tmp_contracts/LuchadoresAdapter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\r\\n/// @title LuchadoresAdapter\\r\\n/// @notice Luchadores Adapter\\r\\n/// @author CyberPnk <cyberpnk@pfpbg.cyberpnk.win>\\r\\n//        __________________________________________________________________________________________________________\\r\\n//       _____/\\\\/\\\\/\\\\/\\\\/\\\\______________/\\\\/\\\\________________________________/\\\\/\\\\/\\\\/\\\\/\\\\________________/\\\\/\\\\___________\\r\\n//      ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__________/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\_____ \\r\\n//     ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______  \\r\\n//    ___/\\\\/\\\\____________/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______   \\r\\n//   _____/\\\\/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\_____    \\r\\n//  __________________/\\\\/\\\\/\\\\/\\\\________________________________________________________________________________     \\r\\n// __________________________________________________________________________________________________________     \\r\\n\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\nimport \\\"@cyberpnk/solidity-library/contracts/IStringUtilsV3.sol\\\";\\r\\nimport \\\"@cyberpnk/solidity-library/contracts/DestroyLockable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./ILuchadores.sol\\\";\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ncontract LuchadoresAdapter is Ownable, DestroyLockable {\\r\\n    IStringUtilsV3 public stringUtils;\\r\\n    ILuchadores public luchadores;\\r\\n    address public luchadoresContract;\\r\\n    string public name = \\\"Luchadores\\\";\\r\\n\\r\\n    constructor(address stringUtilsContract, address _luchadoresContract) {\\r\\n        stringUtils = IStringUtilsV3(stringUtilsContract);\\r\\n        luchadores = ILuchadores(_luchadoresContract);\\r\\n        luchadoresContract = _luchadoresContract;\\r\\n    }\\r\\n\\r\\n    function getSvg(uint256 tokenId) public view returns (string memory) {\\r\\n        return luchadores.imageData(tokenId);\\r\\n    }\\r\\n\\r\\n    function getDataUriSvg(uint256 tokenId) external view returns (string memory) {\\r\\n        return string(abi.encodePacked(\\\"data:image/svg+xml;utf8,\\\", getSvg(tokenId)));\\r\\n    }\\r\\n\\r\\n    function getDataUriBase64(uint256 tokenId) external view returns (string memory) {\\r\\n        return stringUtils.base64EncodeSvg(bytes(getSvg(tokenId)));\\r\\n    }\\r\\n\\r\\n    function getEmbeddableSvg(uint256 tokenId) external view returns (string memory) {\\r\\n        return getSvg(tokenId);\\r\\n    }\\r\\n\\r\\n    function ownerOf(uint256 tokenId) external view returns (address) {\\r\\n        return luchadores.ownerOf(tokenId);\\r\\n    }\\r\\n\\r\\n    function getTraitsJsonValue(uint256 tokenId) external view returns(string memory) {\\r\\n        string memory extractedFrom = stringUtils.extractFrom(luchadores.metadata(tokenId),'\\\"attributes\\\": ');\\r\\n        return stringUtils.removeSuffix(extractedFrom, \\\"}\\\");\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\r\n    },\r\n    \"@cyberpnk/solidity-library/contracts/IStringUtilsV3.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n/// @title IStringUtilsV3\\n/// @notice IStringUtilsV3\\n/// @author CyberPnk <cyberpnk@cyberpnk.win>\\n//        __________________________________________________________________________________________________________\\n//       _____/\\\\/\\\\/\\\\/\\\\/\\\\______________/\\\\/\\\\________________________________/\\\\/\\\\/\\\\/\\\\/\\\\________________/\\\\/\\\\___________\\n//      ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__________/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\_____\\n//     ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______\\n//    ___/\\\\/\\\\____________/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______\\n//   _____/\\\\/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\_____\\n//  __________________/\\\\/\\\\/\\\\/\\\\________________________________________________________________________________\\n// __________________________________________________________________________________________________________\\n\\nimport \\\"./IStringUtilsV2.sol\\\";\\n\\npragma solidity ^0.8.13;\\n\\ninterface IStringUtilsV3 is IStringUtilsV2 {\\n    function base64Decode(bytes memory data) external pure returns (bytes memory);\\n    function extractFromTo(string memory str, string memory needleStart, string memory needleEnd) external pure returns(string memory);\\n    function extractFrom(string memory str, string memory needleStart) external pure returns(string memory);\\n    function removeSuffix(string memory str, string memory suffix) external pure returns(string memory);\\n    function removePrefix(string memory str, string memory prefix) external pure returns(string memory);\\n}\"\r\n    },\r\n    \"@cyberpnk/solidity-library/contracts/DestroyLockable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\r\\n/// @title DestroyLockable\\r\\n/// @notice Contract can be destroyed, but destroy can be disabled (but not re-enabled).\\r\\n/// @author CyberPnk <cyberpnk@cyberpnk.win>\\r\\n//        __________________________________________________________________________________________________________\\r\\n//       _____/\\\\/\\\\/\\\\/\\\\/\\\\______________/\\\\/\\\\________________________________/\\\\/\\\\/\\\\/\\\\/\\\\________________/\\\\/\\\\___________\\r\\n//      ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__________/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\_____\\r\\n//     ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______\\r\\n//    ___/\\\\/\\\\____________/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______\\r\\n//   _____/\\\\/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\_____\\r\\n//  __________________/\\\\/\\\\/\\\\/\\\\________________________________________________________________________________\\r\\n// __________________________________________________________________________________________________________\\r\\n\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nabstract contract DestroyLockable is Ownable {\\r\\n    bool public isDestroyDisabled = false;\\r\\n\\r\\n    // Irreversible.\\r\\n    function disableDestroy() public onlyOwner {\\r\\n        isDestroyDisabled = true;\\r\\n    }\\r\\n\\r\\n    // In case there's a really bad mistake, but eventually disabled\\r\\n    function destroy() public onlyOwner {\\r\\n        require(!isDestroyDisabled, \\\"Disabled\\\");\\r\\n        selfdestruct(payable(owner()));\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"tmp_contracts/ILuchadores.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\r\\n/// @title ILuchadores\\r\\n/// @notice ILuchadores\\r\\n/// @author CyberPnk <cyberpnk@pfpbg.cyberpnk.win>\\r\\n//        __________________________________________________________________________________________________________\\r\\n//       _____/\\\\/\\\\/\\\\/\\\\/\\\\______________/\\\\/\\\\________________________________/\\\\/\\\\/\\\\/\\\\/\\\\________________/\\\\/\\\\___________\\r\\n//      ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__________/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\_____ \\r\\n//     ___/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\/\\\\/\\\\/\\\\____/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______  \\r\\n//    ___/\\\\/\\\\____________/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\_______   \\r\\n//   _____/\\\\/\\\\/\\\\/\\\\/\\\\________/\\\\/\\\\__/\\\\/\\\\/\\\\/\\\\______/\\\\/\\\\/\\\\/\\\\__/\\\\/\\\\________/\\\\/\\\\__________/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\__/\\\\/\\\\_____    \\r\\n//  __________________/\\\\/\\\\/\\\\/\\\\________________________________________________________________________________     \\r\\n// __________________________________________________________________________________________________________     \\r\\n\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\ninterface ILuchadores {\\r\\n    function imageData(uint256 tokenId) external view returns (string memory);\\r\\n    function metadata(uint256 tokenId) external view returns (string memory);\\r\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\r\\n    function ownerOf(uint256 tokenId) external view returns (address);\\r\\n}\\r\\n\"\r\n    },\r\n    \"@cyberpnk/solidity-library/contracts/IStringUtilsV2.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n/// [MIT License]\\n/// @title StringUtilsV2\\n\\npragma solidity ^0.8.13;\\n\\ninterface IStringUtilsV2 {\\n    function base64Encode(bytes memory data) external pure returns (string memory);\\n\\n    function base64EncodeJson(bytes memory data) external pure returns (string memory);\\n\\n    function base64EncodeSvg(bytes memory data) external pure returns (string memory);\\n\\n    function numberToString(uint256 value) external pure returns (string memory);\\n\\n    function addressToString(address account) external pure returns(string memory);\\n\\n    function split(string calldata str, string calldata delim) external pure returns(string[] memory);\\n\\n    function substr(bytes calldata str, uint startIndexInclusive, uint endIndexExclusive) external pure returns(string memory);\\n\\n    function substrStart(bytes calldata str, uint endIndexExclusive) external pure returns(string memory);\\n}\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stringUtilsContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_luchadoresContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableDestroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getDataUriBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getDataUriSvg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getEmbeddableSvg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSvg\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTraitsJsonValue\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDestroyDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luchadores\",\"outputs\":[{\"internalType\":\"contract ILuchadores\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"luchadoresContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stringUtils\",\"outputs\":[{\"internalType\":\"contract IStringUtilsV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LuchadoresAdapter", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000763d7385286ce7efd43fdbf92ab6d37a10f646810000000000000000000000008b4616926705fb61e9c4eeac07cd946a5d4b0760", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}