{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/client/LogoSearcher.sol\": {\r\n      \"content\": \"//\\tSPDX-License-Identifier: MIT\\n/// @title  Logo Searcher\\n/// @notice Searcher for client to use\\npragma solidity ^0.8.0;\\n\\nimport '../common/LogoModel.sol';\\n\\ninterface ILogoDescriptor {\\n  function logos(uint256 tokenId) external returns (Model.Logo memory);\\n  function getTextElement(uint256 tokenId) external view returns (Model.LogoElement memory);\\n  function getLayers(uint256 tokenId) external view returns (Model.LogoElement[] memory);\\n}\\n\\ncontract LogoSearcher {\\n  address public logoDescriptorAddress;\\n  ILogoDescriptor descriptor;\\n\\n  constructor(address _address) {\\n    logoDescriptorAddress = _address;\\n    descriptor = ILogoDescriptor(_address);\\n  }\\n\\n  function getNextConfiguredLogo(uint256 startTokenId, uint256 endTokenId) public view returns (uint256) {\\n    for (uint i = startTokenId; i <= endTokenId; i++) {\\n      Model.LogoElement[] memory layers = descriptor.getLayers(i);\\n      for (uint j; j < layers.length; j++) {\\n        if (layers[j].contractAddress != address(0x0)) {\\n          return i;\\n        }\\n      }\\n      Model.LogoElement memory text = descriptor.getTextElement(i);\\n      if (text.contractAddress != address(0x0)) {\\n        return i;\\n      }\\n    }\\n    return 0;\\n  }\\n\\n  function getPreviousConfiguredLogo(uint256 startTokenId, uint256 endTokenId) public view returns (uint256) {\\n    for (uint i = startTokenId; i >= endTokenId; i--) {\\n      Model.LogoElement[] memory layers = descriptor.getLayers(i);\\n      for (uint j; j < layers.length; j++) {\\n        if (layers[j].contractAddress != address(0x0)) {\\n          return i;\\n        }\\n      }\\n      Model.LogoElement memory text = descriptor.getTextElement(i);\\n      if (text.contractAddress != address(0x0)) {\\n        return i;\\n      }\\n    }\\n    return 0;\\n  }\\n}\"\r\n    },\r\n    \"contracts/common/LogoModel.sol\": {\r\n      \"content\": \"//\\tSPDX-License-Identifier: MIT\\n/// @notice Definition of Logo model\\npragma solidity ^0.8.0;\\n\\nlibrary Model {\\n\\n  /// @notice A logo container which holds layers of composable visual onchain assets\\n  struct Logo {\\n    uint16 width;\\n    uint16 height;\\n    LogoElement[] layers;\\n    LogoElement text;\\n  }\\n\\n  /// @notice A layer of a logo displaying a visual onchain asset\\n  struct LogoElement {\\n    address contractAddress;\\n    uint32 tokenId;\\n    uint8 translateXDirection;\\n    uint16 translateX;\\n    uint8 translateYDirection;\\n    uint16 translateY;\\n    uint8 scaleDirection;\\n    uint8 scaleMagnitude;\\n  }\\n\\n  /// @notice Data that can be set by logo owners and can be used in a composable onchain manner\\n  struct MetaData {\\n    string key;\\n    string value;\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"}],\"name\":\"getNextConfiguredLogo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTokenId\",\"type\":\"uint256\"}],\"name\":\"getPreviousConfiguredLogo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logoDescriptorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LogoSearcher", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ea55c5579e1cce3e52217493788f2a909e64f64f", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}