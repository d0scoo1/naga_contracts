{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.8.11;\r\n\r\n\r\n// @title erc20 token with refs and dividends\r\n// @dev sum(wei) = sum(exg)*profitPerExg/1e18 - sum(payoutsOf)\r\ncontract Exg {\r\n    address payable public admin;\r\n    // @return current price in wei/exg\r\n    uint256 public price;\r\n    uint256 public refPromille;\r\n    uint256 public refRequirement;\r\n\r\n    uint256 profitPerExg;\r\n    mapping(address => int256) payoutsOf;\r\n\r\n    // erc20\r\n    uint256 public totalSupply;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    uint8 public constant decimals = 18;\r\n    string public constant symbol = \"EXG\";\r\n    string public name;\r\n\r\n    string public url;\r\n\r\n    event Price(uint256 _wei);\r\n    event RefPromille(uint256 _promille);\r\n    event RefRequirement(uint256 _exg);\r\n    event Profit(uint256 _increaseWeiPerExg);\r\n    event Buy(\r\n        address indexed _buyer,\r\n        uint256 _exg,\r\n        uint256 _weiToAdmin,\r\n        address _ref,\r\n        uint256 _weiToRef\r\n    );\r\n    event Withdraw(address indexed _holder, uint256 _wei);\r\n    event Reinvest(address indexed _holder, uint256 _wei, uint256 _exg);\r\n    // erc20\r\n    event Transfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _exg\r\n    );\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _exg\r\n    );\r\n\r\n    constructor(\r\n        uint256 _price,\r\n        uint256 _refPromille,\r\n        uint256 _refRequirement,\r\n        string memory _name,\r\n        string memory _url\r\n    ) {\r\n        admin = payable(msg.sender);\r\n        price = _price;\r\n        emit Price(price);\r\n        refPromille = _refPromille;\r\n        emit RefPromille(refPromille);\r\n        refRequirement = _refRequirement;\r\n        emit RefRequirement(refRequirement);\r\n        name = _name;\r\n        url = _url;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"not admin\");\r\n        _;\r\n    }\r\n\r\n    receive() external payable {\r\n        buy(payable(address(0)));\r\n    }\r\n\r\n    fallback() external payable {\r\n        buy(payable(address(0)));\r\n    }\r\n\r\n    function setAdmin(address payable _admin) external onlyAdmin {\r\n        admin = _admin;\r\n    }\r\n\r\n    function setPrice(uint256 _price) external onlyAdmin {\r\n        require(_price >= 1e9, \"small price\");\r\n        price = _price;\r\n        emit Price(price);\r\n    }\r\n\r\n    function setRef(\r\n        uint256 _refPromille,\r\n        uint256 _refRequirement\r\n    ) external onlyAdmin {\r\n        if (refPromille != _refPromille) {\r\n            require(_refPromille <= 500, \"big refPromille\");\r\n            refPromille = _refPromille;\r\n            emit RefPromille(refPromille);\r\n        }\r\n        if (refRequirement != _refRequirement) {\r\n            refRequirement = _refRequirement;\r\n            emit RefRequirement(refRequirement);\r\n        }\r\n    }\r\n\r\n    function setName(string calldata _name) external onlyAdmin {\r\n        name = _name;\r\n    }\r\n\r\n    function setUrl(string calldata _url) external onlyAdmin {\r\n        url = _url;\r\n    }\r\n\r\n    // @return amount of dividends in wei\r\n    function dividendsOf(address _holder) public view returns (uint256) {\r\n        // wei = exg*profitPerExg/1e18 - payoutsOf\r\n\r\n        uint256 a = balanceOf[_holder] * profitPerExg / 1e18;\r\n        int256 b = payoutsOf[_holder];\r\n        // a - b\r\n        if (b < 0) {\r\n            return a + uint256(-b);\r\n        } else {\r\n            uint256 c = uint256(b);\r\n            if (c > a) {\r\n                return 0;\r\n            }\r\n            return a - c;\r\n        }\r\n    }\r\n\r\n    // @notice all amount of eth sent will be distributed as dividends\r\n    function profit() external payable {\r\n        // sum(wei) + in = sum(exg)*(profitPerExg + in*1e18/sum(exg))/1e18\r\n        //  - sum(payoutsOf)\r\n\r\n        uint256 increase = msg.value * 1e18 / totalSupply;\r\n        require(increase > 0, \"small eth\");\r\n        profitPerExg += increase;\r\n        emit Profit(increase);\r\n    }\r\n\r\n    function buy(address payable _ref) public payable {\r\n        // sum(wei) = (sum(exg) + exg)*profitPerExg/1e18\r\n        //  - (sum(payoutsOf) + exg*profitPerExg/1e18)\r\n\r\n        uint256 toAdmin = msg.value;\r\n        uint256 exg = toAdmin * 1e18 / price;\r\n        require(exg > 0, \"small eth\");\r\n        uint256 toRef;\r\n        if (_ref != address(0) && refPromille > 0) {\r\n            if (_ref != msg.sender && balanceOf[_ref] >= refRequirement) {\r\n                toRef = toAdmin * refPromille / 1000;\r\n                toAdmin -= toRef;\r\n            }\r\n        }\r\n\r\n        uint256 payout = exg * profitPerExg / 1e18;\r\n        payoutsOf[msg.sender] = add(payoutsOf[msg.sender], payout);\r\n        emit Buy(msg.sender, exg, toAdmin, _ref, toRef);\r\n\r\n        totalSupply += exg;\r\n        balanceOf[msg.sender] += exg;\r\n        emit Transfer(address(0), msg.sender, exg);\r\n\r\n        admin.transfer(toAdmin);\r\n        if (toRef > 0) {\r\n            _ref.transfer(toRef);\r\n        }\r\n    }\r\n\r\n    function withdraw() external {\r\n        // sum(wei) - out = sum(exg)*profitPerExg/1e18\r\n        //  - (sum(payoutsOf) + out)\r\n\r\n        uint256 divs = dividendsOf(msg.sender);\r\n        require(divs > 0, \"zero divs\");\r\n\r\n        payoutsOf[msg.sender] = add(payoutsOf[msg.sender], divs);\r\n        emit Withdraw(msg.sender, divs);\r\n\r\n        if (divs > address(this).balance) {\r\n            divs = address(this).balance;\r\n        }\r\n        payable(msg.sender).transfer(divs);\r\n    }\r\n\r\n    function reinvest() external {\r\n        // sum(wei) - out = (sum(exg) + exg)*profitPerExg/1e18\r\n        //  - (sum(payoutsOf) + out + exg*profitPerExg/1e18)\r\n\r\n        uint256 divs = dividendsOf(msg.sender);\r\n        require(divs > 0, \"zero dividends\");\r\n        uint256 exg = divs * 1e18 / price;\r\n\r\n        uint256 payout = divs + exg * profitPerExg / 1e18;\r\n        payoutsOf[msg.sender] = add(payoutsOf[msg.sender], payout);\r\n        emit Reinvest(msg.sender, divs, exg);\r\n\r\n        totalSupply += exg;\r\n        balanceOf[msg.sender] += exg;\r\n        emit Transfer(address(0), msg.sender, exg);\r\n\r\n        if (divs > address(this).balance) {\r\n            divs = address(this).balance;\r\n        }\r\n        admin.transfer(divs);\r\n    }\r\n\r\n    function send(address _from, address _to, uint256 _exg) private {\r\n        // sum(wei) = sum(exg)*profitPerExg/1e18\r\n        //  - (sum(payoutsOf) +- exg*profitPerExg/1e18)\r\n\r\n        require(_to != address(0), \"zero to\");\r\n        require(balanceOf[_from] >= _exg, \"big exg\");\r\n\r\n        uint256 payout = _exg * profitPerExg / 1e18;\r\n        payoutsOf[_from] = sub(payoutsOf[_from], payout);\r\n        payoutsOf[_to] = add(payoutsOf[_to], payout);\r\n\r\n        balanceOf[_from] -= _exg;\r\n        balanceOf[_to] += _exg;\r\n        emit Transfer(_from, _to, _exg);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _exg) external returns (bool) {\r\n        send(msg.sender, _to, _exg);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _exg\r\n    ) external returns (bool) {\r\n        require(allowance[_from][msg.sender] >= _exg, \"not allowed\");\r\n        allowance[_from][msg.sender] -= _exg;\r\n        send(_from, _to, _exg);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _exg) external returns (bool) {\r\n        require(_spender != address(0), \"zero spender\");\r\n        allowance[msg.sender][_spender] = _exg;\r\n        emit Approval(msg.sender, _spender, _exg);\r\n        return true;\r\n    }\r\n\r\n    function add(int256 a, uint256 b) private pure returns (int256) {\r\n        int256 c = int256(b);\r\n        assert(c >= 0);\r\n        return a + c;\r\n    }\r\n\r\n    function sub(int256 a, uint256 b) private pure returns (int256) {\r\n        int256 c = int256(b);\r\n        assert(c >= 0);\r\n        return a - c;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refPromille\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refRequirement\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_weiToAdmin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ref\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_weiToRef\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"Price\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_increaseWeiPerExg\",\"type\":\"uint256\"}],\"name\":\"Profit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_promille\",\"type\":\"uint256\"}],\"name\":\"RefPromille\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"RefRequirement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"Reinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_ref\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refPromille\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_refPromille\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refRequirement\",\"type\":\"uint256\"}],\"name\":\"setRef\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"}],\"name\":\"setUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exg\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"url\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Exg", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000071afd498d0000000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000064578676c6f73000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000106578676c6f732e6769746875622e696f00000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8712839becf817fab9b322187344125b436ead2d7108db8c72204bf0772d8181"}]}