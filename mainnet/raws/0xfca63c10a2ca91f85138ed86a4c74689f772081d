{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\ncontract RuinedCanvas{\r\n    event Joined(address);\r\n    event PixelSet(uint indexed x, uint indexed y, uint rgb);\r\n    \r\n    mapping(uint => mapping(uint => uint)) public pixel;\r\n    mapping(address => bool) public joined;\r\n    mapping(address => uint) cd;\r\n\r\n    uint membershipCost = 2400000000000000;\r\n    address benefactor;\r\n\r\n    constructor(){\r\n        benefactor = msg.sender;\r\n        joined[msg.sender] = true;\r\n    }\r\n    ///@param rgb hex value \r\n    function aSetPixel(uint x, uint y, uint rgb) public payable{\r\n        require(joined[msg.sender], \"Ya gotta join first buddy\");\r\n        require(block.number > cd[msg.sender], \"On CD\");\r\n        cd[msg.sender] = block.number;\r\n        pixel[x][y] = rgb;\r\n        emit PixelSet(x,y,rgb);\r\n    }\r\n\r\n    function cJoin() public payable{\r\n        require(msg.value == membershipCost, \"Invalid payment, sorry friend\");\r\n        require(!joined[msg.sender], \"Already joined mate\");\r\n        joined[msg.sender] = true;\r\n        emit Joined(msg.sender);\r\n    }\r\n    function dGiftMembership(address addy) public payable{\r\n        require(msg.value == membershipCost, \"Invalid payment, sorry friend\");\r\n        require(!joined[addy], \"Already joined mate\");\r\n        joined[addy] = true;\r\n        emit Joined(addy);\r\n    }\r\n    function zBenefactorWithdraw() public{\r\n        require(msg.sender == benefactor);\r\n        payable(benefactor).transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rgb\",\"type\":\"uint256\"}],\"name\":\"PixelSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rgb\",\"type\":\"uint256\"}],\"name\":\"aSetPixel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cJoin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"}],\"name\":\"dGiftMembership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"joined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pixel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zBenefactorWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RuinedCanvas", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://47d0284106070a95c794f0d17b42ca7189165357ecc800d80b5929520ed4cddd"}]}