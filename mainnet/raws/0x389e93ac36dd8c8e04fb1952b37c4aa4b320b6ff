{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.21;\r\n\r\n\r\nlibrary SafeMath {\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(a <= c);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(a >= b);\r\n\t\treturn a - b;\r\n\t}\r\n}\r\n\r\n\r\ncontract ContractReceiver {\r\n\tfunction tokenFallback(address from, uint256 value, bytes data) public;\r\n}\r\n\r\n\r\ncontract AuctusToken {\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\n\r\ncontract AuctusBountyDistribution is ContractReceiver {\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress public auctusTokenAddress = 0xc12d099be31567add4e4e4d0D45691C3F58f5663;\r\n\taddress public owner;\r\n\tuint256 public escrowedTokens;\r\n\tmapping(address => bool) public redeemed;\r\n\r\n\tevent Escrow(address indexed from, uint256 value);\r\n\tevent Redeem(address indexed to, uint256 value);\r\n\r\n\tfunction AuctusBountyDistribution() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(owner == msg.sender);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier isValidMessage(uint256 value, uint256 timelimit, uint8 v, bytes32 r, bytes32 s) {\r\n\t\trequire(owner == ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", keccak256(this, msg.sender, value, timelimit)), v, r, s));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != address(0));\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction tokenFallback(address from, uint256 value, bytes) public {\r\n\t\trequire(msg.sender == auctusTokenAddress);\r\n\t\tescrowedTokens = escrowedTokens.add(value);\r\n\t\temit Escrow(from, value);\r\n\t}\r\n\r\n\tfunction redeemBounty(\r\n\t\tuint256 value,\r\n\t\tuint256 timelimit,\r\n\t\tuint8 v,\r\n\t\tbytes32 r,\r\n\t\tbytes32 s\r\n\t)\r\n\t\tisValidMessage(value, timelimit, v, r, s)\r\n\t\tpublic \r\n\t{\r\n\t\trequire(timelimit >= now);\r\n\t\trequire(!redeemed[msg.sender]);\r\n\t\tredeemed[msg.sender] = true;\r\n\t\tinternalRedeem(msg.sender, value);\r\n\t}\r\n\r\n\tfunction forcedRedeem(address to, uint256 value) onlyOwner public {\r\n\t\tinternalRedeem(to, value);\r\n\t}\r\n\r\n\tfunction internalRedeem(address to, uint256 value) private {\r\n\t\tescrowedTokens = escrowedTokens.sub(value);\r\n\t\tassert(AuctusToken(auctusTokenAddress).transfer(to, value));\r\n\t\temit Redeem(to, value);\r\n\t}\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"auctusTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"timelimit\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"redeemBounty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"escrowedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"forcedRedeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Escrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"}]", "ContractName": "AuctusBountyDistribution", "CompilerVersion": "v0.4.21+commit.dfe3193c", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://7c4ac0105774e71ee66373817c3c90328f754cd237a18fa2d8552df5d46bb50a"}]}