{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/operator/OpDefault.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./OpCommon.sol\\\";\\n\\ncontract OpDefalut is OpCommon {\\n\\n    event EnableUser(address indexed user);\\n    event DisableUser(address indexed user);\\n    event SetAccountCenter(address indexed index);\\n\\n    function setAccountCenter(address _accountCenter) public {\\n        require(accountCenter == address(0) || msg.sender == accountCenter, \\\"CHFRY/OpDefalut: Not Auth to set accountCenter\\\");\\n        accountCenter = _accountCenter;\\n        emit SetAccountCenter(accountCenter);\\n    }\\n\\n    function isAuth(address user) public view returns (bool) {\\n        return _auth[user];\\n    }\\n\\n    function enable(address user) public {\\n        require(\\n            msg.sender == address(this) || msg.sender == accountCenter,\\n            \\\"CHFRY/OpDefalut: eble() not SmartAccount itself or accountCenter\\\"\\n        );\\n        require(user != address(0), \\\"CHFRY/OpDefalut: EOA address can not be 0\\\");\\n        require(!_auth[user], \\\"CHFRY/OpDefalut: Already Enabled\\\");\\n        _auth[user] = true;\\n        emit EnableUser(user);\\n    }\\n\\n    function disable(address user) public {\\n        require(msg.sender == address(this), \\\"CHFRY/OpDefalut: disable() not SmartAccount itself \\\");\\n        require(user != address(0), \\\"CHFRY/OpDefalut: EOA address can not be 0\\\");\\n        require(_auth[user], \\\"CHFRY/OpDefalut: Already Disabled\\\");\\n        delete _auth[user];\\n        emit DisableUser(user);\\n    }\\n\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return 0x150b7a02; // bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))\\n    }\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61; // bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return 0xbc197c81; // bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))\\n    }\\n\\n    fallback() external payable {\\n        revert(\\\"Method is not support for this Account Type\\\");\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/operator/OpCommon.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract OpCommon {\\n    // auth is shared storage with AccountProxy and any OpCode.\\n    mapping(address => bool) internal _auth;\\n    address internal accountCenter;\\n\\n    receive() external payable {}\\n\\n    modifier onlyAuth() {\\n        require(_auth[msg.sender], \\\"CHFRY: Permission Denied\\\");\\n        _;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"DisableUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"EnableUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"index\",\"type\":\"address\"}],\"name\":\"SetAccountCenter\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAuth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accountCenter\",\"type\":\"address\"}],\"name\":\"setAccountCenter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "OpDefalut", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}