{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\n//import '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\n\r\ninterface IERC721\r\n{\r\n  function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n}\r\n\r\ncontract NFTAirdropping\r\n{\r\n  function airDropERC721 (IERC721 _token, address[] calldata _to, uint256[] calldata ids) public\r\n  {\r\n    require(_to.length == ids.length,\"recievers and IDs are of different length\");\r\n    for (uint256 i=0; i < _to.length; i++)\r\n    {\r\n      _token.safeTransferFrom(msg.sender,_to[i],ids[i]);\r\n    }\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"airDropERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NFTAirdropping", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4042a0ab547a5272a5616408f8c6ffb9684514c4dbfd2389cfa4e3316aec264b"}]}