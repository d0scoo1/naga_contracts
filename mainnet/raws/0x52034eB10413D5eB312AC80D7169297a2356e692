{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract Spread {\r\n\r\n    function send (address[] memory _addresses) external payable {\r\n        uint256 amtPerAddr = msg.value / _addresses.length;\r\n        \r\n        for (uint i = 0; i < _addresses.length; i++) {\r\n            (bool success, ) = _addresses[i].call{value: amtPerAddr}(\"\");\r\n            require(success, \"Reverted\");\r\n        }\r\n\r\n        if (msg.value % _addresses.length > 0) {\r\n            (bool success, ) = msg.sender.call{value: msg.value % _addresses.length}(\"\");\r\n            require(success, \"Reverted\");\r\n        }\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Spread", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9e9a354e3e7ab5f1594880d0937af6da99622ac20e630100cfbf5dec5acc81ab"}]}