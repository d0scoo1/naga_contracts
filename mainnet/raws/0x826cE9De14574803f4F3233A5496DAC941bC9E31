{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity <= 0.8.7;\r\n\r\n/**\r\n *Submitted for verification at polygonscan.com on 2022-03-02\r\n*/\r\ncontract Tatic {\r\n\r\n\r\n    address payable private commissionWallet;\r\n\r\n    constructor(address payable wallet) {\r\n\t\trequire(!isContract(wallet));\r\n\t\tcommissionWallet = wallet;\r\n    }\r\n\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n\r\n    function withdraw() public payable{\r\n        commissionWallet.transfer(msg.value);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Tatic", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000cceaa2e1922b320f65d02cf296879a42ca806690", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://299e44633359ea8e80b11a941d6c2f13a638965fd0dccb82e3f7388eff793ab4"}]}