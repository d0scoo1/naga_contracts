{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/YANG.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: yangyangicecream\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n///////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                       //\\n//                                                                                       //\\n//    ~\\\"\\\"\\\"\\\"~\\\"\\\"~\\\"!~\\\"\\\"~\\\"~\\\"\\\"~\\\"\\\"~~\\\"~\\\"\\\"~\\\"\\\"~\\\"~M#M0M0MM0M00N0NNBBMN#Q0N#B#00#B0MMMM0NR00000M    //\\n//                                      \\\"0N#N00NN&###B#M0&MM0M0#0#QM00MM0B0N0N00&00#M    //\\n//                                  -    O#0&MWQN#00N&00#M&&#N000&0MM#&0N#000000000&B    //\\n//                                       MQ0MM#000NKM00M&M#0#M0Q0000M00BM#0M0#00000M0    //\\n//                                       *#MMN&MN#MMB000#0N00#0M#MM0Q#M0NQ00NN0R0#0N0    //\\n//           -                           ##M00MN00RMMMNMR00#&#N000D#N00M00MM0M0B0000M    //\\n//              -                       yp0W0N0B#NRQ000M0#Q##N##M0N0MN0R#M0BNMN&NN&00    //\\n//            -                      ,(T~#&Q0NMMM0M0M&000WMM#N#00M#0QN0#MM#0Q#0NK0N0M    //\\n//                                 m~dgg#&0M00Q0N0BMNMMMM&MMM#MQNMQ&0AM#N#0B#0&BQ0#0#    //\\n//     -                       _p-  0M000BNN00M#EN#00M000N00M#NM#0#0NM00M&R0#Q##MN#0#    //\\n//                            ^    :b00##MN0BM&#Q0000NMM#0#M00M@$0MN#0MQN8WNQNM@0&NM#    //\\n//                               aMTN00N0K&0QMMMM00B#N#BMM#M#0BM#&WRNM@NKZ##0*A#r0M&#    //\\n//             -                  \\\\M#Q0M0M#&M#BMR0Q00MQ&#MM&00NBM#Q0$9s%^MmhMMM&&&&&&    //\\n//          -                     4NMQBMQQN000M0N&M&0M0MKMM&0##G&9&&&&--  \\\"\\\\~:Wd--&--    //\\n//    ;                         m\\\\j0#BKMM00M00NMMMMgMM0Q00M#8m&d&&^^3E S  E  O.   ~-*    //\\n//    0                       -&CB&M000MQN@B0N0QB8#000#N00NMEE%3m  % ~   --0T    -~      //\\n//    ML                ,  ,zz&#&B0000M###R0000M0#BD&#g80M8FxZ^xE                 - -    //\\n//    F4                4%%!,yAWR#MMMB00##0MB00B00#&0&Q&YXM,M-    ~        \\\\    \\\\s  -    //\\n//    M&V             \\\\\\\\MhQp&&##N0M0000NNN000N00000QB@#M&E%^       )  \\\\   -      \\\\       //\\n//    M0f           {E\\\"6m&0MM#B0#B#0#K##B00B#0M#00b&0KQ&&t~~ ~           -    -    \\\\     //\\n//    M~         /-W~%EggKN#0#0N#KMQB00#00M0M0#QN&QW&rmM ~1 -                   -        //\\n//              r4b~dEE0M&##K#&0Q0Q&#R0#0000MNM0#QDE$\\\\/ZO                  -             //\\n//              \\\"-&%&6DFN#F RBgp0N&000NM#M0NM#MND#WQ-#H~                ~                //\\n//           tT^0~~      3QNN0M0#M#0#0M00&0##NN#0Nr9^4% r             \\\\-                 //\\n//                     %MR@90B00#QN0QQ##NMNNQ0M&AMM:~#                          -        //\\n//         -             NSw0Q#000M00M00M00#MM0EFaO  &                -                  //\\n//                  (    16~0N#NQ#M&M0#N00#000&3rw~  I                                   //\\n//           {  \\\"  /~     &=#MNM0#BA#M0#M####C&&&\\\\  \\\\Z                    \\\\    m         //\\n//           ^ \\\\         w!xQN0#0#0N00#M#00M#8FFKE   $                                   //\\n//     \\\\  \\\\   - -         Tr##0MN#B00N#00R0NDQ&&~    F                                   //\\n//    ,  ~\\\\               #$M80Q&QM0M#MM0M#MAQQ} \\\\  w:~                                  //\\n//                        0&NMK0M0#N#MNM0Q00Q#E~                              ^  ^       //\\n//                        &DMM#MD00&00###RR0W:       ~-                          ^       //\\n//                       -#h$M#00#B0#0#0MMQ09                               \\\\            //\\n//                   -    39070MM0NM&BKMM0A&-                                            //\\n//                    -   dMg3Q0#NN000#0000h                              - -            //\\n//                   t5% (&7MQM0#N00W#8N0&&                              \\\\       ,       //\\n//                    {\\\"p#g%%BN00##N00M0M&}           : \\\\ - \\\\,         \\\\                 //\\n//                    ^ENF0G%gQM000NRMMN#M        $QNMt&&&&#QAp&#qg       %        ^+    //\\n//                     g/#mb;Z$MM#M000#KNE      yMMKK##Q0g&MN0QMMNMM&#,sEE{.             //\\n//                   = &#QAgQ00#M0QR&0B0&D     m#00M'~7D!P9K0MM00M&MMD0$FFFG  \\\\     ^    //\\n//                    ,900K8#M#MM0MN0M0QNr     ~\\\\/. -      ^ {&&&MDNZKWE0\\\\w ^S    \\\"r     //\\n//                   zB&MMW&GN##NQB000MMN@                -   h\\\\ar&&&&NFF^,m     3 \\\\     //\\n//                \\\\ ^:0N00F#EB&p00MM&#M0Mm               \\\\/-Qmam&~&&m\\\"$:1   -     .-/    //\\n//                   RZM0M#0BQ6#MMR#M#B0D              Lx*&&3&Q&&mmy/~-&/\\\\~ \\\\      z~    //\\n//         -         #&AMMM0MNN0#NN#0#NN0$           $EEEpg#000NN&Q&e% m  {   -          //\\n//               1  -r4*#NM0Q0N#&NBBN0BM&m      \\\\  w&&&g0M~Q0F#0M0000pTaS%\\\\         &    //\\n//                  - ~#AMNMR0#W0Q0&&M0N0~        m$#B00M\\\" 0Q0#M00#D8CMG%( \\\\       --    //\\n//                    -,EDM##R#M000#00WMM1         ~~$DEM%,{BQMM00B&&D9$/-          \\\"    //\\n//      =              *Z/Mr,NW#BK00MM0N0r      = \\\\  dO:T&wb~~#K9#E#0#:#           ~     //\\n//        \\\\            -::r_;&#M#Q0NQN##&6-         -  ^{r -  \\\"\\\"~~Z~#1 ~            \\\\    //\\n//                .      T~T~?M00##&#QM0NH \\\\                -   {\\\"0^^               ~    //\\n//                      \\\\   \\\"}-&&NZD0B&N0E   \\\\    \\\\            S                         //\\n//                             m&-~LB&0NMAr         -         ^  \\\\                       //\\n//                       \\\\        m\\\"00&N#b-    -                 \\\\                  t    //\\n//                  \\\\           Sf;MQp#&M0-   s\\\\\\\\                                        //\\n//              /   \\\\          %dg0##D&&&#S       ~                                      //\\n//              -   \\\\    .    {N#MMEEQD#MQr                                              //\\n//          \\\\        \\\\ --     mmR&K,D~&&B0&                                              //\\n//                    \\\\  ~  ~M00QB-:0d3EpMA \\\\                                            //\\n//         ~\\\\z  ^  \\\\  -~^  ^[9 \\\\ - ~~:(pFNW \\\\  .                                    ~    //\\n//    \\\\ ~O ~w      ~  ^       t*\\\\,+a5  IB#0p  -                    \\\\    -                //\\n//       -w:       ^ \\\\    \\\\\\\\ :~  \\\\  \\\\  d+*E& -                    ~          ^           //\\n//    ^   &          ~       :. ^ _   \\\" ,T%:@ \\\\               \\\\      -        -          //\\n//    ~ r-                 \\\\ \\\\m x  \\\"}\\\\   \\\\wM%                        -              :    //\\n//                           - }    - -    \\\"$                              9F:Z~  ~ &    //\\n//                       ~   ~       ~      F               -                \\\\\\\\^  wm9    //\\n//                                  -   - =  \\\\%           _ \\\\                    \\\\  ~    //\\n//                          }         -   ( ~~,                                     \\\\    //\\n//                           `      -  ~/ ~ {r6-  \\\\  ~                              t    //\\n//                              \\\\          -  :W\\\\             - m6m           \\\\          //\\n//                        \\\"  -  \\\\        ~   r&$Eq             a0@~\\\\M%!pa&f&r,E&ggr##    //\\n//                        -                 \\\\ ) Cmq          -  {     \\\"B3&W#$M&M&N&N#    //\\n//                             ^-       -   / -:@04D,           -    -  \\\"W0000T&Z0MU#    //\\n//                                        -  *L  &&Q$m                     {-&&&&&&BE    //\\n//                 \\\\ ,       .              %\\\\ \\\" \\\\&NS&W                        - ^\\\\%9    //\\n//                            \\\\\\\\         ^\\\\ \\\\Ea   ^$W#\\\\                        ~ \\\\~^     //\\n//                                            \\\\  -Q\\\"0?                            \\\\      //\\n//                    \\\\   -              - ^- \\\"}  mN% ^    -                             //\\n//                 -                         \\\\x  gE\\\\          \\\\                          //\\n//                    -               - { -%\\\\ mmL% ^                                     //\\n//                                  ,    -{ -m0#~\\\\                                       //\\n//                                  ^  w -:)aT                                           //\\n//                                                                                       //\\n//                                                                                       //\\n///////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract YANG is ERC721Creator {\\n    constructor() ERC721Creator(\\\"yangyangicecream\\\", \\\"YANG\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "YANG", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}