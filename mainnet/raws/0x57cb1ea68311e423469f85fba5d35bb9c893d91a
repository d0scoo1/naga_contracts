{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\ncontract LiqbotExecutor {\r\n    uint256 private constant ONE = 1e18;\r\n\r\n    address payable private immutable owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function execute(\r\n        address to,\r\n        bytes calldata data,\r\n        uint256 minerCutRate,\r\n        IERC20[] calldata sweepTokens\r\n    )\r\n        external\r\n        onlyOwner\r\n    {\r\n        (bool success, ) = to.call(data);\r\n        require(success);\r\n\r\n        for (uint256 i = 0; i < sweepTokens.length; ++i) {\r\n            require(sweepTokens[i].transfer(owner, sweepTokens[i].balanceOf(address(this))));\r\n        }\r\n\r\n        block.coinbase.transfer(address(this).balance * minerCutRate / ONE);\r\n        owner.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"minerCutRate\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"sweepTokens\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "LiqbotExecutor", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4f17c05b9fbe58c3009e78ae5d1260acb6fdc8cd32172667b23a366d40b4870a"}]}