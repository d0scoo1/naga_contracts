{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.8;\r\n\r\n\r\n\r\n/*\r\n * ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\n\r\n/*\r\n * Ownable\r\n *\r\n * Base contract with an owner.\r\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Issuer manages token distribution after the crowdsale.\r\n *\r\n * This contract is fed a CSV file with Ethereum addresses and their\r\n * issued token balances.\r\n *\r\n * Issuer act as a gate keeper to ensure there is no double issuance\r\n * per address, in the case we need to do several issuance batches,\r\n * there is a race condition or there is a fat finger error.\r\n *\r\n * Issuer contract gets allowance from the team multisig to distribute tokens.\r\n *\r\n */\r\ncontract Issuer is Ownable {\r\n\r\n  /** Map addresses whose tokens we have already issued. */\r\n  mapping(address => bool) public issued;\r\n\r\n  /** Centrally issued token we are distributing to our contributors */\r\n  ERC20 public token;\r\n\r\n  /** Party (team multisig) who is in the control of the token pool. Note that this will be different from the owner address (scripted) that calls this contract. */\r\n  address public allower;\r\n\r\n  /** How many addresses have received their tokens. */\r\n  uint public issuedCount;\r\n\r\n  function Issuer(address _owner, address _allower, ERC20 _token) {\r\n    owner = _owner;\r\n    allower = _allower;\r\n    token = _token;\r\n  }\r\n\r\n  function issue(address benefactor, uint amount) onlyOwner {\r\n    if(issued[benefactor]) throw;\r\n    token.transferFrom(allower, benefactor, amount);\r\n    issued[benefactor] = true;\r\n    issuedCount += amount;\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"issuedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"benefactor\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allower\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"issued\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_allower\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"}]", "ContractName": "Issuer", "CompilerVersion": "v0.4.8+commit.60cc1668", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000009a95c1be5497cbc0cfedde4853aed3f2faa8afca0000000000000000000000002323763d78bf7104b54a462a79c2ce858d118f2f00000000000000000000000041e5560054824ea6b0732e656e3ad64e20e94e45", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://a395c617733c9e561b328d67424a191b8395443826bb5e97b514721482ce1dff"}]}