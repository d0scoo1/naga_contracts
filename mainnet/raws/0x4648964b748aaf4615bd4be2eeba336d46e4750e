{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: AGPL-3.0-only\r\npragma solidity >=0.8.4;\r\n\r\n/// @notice Kali DAO share manager interface\r\ninterface IKaliShareManager {\r\n    function mintShares(address to, uint256 amount) external payable;\r\n\r\n    function burnShares(address from, uint256 amount) external payable;\r\n}\r\n\r\n/// @notice Gas optimized reentrancy protection for smart contracts\r\n/// @author Modified from Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/ReentrancyGuard.sol)\r\n/// License-Identifier: AGPL-3.0-only\r\nabstract contract ReentrancyGuard {\r\n    error Reentrancy();\r\n    \r\n    uint256 private locked = 1;\r\n\r\n    modifier nonReentrant() {\r\n        if (locked != 1) revert Reentrancy();\r\n        \r\n        locked = 2;\r\n        _;\r\n        locked = 1;\r\n    }\r\n}\r\n\r\n/// @notice Kali DAO share manager extension\r\ncontract KaliShareManager is ReentrancyGuard {\r\n    /// -----------------------------------------------------------------------\r\n    /// Events\r\n    /// -----------------------------------------------------------------------\r\n\r\n    event ExtensionSet(address indexed dao, address[] managers, bool[] approvals);\r\n    event ExtensionCalled(address indexed dao, address indexed manager, Update[] updates);\r\n\r\n    /// -----------------------------------------------------------------------\r\n    /// Errors\r\n    /// -----------------------------------------------------------------------\r\n\r\n    error NoArrayParity();\r\n    error Forbidden();\r\n\r\n    /// -----------------------------------------------------------------------\r\n    /// Mgmt Storage\r\n    /// -----------------------------------------------------------------------\r\n\r\n    mapping(address => mapping(address => bool)) public management;\r\n\r\n    struct Update {\r\n        address account;\r\n        uint256 amount;\r\n        bool mint;\r\n    }\r\n\r\n    /// -----------------------------------------------------------------------\r\n    /// Mgmt Settings\r\n    /// -----------------------------------------------------------------------\r\n\r\n    function setExtension(bytes calldata extensionData) external {\r\n        (\r\n            address[] memory managers, \r\n            bool[] memory approvals\r\n        ) \r\n            = abi.decode(extensionData, (address[], bool[]));\r\n        \r\n        if (managers.length != approvals.length) revert NoArrayParity();\r\n\r\n        for (uint256 i; i < managers.length; ) {\r\n            management[msg.sender][managers[i]] = approvals[i];\r\n            // cannot realistically overflow\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        emit ExtensionSet(msg.sender, managers, approvals);\r\n    }\r\n\r\n    /// -----------------------------------------------------------------------\r\n    /// Mgmt Logic\r\n    /// -----------------------------------------------------------------------\r\n\r\n    function callExtension(address dao, Update[] calldata updates) external nonReentrant {\r\n        if (!management[dao][msg.sender]) revert Forbidden();\r\n\r\n        for (uint256 i; i < updates.length; ) {\r\n            if (updates[i].mint) {\r\n                IKaliShareManager(dao).mintShares(updates[i].account, updates[i].amount);\r\n            } else {\r\n                IKaliShareManager(dao).burnShares(updates[i].account, updates[i].amount);\r\n            }\r\n            // cannot realistically overflow\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        emit ExtensionCalled(dao, msg.sender, updates);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArrayParity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrancy\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct KaliShareManager.Update[]\",\"name\":\"updates\",\"type\":\"tuple[]\"}],\"name\":\"ExtensionCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"managers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"approvals\",\"type\":\"bool[]\"}],\"name\":\"ExtensionSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct KaliShareManager.Update[]\",\"name\":\"updates\",\"type\":\"tuple[]\"}],\"name\":\"callExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"management\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"extensionData\",\"type\":\"bytes\"}],\"name\":\"setExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "KaliShareManager", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unknown", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2c68cac44e47e799d90dd126d8d9dbdf7ca55f59f0aec33e1d59deb8f19574b3"}]}