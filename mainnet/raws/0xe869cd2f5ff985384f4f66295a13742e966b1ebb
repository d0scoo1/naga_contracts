{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/GNA.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: NATOSHIME\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                                                                                                                                                                                                    //\\n//                                                                                                                                                                                                                                                                                                                    //\\n//    :ccccccclllollooooddddddxxxxkkkd;';x0OOOOko,';cdkOO0KXNWMMWWNXKKKKKKKKKd'.;kXNXOdc:,'...,cokko,.:dxdc:::ll:c:,;,,'',,,,,,,,,,;clx00kdoloddol:;;;;;;;:lodkKNWWWWWWWWWWWWWWWWWWWWWWWWWWNNNNNNNNNNNNNXXXXXXXXXXXXXXKXXXXXXXXKKKKKK0KNWWMMWNXXKKK000OO000000OxdOK0OO00OOOkkkxxxxxxxdddddooooollooolllllllllollcc    //\\n//    :cccccllllllooddooodxdxxkkkkkkkl,'cOK0OOkl,':ldk0KXXWWMWNXXKKKKKKKKKKKk:;d00xl;''''...',:lol:'';c:::;;;:cc:;;;;,,'',,,,,,,,,,;;:oxxdolc;;:;;;;;;;;;;;;;;;lxO0KKXXXNNNNWWWWWWWNNNWWWWWNNNNNNNNNNNNNXXXXXXXXXXXXXXXKKKKKXXXXKKKKK000KXXNWWMWNXK000000000OkxxO00OOO00Okkkkkxxxxxxxxxddxxdoooddoooollllolllllccc    //\\n//    ccllllllllloodddodddxddxkkkkkkxl,'cO00Oko,':oxOKNWWMWNXKK000KKKK0KKKK0l:dkoc:clodl'...,:::;'.',;,;ccccokKXKK0Oxoddddxddddxdoccdkkkolc:;;;;,,;;;;;;;;;;;;;;:cclodxxkkkxkO0KNNWNNNNWNXXWNNNNNNNNNNNNXXXXXXXXXXXXXXXKKKKKKKKKKKKKKKO0KK0KKXNWWWWNXK000000Oxk00OOOOOO0Okxkkkkkkkkkkxxxxxxdddddoddddolooollllolcc    //\\n//    clllllllooooodddddxxxxxkkkkkOOkl,'lO00Ol'':oOXWWMMMWWNNNNNXKKK000KKKOo;lOO0XNWNN0c...'''......'',cdkO0XWMMMMWWWWWWWWMMMWNWWWX0KK0Ododool:;;,,,,;;;;;;;;;;:d000Okk0KKKkxoccoxKNNNNNXKKNNNNNNNXXXXXXXXXXXXXXXXXXXXKKXXKKKXXKKKKKKKKKKKKK0000KXWWWWNXK00OkkO0OOOOxxkOOOkkkOOOkkkkkkxxxxxxxxdooddddoodooooooolll    //\\n//    lccllooooloddxdddddkkkkOOOOkkOkl,,lkkkl',lkXWMMMMWNNXXXXNNWWNXK00K0kc;dXWMWWWWNXO:.............':kXNWMMMMWWNX0kOXWMMWWN0kOXXNKkollccccc::;,,,,,,,,,,,,;;lkXWNKxllodxOkdc;,,:o0NNNNXKXNNXNNNXXXXXXXXXXXXXXXXXXXXKKKKKKKKKKKKKKKKK0KKKK00000000KNWWMWN0xx0OOOO0OkxkO0OOOkOOOkkkkkkkkxxkxxdxxxdddddoooooollllll    //\\n//    llloooooddooxxlcodxxxkkOOkOkxOko:,ckkl:o0NWMMMWNKOOkkkkkO0KXWWNK000kclONWWWWWWWNXkloddc'.......,oKWMMMMMWXd::;,:oO0kxoc;':doll;,,,,,,;;,,,,,,,,,,,,,,;:o0WMMN0dc:cloxko::lkKXNNNNNXXNNNXXNXXXXXXXXXXXXXXXXXXXKKXKKKKKKKKKKKKKKKKK00K0000000OO000KNWMWNXK0OOOOOOOOOOOkkkkOOOOOkkOOkkkkxxxxdoodxxddddoooooodol    //\\n//    olloooodolccllccdxkkkOOOOOOO0Oxl;,lOOkKWWWWWWN0xdkkkkxxxxxkk0XWWXK00kcc0XKXNXK0XNNXXOkl,;'.'...:kNMMMMMWNO:.',,;cl:,''''',;,''',,',,,,,,,,,,,,,,,,;lxOKNMMMMMWKdllcccc:lONWWNNXKKXNNXNNXXXXXXXXXXXXXXXXXXXXXKKXKKKKKKKKKKKKKK000000000000000000O000KNWMWNK0OOOOOOOOOOkkkOOOOkkOOOOkkkkkxxdodxxdddddddddddooo    //\\n//    loooooooooodlc:clloodddxkkkxkOko::kNWWWNXXNWXOxxdxxddddxkkkkkkKWWX00O:.;c:oo:,';lcxKKKOxc'....:kNMWWNXKOkl'...',,;;,,',,;;,,'''''''',',,,,,,,,,,,;l0NWMMMMMMMN0kdlc:,,cOWNNNNNXKKXNKXWXKXXXXXXXXKXXXXXXKKXKKKKKKKKKKKKKKKKKKKK00K000000000OOO0OOxoxO0KXWMWNX0OOOOOOOOkkOOOOOOOOOOOOkkkkxxkkxxxxxxdddddooodol    //\\n//    loooooddddxxkooxklcloloddddodOOkkKWWNKOOOXWN0kxkkkkxxddxk00OOOOXWNK0x,  .....',,;:lkXNXkc,...'cod0Oxoc:;;,'.',;:c:;,'..........'',;:::::;:;;;,,,:d0NWMMMMMMWXOoooc;,,:kNWNNNNNXXNWXKNNKKXXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKK0000000000000OOO0OxloO0OOO0KNWMWXKOOOOOOOkOOOOOkkOOOOOOOOkkkkxdxxkxxxxxdddddxo:    //\\n//    coooodooooxxdllxdoxOOkkxddddx0XWWN0kdxkOOXMNK0OkkxkkxxxxkOkkkO0XMWWXo..;:l::ldxkOOlckXXXKkxxxo;':xOOOo:;;,'.'',,,...    ...... ...,:ldxxdddoooldkXWMMMMMMMMMWX0Odc,',dXNNNNNNNNNWNNNNXKXXXXXXXXKKKKKXXKKKKKKKKKKKKKKKKK0KKKKK0KK0000000000OOOOOxkO0OOOOOOOKXWMWNK0OOOkkkOOOkxkOOOOOOOOOkkxkkkkxkxxxxxxddddl:    //\\n//    odolododdoxko;cdllxOOOOkxxO0KNWNOl:cok0XNWMWWNNXXK00OOOOOO00KKXWWNWWx:dKXX0OOOdc;:,.;xdxK00OxoccxKX0x:..........  ...................,:lllollloxkO0KNWWXKKNNNWWXOd;';kNNNXXXXNWWWNNXKKXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKK0K0OO0000000000000OOOxxOOOOOOOOOOkOOKWMWNK0kkkkOOOkkOOOOOOOOOOOkkkkkkkOkxxxxxdodxdo    //\\n//    ddoooxddxdxx:;od:':xOOkdxKNWMWX0dccld0NWWMNOdooxxkO0KXNWWMWWMWNKO0NWXKXKKKxc;,'......,;:l;',,:cldoll,..','...   ..'''''......'',,'...  .',:lllllc::clooc:lk000KOxoc;:xKNNXXXWWWWWXXXKXXXXXXXXXKKKKKKKKKKKKKKKKKKKK00KKK000K0000000000000000OkxkOOOOOkkOOkxkkkO0XNWWNX0kkOkOOOOkOOOOOOkkOOkkkkkkkkkkkkxxxxkkx    //\\n//    dxxdodxdddkd:cl::;:xxdx0XWWWX0OkkxlokXWMWNx,..... ...,;clllcc:;oKWWWNX0kxc...',,'...........'''............  ...''...........',ox:.',.. .,:oOXX0xc;;;;;;cloollodxkkdcdKWNNWWWWWNXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKK00000000000000OO00OkkOkxkOOOOOkxkOOOkxxkOkkOKNWMWX0OkOOOOOOOOOOOOOOOOOOkkkOOkkxxxkxxxxx    //\\n//    oddoddoodkkl:l::dl:ldOXWWX0OkkkkkdloONMWKo,....   ........    ,0WWNNXX0d,.  .......... .......''.........  ............'.....;:';;':o:. .lkKNXXN0Odlc;;;:ccccc::clo:ckNWNNNWNNXXXKKXXXXXXXKKKKKKKKKKKKKKKKKKKKKK00K0000000000OO000OOO00OOkxxkOOOOOOkOOOOOkxdkkkkOO0KNWMNK0OkOOOOOOOOOOOOOOOOxkOOOOkkkkxkxdxk    //\\n//    dddxdlodxOxclo;cxolxXWWNKkkOkkOkxooxONWOc;;,...  .............cNWNNXXKx;...       .................'....,:,,;'.   .;oolxdxOk;.'....l0x'.:0K0klcolllllccll::;;'''',;:d0KKXXNNXXK0OOOkkkxxxddddxO0000000000000KKKKKK000000000000000OOOOO00OkxkOOOOOkkOOkOOkkkkkkxkkkkkOKNWWNKOkkkkOOOOOOOOOOOOOOOOOO0K0Okkkxkk    //\\n//    xxdolloddxdodl,;dk0NWNKkddkkkOOkddxx0WKc.''........  .......  ;KXkdkKK0kOk,               .....'''''';oOXXOkOxlcl:,dWMWXxo0k'......';'.;OKko:''''',::;;:;;,'''';ldk00K0KK0K0kdooddxxkOOOkdl::cloddodollddloxO00000000000000000000O000OOOOOOOkkOOOkkkkxxkxkkxdkOkkxkkxxk0NWWNKOOkOOOkkkOOOkOOkkOO0KXXX0kkkOOO    //\\n//    ddodxdodollolc;:OWWXkdddxdxOOOOkddddKMO;........ ...    ....  .dXl;x0KNXKx,..',,,..   ....,ldxc,',:oOXWWWWWNNNxoK0okMWNXd,::........  .;::;,''....''''''',''.'l0000000OO00OkkkOO0KKXXXXXKKOxkOkkOkOOkxxdlccloxk00000000000000000000OOOOOOOOOkkOkOOkkkOkkOkkdldkkkkkkkkkkkKNWWN0OOOkxxOOOOOOkxkOOKXKKKOxxKK00    //\\n//    oldxxxkxxxc:cokKWW0c,:oxkddkOOkkxddONNl.......... ..     .     .x0xox0KKKOxx0KXXKOo;,;:::o0N0c',:::;:llox0NWWWkxNWKKNXOl,.......   .......'....',;clcloodo;',l0XK000KK0KXKKXXKK0kO00KKKKKKKKKKKKKKK00KK0OkOOkdodkOO00000OOO0000OO00OOOOOOOkkkOkOOkOkkkOOOxdl:oOkkkxxkkxdxk0XWMWX0OOkkkOOkkOOOOO0XXKKKOdkXK0k    //\\n//    xodxxxxxkd::xXWWXkl;,,cxdooxkkxxkkONM0,   .....'.... ..    ...  .xKc,:cd0000OOKXXX0kkk0KKNNO;.,,.........;lx0XKKXX0dl:...     ...............';ldxddddddxkxdxxdddkxoxkO0OO000KKOxOkOKKKKKKKKKKKKKKKK0000000000kdodOO000O0000000OOOOOOOOOOOkkOOOkkkkxkkkkkddxddkkkkkkOOkkkkkO0XWWN0OkxkOkxkOOkkO0K00KKOxOKK0k    //\\n//    dodooddkkdokNWNOlcol;,:ccldxxxdxkONMWx.    ............    ..    .xx'  .......',;,,'.,:lxol;...............';:;:;'..   ................'',;:coxkxddooooodkkxddxxdl;'oKK0O000KK000000KKKKKKKKKKKKKK0000000000000OdlokOOOO0OOOOOOOOOOOOOOOOOOOOkkkkkxkOkkkkxoclloxkkxxxkkkkxkxxx0NWWX0OOkkkOOkkkOKK000OOk0KKK0    //\\n//    ddxdodxkkONWWKo;,;:lc;,':looddood0WMK:..  ...        ..    .      ,kl.       .   .......... ..............   .  ..................',,,:okO000Okdoddxxdddodkkdc:,.':dOXXXXKOOOOO000KKKKKK00000K0KK000000000000000OxccdkOOOOOOOOOOOOOOOkOOOOkkkkxxkkOOkkkxxdclolodxxkddxxxdxkdddx0XWMWXOkkkkkkkO0XXXK00Ok0XKK0    //\\n//    xkOkolx0XWWXOxo:;;;:c;',:;;cloxdd0WNo..........       ..   .      .cx;...   ........... ..............................''',;,..''..co,.,:clodxxxxxkkxxxxdol:,.....lXNXXXKKOkxOO00000KKKKK0xdk0000000KK000000000000OkocokOOOOOOOOOOOOOkkkOOkkOOkxkkkkxkkxddoodoodxdkkkkkxdxxdoddkkk0NWWNKOkkkOkOKXXXKK0kkKXXXX    //\\n//    ddxkdd0NMWKxoll:,;::cl:,,,,:colclOWNo.......'...       ..         .c00Okd:'',,,'..       ..  ..............',:cloo;cdO0dokdc'.'...,,..''.',:dxkkxkO0Okkxl:'.....;ONXKKKK0OkkOO000O0KKKKK0xkK0OO000000000000000O00OOkc;okOOkkkOOOOOOOOOOOOkkkkkkxdxkxxkkxoloooxdodxxxxdloxxloddkkkkOXWMWXOkkkkkxxO00OkdxKXXXX    //\\n//    xkOkkKWMWKxdlclc,;,.':,';;,:loolcdXWk;.....,,...              .   'xXXKXKkoodkOkdc;,;c:;;.  . .....,;cooxO0KNNWWKl:xXK0OOKOo,.'';,...;;,.',;ldkkkOOkkddol;...'cdOXXXKKK00OkkOO0000O0K0KK000000000000000O00OOOOOOOOOkl,;cloxkkkOkkkOOOOkkkxddxxkxodkkxxxxxxdoolcc;cccoolooooddxkkkkkO0NWWN0kkkOdcldxoclxxx0KK    //\\n//    kkO0XWW0Oxolc,';::;.';,;;;;:loodooOWNd...........       ....     .oK0xx00o,,;co:,colloxdol,',;cldk0KXNNNNNNNWWWXl:oxxl,,:ooclddoc,,lk0d:'',:clxkkxkkdodoc,...lXNK00KKK00K0OkO0000OkO00000kxkO0000OxxO00OOOO00OOOOOOOl'',,cxkOOOOOOOkkOxodOkkkkkkxxkxkxodxxxdl:::;clcllc:ldxxdxkkxddxkOKWMN0kOKXKOOkl;d0klcll    //\\n//    kOKWMN0dxoldl;,;;;;;::::;::;llclodx0WXo'.... ..       .....     .;OXOdxKNKl,,;:'.;:,,,oo:okddOKXNNWNXXXKKXXXNWWKc;::cc,'',lOxll;..;okko:,:oxkOOxoolclc::;'..;ONX000KK000K0OOO000Oxk0K0000OOOxlclol;,:lolllllllllllll;....;clllllllllllc';ooxkkkkxdxxddxdodxolooooool::coodxk0K0kxodkxoxKNMWXKXXXK0d,;kKXKOkx    //\\n//    0XWWN0dodddoc;;::::cc::;;;;::ccodold0WNx,.....       .....     .'l0Xkxk0KK0xollccccccloolkKkx0XNWWNNXXXKKXXXNWW0;.;,.....'cd;......,kX0kxkKNKKkc,,,,''.'....dXXK0O0KK00KKOkkOO00kxO000OOOO0Oxl.                                         ,lldkkkkxxxdxxxdooddddoolcol:cdl:;:kXKOddxkkxkkO0NWWWNXXKOl'cOKXXX0o    //\\n//    NWMXOkdooodo:;:::;:olc;,clc;,:loc:coxKWWOc''..        .        .,oO0kk00000KK00OOOkxxdodOKXOOXNXXWNXXXKKXKKXKXWXocxl.....';c:......,kNNWWXKXXOc'',;::;;,...;0NXKOOK000KK0kxkOOOOxk000OOO00000k,                                         :xkxxxxxdodxkxxxxololloc;;ccoxddocl0XKOdldkkkkkkkOXWMWNXKkc;o0KXXKk:    //\\n//    MWXOxolodddooxl:::;;::,',::;:;,;:ododkKWMXo'..                  ,xxoldkO00K00000OOkkkxxOKXX0KNXXXXXXKKXKKXKKKXKXXKOo,....,d0d',clld0NX000OKX0x;,;;,,;:::,..dXXK0OOOO0KKKOxxkOOOkxO0OOkO000000k,                ..                       :kkkkxxkdlodxoldxdodxxo;,:ldxdddlcxKXK0kddxxkkkkkkkKWMMNOl,,oO0XXKk;    //\\n//    WKxxoloodxolool;;c:;,,,,',;:c::;;cloxooONWWO:..                 'dkdodOO0KKKK0000000OkOKNNXXNNXKKXKKKKXXXKKKKKKKXNWK:...cONO;.,xXWMWWKd:,:kKKd;;;,,;;;:::';ONKKK0O0KKK00OxxkOOOkkOkkkO000OO00k;   ..... ...    ,l:...            ...    :kkkkxkxl:::codxxxkkkxocldolllodooOXKK0Odoxkkkkkkkk0NWMWKxlcdxkKKkc'    //\\n//    Kkxxxxxooddoolllcol:;';;'.,::;;:clodxodddONWO:..                .o0xxkxxdk0OO000000000KXNXXNNK0KKKKKKKKKKKKKKKKKXNWXl..;xO0o. .;ONKXWKdlo0XK0o;,;,,,;:::;,lKXKKK00KKK0OOkxkkkOOkkOOO000OOOOO0k:   ;occ:,..c,   c0x';,   ..':' ....,:.   ;xkxkkkdolc:cldxxxdddddodxoccloddkKXK0ko:;okxkxdkOKXXXNWMWXkokXXX0c.    //\\n//    kkxxxkkdodoooollc::,.';::;,,',:collllodolokNWO,                  :Oc...  ,xdoO00XXXNXXKKKXNNN00KKK00KKK0KXKKKKKKKXNNKkkKNNKo'.'lO0dxXNXNWWXKKd;,,,,;;:::;;xXK0000000K00OkxkkkOOkkO00OOO0OOOOOk:   ,;;c,;c:l,   :olod,  .::cdc,;' .'.    ,xxdxkkxdo:cdllxxxkxdoodxdlloodxxOKOxl'..,xOkkkxxOkx00x0WMW0ldXXXKoc    //\\n//    odkxdkxooodooc,;:,...,;:oc'';:,,,;;:llc;lodOKN0:                 ,Od..  .ckkkKXNXXXKKKKKXNNNN0OXKK00KKKKKKKKKKKKKXXNNWWNNNXOkO0NNXXXKNNNWNXKXk:,,,,;;;;;'c0K00K00000000OxxkkkOOOOOOOOOOOOOOOOO:   .. .  ...    ..'::;.   ...            'oxxxxkxollodoloodddxdooll::loddddxkdlccloxkkkxxkkdodxlcOWMXdoxddlxK    //\\n//    xxxxxxdodxoll;,;::'.,;;cl;;:cc;'.',;;:;;cloddkXXo.             ..;0Oc:::cdk0XNXK0KXNNNNNNNNNXOOXK00KKKKKKKKKKKKKXKKXNNNNNNXXXXKKXXKKXXXNXXXXXOc.',,,;,'.'dK000000000000kxxkkkkkOOOOOOOOOOOOOOOc.                                        .lkkxdddddddddoc:cllddccllclloooooxKXXKko:cdkkxddoddc,,:oXMMW0xd;.cK    //\\n//    kddddxxdxxolc;,;:;',,::;;:ll;,,,,,cc::clloooc:xXWO;        ..   .oKx:::::cxKWXO0XNNNNNNNXXXXXKKXKK0KK0O0XKKKKKXKKKKKKXXXXKKKKKKXKKXKKKKKXXKXNO:.',,,'...:OX00000000000OkxkkkkkkOOOOOOOOOOOOOOOc.                                        'oxdddooooddddllc::lddoc:ldooddolookKXX0koccoo:codxxc.lkokNWMWXOo,'l    //\\n//    kOkdoxkdooc::;,::'';,;;;cloo;',lllll:cooodol::dO0NXo.     ....  ;0k,,;cc,,kNOoxKNNNNNNNXKKXNXXXNXK0000kOXXXKKKKKXKKKKKKKKKKKKXXXXOo:;;:lkKXKkl,..,',lkkkOKK00000000000OkxkkkkkkOOOOOOOOOOOOOOOl.                                        .oxxkxlllcooododdl:codo::loooddoollx0XXKKOxl:,;odldl'.cklo0NWMWK0k:.    //\\n//    kkkxdxdoodl:;;lc,.';,;cc;,;;'.,:c;;:::clclolclolco0NO;  ........;00l:::;;x0dlxKNNNNNNXXK0KNNXXXNXK000000KXXKKKKKKKKKKK0KKKKKKXXXXKOkkxddxkl,....'''oK000OOOOO000000000OxxkkkkkkOOOOOOOOOOOOOOOl.                                        .oxddddxdoc:clcllloc:cllcloddddooldxOKXXK00Ox;;kkolc..,lc:xKXWWNOo:'    //\\n//    kkkdoddolll::ccc;,,;:cc::,,'..'::;cl:;:lcccllc:;cld0NXx;..      .lK0o;:xK0llOXNNNNNXXKKKXXNNXXXNXK00K00KKKKKKKKKKKXXKOxxOKKKKKKXXNNXkl:,'.......,;o00OOOOOOOOO0OOOOO0OkxxkkkkkkkOOOOkkOOOOOOOOo.                                        .okxdxxxdddxdoclcclc;':c:looodooddxxk0XXXKKKOlcxklcc,..,,;looddOOkk0    //\\n//    kxddoodddo:,:lccc:,,:ccc:,,...':c:::::::ccclc;.;c:ldxOKKkl'.    .'dKOkKW0ooOXXXXXXXKKKXNNNNXXXXNXKKK00K0KKKKKK00KKKK0kl:dkxxkOOOOOko;'.   ...''':x00OOOOOOOOOO0OOOOOOkxdxkkkkkkkkOOOkkkkkkkkkOo.                                        .lkkkkkkkdoodooooollc,;lloolodlodxdddkKXXXXX0ooddoool:;:ccoxloOXNNX0    //\\n//    dldxdolodc;;cllclc:ldoolc;'...,:c:,,,,;::;:c:,;:,':lolokKXKx:.  ..;kKKNKxkKKKKKKKKXXXXXXNNNXXXXXXXK0KK00K00KKKKKKKK00K0Okdlc::;;,'.'';......',;lk00OOOOOOOOOOOOOOOOOkdddxkkkkkkkkkOOkkkkkkkkkko.    .,   .'     ..  . .,    '.          .cxkkkkxxdllddxxxxdl;:llclccoxdoddoodxOKXXXXxcdxodocolcllldkxx0XXKOx    //\\n//    xxxdoddlllooddocclllllll:,....,;cl;'';:,,;,..;;,,;:ldxxodx0NXko:. .oKX0x0KOO0KXXXXNXXXXNNXXXXXXXXXXK00K000000KKXKK0000KKKK0Oxl;'...........';lxO0OOOOOkOOOOOOOOOOOOkxddxxkkkkkkkkkkkkkkkkkkkkkd'    .c;  ;o:.  .c' .; ,l.  .c.          .cxxxkkxkkxxkxxxddxdcooolccclooooodxxxxkkkxocl0OoooodxxddxddxOO0KKKK    //\\n//    kxxxdxdoodxddxxddol:;ccc;,,'..,:c:'','.,;;;;;l;,:cccoolcodxO0kdxl..oNKk0KOkOKXXXNNNXXNXXXXXXXXXXKXXK00000000000KKKKK0KKKKKKXKxc'..........';dO0OOOOOOOOOOOOOOOOOOOOxoodxxkkkkkkkkkkkkkkkkkkkkkd'     ,d;:l',c..:,  'c.,d.  ,o'          .ckxxkkxxxkkkkxdollllclool;,lddoodxxxkxoloooxOOolkOdodxdkOOxxkkkKXXX    //\\n//    kdxxdxdooddoodoolldool;,,;:,',;:;,,,,;;:cclccc;;ccclolldxxxddOxoo,;0NKKKK0KXXXXXNXXXXXXXXXXXXXXXKKKKK000000K00K00KKKKK00KKXK0o,...  .....';oO0OOOOOOOOOOkOOOOOOOkkkoloddxkkkkkkkkkkkkkkkkkkkkkd'      c0O:  ':;.   .;.'dc..:x;.          :xdxxxdodxkxddooc;:oddool:cllc:ldxxxxxdx00kxdddk0OxdxddxkdodxOKKKXX    //\\n//    kdodddddddxddolllodoc;,:cllccc;,',,,cc;,;cc:c:;:ll:coddoxxdxxxdol;oKXXK0KXXXXNXXNXXXXXXXXXXXXXXKXK0O000000000K00K00KK0KK00K0kl,........,;cdOOkkkOOkkOkkkOkkkkOOOOkkdloodxkkkkkkkkkkkkkkkkkkkkkx,      .;;    ..     .  .,...,,'.         ,dddkxxodxdoc:ll;:lkkxddddol:;cddddddxxxk0XXXKK0000OOkdk0OOKOlclokk    //\\n//    kxodxdxkxdxxxdddoolc:ooloc::;;'.';;:oc:loc,,:;;,;clodxddxodkxxxxolxKXXKXXXXXXXXXXXXXXXXXXXXXXXXXKKKOkxxkOkO0000000K00K000000Odl:,....;codkOOkkkkkkkkkOkkkkkkOkxkOOkxoooxxkkkkkkkkkkkkkkkkkkkkkx,                                         ;xkxxkdlodddooolldxddddxxddoloxxxddxkxodxk0KK0Okx0K0OddOKKXXk;ck0Ok    //\\n//    kkddkxdxkxdddddlooccool;,,,'.,;,:c:::cccll:;,..,:lodddxdddxxxollclk0KXXXXXXXXXXXXXXXXXXXXXXXXXXXKK0kxoooooddk000000000000000K0ko;..';lxOOOkkkkkkkkkkkkkkkkkOOkkkOkkkxodxxkkkkkkkkkkkkkkkkkkkkkx;                                         ;ddolllllllccolldddxxxddxdddddodxxxdxxdxkkkOKK0OOKXKOkO00KKKxd0XXKK    //\\n//    kkxxxoodddxxxxxdooooll:,;:;,.';:c:;:::::;:l:;:lc:lc:clooxxdl;;cccx0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXKKK0kooollclldk000000000000000Od:',lxkOkkkkkkkkkkkkkkkkkkkkkkkOOkkkkxdddxxkkxxkkkkkkkkkkkkkkkkx;           .,.     ....                  ,oxxdl:;;;::looodxoodxxddddddddxxxxxdxkxxkkkOKXKKXXXK0000KX0dxKXK0O    //\\n//    ;cldddxxddddolodlcllooc:;;::,,,,;;:c,;c::clc:lolldllddodxxo;,oxdkKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXKKKK0kdollc:::clodxkO0000000OOkdc::oxkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkxddxxkkkxxxkkkkkkkkkkkkkkkx:          .dOO:   .::..                  ,dxkxxo:,';cldodxxddxxxdodxxdxxdodxxxxxxxxkkkOKXXK0000KXXXOc.,kK0d:    //\\n//    .....';coodxdooocodol:cc::;;;'''.;c;:ccccloloddooxooxdddxkd:cdxdOKXXXXXXXXXXXNXXXXXXXXXXKKXXXXXKKK0Oxdolc::;,,;;:cloddddddxdoolcokOOkkkkkkkkkkkkkkkkkkkkkkkkkkOOkkkxxddxxkkkkkkkkkkkkkkkkkkkkkk:          .dkxo.  .lo.                   ,dkxxxc',ll:coddoodlodddxxxxddxxddxxxxxxxxkkkOKK00K0kodxdl,..;k0o'     //\\n//    ..........',;cc:,;lolc::;;,;,';;'',,,;cccooodxdoodooxxdodkd::dxxOXXXXXXXXXXXXXXXXXXXXXX0OKXXXXKKKK0Oxdolc::;;,''.';ccc:;;::;;;cdkOOkkkkxxkkkkkkkkkkkkkkkkkkkkkkkkkkkxddxxkxxxxkkkkkkkkkkkkkkkkk:           ,;,;.   ,c'..                 'dkxxo,.lxoloxxxdo                                                     //\\n//                                                                                                                                                                                                                                                                                                                    //\\n//                                                                                                                                                                                                                                                                                                                    //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract GNA is ERC721Creator {\\n    constructor() ERC721Creator(\\\"NATOSHIME\\\", \\\"GNA\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GNA", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}