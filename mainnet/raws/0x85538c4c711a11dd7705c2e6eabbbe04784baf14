{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: Whoops\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface DreamCash {\r\n    function claim(address to) external returns (bool);\r\n}\r\n\r\ncontract FreeDreamCash {\r\n\r\n    address constant dreamcash = address(0xe00a182284098e9c2ba89634544d51B0179c4C92);\r\n\r\n    constructor() payable {}\r\n\r\n    function getManyDreamCash(uint numIterations) external {\r\n        for(uint i=0; i<numIterations; i++) {\r\n            DreamCash(dreamcash).claim(msg.sender);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numIterations\",\"type\":\"uint256\"}],\"name\":\"getManyDreamCash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FreeDreamCash", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4158d4ea6d1a69f995e1e7affa9834a0fd9fe15242608c15bfc369e3e392be04"}]}