{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.5.8;\r\n\r\n/// @title A contract that is able to facilitate donations to different charities\r\n/// whenever a user wants to make a transfer of funds to another user.\r\ncontract Charitable {\r\n    address payable owner;\r\n    address payable taxCollectAddress;\r\n    uint256 taxPercent;\r\n    uint256 totalDonationsAmount;\r\n    uint256 highestDonation;\r\n    address payable highestDonor;\r\n\r\n    /// @param address_ The tax address to store tax\r\n    constructor(address payable address_) public {\r\n        owner = msg.sender;\r\n        taxCollectAddress = address_;\r\n        taxPercent = 5;\r\n        totalDonationsAmount = 0;\r\n        highestDonation = 0;\r\n    }\r\n\r\n    /// Restricts the access only to the user who deployed the contract.\r\n    modifier restrictToOwner() {\r\n        require(msg.sender == owner, 'Method available only to the to the user that deployed the contract');\r\n        _;\r\n    }\r\n\r\n    /// Validates that the amount to transfer is not zero.\r\n    modifier validateTransferAmount() {\r\n        require(msg.value > 0, 'Transfer amount has to be greater than 0.');\r\n        _;\r\n    }\r\n\r\n    /// Validates that the donated amount is within acceptable limits.\r\n    ///\r\n    /// @param donationAmount The target donation amount.\r\n    /// @dev donated amount >= 1% of the total transferred amount and <= 50% of the total transferred amount.\r\n    modifier validateDonationAmount(uint256 donationAmount) {\r\n        require(donationAmount >= msg.value / 100 && donationAmount <= msg.value / 2,\r\n            'Donation amount has to be from 1% to 50% of the total transferred amount');\r\n        _;\r\n    }\r\n\r\n    /// Transmits the address of the donor and the amount donated.\r\n    event Donation(\r\n        address indexed _donor,\r\n        uint256 _value\r\n    );\r\n\r\n    /// Transmits the previous and new owner\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner, \r\n        address indexed newOwner\r\n    );\r\n\r\n    /// Transmits the previous and new tax address\r\n    event TaxAddressTransferred(\r\n        address indexed previousTaxAddress, \r\n        address indexed newTaxAddress\r\n    );\r\n\r\n    /// Transmits the previous and new tax percent\r\n    event TaxPercentageTransferred(\r\n        uint256 indexed previousPercentage, \r\n        uint256 indexed newPercentage\r\n    );\r\n\r\n    /// Redirects transferred funds to the target charity excluding tax.\r\n    /// Whenever a transfer of funds is complete, it emits the event `Donation`.\r\n    ///\r\n    /// @param charityAddress The target donation Address.\r\n    function donate(address payable charityAddress) public validateTransferAmount() payable {\r\n        uint256 taxAmount = msg.value * taxPercent / 100;\r\n        uint256 donationAmount = msg.value - taxAmount;\r\n\r\n        charityAddress.transfer(donationAmount);\r\n        taxCollectAddress.transfer(taxAmount);\r\n\r\n        emit Donation(msg.sender, donationAmount);\r\n\r\n        totalDonationsAmount += donationAmount;\r\n\r\n        if (donationAmount > highestDonation) {\r\n            highestDonation = donationAmount;\r\n            highestDonor = msg.sender;\r\n        }\r\n    }\r\n\r\n    /// Returns tax collect address.\r\n    /// @return taxCollectAddress\r\n    function getAddress() public view returns (address payable) {\r\n        return taxCollectAddress;\r\n    }\r\n\r\n    /// Returns the total amount raised by all donations (in wei) towards any charity.\r\n    /// @return totalDonationsAmount\r\n    function getTotalDonationsAmount() public view returns (uint256) {\r\n        return totalDonationsAmount;\r\n    }\r\n\r\n    /// Returns the address that made the highest donation, along with the amount donated.\r\n    /// @return (highestDonation, highestDonor)\r\n    function getHighestDonation() public view restrictToOwner() returns (uint256, address payable)  {\r\n        return (highestDonation, highestDonor);\r\n    }\r\n\r\n    // Destroys the contract and renders it unusable.\r\n    function destroy() public restrictToOwner() {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    /// Transfer Ownership\r\n    ///\r\n    /// @param newOwner The new owner of this smart contract.\r\n    function transferOwnership(address payable newOwner) public restrictToOwner() {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    /// change tax address\r\n    ///\r\n    /// @param newTaxAddress The new tax address\r\n    function setTaxAddress(address payable newTaxAddress) public restrictToOwner() {\r\n        require(newTaxAddress != address(0));\r\n        emit TaxAddressTransferred(taxCollectAddress, newTaxAddress);\r\n        taxCollectAddress = newTaxAddress;\r\n    }\r\n\r\n    /// change tax percent\r\n    ///\r\n    /// @param newTaxPercent New tax percent\r\n    function setTaxAddress(uint256 newTaxPercent) public restrictToOwner() {\r\n        require(newTaxPercent != 0);\r\n        emit TaxPercentageTransferred(taxPercent, newTaxPercent);\r\n        taxPercent = newTaxPercent;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"charityAddress\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalDonationsAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTaxPercent\",\"type\":\"uint256\"}],\"name\":\"setTaxAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTaxAddress\",\"type\":\"address\"}],\"name\":\"setTaxAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHighestDonation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"address_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_donor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Donation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousTaxAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newTaxAddress\",\"type\":\"address\"}],\"name\":\"TaxAddressTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousPercentage\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"newPercentage\",\"type\":\"uint256\"}],\"name\":\"TaxPercentageTransferred\",\"type\":\"event\"}]", "ContractName": "Charitable", "CompilerVersion": "v0.5.8+commit.23d335f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000586ef51a342cf9a46ff99e66655c25e3a1a150b2", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://e3896aeb6856b13995682fa5f808b32446b67a0ffba846061f512382337b4afa"}]}