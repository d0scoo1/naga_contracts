{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.20;\r\n\r\n/*\r\n* LastHero\u56e2\u961f.\r\n* -> \u8fd9\u662f\u4ec0\u4e48?\r\n* \u6539\u8fdb\u7684\u81ea\u4e3b\u91d1\u5b57\u5854\u8d44\u91d1\u6a21\u578b:\r\n* [x] \u8be5\u5408\u7ea6\u662f\u76ee\u524d\u6700\u7a33\u5b9a\u7684\u667a\u80fd\u5408\u7ea6\uff0c\u7ecf\u53d7\u8fc7\u6240\u6709\u7684\u653b\u51fb\u6d4b\u8bd5!\r\n* [x] \u7531ARC\u7b49\u591a\u540d\u5b89\u5168\u4e13\u5bb6\u5ba1\u6838\u6d4b\u8bd5\u3002\r\n* [X] \u65b0\u529f\u80fd\uff1a\u53ef\u90e8\u5206\u5356\u51fa\uff0c\u800c\u4e0d\u5fc5\u5c06\u4f60\u7684\u6240\u6709\u8d44\u4ea7\u5168\u90e8\u5356\u51fa!\r\n* [x] \u65b0\u529f\u80fd\uff1a\u53ef\u4ee5\u5728\u94b1\u5305\u4e4b\u95f4\u4f20\u8f93\u4ee3\u5e01\u3002\u53ef\u4ee5\u5728\u667a\u80fd\u5408\u7ea6\u4e2d\u8fdb\u884c\u4ea4\u6613!\r\n* [x] \u65b0\u7279\u6027\uff1a\u4e16\u754c\u9996\u521bPOS\u8282\u70b9\u4ee5\u592a\u574a\u804c\u80fd\u5408\u7ea6\uff0c\u8ba9V\u795e\u75af\u72c2\u7684\u65b0\u529f\u80fd\u3002\r\n* [x] \u4e3b\u8282\u70b9\uff1a\u6301\u6709100\u4e2a\u4ee3\u5e01\u5373\u53ef\u62e5\u6709\u81ea\u5df1\u7684\u4e3b\u8282\u70b9\uff0c\u4e3b\u8282\u70b9\u662f\u552f\u4e00\u7684\u667a\u80fd\u5408\u7ea6\u5165\u53e3!\r\n* [x] \u4e3b\u8282\u70b9\uff1a\u6240\u6709\u901a\u8fc7\u4f60\u7684\u4e3b\u8282\u70b9\u8fdb\u5165\u5408\u7ea6\u7684\u73a9\u5bb6\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f9710%\u7684\u5206\u7ea2!\r\n*\r\n* -> \u5173\u4e8e\u9879\u76ee?\r\n* \u6211\u4eec\u7684\u56e2\u961f\u6210\u5458\u62e5\u6709\u8d85\u5f3a\u7684\u521b\u5efa\u5b89\u5168\u667a\u80fd\u5408\u7ea6\u7684\u80fd\u529b\u3002\r\n* \u65b0\u7684\u5f00\u53d1\u56e2\u961f\u7531\u7ecf\u9a8c\u4e30\u5bcc\u7684\u4e13\u4e1a\u5f00\u53d1\u4eba\u5458\u7ec4\u6210\uff0c\u5e76\u7531\u8d44\u6df1\u5408\u7ea6\u5b89\u5168\u4e13\u5bb6\u5ba1\u6838\u3002\r\n* \u53e6\u5916\uff0c\u6211\u4eec\u516c\u5f00\u8fdb\u884c\u8fc7\u6570\u767e\u6b21\u7684\u6a21\u62df\u653b\u51fb\uff0c\u8be5\u5408\u7ea6\u4ece\u6765\u6ca1\u6709\u88ab\u653b\u7834\u8fc7\u3002\r\n* \r\n* -> \u8fd9\u4e2a\u9879\u76ee\u7684\u6210\u5458\u6709\u54ea\u4e9b?\r\n* - PonziBot (math/memes/main site/master)\u6570\u5b66\r\n* - Mantso (lead solidity dev/lead web3 dev)\u4e3b\u7a0b\r\n* - swagg (concept design/feedback/management)\u6982\u5ff5\u8bbe\u8ba1/\u53cd\u9988/\u7ba1\u7406\r\n* - Anonymous#1 (main site/web3/test cases)\u7f51\u7ad9/web3/\u6d4b\u8bd5\r\n* - Anonymous#2 (math formulae/whitepaper)\u6570\u5b66\u63a8\u5bfc/\u767d\u76ae\u4e66\r\n*\r\n* -> \u8be5\u9879\u76ee\u7684\u5b89\u5168\u5ba1\u6838\u4eba\u5458:\r\n* - Arc\r\n* - tocisck\r\n* - sumpunk\r\n*/\r\n\r\ncontract Hourglass {\r\n    /*=================================\r\n    =            MODIFIERS  \u5168\u5c40       =\r\n    =================================*/\r\n    // \u53ea\u9650\u6301\u5e01\u7528\u6237\r\n    modifier onlyBagholders() {\r\n        require(myTokens() > 0);\r\n        _;\r\n    }\r\n    \r\n    // \u53ea\u9650\u6536\u76ca\u7528\u6237\r\n    modifier onlyStronghands() {\r\n        require(myDividends(true) > 0);\r\n        _;\r\n    }\r\n    \r\n    // \u7ba1\u7406\u5458\u6743\u9650:\r\n    // -> \u66f4\u6539\u5408\u7ea6\u540d\u79f0\r\n    // -> \u66f4\u6539\u4ee3\u5e01\u540d\u79f0\r\n    // -> \u6539\u53d8POS\u7684\u96be\u5ea6\uff08\u786e\u4fdd\u7ef4\u6301\u4e00\u4e2a\u4e3b\u8282\u70b9\u9700\u8981\u591a\u5c11\u4ee3\u5e01\uff0c\u4ee5\u907f\u514d\u6ee5\u53d1\uff09\r\n    // \u7ba1\u7406\u5458\u6ca1\u6709\u6743\u9650\u505a\u4ee5\u4e0b\u4e8b\u5b9c:\r\n    // -> \u52a8\u7528\u8d44\u91d1\r\n    // -> \u7981\u6b62\u7528\u6237\u53d6\u6b3e\r\n    // -> \u81ea\u6bc1\u5408\u7ea6\r\n    // -> \u6539\u53d8\u4ee3\u5e01\u4ef7\u683c\r\n    modifier onlyAdministrator(){ // \u7528\u6765\u786e\u5b9a\u662f\u7ba1\u7406\u5458\r\n        address _customerAddress = msg.sender;\r\n        require(administrators[keccak256(_customerAddress)]); // \u5728\u7ba1\u7406\u5458\u5217\u8868\u4e2d\u5b58\u5728\r\n        _; // \u8868\u793a\u5728modifier\u7684\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c\u5f00\u59cb\u6267\u884c\u5176\u5b83\u51fd\u6570\r\n    }\r\n    \r\n    \r\n    // \u786e\u4fdd\u5408\u7ea6\u4e2d\u7b2c\u4e00\u6279\u4ee3\u5e01\u5747\u7b49\u7684\u5206\u914d\r\n    // \u8fd9\u610f\u5473\u7740\uff0c\u4e0d\u516c\u5e73\u7684\u4f18\u52bf\u6210\u672c\u662f\u4e0d\u53ef\u80fd\u5b58\u5728\u7684\r\n    // \u8fd9\u5c06\u4e3a\u57fa\u91d1\u7684\u5065\u5eb7\u6210\u957f\u6253\u4e0b\u575a\u5b9e\u7684\u57fa\u7840\u3002\r\n    modifier antiEarlyWhale(uint256 _amountOfEthereum){ // \u5224\u65ad\u72b6\u6001\r\n        address _customerAddress = msg.sender;\r\n        \r\n        // \u6211\u4eec\u8fd8\u662f\u5904\u4e8e\u4e0d\u5229\u7684\u6295\u8d44\u5730\u4f4d\u5417?\r\n        // \u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u5c06\u7981\u6b62\u65e9\u671f\u7684\u5927\u989d\u6295\u8d44 \r\n        if( onlyAmbassadors && ((totalEthereumBalance() - _amountOfEthereum) <= ambassadorQuota_ )){\r\n            require(\r\n                // \u8fd9\u4e2a\u7528\u6237\u5728\u4ee3\u8868\u540d\u5355\u5417\uff1f\r\n                ambassadors_[_customerAddress] == true &&\r\n                \r\n                // \u7528\u6237\u8d2d\u4e70\u91cf\u662f\u5426\u8d85\u8fc7\u4ee3\u8868\u7684\u6700\u5927\u914d\u989d\uff1f\r\n                (ambassadorAccumulatedQuota_[_customerAddress] + _amountOfEthereum) <= ambassadorMaxPurchase_\r\n                \r\n            );\r\n            \r\n            // \u66f4\u65b0\u7d2f\u8ba1\u914d\u989d  \r\n            ambassadorAccumulatedQuota_[_customerAddress] = SafeMath.add(ambassadorAccumulatedQuota_[_customerAddress], _amountOfEthereum);\r\n        \r\n            // \u6267\u884c\r\n            _;\r\n        } else {\r\n            // \u5982\u679c\u57fa\u91d1\u4e2d\u4ee5\u592a\u5e01\u6570\u91cf\u4e0b\u964d\u5230\u521b\u4e16\u503c\uff0c\u4ee3\u8868\u9636\u6bb5\u4e5f\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002\r\n            onlyAmbassadors = false;\r\n            _;    \r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    /*==============================\r\n    =            EVENTS  \u4e8b\u4ef6      =\r\n    ==============================*/\r\n    event onTokenPurchase( // \u8d2d\u4e70\u4ee3\u5e01\r\n        address indexed customerAddress,\r\n        uint256 incomingEthereum,\r\n        uint256 tokensMinted,\r\n        address indexed referredBy\r\n    );\r\n    \r\n    event onTokenSell( // \u51fa\u552e\u4ee3\u5e01\r\n        address indexed customerAddress,\r\n        uint256 tokensBurned,\r\n        uint256 ethereumEarned\r\n    );\r\n    \r\n    event onReinvestment( // \u518d\u6295\u8d44\r\n        address indexed customerAddress,\r\n        uint256 ethereumReinvested,\r\n        uint256 tokensMinted\r\n    );\r\n    \r\n    event onWithdraw( // \u63d0\u53d6\u8d44\u91d1\r\n        address indexed customerAddress,\r\n        uint256 ethereumWithdrawn\r\n    );\r\n    \r\n    // ERC20\u6807\u51c6\r\n    event Transfer( // \u4e00\u6b21\u4ea4\u6613\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 tokens\r\n    );\r\n    \r\n    \r\n    /*=====================================\r\n    =            CONFIGURABLES  \u914d\u7f6e       =\r\n    =====================================*/\r\n    string public name = \"LastHero3D\"; // \u540d\u5b57\r\n    string public symbol = \"Keys\"; // \u7b26\u53f7\r\n    uint8 constant public decimals = 18; // \u5c0f\u6570\u4f4d\r\n    uint8 constant internal dividendFee_ = 10; // \u4ea4\u6613\u5206\u7ea2\u6bd4\u4f8b\r\n    uint256 constant internal tokenPriceInitial_ = 0.0000001 ether; // \u4ee3\u5e01\u521d\u59cb\u4ef7\u683c\r\n    uint256 constant internal tokenPriceIncremental_ = 0.00000001 ether; // \u4ee3\u5e01\u9012\u589e\u4ef7\u683c\r\n    uint256 constant internal magnitude = 2**64;\r\n    \r\n    // \u80a1\u4efd\u8bc1\u660e\uff08\u9ed8\u8ba4\u503c\u4e3a100\u4ee3\u5e01\uff09\r\n    uint256 public stakingRequirement = 100e18;\r\n    \r\n    // \u4ee3\u8868\u8ba1\u5212\r\n    mapping(address => bool) internal ambassadors_; // \u4ee3\u8868\u96c6\u5408\r\n    uint256 constant internal ambassadorMaxPurchase_ = 1 ether; // \u6700\u5927\u8d2d\u4e70\r\n    uint256 constant internal ambassadorQuota_ = 20 ether; // \u8d2d\u4e70\u9650\u989d\r\n    \r\n    \r\n    \r\n   /*================================\r\n    =            DATASETS   \u6570\u636e     =\r\n    ================================*/\r\n    // \u6bcf\u4e2a\u5730\u5740\u7684\u80a1\u4efd\u6570\u91cf\uff08\u6309\u6bd4\u4f8b\u7f16\u53f7\uff09\r\n    mapping(address => uint256) internal tokenBalanceLedger_; // \u4fdd\u5b58\u5730\u5740\u7684\u4ee3\u5e01\u6570\u91cf\r\n    mapping(address => uint256) internal referralBalance_; // \u4fdd\u5b58\u5730\u5740\u7684\u63a8\u8350\u5206\u7ea2\r\n    mapping(address => int256) internal payoutsTo_;\r\n    mapping(address => uint256) internal ambassadorAccumulatedQuota_;\r\n    uint256 internal tokenSupply_ = 0;\r\n    uint256 internal profitPerShare_;\r\n    \r\n    // \u7ba1\u7406\u5458\u5217\u8868\uff08\u7ba1\u7406\u5458\u6743\u9650\u89c1\u4e0a\u8ff0\uff09\r\n    mapping(bytes32 => bool) public administrators; // \u7ba1\u7406\u8005\u5730\u5740\u5217\u8868\r\n    \r\n    // \u5f53\u4ee3\u8868\u5236\u5ea6\u6210\u7acb\uff0c\u53ea\u6709\u4ee3\u8868\u53ef\u4ee5\u8d2d\u4e70\u4ee3\u5e01\uff08\u8fd9\u786e\u4fdd\u4e86\u5b8c\u7f8e\u7684\u91d1\u5b57\u5854\u5206\u5e03\uff0c\u4ee5\u9632\u6301\u5e01\u6bd4\u4f8b\u4e0d\u5747\uff09\r\n    bool public onlyAmbassadors = true; // \u9650\u5236\u53ea\u6709\u4ee3\u8868\u80fd\u591f\u8d2d\u4e70\u4ee3\u5e01\r\n    \r\n\r\n\r\n    /*=======================================\r\n    =            PUBLIC FUNCTIONS \u516c\u5f00\u51fd\u6570   =\r\n    =======================================*/\r\n    /*\r\n    * -- \u5e94\u7528\u5165\u53e3 --  \r\n    */\r\n    function Hourglass()\r\n        public\r\n    {\r\n        // \u5728\u8fd9\u91cc\u6dfb\u52a0\u7ba1\u7406\u5458\r\n        administrators[0x4d947d5487ba694cc3c03fbaae7a63f0aec61e26bf7284baa1e36f8cbdbfe7e1] = true;\r\n        administrators[0xdacb12a29ec52e618a1dbe39a3317833066e94371856cc2013565dab2ae6fa62] = true;\r\n        \r\n        // \u5728\u8fd9\u91cc\u6dfb\u52a0\u4ee3\u8868\u3002\r\n        // mantso - lead solidity dev & lead web dev. \r\n        ambassadors_[0xdD9eaEbc859051A801e2044636204271B5D6821A] = true;\r\n        \r\n        // ponzibot - mathematics & website, and undisputed meme god.\r\n        ambassadors_[0xd47671aA1c42cF274697C8Fdf77470509B296d09] = true;\r\n\r\n        ambassadors_[0x8948e4b00deb0a5adb909f4dc5789d20d0851d71] = true;\r\n        \r\n\r\n    }\r\n    \r\n     \r\n    /**\r\n     * \u5c06\u6240\u6709\u4ee5\u592a\u574a\u7f51\u7edc\u4f20\u5165\u8f6c\u6362\u4e3a\u4ee3\u5e01\u8c03\u7528\uff0c\u5e76\u5411\u4e0b\u4f20\u9012\uff08\u5982\u679c\u6709\u4e0b\u5c42\u62d3\u6251\uff09\r\n     */\r\n    function buy(address _referredBy)\r\n        public\r\n        payable\r\n        returns(uint256)\r\n    {\r\n        purchaseTokens(msg.value, _referredBy);\r\n    }\r\n    \r\n    /**\r\n     * \u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u76f4\u63a5\u53d1\u9001\u5230\u5408\u7ea6\u7684\u4ee5\u592a\u574a\u53c2\u6570\u3002\r\n     * \u6211\u4eec\u4e0d\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u6307\u5b9a\u4e00\u4e2a\u5730\u5740\u3002\r\n     */\r\n    function()\r\n        payable\r\n        public\r\n    {\r\n        purchaseTokens(msg.value, 0x0);\r\n    }\r\n    \r\n    /**\r\n     * \u5c06\u6240\u6709\u7684\u5206\u7ea2\u8bf7\u6c42\u8f6c\u6362\u4e3a\u4ee3\u5e01\u3002\r\n     */\r\n    function reinvest()\r\n        onlyStronghands()\r\n        public\r\n    {\r\n        // \u63d0\u53d6\u80a1\u606f\r\n        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code\r\n        \r\n        // \u5b9e\u9645\u652f\u4ed8\u7684\u80a1\u606f\r\n        address _customerAddress = msg.sender;\r\n        payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);\r\n        \r\n        // \u68c0\u7d22\u53c2\u8003\u5956\u91d1\r\n        _dividends += referralBalance_[_customerAddress];\r\n        referralBalance_[_customerAddress] = 0;\r\n        \r\n        // \u53d1\u9001\u4e00\u4e2a\u8d2d\u4e70\u8ba2\u5355\u901a\u8fc7\u865a\u62df\u5316\u7684\u201c\u64a4\u56de\u80a1\u606f\u201d\r\n        uint256 _tokens = purchaseTokens(_dividends, 0x0);\r\n        \r\n        // \u91cd\u5927\u4e8b\u4ef6\r\n        onReinvestment(_customerAddress, _dividends, _tokens);\r\n    }\r\n    \r\n    /**\r\n     * \u9000\u51fa\u6d41\u7a0b\uff0c\u5356\u6389\u5e76\u4e14\u63d0\u53d6\u8d44\u91d1\r\n     */\r\n    function exit()\r\n        public\r\n    {\r\n        // \u901a\u8fc7\u8c03\u7528\u83b7\u53d6\u4ee3\u5e01\u6570\u91cf\u5e76\u5c06\u5176\u5168\u90e8\u51fa\u552e\r\n        address _customerAddress = msg.sender;\r\n        uint256 _tokens = tokenBalanceLedger_[_customerAddress];\r\n        if(_tokens > 0) sell(_tokens);\r\n        \r\n        // \u53d6\u6b3e\u670d\u52a1\r\n        withdraw();\r\n    }\r\n\r\n    /**\r\n     * \u53d6\u8d70\u8bf7\u6c42\u8005\u7684\u6240\u6709\u6536\u76ca\u3002\r\n     */\r\n    function withdraw()\r\n        onlyStronghands()\r\n        public\r\n    {\r\n        // \u8bbe\u7f6e\u6570\u636e\r\n        address _customerAddress = msg.sender;\r\n        uint256 _dividends = myDividends(false); // \u4ece\u4ee3\u7801\u4e2d\u83b7\u5f97\u53c2\u8003\u5956\u91d1\r\n        \r\n        // \u66f4\u65b0\u80a1\u606f\u7cfb\u7edf\r\n        payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);\r\n        \r\n        // \u6dfb\u52a0\u53c2\u8003\u5956\u91d1\r\n        _dividends += referralBalance_[_customerAddress];\r\n        referralBalance_[_customerAddress] = 0;\r\n        \r\n        // \u83b7\u53d6\u670d\u52a1\r\n        _customerAddress.transfer(_dividends);\r\n        \r\n        // \u91cd\u5927\u4e8b\u4ef6\r\n        onWithdraw(_customerAddress, _dividends);\r\n    }\r\n    \r\n    /**\r\n     * \u4ee5\u592a\u574a\u4ee3\u5e01\u3002\r\n     */\r\n    function sell(uint256 _amountOfTokens)\r\n        onlyBagholders()\r\n        public\r\n    {\r\n        // \u8bbe\u7f6e\u6570\u636e\r\n        address _customerAddress = msg.sender;\r\n        // \u6765\u81ea\u4fc4\u7f57\u65af\u7684BTFO\r\n        require(_amountOfTokens <= tokenBalanceLedger_[_customerAddress]);\r\n        uint256 _tokens = _amountOfTokens;\r\n        uint256 _ethereum = tokensToEthereum_(_tokens);\r\n        uint256 _dividends = SafeMath.div(_ethereum, dividendFee_);\r\n        uint256 _taxedEthereum = SafeMath.sub(_ethereum, _dividends);\r\n        \r\n        // \u9500\u6bc1\u5df2\u51fa\u552e\u7684\u4ee3\u5e01\r\n        tokenSupply_ = SafeMath.sub(tokenSupply_, _tokens);\r\n        tokenBalanceLedger_[_customerAddress] = SafeMath.sub(tokenBalanceLedger_[_customerAddress], _tokens);\r\n        \r\n        // \u66f4\u65b0\u80a1\u606f\u7cfb\u7edf\r\n        int256 _updatedPayouts = (int256) (profitPerShare_ * _tokens + (_taxedEthereum * magnitude));\r\n        payoutsTo_[_customerAddress] -= _updatedPayouts;       \r\n        \r\n        // \u7981\u6b62\u9664\u4ee50\r\n        if (tokenSupply_ > 0) {\r\n            // \u66f4\u65b0\u4ee3\u5e01\u7684\u80a1\u606f\u91d1\u989d\r\n            profitPerShare_ = SafeMath.add(profitPerShare_, (_dividends * magnitude) / tokenSupply_);\r\n        }\r\n        \r\n        // \u91cd\u5927\u4e8b\u4ef6\r\n        onTokenSell(_customerAddress, _tokens, _taxedEthereum);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * \u4ece\u8bf7\u6c42\u8005\u8d26\u6237\u8f6c\u79fb\u4ee3\u5e01\u65b0\u6301\u6709\u8005\u8d26\u6237\u3002\r\n     * \u8bb0\u4f4f\uff0c\u8fd9\u91cc\u8fd8\u670910%\u7684\u8d39\u7528\u3002\r\n     */\r\n    function transfer(address _toAddress, uint256 _amountOfTokens)\r\n        onlyBagholders()\r\n        public\r\n        returns(bool)\r\n    {\r\n        // \u8bbe\u7f6e\r\n        address _customerAddress = msg.sender;\r\n        \r\n        // \u53d6\u4fdd\u62e5\u6709\u8db3\u591f\u7684\u4ee3\u5e01\r\n        // \u4ee3\u5e01\u7981\u6b62\u8f6c\u79fb\uff0c\u76f4\u5230\u4ee3\u8868\u9636\u6bb5\u7ed3\u675f\u3002\r\n        // \uff08\u6211\u4eec\u4e0d\u60f3\u6355\u9cb8\uff09\r\n        require(!onlyAmbassadors && _amountOfTokens <= tokenBalanceLedger_[_customerAddress]);\r\n        \r\n        // \u53d6\u8d70\u6240\u6709\u672a\u4ed8\u7684\u80a1\u606f\r\n        if(myDividends(true) > 0) withdraw();\r\n        \r\n        // \u88ab\u8f6c\u79fb\u4ee3\u5e01\u7684\u5341\u5206\u4e4b\u4e00\r\n        // \u8fd9\u4e9b\u90fd\u5c06\u5e73\u5206\u7ed9\u4e2a\u80a1\u4e1c\r\n        uint256 _tokenFee = SafeMath.div(_amountOfTokens, dividendFee_);\r\n        uint256 _taxedTokens = SafeMath.sub(_amountOfTokens, _tokenFee);\r\n        uint256 _dividends = tokensToEthereum_(_tokenFee);\r\n  \r\n        // \u9500\u6bc1\u8d39\u7528\u4ee3\u5e01\r\n        tokenSupply_ = SafeMath.sub(tokenSupply_, _tokenFee);\r\n\r\n        // \u4ee3\u5e01\u4ea4\u6362\r\n        tokenBalanceLedger_[_customerAddress] = SafeMath.sub(tokenBalanceLedger_[_customerAddress], _amountOfTokens);\r\n        tokenBalanceLedger_[_toAddress] = SafeMath.add(tokenBalanceLedger_[_toAddress], _taxedTokens);\r\n        \r\n        // \u66f4\u65b0\u80a1\u606f\u7cfb\u7edf\r\n        payoutsTo_[_customerAddress] -= (int256) (profitPerShare_ * _amountOfTokens);\r\n        payoutsTo_[_toAddress] += (int256) (profitPerShare_ * _taxedTokens);\r\n        \r\n        // \u5206\u53d1\u80a1\u606f\u7ed9\u6301\u6709\u8005\r\n        profitPerShare_ = SafeMath.add(profitPerShare_, (_dividends * magnitude) / tokenSupply_);\r\n        \r\n        // \u91cd\u5927\u4e8b\u4ef6\r\n        Transfer(_customerAddress, _toAddress, _taxedTokens);\r\n        \r\n        // ERC20\u6807\u51c6\r\n        return true;\r\n       \r\n    }\r\n    \r\n    /*----------  \u7ba1\u7406\u5458\u529f\u80fd  ----------*/\r\n    /**\r\n     * \u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u914d\u989d\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u63d0\u524d\u7ed3\u675f\u4ee3\u8868\u9636\u6bb5\u3002\r\n     */\r\n    function disableInitialStage()\r\n        onlyAdministrator()\r\n        public\r\n    {\r\n        onlyAmbassadors = false;\r\n    }\r\n    \r\n    /**\r\n     * \u5728\u7279\u6b8a\u60c5\u51b5\uff0c\u53ef\u4ee5\u66f4\u6362\u7ba1\u7406\u5458\u8d26\u6237\u3002\r\n     */\r\n    function setAdministrator(bytes32 _identifier, bool _status)\r\n        onlyAdministrator()\r\n        public\r\n    {\r\n        administrators[_identifier] = _status;\r\n    }\r\n    \r\n    /**\r\n     * \u4f5c\u4e3a\u9884\u9632\u63aa\u65bd\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u8c03\u6574\u4e3b\u8282\u70b9\u7684\u8d39\u7387\u3002\r\n     */\r\n    function setStakingRequirement(uint256 _amountOfTokens)\r\n        onlyAdministrator()\r\n        public\r\n    {\r\n        stakingRequirement = _amountOfTokens;\r\n    }\r\n    \r\n    /**\r\n     * \u7ba1\u7406\u5458\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u54c1\u724c\uff08\u4ee3\u5e01\u540d\u79f0\uff09\u3002\r\n     */\r\n    function setName(string _name)\r\n        onlyAdministrator()\r\n        public\r\n    {\r\n        name = _name;\r\n    }\r\n    \r\n    /**\r\n     * \u7ba1\u7406\u5458\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u54c1\u724c\uff08\u4ee3\u5e01\u7b26\u53f7\uff09\u3002\r\n     */\r\n    function setSymbol(string _symbol)\r\n        onlyAdministrator()\r\n        public\r\n    {\r\n        symbol = _symbol;\r\n    }\r\n\r\n    \r\n    /*----------  \u5e2e\u52a9\u8005\u548c\u8ba1\u6570\u5668  ----------*/\r\n    /**\r\n     * \u5728\u5408\u7ea6\u4e2d\u67e5\u770b\u5f53\u524d\u4ee5\u592a\u574a\u72b6\u6001\u7684\u65b9\u6cd5\r\n     * \u4f8b\u5982 totalEthereumBalance()\r\n     */\r\n    function totalEthereumBalance() // \u67e5\u770b\u4f59\u989d\r\n        public\r\n        view\r\n        returns(uint)\r\n    {\r\n        return this.balance;\r\n    }\r\n    \r\n    /**\r\n     * \u68c0\u7d22\u4ee3\u5e01\u4f9b\u5e94\u603b\u91cf\u3002\r\n     */\r\n    function totalSupply()\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        return tokenSupply_;\r\n    }\r\n    \r\n    /**\r\n     * \u68c0\u7d22\u8bf7\u6c42\u8005\u7684\u4ee3\u5e01\u4f59\u989d\u3002\r\n     */\r\n    function myTokens()\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        address _customerAddress = msg.sender; // \u83b7\u5f97\u53d1\u9001\u8005\u7684\u5730\u5740\r\n        return balanceOf(_customerAddress);\r\n    }\r\n    \r\n    /**\r\n     * \u53d6\u56de\u8bf7\u6c42\u8005\u62e5\u6709\u7684\u80a1\u606f\u3002\r\n     * \u5982\u679c`_includeReferralBonus` \u7684\u503c\u4e3a1\uff0c\u90a3\u4e48\u63a8\u8350\u5956\u91d1\u5c06\u88ab\u8ba1\u7b97\u5728\u5185\u3002\r\n     * \u5176\u539f\u56e0\u662f\uff0c\u5728\u7f51\u9875\u7684\u524d\u7aef\uff0c\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u5168\u5c40\u6c47\u603b\u3002\r\n     * \u4f46\u5728\u5185\u90e8\u8ba1\u7b97\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u5f00\u8ba1\u7b97\u3002\r\n     */ \r\n    function myDividends(bool _includeReferralBonus) // \u8fd4\u56de\u5206\u7ea2\u6570\uff0c\u4f20\u5165\u7684\u53c2\u6570\u7528\u6765\u6307\u793a\u662f\u5426\u8003\u8651\u63a8\u8350\u5206\u7ea2\r\n        public \r\n        view \r\n        returns(uint256)\r\n    {\r\n        address _customerAddress = msg.sender;\r\n        return _includeReferralBonus ? dividendsOf(_customerAddress) + referralBalance_[_customerAddress] : dividendsOf(_customerAddress) ;\r\n    }\r\n    \r\n    /**\r\n     * \u68c0\u7d22\u4efb\u610f\u5730\u5740\u7684\u4ee3\u5e01\u4f59\u989d\u3002\r\n     */\r\n    function balanceOf(address _customerAddress)\r\n        view\r\n        public\r\n        returns(uint256)\r\n    {\r\n        return tokenBalanceLedger_[_customerAddress];\r\n    }\r\n    \r\n    /**\r\n     * \u68c0\u7d22\u4efb\u610f\u5730\u5740\u7684\u80a1\u606f\u4f59\u989d\u3002\r\n     */\r\n    function dividendsOf(address _customerAddress)\r\n        view\r\n        public\r\n        returns(uint256)\r\n    {\r\n        return (uint256) ((int256)(profitPerShare_ * tokenBalanceLedger_[_customerAddress]) - payoutsTo_[_customerAddress]) / magnitude;\r\n    }\r\n    \r\n    /**\r\n     * \u8fd4\u56de\u4ee3\u5e01\u4e70\u5165\u7684\u4ef7\u683c\u3002\r\n     */\r\n    function sellPrice() \r\n        public \r\n        view \r\n        returns(uint256)\r\n    {\r\n        // \u6211\u4eec\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u4ee3\u5e01\u4f9b\u5e94\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f9b\u5e94\u91cf\u3002\r\n        if(tokenSupply_ == 0){\r\n            return tokenPriceInitial_ - tokenPriceIncremental_;\r\n        } else {\r\n            uint256 _ethereum = tokensToEthereum_(1e18);\r\n            uint256 _dividends = SafeMath.div(_ethereum, dividendFee_  );\r\n            uint256 _taxedEthereum = SafeMath.sub(_ethereum, _dividends);\r\n            return _taxedEthereum;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \u8fd4\u56de\u4ee3\u5e01\u5356\u51fa\u7684\u4ef7\u683c\u3002\r\n     */\r\n    function buyPrice() \r\n        public \r\n        view \r\n        returns(uint256)\r\n    {\r\n        // \u6211\u4eec\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u4ee3\u5e01\u4f9b\u5e94\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f9b\u5e94\u91cf\u3002\r\n        if(tokenSupply_ == 0){\r\n            return tokenPriceInitial_ + tokenPriceIncremental_;\r\n        } else {\r\n            uint256 _ethereum = tokensToEthereum_(1e18);\r\n            uint256 _dividends = SafeMath.div(_ethereum, dividendFee_  );\r\n            uint256 _taxedEthereum = SafeMath.add(_ethereum, _dividends);\r\n            return _taxedEthereum;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \u524d\u7aef\u529f\u80fd\uff0c\u52a8\u6001\u83b7\u53d6\u4e70\u5165\u8ba2\u5355\u4ef7\u683c\u3002\r\n     */\r\n    function calculateTokensReceived(uint256 _ethereumToSpend) \r\n        public \r\n        view \r\n        returns(uint256)\r\n    {\r\n        uint256 _dividends = SafeMath.div(_ethereumToSpend, dividendFee_);\r\n        uint256 _taxedEthereum = SafeMath.sub(_ethereumToSpend, _dividends);\r\n        uint256 _amountOfTokens = ethereumToTokens_(_taxedEthereum);\r\n        \r\n        return _amountOfTokens;\r\n    }\r\n    \r\n    /**\r\n     * \u524d\u7aef\u529f\u80fd\uff0c\u52a8\u6001\u83b7\u53d6\u5356\u51fa\u8ba2\u5355\u4ef7\u683c\u3002\r\n     */\r\n    function calculateEthereumReceived(uint256 _tokensToSell) \r\n        public \r\n        view \r\n        returns(uint256)\r\n    {\r\n        require(_tokensToSell <= tokenSupply_);\r\n        uint256 _ethereum = tokensToEthereum_(_tokensToSell);\r\n        uint256 _dividends = SafeMath.div(_ethereum, dividendFee_);\r\n        uint256 _taxedEthereum = SafeMath.sub(_ethereum, _dividends);\r\n        return _taxedEthereum;\r\n    }\r\n    \r\n    \r\n    /*==========================================\r\n    =            INTERNAL FUNCTIONS  \u5185\u90e8\u51fd\u6570   =\r\n    ==========================================*/\r\n    function purchaseTokens(uint256 _incomingEthereum, address _referredBy)\r\n        antiEarlyWhale(_incomingEthereum)\r\n        internal\r\n        returns(uint256)\r\n    {\r\n        // \u6570\u636e\u8bbe\u7f6e\r\n        address _customerAddress = msg.sender;\r\n        uint256 _undividedDividends = SafeMath.div(_incomingEthereum, dividendFee_);\r\n        uint256 _referralBonus = SafeMath.div(_undividedDividends, 3);\r\n        uint256 _dividends = SafeMath.sub(_undividedDividends, _referralBonus);\r\n        uint256 _taxedEthereum = SafeMath.sub(_incomingEthereum, _undividedDividends);\r\n        uint256 _amountOfTokens = ethereumToTokens_(_taxedEthereum);\r\n        uint256 _fee = _dividends * magnitude;\r\n \r\n        // \u7981\u6b62\u6076\u610f\u6267\u884c\r\n        // \u9632\u6b62\u6ea2\u51fa\r\n        // (\u9632\u6b62\u9ed1\u5ba2\u5165\u4fb5)\r\n        // \u5b9a\u4e49SAFEMATH\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u3002\r\n        require(_amountOfTokens > 0 && (SafeMath.add(_amountOfTokens,tokenSupply_) > tokenSupply_));\r\n        \r\n        // \u7528\u6237\u662f\u5426\u88ab\u4e3b\u8282\u70b9\u5f15\u7528\uff1f\r\n        if(\r\n            // \u662f\u5426\u6709\u63a8\u8350\u8005\uff1f\r\n            _referredBy != 0x0000000000000000000000000000000000000000 &&\r\n\r\n            // \u7981\u6b62\u4f5c\u5f0a!\r\n            _referredBy != _customerAddress && // \u4e0d\u80fd\u81ea\u5df1\u63a8\u8350\u81ea\u5df1\r\n            \r\n            // \u63a8\u8350\u4eba\u662f\u5426\u6709\u8db3\u591f\u7684\u4ee3\u5e01\uff1f\r\n            // \u786e\u4fdd\u63a8\u8350\u4eba\u662f\u8bda\u5b9e\u7684\u4e3b\u8282\u70b9\r\n            tokenBalanceLedger_[_referredBy] >= stakingRequirement\r\n        ){\r\n            // \u8d22\u5bcc\u518d\u5206\u914d\r\n            referralBalance_[_referredBy] = SafeMath.add(referralBalance_[_referredBy], _referralBonus);\r\n        } else {\r\n            // \u65e0\u9700\u8d2d\u4e70\r\n            // \u6dfb\u52a0\u63a8\u8350\u5956\u52b1\u5230\u5168\u5c40\u5206\u7ea2\r\n            _dividends = SafeMath.add(_dividends, _referralBonus); // \u628a\u63a8\u8350\u5956\u52b1\u8fd8\u7ed9\u5206\u7ea2\r\n            _fee = _dividends * magnitude;\r\n        }\r\n        \r\n        // \u6211\u4eec\u4e0d\u80fd\u7ed9\u4e88\u65e0\u5c3d\u7684\u4ee5\u592a\u574a\r\n        if(tokenSupply_ > 0){\r\n            \r\n            // \u6dfb\u52a0\u4ee3\u5e01\u5230\u4ee3\u5e01\u6c60\r\n            tokenSupply_ = SafeMath.add(tokenSupply_, _amountOfTokens);\r\n \r\n            // \u83b7\u53d6\u8fd9\u7b14\u4ea4\u6613\u6240\u83b7\u5f97\u7684\u80a1\u606f\uff0c\u5e76\u5c06\u5e73\u5747\u5206\u914d\u7ed9\u6240\u6709\u80a1\u4e1c\r\n            profitPerShare_ += (_dividends * magnitude / (tokenSupply_));\r\n            \r\n            // \u8ba1\u7b97\u7528\u6237\u901a\u8fc7\u8d2d\u4e70\u83b7\u5f97\u7684\u4ee3\u5e01\u6570\u91cf\u3002 \r\n            _fee = _fee - (_fee-(_amountOfTokens * (_dividends * magnitude / (tokenSupply_))));\r\n        \r\n        } else {\r\n            // \u6dfb\u52a0\u4ee3\u5e01\u5230\u4ee3\u5e01\u6c60\r\n            tokenSupply_ = _amountOfTokens;\r\n        }\r\n        \r\n        // \u66f4\u65b0\u4ee3\u5e01\u4f9b\u5e94\u603b\u91cf\u53ca\u7528\u6237\u5730\u5740\r\n        tokenBalanceLedger_[_customerAddress] = SafeMath.add(tokenBalanceLedger_[_customerAddress], _amountOfTokens);\r\n        \r\n        // \u544a\u8bc9\u4e70\u5356\u53cc\u65b9\u5728\u62e5\u6709\u4ee3\u5e01\u524d\u4e0d\u4f1a\u83b7\u5f97\u5206\u7ea2\uff1b\r\n        // \u6211\u77e5\u9053\u4f60\u8ba4\u4e3a\u4f60\u505a\u4e86\uff0c\u4f46\u662f\u4f60\u6ca1\u6709\u505a\u3002\r\n        int256 _updatedPayouts = (int256) ((profitPerShare_ * _amountOfTokens) - _fee);\r\n        payoutsTo_[_customerAddress] += _updatedPayouts;\r\n        \r\n        // \u91cd\u5927\u4e8b\u4ef6\r\n        onTokenPurchase(_customerAddress, _incomingEthereum, _amountOfTokens, _referredBy);\r\n        \r\n        return _amountOfTokens;\r\n    }\r\n\r\n    /**\r\n     * \u901a\u8fc7\u4ee5\u592a\u574a\u4f20\u5165\u6570\u91cf\u8ba1\u7b97\u4ee3\u5e01\u4ef7\u683c\uff1b\r\n     * \u8fd9\u662f\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5728\u767d\u76ae\u4e66\u4e2d\u80fd\u627e\u5230\u5b83\u7684\u79d1\u5b66\u7b97\u6cd5\uff1b\r\n     * \u505a\u4e86\u4e00\u4e9b\u4fee\u6539\uff0c\u4ee5\u9632\u6b62\u5341\u8fdb\u5236\u9519\u8bef\u548c\u4ee3\u7801\u7684\u4e0a\u4e0b\u6ea2\u51fa\u3002\r\n     */\r\n    function ethereumToTokens_(uint256 _ethereum) // \u8ba1\u7b97ETH\u5151\u6362\u4ee3\u5e01\u7684\u6c47\u7387\r\n        internal\r\n        view\r\n        returns(uint256)\r\n    {\r\n        uint256 _tokenPriceInitial = tokenPriceInitial_ * 1e18;\r\n        uint256 _tokensReceived = \r\n         (\r\n            (\r\n                // \u5411\u4e0b\u6ea2\u51fa\u5c1d\u8bd5\r\n                SafeMath.sub(\r\n                    (sqrt\r\n                        (\r\n                            (_tokenPriceInitial**2)\r\n                            +\r\n                            (2*(tokenPriceIncremental_ * 1e18)*(_ethereum * 1e18))\r\n                            +\r\n                            (((tokenPriceIncremental_)**2)*(tokenSupply_**2))\r\n                            +\r\n                            (2*(tokenPriceIncremental_)*_tokenPriceInitial*tokenSupply_)\r\n                        )\r\n                    ), _tokenPriceInitial\r\n                )\r\n            )/(tokenPriceIncremental_)\r\n        )-(tokenSupply_)\r\n        ;\r\n  \r\n        return _tokensReceived;\r\n    }\r\n    \r\n    /**\r\n     * \u8ba1\u7b97\u4ee3\u5e01\u51fa\u552e\u7684\u4ef7\u683c\u3002\r\n     * \u8fd9\u662f\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5728\u767d\u76ae\u4e66\u4e2d\u80fd\u627e\u5230\u5b83\u7684\u79d1\u5b66\u7b97\u6cd5\uff1b\r\n     * \u505a\u4e86\u4e00\u4e9b\u4fee\u6539\uff0c\u4ee5\u9632\u6b62\u5341\u8fdb\u5236\u9519\u8bef\u548c\u4ee3\u7801\u7684\u4e0a\u4e0b\u6ea2\u51fa\u3002\r\n     */\r\n     function tokensToEthereum_(uint256 _tokens)\r\n        internal\r\n        view\r\n        returns(uint256)\r\n    {\r\n\r\n        uint256 tokens_ = (_tokens + 1e18);\r\n        uint256 _tokenSupply = (tokenSupply_ + 1e18);\r\n        uint256 _etherReceived =\r\n        (\r\n            // underflow attempts BTFO\r\n            SafeMath.sub(\r\n                (\r\n                    (\r\n                        (\r\n                            tokenPriceInitial_ +(tokenPriceIncremental_ * (_tokenSupply/1e18))\r\n                        )-tokenPriceIncremental_\r\n                    )*(tokens_ - 1e18)\r\n                ),(tokenPriceIncremental_*((tokens_**2-tokens_)/1e18))/2\r\n            )\r\n        /1e18);\r\n        return _etherReceived;\r\n    }\r\n    \r\n    \r\n    //\u8fd9\u91cc\u4f1a\u6d88\u8017Gas\r\n    //\u4f60\u5927\u6982\u4f1a\u591a\u6d88\u80171gwei\r\n    function sqrt(uint x) internal pure returns (uint y) {\r\n        uint z = (x + 1) / 2;\r\n        y = x;\r\n        while (z < y) {\r\n            y = z;\r\n            z = (x / z + z) / 2;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @title SafeMath\u51fd\u6570\r\n * @dev \u5b89\u5168\u7684\u6570\u5b66\u8fd0\u7b97\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev \u4e24\u4e2a\u6570\u5b57\u4e58\u6cd5\uff0c\u629b\u51fa\u6ea2\u51fa\u3002\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev \u4e24\u4e2a\u6570\u5b57\u7684\u6574\u6570\u9664\u6cd5\u3002\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // \u503c\u4e3a0\u65f6\u81ea\u52a8\u629b\u51fa\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // \u5426\u5219\u4e0d\u6210\u7acb\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev \u4e24\u4e2a\u6570\u5b57\u7684\u51cf\u6cd5\uff0c\u5982\u679c\u51cf\u6570\u5927\u4e8e\u88ab\u51cf\u6570\uff0c\u5219\u6ea2\u51fa\u629b\u51fa\u3002\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev \u4e24\u4e2a\u6570\u5b57\u7684\u52a0\u6cd5\uff0c\u5411\u4e0a\u6ea2\u51fa\u629b\u51fa\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ethereumToSpend\",\"type\":\"uint256\"}],\"name\":\"calculateTokensReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokensToSell\",\"type\":\"uint256\"}],\"name\":\"calculateEthereumReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onlyAmbassadors\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"administrators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingRequirement\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_includeReferralBonus\",\"type\":\"bool\"}],\"name\":\"myDividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEthereumBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"setStakingRequirement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_identifier\",\"type\":\"bytes32\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setAdministrator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableInitialStage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toAddress\",\"type\":\"address\"},{\"name\":\"_amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_referredBy\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"incomingEthereum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"referredBy\",\"type\":\"address\"}],\"name\":\"onTokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokensBurned\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ethereumEarned\",\"type\":\"uint256\"}],\"name\":\"onTokenSell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethereumReinvested\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokensMinted\",\"type\":\"uint256\"}],\"name\":\"onReinvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethereumWithdrawn\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "Hourglass", "CompilerVersion": "v0.4.20+commit.3155dd80", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://5b729b19d43ce0078c781b053310de0c70ca83866f0438dd65787b15392f6c4e"}]}