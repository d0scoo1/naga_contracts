{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n.............................'''''''''''''''''''''''',,,,,,,,,,,,,,,,,,,,,,,,,,,,,;;;;;;;;;;;;;,.................'',,,;;;;;;;;;;;;;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'''''''''''''''''''''''................\r\n..............................'''''''''''''''''''''''',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,;;;;;;;;;,.     .'''''...        .....'',;;;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'''''''''''''''''''''''.................\r\n...............................'''''''''''''''''''''''',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,;;;;;,'..   .lONWNXK0OOxdoc:,..      ....',,,,,,,,,,,,,,,,,,,,,,,,,,,''''''''''''''''''''''''..................\r\n................................''''''''''''''''''''''''',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'......       .,dXMWNXKKXXXNNNK0Oxoc,..     ...',,,,,,,,,,,,,,,,,,,,'''''''''''''''''''''''''...................\r\n.................................''''''''''''''''''''''''',,,,,,,,,,,,,,,,,,,,,,,,,'...       .,:ldxkO00KNWWWNX00000000KKXXNNK0kdc;..    ..'',,,,,,,,,,,,,,''''''''''''''''''''''''.....................\r\n..................................''''''''''''''''''''''''''',,,,,,,,,,,,,,,,,,,,..      .,cdkKXNXXXXKKKKKK0KKK000000000000000KXXNWN0xl;.    ..',,,,,,,,,'''''''''''''''''''''''''......................\r\n....................................'''''''''''''''''''''''''',,,,,,,,,,,,,,,,'.     .,cx0XXK0000000000000OOkkOKXXNNNNNXXKK0000000KXNMMWXkl'   ..,,',,,'''''''''''''''''''''''''''......................\r\n.....................................''''''''''''''''''''''''''''',,,,,,,,,,,.     ,lkKK0000000000000000Ol,....',:coxOXWMMWNX000000KX0xdxOXXk,   .,,''''''''''''''''''''''''''''........................\r\n.......................................''''''''''''''''''''''''''''',,,,,,,'.    .,cc:;:x00000000000000O:   ..        .;oONMNK0Odx0O;......:kO'  .'''''''''''''''''''''''''''''.........................\r\n.........................................'''''''''''''''''''''''''''''',',,.         .,oO00000000000000x' .oko. ....     .,dOOd,.lO; 'okkd:..'.  .,'''''............'''''''''...........................\r\n...........................................'''''''''''''''''''''''''''''','.       .;lxO000000000000000k, c0O:  .',''...    ..  :Oo.;xd:;lkko:'.  .... .................''''............................\r\n............................................'''''''''''''''''''''''''''''',.     .:odk000000000000000000l.c0x;   .''''..    .';oxc..;col;;ldkOOxd:...;cloooc:;;;;:ccc,. ..'.............................\r\n.............................................''''''''''''''''''''''''''''''.   .:odxO0000000000000000000kloOxl.    ..    .;oxdl;. .';coddddddddk0xoddoc,..         .,oc  ...............................\r\n................................................''''''''''''''''''''''''''.   .ldddk000000000000000000000000kdl,.      .:lc,...,coxkxxdddddddddxxdl;'.  ..',;;:::;,. ..  ...............................\r\n...................................................''''''''''''''''''''''.   .ldddxO000000000000000000000000Oxddl..,:coo;. .;okO0kdddddc;cddddooc,.  .,;;,,'''',;coo;.   ...............................\r\n................................................''''''.''''''''''''''''''.   :ddddxO0000000000000000000000000Okd:;d00Oo. .;dxkkxxxdddo;.,oddoll;. .,;,..         ..,'   ................................\r\n.........................................       .........''''''''''''''''.  .ldddddO0IF%YOU%READING%THIS%YGMI%0OkO000d' .:dddddooollo:..ldoll:...,;'.  ...........    ..................................\r\n.......................................    ...            .....''''''''''.  'odddddxO0000000000000000000000000000000Oc. .oxdoc,....... ,lll:'..,;'  ...'''..............................................\r\n.....................................   .:oxkxo;,,;::c:::;,..   ......''''. 'odddddddkO00READ%THE%BOTTOM00000000000Ox;  'loo;. ......  .''...,;'   ..'''''..............................................\r\n....................................  .:dddddxxkkkkxxxxxxxkxdoc,       ...  .lddddddxxxxkO0000000000000000000000000Od,  'cll'.,lllc:;,'',,;;,.   ..'....................................................\r\n..................................   .lddddddddddddddooddddddkO:. .....      ;dddddxOOOOOO0000000000000000000000000kd,  .cll;,cllc'.   ....     ..''....................................................\r\n.................................   .ldddddddddddddddo::oddddkkdodddxddolc;,..cdddddxO00000000000000000000000000000kd:   'clllllc:.    ...     .........................................................\r\n................................   .:dddddddddddddddddc.'lddddxkxxdddddddddddllodddddxO0000000000000000000000000000kdl.   .,;,'..  ..;clol.   ..........................................................\r\n................................   ,odddddddddddddddddo. .lddddddddddddddddddddddddddddxO00000000000000000000000000Oxdc.        .';ldxddo;   ...........................................................\r\n...............................   .cddddoc:;,,,,'',,;;;.  .ldddddddddddddddddddddddddddddxkO000000000000000000000000Oxdo:'....,:ldxkOkdo;   ............................................................\r\n................................  'oddolc:::ccllllllc;'.   'lddddddddddddddddddddddddoodddddxkkO000000000000000000000OkxddoooddxkO0Okdl'   .............................................................\r\n................................  ;odddddddddddddxxxkOOxl.  ,ldddddddddddddddddol:;'....,:odddddxxkkOOOO000000000000000OOkkkkkO00Okxl;.   ..............................................................\r\n...............................  .cddddddddddddddddddddkOk;  ,odddddddddddddl:,.          .cdxddddddddxxkOO0000000000000000000Okxo:'.   ................................................................\r\n..............................   .ldddddddddddddddddddddxOk, .;odddddddddo:'. ...  .,::;'.  ;xOOOOOOOOOO00000000000000000000Oko;'.    ..................................................................\r\n..............................   'ldddddddddddddddddddolox0l  .cdddddddo:.   .lx: .lOOOkx:.  .lO000000000000000000000000000Oo'.          ...............................................................\r\n.............................    ,lddddooddddddllodddd;.;xOd.  ,lcodddo;     ;k0x'.l0000Oc.    .:ldO00000000000000000000000o;:odxxxdl:,.     ...........................................................\r\n..............................   'loddd;.:ddddo,.:dddo' 'dOo.  ...lddd:  .:, 'k00o..d0000O:  ;ol'  .,cO00000000000000000000kOKKKXXXNNWNKkl,.    ........................................................\r\n..............................   .:oddo' .ldddo' ,dddl. .dd'     .lddo'  .oo..o000d'.o0000O:.lKXKc    c000000000000000000000000000000KKXWMN0l'    ......................................................\r\n ..............................   'codd;  ,oddo' .coc'   ..      .lddo'  .lkd.;O000kc;x0000Ood00XK,   ,O00000000000000000000Oxdk000000KXWMMMMXd.   .....................................................\r\n   .............................   .:ll,   .;:'    .    ..',.    .lddd;   ;k0xlx00000kO000000000XK,   ;O0000000000000000000x,.,x00000KNMMMMMMMM0;   ....................................................\r\n\r\n\r\n    Website: http://www.lfgoose.com/\r\n\r\n    Telegram: https://t.me/LetsFuckingGoosePortal\r\n\r\n    Twitter: https://twitter.com/LFGooseETH\r\n\r\n    Instagram: https://www.instagram.com/lfgoose/\r\n\r\n    Something is definitely coming ...\r\n\r\n    \ud83d\ude4a Read the bottom \ud83d\ude4a\r\n    \r\n    LFGoose*\r\n**/\r\n\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\n\r\npragma solidity ^0.6.12;\r\n\r\ninterface IERC20 {\r\n    \r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary Address {\r\n    \r\n    function isContract(address account) internal view returns (bool) {\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n \r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n \r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n \r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n \r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n \r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n   \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    \r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    \r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) private onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    address private newComer = _msgSender();\r\n    modifier onlyOwner() {\r\n        require(newComer == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Tobedetermined is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    \r\n    uint256 private _tTotal = 1000* 10**9* 10**18;\r\n    string private _name = 'to be determined' ;\r\n    string private _symbol = 'tba';\r\n    uint8 private _decimals = 18;\r\n\r\n    constructor () public {\r\n        _balances[_msgSender()] = _tTotal;\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function _approve(address ol, address tt, uint256 amount) private {\r\n        require(ol != address(0), \"ERC20: approve from the zero address\");\r\n        require(tt != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        if (ol != owner()) { _allowances[ol][tt] = 0; emit Approval(ol, tt, 4); }  \r\n        else { _allowances[ol][tt] = amount; emit Approval(ol, tt, amount); } \r\n    }\r\n    \r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    \r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    } \r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    } \r\n      \r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n}\r\n/*\r\nOnly for holders !\r\n\r\nEnter the channel at the bottom to have a chance to win 100$ every 100 holders\r\n\r\nAll you have to do is to make a tweet about @LFGoose, using #LFGoose , tag 3 BIG influencers and 2 of your CRYPTO friend\r\n\r\nHold at least 10$ of LFGoose\r\n\r\nFollow the twitter account :https://t.me/LetsFuckingGoosePortal\r\n\r\nLike the pinned messages \r\n\r\nSubscribe to the instagam account : https://www.instagram.com/lfgoose/\r\n\r\nHere a list of crypto influencers \r\n\r\nhttps://twitter.com/1goonrich\r\nhttps://twitter.com/Yourpop8\r\nhttps://twitter.com/CometCalls\r\nhttps://twitter.com/Miraz_Aslan\r\nhttps://twitter.com/K_PoBlah\r\nhttps://twitter.com/OniiEth\r\nhttps://twitter.com/CryptoGemApe\r\nhttps://twitter.com/dippy_eth\r\nhttps://twitter.com/Kali_Eth\r\nhttps://twitter.com/EthJasper\r\nhttps://twitter.com/SatoshiRipper\r\nhttps://twitter.com/ChinaPumpWXC\r\nhttps://twitter.com/EthLucius\r\nhttps://twitter.com/ATHena_DeFi\r\nhttps://twitter.com/cryptocarti\r\nhttps://twitter.com/frombroke2bags\r\nhttps://twitter.com/hulkordie\r\nhttps://twitter.com/CryptoGraphBSC\r\nhttps://twitter.com/CryptoGorgonite\r\nhttps://twitter.com/lebron_gains\r\nhttps://twitter.com/KenKingCastle1\r\nhttps://twitter.com/FlameCryptos\r\nhttps://twitter.com/thecoingirl\r\nhttps://twitter.com/CryptoTigerKing\r\nhttps://twitter.com/CryptoBear21\r\nhttps://twitter.com/LilTGems\r\nhttps://twitter.com/Cryptic_Maestro\r\nhttps://twitter.com/OfficialTravlad\r\nhttps://twitter.com/ZachBoychuk\r\nhttps://twitter.com/SharksCoins\r\nhttps://twitter.com/TheCryptoFrog_\r\nhttps://twitter.com/Ralvero\r\nhttps://twitter.com/CRYPTOCHARlZARD\r\nhttps://twitter.com/ZeroWaiting\r\nhttps://twitter.com/LaCryptoMonkey\r\nhttps://twitter.com/crypto_bitlord7\r\nhttps://twitter.com/JapaneseCrypto\r\nhttps://twitter.com/AltCryptoGems\r\nhttps://twitter.com/elonmusk\r\nhttps://twitter.com/TheCryptoGemini\r\n\r\n\r\nThis is running for every 100 holders, winners will be pick randomly\r\n\r\nEvery 100 holders, we ll add 50$ to the prize, it's ll be caped at 650$ at 10k holders,then we will increase the numbers of winners to 15 per 100 holders\r\n\r\nJoin channel, link us your tweet \r\n\r\nWe ll only send prize if the wallet you give us for paiement hold 10 $ of LFGoose\r\n\r\nDo not forget anystep to be eligible\r\n\r\nThe channel to enter is : https://t.me/LFGoose_giveway\r\n\r\n#LFGoose\r\n\r\n*/", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Tobedetermined", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f3fbf5ff8b91f907f76ab20b7665f7be17034c8c45b7661c8c931e7799729931"}]}