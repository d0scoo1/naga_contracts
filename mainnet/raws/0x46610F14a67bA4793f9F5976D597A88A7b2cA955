{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/CollabProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n/**\\r\\n\\r\\n ________  ___    ___ ________  ___  ___  _______   ________  _________   \\r\\n|\\\\   __  \\\\|\\\\  \\\\  /  /|\\\\   __  \\\\|\\\\  \\\\|\\\\  \\\\|\\\\  ___ \\\\ |\\\\   ____\\\\|\\\\___   ___\\\\ \\r\\n\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\/  / | \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   __/|\\\\ \\\\  \\\\___|\\\\|___ \\\\  \\\\_| \\r\\n \\\\ \\\\   ____\\\\ \\\\    / / \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\_|/_\\\\ \\\\_____  \\\\   \\\\ \\\\  \\\\  \\r\\n  \\\\ \\\\  \\\\___|/     \\\\/   \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\|____|\\\\  \\\\   \\\\ \\\\  \\\\ \\r\\n   \\\\ \\\\__\\\\  /  /\\\\   \\\\    \\\\ \\\\_____  \\\\ \\\\_______\\\\ \\\\_______\\\\____\\\\_\\\\  \\\\   \\\\ \\\\__\\\\\\r\\n    \\\\|__| /__/ /\\\\ __\\\\    \\\\|___| \\\\__\\\\|_______|\\\\|_______|\\\\_________\\\\   \\\\|__|\\r\\n          |__|/ \\\\|__|          \\\\|__|                  \\\\|_________|        \\r\\n                                                                          \\r\\n\\r\\n\\r\\n * @title BalanceProxy\\r\\n * Simple contract to that provides a combined balance for staked and non-staked adventurers\\r\\n */\\r\\n\\r\\npragma solidity ^0.8.11;\\r\\n\\r\\ninterface IStaking {\\r\\n    function viewStakes(address user) external view returns (uint256[] memory);\\r\\n}\\r\\n\\r\\ninterface IAdventurer {\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n}\\r\\n\\r\\ncontract CollabProxy {\\r\\n    IStaking public stakingContract;\\r\\n    IAdventurer public adventurerContract;\\r\\n\\r\\n    constructor(\\r\\n        address _stakingContract,\\r\\n        address _adventurerContract\\r\\n    ) {\\r\\n        stakingContract = IStaking(_stakingContract);\\r\\n        adventurerContract = IAdventurer(_adventurerContract);\\r\\n    }\\r\\n\\r\\n    function balanceOf(address _address)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return adventurerContract.balanceOf(_address) + stakingContract.viewStakes(_address).length;\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_adventurerContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adventurerContract\",\"outputs\":[{\"internalType\":\"contract IAdventurer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CollabProxy", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "000000000000000000000000e7574b5b209d90eb04361da02bc2238f166ec98500000000000000000000000017ed38f5f519c6ed563be6486e629041bed3dfbc", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}