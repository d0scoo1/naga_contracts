{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/C/Users/david/Downloads/fuse-contracts-1.1.6 (1)/fuse-contracts-1.1.6/contracts/oracles/MasterPriceOracle.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.6.12;\\n\\nimport \\\"../external/compound/PriceOracle.sol\\\";\\nimport \\\"../external/compound/CToken.sol\\\";\\nimport \\\"../external/compound/CErc20.sol\\\";\\n\\nimport \\\"./BasePriceOracle.sol\\\";\\n\\n/**\\n * @title MasterPriceOracle\\n * @notice Use a combination of price oracles.\\n * @dev Implements `PriceOracle`.\\n * @author David Lucid <david@rari.capital> (https://github.com/davidlucid)\\n */\\ncontract MasterPriceOracle is PriceOracle, BasePriceOracle {\\n    /**\\n     * @dev Maps underlying token addresses to `PriceOracle` contracts (can be `BasePriceOracle` contracts too).\\n     */\\n    mapping(address => PriceOracle) public oracles;\\n\\n    /**\\n     * @dev The administrator of this `MasterPriceOracle`.\\n     */\\n    address public admin;\\n\\n    /**\\n     * @dev Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.\\n     */\\n    bool public canAdminOverwrite;\\n\\n    /**\\n     * @dev Constructor to initialize state variables.\\n     * @param underlyings The underlying ERC20 token addresses to link to `_oracles`.\\n     * @param _oracles The `PriceOracle` contracts to be assigned to `underlyings`.\\n     * @param _admin The admin who can assign oracles to underlying tokens.\\n     * @param _canAdminOverwrite Controls if `admin` can overwrite existing assignments of oracles to underlying tokens.\\n     */\\n    constructor (address[] memory underlyings, PriceOracle[] memory _oracles, address _admin, bool _canAdminOverwrite) public {\\n        // Input validation\\n        require(underlyings.length > 0 && underlyings.length == _oracles.length, \\\"Lengths of both arrays must be equal and greater than 0.\\\");\\n\\n        // Initialize state variables\\n        for (uint256 i = 0; i < underlyings.length; i++) oracles[underlyings[i]] = _oracles[i];\\n        admin = _admin;\\n        canAdminOverwrite = _canAdminOverwrite;\\n    }\\n\\n    /**\\n     * @dev Sets `_oracles` for `underlyings`.\\n     */\\n    function add(address[] calldata underlyings, PriceOracle[] calldata _oracles) external onlyAdmin {\\n        // Input validation\\n        require(underlyings.length > 0 && underlyings.length == _oracles.length, \\\"Lengths of both arrays must be equal and greater than 0.\\\");\\n\\n        // Assign oracles to underlying tokens\\n        for (uint256 i = 0; i < underlyings.length; i++) {\\n            if (!canAdminOverwrite) require(address(oracles[underlyings[i]]) == address(0), \\\"Admin cannot overwrite existing assignments of oracles to underlying tokens.\\\");\\n            oracles[underlyings[i]] = _oracles[i];\\n        }\\n    }\\n\\n    /**\\n     * @dev Changes the admin and emits an event.\\n     */\\n    function changeAdmin(address newAdmin) external onlyAdmin {\\n        address oldAdmin = admin;\\n        admin = newAdmin;\\n        emit NewAdmin(oldAdmin, newAdmin);\\n    }\\n\\n    /**\\n     * @dev Event emitted when `admin` is changed.\\n     */\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Modifier that checks if `msg.sender == admin`.\\n     */\\n    modifier onlyAdmin {\\n        require(msg.sender == admin, \\\"Sender is not the admin.\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Returns the price in ETH of the token underlying `cToken`.\\n     * @dev Implements the `PriceOracle` interface for Fuse pools (and Compound v2).\\n     * @return Price in ETH of the token underlying `cToken`, scaled by `10 ** (36 - underlyingDecimals)`.\\n     */\\n    function getUnderlyingPrice(CToken cToken) external override view returns (uint) {\\n        // Return 1e18 for ETH\\n        if (cToken.isCEther()) return 1e18;\\n\\n        // Get underlying ERC20 token address\\n        address underlying = address(CErc20(address(cToken)).underlying());\\n\\n        // Return 1e18 for WETH\\n        if (underlying == 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) return 1e18;\\n\\n        // Get underlying price from assigned oracle\\n        require(address(oracles[underlying]) != address(0), \\\"Price oracle not found for this underlying token address.\\\");\\n        return oracles[underlying].getUnderlyingPrice(cToken);\\n    }\\n\\n    /**\\n     * @dev Attempts to return the price in ETH of `underlying` (implements `BasePriceOracle`).\\n     */\\n    function price(address underlying) external override view returns (uint) {\\n        // Return 1e18 for WETH\\n        if (underlying == 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2) return 1e18;\\n\\n        // Get underlying price from assigned oracle\\n        require(address(oracles[underlying]) != address(0), \\\"Price oracle not found for this underlying token address.\\\");\\n        return BasePriceOracle(address(oracles[underlying])).price(underlying);\\n    }\\n}\\n\"\r\n    },\r\n    \"/C/Users/david/Downloads/fuse-contracts-1.1.6 (1)/fuse-contracts-1.1.6/contracts/oracles/BasePriceOracle.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.6.12;\\n\\nimport \\\"../external/compound/PriceOracle.sol\\\";\\n\\n/**\\n * @title BasePriceOracle\\n * @notice Returns prices of underlying tokens directly without the caller having to specify a cToken address.\\n * @dev Implements the `PriceOracle` interface.\\n * @author David Lucid <david@rari.capital> (https://github.com/davidlucid)\\n */\\ninterface BasePriceOracle is PriceOracle {\\n    /**\\n     * @notice Get the price of an underlying asset.\\n     * @param underlying The underlying asset to get the price of.\\n     * @return The underlying asset price in ETH as a mantissa (scaled by 1e18).\\n     * Zero means the price is unavailable.\\n     */\\n    function price(address underlying) external view returns (uint);\\n}\\n\"\r\n    },\r\n    \"/C/Users/david/Downloads/fuse-contracts-1.1.6 (1)/fuse-contracts-1.1.6/contracts/external/compound/PriceOracle.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.6.12;\\n\\nimport \\\"./CToken.sol\\\";\\n\\ninterface PriceOracle {\\n    /**\\n      * @notice Get the underlying price of a cToken asset\\n      * @param cToken The cToken to get the underlying price of\\n      * @return The underlying asset price mantissa (scaled by 1e18).\\n      *  Zero means the price is unavailable.\\n      */\\n    function getUnderlyingPrice(CToken cToken) external view returns (uint);\\n}\\n\"\r\n    },\r\n    \"/C/Users/david/Downloads/fuse-contracts-1.1.6 (1)/fuse-contracts-1.1.6/contracts/external/compound/CToken.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.6.12;\\n\\n/**\\n * @title Compound's CToken Contract\\n * @notice Abstract base for CTokens\\n * @author Compound\\n */\\ninterface CToken {\\n    function admin() external view returns (address);\\n    function adminHasRights() external view returns (bool);\\n    function fuseAdminHasRights() external view returns (bool);\\n    function symbol() external view returns (string memory);\\n    function comptroller() external view returns (address);\\n    function adminFeeMantissa() external view returns (uint256);\\n    function fuseFeeMantissa() external view returns (uint256);\\n    function reserveFactorMantissa() external view returns (uint256);\\n    function totalReserves() external view returns (uint);\\n    function totalAdminFees() external view returns (uint);\\n    function totalFuseFees() external view returns (uint);\\n\\n    function isCToken() external view returns (bool);\\n    function isCEther() external view returns (bool);\\n\\n    function balanceOf(address owner) external view returns (uint);\\n    function balanceOfUnderlying(address owner) external returns (uint);\\n    function borrowRatePerBlock() external view returns (uint);\\n    function supplyRatePerBlock() external view returns (uint);\\n    function totalBorrowsCurrent() external returns (uint);\\n    function borrowBalanceStored(address account) external view returns (uint);\\n    function exchangeRateStored() external view returns (uint);\\n    function getCash() external view returns (uint);\\n\\n    function redeem(uint redeemTokens) external returns (uint);\\n    function redeemUnderlying(uint redeemAmount) external returns (uint);\\n}\\n\"\r\n    },\r\n    \"/C/Users/david/Downloads/fuse-contracts-1.1.6 (1)/fuse-contracts-1.1.6/contracts/external/compound/CErc20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.6.12;\\n\\nimport \\\"./CToken.sol\\\";\\n\\n/**\\n * @title Compound's CErc20 Contract\\n * @notice CTokens which wrap an EIP-20 underlying\\n * @author Compound\\n */\\ninterface CErc20 is CToken {\\n    function underlying() external view returns (address);\\n    function liquidateBorrow(address borrower, uint repayAmount, CToken cTokenCollateral) external returns (uint);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"contract PriceOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_canAdminOverwrite\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"underlyings\",\"type\":\"address[]\"},{\"internalType\":\"contract PriceOracle[]\",\"name\":\"_oracles\",\"type\":\"address[]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canAdminOverwrite\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"getUnderlyingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MasterPriceOracle", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000540000000000000000000000000b8f02248d53f7edfa38e79263e743e9390f81942000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000250000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000d291e7a03283640fdc51b121ac401383a46cc623000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c599000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca000000000000000000000000111111111117dc0aa78b770fa6a738034120c302000000000000000000000000bbbbca6a901c926f240b89eacb641d8aec7aeafd000000000000000000000000c944e90c64b2c07662a292be6244bdf05cda44a7000000000000000000000000a3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2000000000000000000000000e2f2a5c287993345a840db3b0845fbc70f5935a500000000000000000000000004fa0d235c4abf4bcf4787af4cf447de572ef8280000000000000000000000000d438f3b5175bebc262bf23753c1e53d03432bde000000000000000000000000d533a949740bb3306d119cc777fa900ba034cd52000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f0000000000000000000000009f8f72aa9304c8b593d555f12ef6589cc3a579a2000000000000000000000000c00e94cb662c3520282e6f5717214004a7f268880000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f984000000000000000000000000e41d2489571d322189246dafa5ebde1f4699f4980000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae90000000000000000000000000bc529c00c6401aef6d220be8c6ea1667f6ad93e0000000000000000000000004688a8b1f292fdab17e9a90c8bc379dc1dbd87130000000000000000000000000aacfbec6a24756c20d41914f2caba817c0d85210000000000000000000000003472a5a71965499acd81997a54bba8d852c6e53d0000000000000000000000001ceb5cb57c4d4e2b2433641b95dd330a33185a440000000000000000000000004e15361fd6b4bb609fa63c81a2be19d873717870000000000000000000000000584bc13c7d411c00c01a62e8019472de687684300000000000000000000000006b3595068778dd592e39a122f4f5a5cf09c90fe2000000000000000000000000b753428af26e81097e7fd17f40c88aaa3e04902c0000000000000000000000008888801af4d980682e47f1a9036e589479e835c5000000000000000000000000dbdb4d16eda451d0503b854cf79d55697f90c8df000000000000000000000000476c5e26a75bd202a9683ffd34359c0cc15be0ff000000000000000000000000408e41876cccdc0f92210600ef50372656052a3800000000000000000000000050d1c9771902476076ecfc8b2a83ad6b9355a4c9000000000000000000000000b8c77482e45f1f44de1745f52c74426c631bdd52000000000000000000000000aaaebe6fe48e54f431b0c390cfaf0b017d09d42d0000000000000000000000004fabb145d64652a948d72533023f6e7a623c7c5300000000000000000000000023b608675a2b2fb1890d3abbd85c5775c51691d50000000000000000000000000000000000000000000000000000000000000025000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e149300000000000000000000000008d415f90ccfb971dfbfdd6266f9a7cb1c166fc0000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000b90de476d438b37a4a143bf729a9b2237e544af6000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000b90de476d438b37a4a143bf729a9b2237e544af6000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000b90de476d438b37a4a143bf729a9b2237e544af6000000000000000000000000b90de476d438b37a4a143bf729a9b2237e544af600000000000000000000000008d415f90ccfb971dfbfdd6266f9a7cb1c166fc0000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000e102421a85d9c0e71c0ef1870dac658eb43e1493000000000000000000000000b90de476d438b37a4a143bf729a9b2237e544af6", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}