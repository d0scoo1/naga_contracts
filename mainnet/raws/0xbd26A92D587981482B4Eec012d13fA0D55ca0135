{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000000\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/keeperMulticall/MulticallWithFailure.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.12;\\n\\n/// @title MultiCallWithFailure\\n/// @author Angle Core Team\\n/// @notice Multicall contract allowing subcalls to fail without reverting the entire call\\ncontract MultiCallWithFailure {\\n    error SubcallFailed();\\n\\n    struct Call {\\n        address target;\\n        bytes data;\\n        bool canFail;\\n    }\\n\\n    function multiCall(Call[] memory calls) external view returns (bytes[] memory) {\\n        bytes[] memory results = new bytes[](calls.length);\\n\\n        for (uint256 i; i < calls.length; i++) {\\n            (bool success, bytes memory result) = calls[i].target.staticcall(calls[i].data);\\n            if (!calls[i].canFail) {\\n                if (!success) {\\n                    revert SubcallFailed();\\n                }\\n            }\\n            results[i] = result;\\n        }\\n\\n        return results;\\n    }\\n}\\n\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"SubcallFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"canFail\",\"type\":\"bool\"}],\"internalType\":\"struct MultiCallWithFailure.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multiCall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MultiCallWithFailure", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "1000000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}