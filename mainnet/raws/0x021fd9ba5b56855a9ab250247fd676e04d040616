{"status": "1", "message": "OK", "result": [{"SourceCode": "//Tell the Solidity compiler what version to use\r\npragma solidity ^0.4.8;\r\n\r\n//Declares a new contract\r\ncontract SimpleStorageKevin {\r\n    \r\n    //Storage. Persists in between transactions\r\n    uint x = 316;\r\n\r\n    //Allows the unsigned integer stored to be changed\r\n    function setKevin(uint newValue)\r\n        public\r\n    {\r\n        x = newValue;\r\n    }\r\n    \r\n    //Returns the currently stored unsigned integer\r\n    function getKevin()\r\n        public\r\n        view\r\n        returns (uint) \r\n    {\r\n        return x;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setKevin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKevin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SimpleStorageKevin", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://c53c5769ca4d64fbfe483b3e01d7a89367ba5642e9c706d387ffffa2c414a5f5"}]}