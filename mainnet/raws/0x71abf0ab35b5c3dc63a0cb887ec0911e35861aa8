{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/NftMultiTransfer.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface IERC721 {\\n  function transferFrom(address from, address to, uint256 tokenId) external;\\n}\\n\\ninterface IERC20 {\\n  function transfer(address to, uint256 amount) external;\\n  function balanceOf(address owner) external view returns (uint256);\\n}\\n\\ncontract NftMultiTransfer {\\n\\n  struct TransferRequest {\\n    address project;\\n    address to;\\n    uint256 tokenId;\\n  }\\n\\n  uint256 public immutable MAX_TRANSFER_FEE = 5e14; // 0.0005, approx 5% tx fee\\n\\n  address public owner;\\n  uint256 public transferFee;\\n\\n  constructor() {\\n    transferFee = 1e14; // 0.0001, approx 0.1% tx fee\\n    owner = msg.sender;\\n  } \\n\\n  function setOwner(address _owner) external {\\n    require(msg.sender == owner, \\\"PERMISSION_DENIED\\\");\\n    owner = _owner;\\n  }\\n\\n  function setTransferFee(uint256 _transferFee) external {\\n    require(msg.sender == owner, \\\"PERMISSION_DENIED\\\");\\n    require(_transferFee <= MAX_TRANSFER_FEE, \\\"INVALID_FEE\\\");\\n    transferFee = _transferFee;\\n  }\\n\\n  function multiTransfer(TransferRequest[] calldata _transferRequests) external payable {\\n    require(msg.value == _transferRequests.length * transferFee, \\\"INVALID_FEE\\\");\\n    for (uint256 i = 0; i < _transferRequests.length; i++) {\\n      TransferRequest memory request = _transferRequests[i];\\n      IERC721(request.project).transferFrom(msg.sender, request.to, request.tokenId);\\n    }\\n  }  \\n  \\n  function withdraw() external payable {\\n    require(msg.sender == owner, \\\"PERMISSION_DENIED\\\");\\n    require(payable(owner).send(address(this).balance), \\\"NO_TRANSFER\\\");\\n  }\\n\\n  function extract(address _token) external {\\n    require(msg.sender == owner, \\\"PERMISSION_DENIED\\\");\\n    IERC20 token = IERC20(_token);\\n    token.transfer(owner, token.balanceOf(address(this)));\\n  }\\n\\n  function getTransferFee(TransferRequest[] calldata _transferRequests) external view returns (uint256) {\\n    return _transferRequests.length * transferFee;\\n  } \\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"src/=src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\"\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MAX_TRANSFER_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"extract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct NftMultiTransfer.TransferRequest[]\",\"name\":\"_transferRequests\",\"type\":\"tuple[]\"}],\"name\":\"getTransferFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct NftMultiTransfer.TransferRequest[]\",\"name\":\"_transferRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transferFee\",\"type\":\"uint256\"}],\"name\":\"setTransferFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "NftMultiTransfer", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}