{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/BlockInvadersCargoShip.sol\": {\r\n      \"content\": \"pragma solidity 0.8.6;\\r\\n// SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n//\\r\\n//\\r\\n//                              ///                                      \\r\\n//                           ////////                                    \\r\\n//                         /////////////                                 \\r\\n//                     //////////////////                               \\r\\n//                   ///////////////////////                            \\r\\n//                ////////////////////////////                          \\r\\n//    &&&&&&&&&     ////////////////////////     &&&&&&&&&&             \\r\\n//                     ///////////////////                              \\r\\n//      &&&&&&&&&&&      //////////////      &&&&&&&&&&&&               \\r\\n//      &&&&&&&&&&&&&&      /////////     &&&&&&&&&&&&&&&               \\r\\n//                &&&&&&      ////      &&&&&&&                         \\r\\n//                  &&&&&&&          &&&&&&&                            \\r\\n//            &&&&&    &&&&&&      &&&&&&&   &&&&&                      \\r\\n//               &&&&&   &&&&&&&&&&&&&&    &&&&&                        \\r\\n//                 &&&&&    &&&&&&&&&   &&&&&                           \\r\\n//                    &&&&&   &&&&    &&&&&                             \\r\\n//                      &&&&&      &&&&&                                \\r\\n//                         &&&&& &&&&&                                  \\r\\n//                           &&&&&&                                     \\r\\n//                             &&                                       \\r\\n//                                                                      \\r\\n//                                                                      \\r\\n//                      &&&     &&&&&    &&                             \\r\\n//                    &&   &&   &&   &&  &&                             \\r\\n//                   &&     &&  &&&&&&&  &&                             \\r\\n//                    &&   &&   &&&   && &&                             \\r\\n//                      &&&     &&&& &&  &&            \\r\\n//\\r\\n//========================================================================\\r\\n// ONCHAIN BLOCK INVADERS - Upgradable Colors Storage contract\\r\\n\\r\\ncontract BlockInvadersCargoShip is  Ownable {\\r\\n    struct paintStruct{\\r\\n        string[] eyesColor;\\r\\n        string[] color;\\r\\n        string[] backgroundColor;\\r\\n        string[] colName;\\r\\n        string   effect;\\r\\n        string  chromaName;\\r\\n    }\\r\\n    mapping(uint256 => paintStruct) paint;\\r\\n    \\r\\n    event ColorStorred();\\r\\n\\r\\n\\r\\n    constructor() Ownable() {\\r\\n\\r\\n    //Light Pallete\\r\\n    paint[0].eyesColor = [\\\"JyM3NkE3QjMn\\\", \\\"JyNDM0U2REEn\\\", \\\"JyM3RjlBQzYn\\\", \\\"JyM4NjhCQjAn\\\", \\\"JyNEQkI2QUQn\\\", \\\"JyNGRkFDOTkn\\\", \\\"JyNGRkU4OTgn\\\", \\\"JyNFNjY1NEMn\\\"];\\r\\n    paint[0].colName = [\\\"U2lsdmVy\\\", \\\"RGVzZXJ0\\\", \\\"U2VycGVudGluZSAg\\\", \\\"U29saXMg\\\", \\\"SmFkZSAg\\\", \\\"Q29iYWx0\\\", \\\"T2NlYW4g\\\", \\\"RW1lcmFsZCAg\\\", \\\"SmFzcGVy\\\", \\\"SW5kaWdv\\\", \\\"QXNo\\\", \\\"VGl0YW5pdW0g\\\", \\\"Q2FyYm9u\\\", \\\"U2NhcmxldCAg\\\", \\\"Q29yYWwg\\\", \\\"QnJhc3Mg\\\", \\\"QXp1cmUg\\\", \\\"Q3JpbXNvbiAg\\\"];\\r\\n    paint[0].color = [\\\"JyNkOGUyZWIn\\\", \\\"JyNEQkI2QUQn\\\", \\\"JyM3QUI4QjIn\\\", \\\"JyNmYWQ5OGMn\\\", \\\"JyM2RTlDQTYn\\\", \\\"JyM3MDgzQUYn\\\", \\\"JyM1MDczOEYn\\\", \\\"JyNiOGQ5Y2Un\\\", \\\"JyNDRkFDQTMn\\\", \\\"JyM3Mzc3OTcn\\\", \\\"JyM5NDkzOEYn\\\", \\\"JyM3MzdCOEIn\\\", \\\"JyNDNkNDQ0Yn\\\", \\\"JyNmMmEzOTEn\\\", \\\"JyNGNENEQ0Qn\\\", \\\"JyNDQ0MzQUYn\\\", \\\"JyM3RjlBQzYn\\\", \\\"JyNEODYxNDgn\\\"];\\r\\n    paint[0].backgroundColor = [\\\"JyNmNGU0ZDYn\\\", \\\"JyNlYWViZTUn\\\", \\\"JyNGMEVCRTkn\\\", \\\"JyNGREVERTcn\\\", \\\"JyNGMEUzRTMn\\\", \\\"JyNFQ0YyRkIn\\\", \\\"JyNGREZERTgn\\\", \\\"JyNGMkYyRjIn\\\"];\\r\\n    paint[0].effect = \\\"PGZpbHRlciBpZD0nbmVvbicgeT0nLTInIHg9Jy0xJyB3aWR0aD0nMzUwJyBoZWlnaHQ9JzM1MCc+PGZlRHJvcFNoYWRvdyBmbG9vZC1jb2xvcj0nIzhBNzk1RCcgZHg9JzAnIGR5PSc2JyBmbG9vZC1vcGFjaXR5PScwLjY1JyBzdGREZXZpYXRpb249JzIuNScgcmVzdWx0PSdzaGFkb3cnLz48ZmVPZmZzZXQgaW49J1N0cm9rZVBhaW50JyBkeD0nMCcgZHk9JzIuNCcgcmVzdWx0PSdvZmZTdHJQbnQnLz48ZmVGbG9vZCBmbG9vZC1jb2xvcj0nIzRBNDEzMicgZmxvb2Qtb3BhY2l0eT0nMicgcmVzdWx0PSdmbG9vZDEnIC8+PGZlT2Zmc2V0IGluPSdTb3VyY2VHcmFwaGljJyBkeD0nMCcgZHk9JzInIHJlc3VsdD0nb2ZmRmxvb2QnLz48ZmVPZmZzZXQgaW49J1NvdXJjZUdyYXBoaWMnIGR4PScwJyBkeT0nOScgcmVzdWx0PSdvZmZTaGFkb3cnLz48ZmVDb21wb3NpdGUgaW49J2Zsb29kMScgaW4yPSdvZmZGbG9vZCcgb3BlcmF0b3I9J2luJyAgcmVzdWx0PSdjbXBGbG9vZCcgLz48ZmVDb21wb3NpdGUgaW49J3NoYWRvdycgaW4yPSdvZmZTaGFkb3cnIG9wZXJhdG9yPSdpbicgcmVzdWx0PSdjbXBTaGEnIC8+PGZlR2F1c3NpYW5CbHVyIGluPSdvZmZTdHJQbnQnIHN0ZERldmlhdGlvbj0nMScgcmVzdWx0PSdiU3Ryb2tlUCcvPjxmZUdhdXNzaWFuQmx1ciBpbj0nY21wRmxvb2QnIHN0ZERldmlhdGlvbj0nMC42JyByZXN1bHQ9J2JGbG9vZCcvPjxmZUdhdXNzaWFuQmx1ciBpbj0nY21wU2hhJyBzdGREZXZpYXRpb249JzAuNicgcmVzdWx0PSdiU2hhZG93Jy8+PGZlTWVyZ2U+PGZlTWVyZ2VOb2RlIGluPSdiU3Ryb2tlUCcvPjxmZU1lcmdlTm9kZSBpbj0nYnNoYWRvdycvPjxmZU1lcmdlTm9kZSBpbj0nYkZsb29kJy8+PGZlTWVyZ2VOb2RlIGluPSdTb3VyY2VHcmFwaGljJy8+PC9mZU1lcmdlPjwvZmlsdGVyPiAg\\\";\\r\\n\\r\\n\\r\\n    //Light side\\r\\n    paint[0].chromaName = 'TGlnaHQgU2lkZSAg';\\r\\n    }\\r\\n    \\r\\n    function isCargoShip() external pure returns (bool) {return true;}\\r\\n    \\r\\n    function loadChroma(string memory _chromaName,string[] memory _eyesColor,string[] memory _color,string[] memory _bkpcolor,string[] memory _colName,string memory _effect,uint256 idx ) external onlyOwner {\\r\\n        \\r\\n        paint[idx].eyesColor = _eyesColor;\\r\\n        paint[idx].color = _color;\\r\\n        paint[idx].backgroundColor = _bkpcolor;\\r\\n        paint[idx].colName = _colName;\\r\\n        paint[idx].effect = _effect;\\r\\n        paint[idx].chromaName = _chromaName;\\r\\n        emit ColorStorred();\\r\\n    }\\r\\n    function unloadChroma(uint256 idx) external view returns (string[] memory,string[] memory,string[] memory,string[] memory,string memory,string memory){\\r\\n        return (paint[idx].eyesColor,paint[idx].color,paint[idx].backgroundColor,paint[idx].colName,paint[idx].effect,paint[idx].chromaName);\\r\\n    }\\r\\n}\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 2000\r\n    },\r\n    \"evmVersion\": \"berlin\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ColorStorred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isCargoShip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_chromaName\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_eyesColor\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_color\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_bkpcolor\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_colName\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_effect\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"loadChroma\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"unloadChroma\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "BlockInvadersCargoShip", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "2000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}