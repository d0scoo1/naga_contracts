{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.11;\r\n\r\ncontract PropertiesAggregator {\r\n    /**\r\n     * @notice Fetches a single property from the target contract, assuming no arguments are used for the property\r\n     * @param target The contract to perform the query on\r\n     * @param name The name of the property to query\r\n     * @return The raw data of the output of the call, not yet decoded\r\n     */\r\n    function getProperty(address target, string calldata name)\r\n        public\r\n        view\r\n        returns (bytes memory)\r\n    {\r\n        string memory methodSignature = string(abi.encodePacked(name, \"()\"));\r\n        (bool success, bytes memory result) = target.staticcall(\r\n            abi.encodeWithSignature(methodSignature)\r\n        );\r\n        \r\n        require(success, \"Must succeed\");\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @notice Simultaneously fetches multiple properties from the target contract, assuming no arguments are used for each property\r\n     * @param target The contract to perform the query on\r\n     * @param names The names of the properties to query\r\n     * @return An array of the raw data of the output of each property query, not yet decoded\r\n     */\r\n    function getProperties(address target, string[] calldata names)\r\n        external\r\n        view\r\n        returns (bytes[] memory)\r\n    {\r\n        uint256 namesLength = names.length;\r\n        bytes[] memory result = new bytes[](namesLength);\r\n        for (uint256 i; i < namesLength; i++) {\r\n            bytes memory propertyData = this.getProperty(target, names[i]);\r\n            result[i] = propertyData;\r\n        }\r\n        return result;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"}],\"name\":\"getProperties\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getProperty\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PropertiesAggregator", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5261f843495bbac1da7e762cfdb32849781cea163ed4a35e1077948719d1d4ad"}]}