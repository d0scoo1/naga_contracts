{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.17;\r\n\r\n/// @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens\r\n/// @author Dieter Shirley <dete@axiomzen.co> (https://github.com/dete)\r\ncontract ERC721 {\r\n    // Required methods\r\n    function implementsERC721() public pure returns (bool);\r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 _tokenId) external view returns (address owner);\r\n    function approve(address _to, uint256 _tokenId) external;\r\n    function transfer(address _to, uint256 _tokenId) public;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n\r\n    // Events\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId);\r\n    // Optional\r\n    // function name() public view returns (string name);\r\n    // function symbol() public view returns (string symbol);\r\n    // function tokensOfOwner(address _owner) external view returns (uint256[] tokenIds);\r\n    // function tokenMetadata(uint256 _tokenId, string _preferredTransport) public view returns (string infoUrl);\r\n\r\n    // ERC-165 Compatibility (https://github.com/ethereum/EIPs/issues/165)\r\n    // function supportsInterface(bytes4 _interfaceID) external view returns (bool);\r\n}\r\n\r\ncontract FootballerAccessControl{\r\n\r\n  ///@dev Emited when contract is upgraded\r\n  event ContractUpgrade(address newContract);\r\n  //The address of manager (the account or contracts) that can execute action within the role.\r\n  address public managerAddress;\r\n\r\n  ///@dev keeps track whether the contract is paused.\r\n  bool public paused = false;\r\n\r\n  function FootballerAccessControl() public {\r\n    managerAddress = msg.sender;\r\n  }\r\n\r\n  /// @dev Access modifier for manager-only functionality\r\n  modifier onlyManager() {\r\n    require(msg.sender == managerAddress);\r\n    _;\r\n  }\r\n\r\n  ///@dev assigns a new address to act as the Manager.Only available to the current Manager.\r\n  function setManager(address _newManager) external onlyManager {\r\n    require(_newManager != address(0));\r\n    managerAddress = _newManager;\r\n  }\r\n\r\n  /*** Pausable functionality adapted from OpenZeppelin ***/\r\n\r\n  /// @dev Modifier to allow actions only when the contract IS NOT paused\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /// @dev Modifier to allow actions only when the contract IS paused\r\n  modifier whenPaused {\r\n      require(paused);\r\n      _;\r\n  }\r\n\r\n  /// @dev Called by manager to pause the contract. Used only when\r\n  ///  a bug or exploit is detected and we need to limit damage.\r\n  function pause() external onlyManager whenNotPaused {\r\n    paused = true;\r\n  }\r\n\r\n  /// @dev Unpauses the smart contract. Can only be called by the manager,\r\n  /// since one reason we may pause the contract is when manager accounts are compromised.\r\n  /// @notice This is public rather than external so it can be called by derived contracts.\r\n  function unpause() public onlyManager {\r\n    // can't unpause if contract was upgraded\r\n    paused = false;\r\n  }\r\n\r\n}\r\n\r\ncontract FootballerBase is FootballerAccessControl {\r\n  using SafeMath for uint256;\r\n  /*** events ***/\r\n  event Create(address owner, uint footballerId);\r\n  event Transfer(address _from, address _to, uint256 tokenId);\r\n\r\n  uint private randNonce = 0;\r\n\r\n  //\u7403\u5458/\u7403\u661f \u5c5e\u6027\r\n  struct footballer {\r\n    uint price; //\u7403\u5458-\u4ef7\u683c \uff0c \u7403\u661f-\u4e00\u53e3\u4ef7 \u5355\u4f4dwei\r\n    //\u7403\u5458\u7684\u6218\u6597\u5c5e\u6027\r\n    uint defend; //\u9632\u5fa1\r\n    uint attack; //\u8fdb\u653b\r\n    uint quality; //\u7d20\u8d28\r\n  }\r\n\r\n  //\u5b58\u7403\u661f\u548c\u7403\u5458\r\n  footballer[] public footballers;\r\n  //\u5c06\u7403\u5458\u7684id\u548c\u7403\u5458\u7684\u62e5\u6709\u8005\u5bf9\u5e94\u8d77\u6765\r\n  mapping (uint256 => address) public footballerToOwner;\r\n\r\n  //\u8bb0\u5f55\u62e5\u6709\u8005\u6709\u591a\u5c11\u7403\u5458\uff0c\u5728balanceOf\uff08\uff09\u5185\u90e8\u4f7f\u7528\u6765\u89e3\u51b3\u6240\u6709\u6743\u8ba1\u6570\r\n  mapping (address => uint256) public ownershipTokenCount;\r\n\r\n  //\u4ecefootballID \u5230 \u5df2\u6279\u51c6\u8c03\u7528transferFrom\uff08\uff09\u7684\u5730\u5740\u7684\u6620\u5c04\r\n  //\u6bcf\u4e2a\u7403\u5458\u53ea\u80fd\u6709\u4e00\u4e2a\u6279\u51c6\u7684\u5730\u5740\u3002\u96f6\u503c\u8868\u793a\u6ca1\u6709\u6279\u51c6\r\n  mapping (uint256 => address) public footballerToApproved;\r\n\r\n  // \u5c06\u7279\u5b9a\u7403\u5458\u7684\u6240\u6709\u6743 \u8d4b\u7ed9 \u67d0\u4e2a\u5730\u5740\r\n  function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n    footballerToApproved[_tokenId] = address(0);\r\n    ownershipTokenCount[_to] = ownershipTokenCount[_to].add(1);\r\n    footballerToOwner[_tokenId] = _to;\r\n    ownershipTokenCount[_from] = ownershipTokenCount[_from].sub(1);\r\n    emit Transfer(_from, _to, _tokenId);\r\n  }\r\n\r\n  //\u7ba1\u7406\u5458\u7528\u4e8e\u6295\u653e\u7403\u661f,\u548ccreateStar\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u624d\u80fd\u5c06\u7403\u661f\u5b8c\u6574\u4fe1\u606f\u4fdd\u5b58\u8d77\u6765\r\n  function _createFootballerStar(uint _price,uint _defend,uint _attack, uint _quality) internal onlyManager returns(uint) {\r\n      footballer memory _player = footballer({\r\n        price:_price,\r\n        defend:_defend,\r\n        attack:_attack,\r\n        quality:_quality\r\n      });\r\n      uint newFootballerId = footballers.push(_player) - 1;\r\n      footballerToOwner[newFootballerId] = managerAddress;\r\n      ownershipTokenCount[managerAddress] = ownershipTokenCount[managerAddress].add(1);\r\n      //\u8bb0\u5f55\u8fd9\u4e2a\u7403\u661f\u53ef\u4ee5\u8fdb\u884c\u4ea4\u6613\r\n      footballerToApproved[newFootballerId] = managerAddress;\r\n      require(newFootballerId == uint256(uint32(newFootballerId)));\r\n      emit Create(managerAddress, newFootballerId);\r\n      return newFootballerId;\r\n    }\r\n\r\n\r\n    //\u7528\u4e8e\u5f53\u7528\u6237\u4e70\u5361\u5305\u65f6\uff0c\u968f\u673a\u751f\u6210\u7403\u5458\r\n    function createFootballer () internal returns (uint) {\r\n        footballer memory _player = footballer({\r\n          price: 0,\r\n          defend: _randMod(20,80),\r\n          attack: _randMod(20,80),\r\n          quality: _randMod(20,80)\r\n        });\r\n        uint newFootballerId = footballers.push(_player) - 1;\r\n      //  require(newFootballerId == uint256(uint32(newFootballerId)));\r\n        footballerToOwner[newFootballerId] = msg.sender;\r\n        ownershipTokenCount[msg.sender] =ownershipTokenCount[msg.sender].add(1);\r\n        emit Create(msg.sender, newFootballerId);\r\n        return newFootballerId;\r\n    }\r\n\r\n  // \u751f\u6210\u4e00\u4e2a\u4ece _min \u5230 _max \u8303\u56f4\u5185\u7684\u968f\u673a\u6570\uff08\u4e0d\u5305\u62ec _max\uff09\r\n  function _randMod(uint _min, uint _max) private returns(uint) {\r\n      randNonce++;\r\n      uint modulus = _max - _min;\r\n      return uint(keccak256(now, msg.sender, randNonce)) % modulus + _min;\r\n  }\r\n\r\n}\r\n\r\ncontract FootballerOwnership is FootballerBase, ERC721 {\r\n  /// @notice Name and symbol of the non fungible token, as defined in ERC721.\r\n  string public constant name = \"CyptoWorldCup\";\r\n  string public constant symbol = \"CWC\";\r\n\r\n\r\n  function implementsERC721() public pure returns (bool) {\r\n    return true;\r\n  }\r\n\r\n  //\u5224\u65ad\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5730\u5740\u662f\u4e0d\u662f\u73b0\u5728\u67d0\u4e2a\u7403\u5458\u7684\u62e5\u6709\u8005\r\n  function _owns(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n    return footballerToOwner[_tokenId] == _claimant;\r\n  }\r\n\r\n  //\u5224\u65ad\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5730\u5740\u73b0\u5728\u5bf9\u4e8e\u67d0\u4e2a\u7403\u5458 \u662f\u4e0d\u662f\u6709 transferApproval\r\n  function _approvedFor(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n    return footballerToApproved[_tokenId] == _claimant;\r\n  }\r\n\r\n  //\u7ed9\u67d0\u5730\u5740\u7684\u7528\u6237 \u5bf9 \u7403\u5458\u6709transfer\u7684\u6743\u5229\r\n  function _approve(uint256 _tokenId, address _approved) internal {\r\n      footballerToApproved[_tokenId] = _approved;\r\n  }\r\n\r\n  //\u8fd4\u56de owner \u62e5\u6709\u7684\u7403\u5458\u6570\r\n  function balanceOf(address _owner) public view returns (uint256 count) {\r\n    return ownershipTokenCount[_owner];\r\n  }\r\n\r\n  //\u8f6c\u79fb \u7403\u5458 \u7ed9 \u53e6\u4e00\u4e2a\u5730\u5740\r\n  function transfer(address _to, uint256 _tokenId) public whenNotPaused {\r\n    require(_to != address(0));\r\n    require(_to != address(this));\r\n    //\u53ea\u80fdsend\u81ea\u5df1\u7684\u7403\u5458\r\n    require(_owns(msg.sender, _tokenId));\r\n    //\u91cd\u65b0\u5206\u914d\u6240\u6709\u6743\uff0c\u6e05\u9664\u5f85\u6279\u51c6 approvals \uff0c\u53d1\u51fa\u8f6c\u79fb\u4e8b\u4ef6\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  //\u6388\u4e88\u53e6\u4e00\u4e2a\u5730\u5740\u901a\u8fc7transferFrom\uff08\uff09\u8f6c\u79fb\u7279\u5b9a\u7403\u5458\u7684\u6743\u5229\u3002\r\n  function approve(address _to, uint256 _tokenId) external whenNotPaused {\r\n    //\u53ea\u6709\u7403\u5458\u7684\u62e5\u6709\u8005\u624d\u6709\u8d44\u683c\u51b3\u5b9a\u8981\u628a\u8fd9\u4e2a\u6743\u5229\u7ed9\u8c01\r\n    require(_owns(msg.sender, _tokenId));\r\n    _approve(_tokenId, _to);\r\n    emit Approval(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  //\u8f6c\u8ba9\u7531\u53e6\u4e00\u4e2a\u5730\u5740\u6240\u62e5\u6709\u7684\u7403\u5458\uff0c\u8be5\u5730\u5740\u4e4b\u524d\u5df2\u7ecf\u83b7\u5f97\u6240\u6709\u8005\u7684\u8f6c\u8ba9\u6279\u51c6\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) external whenNotPaused {\r\n    require(_to != address(0));\r\n    //\u4e0d\u5141\u8bb8\u8f6c\u8ba9\u672c\u5408\u540c\u4ee5\u9632\u6b62\u610f\u5916\u6ee5\u7528\u3002\r\n    // \u5408\u7ea6\u4e0d\u5e94\u8be5\u62e5\u6709\u4efb\u4f55\u7403\u5458\uff08\u9664\u975e \u5728\u521b\u5efa\u7403\u661f\u4e4b\u540e\u5e76\u4e14\u5728\u62cd\u5356\u4e4b\u524d \u975e\u5e38\u77ed\uff09\u3002\r\n    require(_to != address(this));\r\n    require(_approvedFor(msg.sender, _tokenId));\r\n    require(_owns(_from, _tokenId));\r\n    //\u8be5\u51fd\u6570\u5b9a\u4e49\u5728FootballerBase\r\n    _transfer(_from, _to, _tokenId);\r\n  }\r\n\r\n  //\u8fd4\u56de\u73b0\u5728\u4e00\u5171\u6709\u591a\u5c11\uff08\u7403\u5458+\u7403\u661f\uff09\r\n  function totalSupply() public view returns (uint) {\r\n    return footballers.length;\r\n  }\r\n\r\n  //\u8fd4\u56de\u8be5\u7279\u5b9a\u7403\u5458\u7684\u62e5\u6709\u8005\u7684\u5730\u5740\r\n  function ownerOf(uint256 _tokenId) external view returns (address owner) {\r\n    owner = footballerToOwner[_tokenId];\r\n    require(owner != address(0));\r\n  }\r\n\r\n  //\u8fd4\u56de\u8be5\u5730\u5740\u7684\u7528\u6237\u62e5\u6709\u7684\u7403\u5458\u7684id\r\n  function tokensOfOwner(address _owner) external view returns(uint256[] ownerTokens) {\r\n    uint256 tokenCount = balanceOf(_owner);\r\n    if(tokenCount == 0) {\r\n      return new uint256[](0);\r\n    } else {\r\n      uint256[] memory result = new uint256[](tokenCount);\r\n      uint256 totalpalyers = totalSupply();\r\n      uint256 resultIndex = 0;\r\n      uint256 footballerId;\r\n      for (footballerId = 0; footballerId < totalpalyers; footballerId++) {\r\n        if(footballerToOwner[footballerId] == _owner) {\r\n          result[resultIndex] = footballerId;\r\n          resultIndex++;\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\ncontract FootballerAction is FootballerOwnership {\r\n  //\u521b\u5efa\u7403\u661f\r\n  function createFootballerStar(uint _price,uint _defend,uint _attack, uint _quality) public returns(uint) {\r\n      return _createFootballerStar(_price,_defend,_attack,_quality);\r\n  }\r\n\r\n  //\u62bd\u5361\u5305\u5f97\u7403\u661f\r\n  function CardFootballers() public payable returns (uint) {\r\n      uint price = 4000000000000 wei; //0.04 eth\r\n      require(msg.value >= price);\r\n      uint ballerCount = 14;\r\n      uint newFootballerId = 0;\r\n      for (uint i = 0; i < ballerCount; i++) {\r\n         newFootballerId = createFootballer();\r\n      }\r\n      managerAddress.transfer(msg.value);\r\n      return price;\r\n  }\r\n\r\n  function buyStar(uint footballerId,uint price) public payable  {\r\n    require(msg.value >= price);\r\n    //\u5c06\u7403\u661f\u7684\u62e5\u6709\u6743 \u4ea4\u7ed9 \u8d2d\u4e70\u7684\u7528\u6237\r\n    address holder = footballerToApproved[footballerId];\r\n    require(holder != address(0));\r\n    _transfer(holder,msg.sender,footballerId);\r\n    //\u7ed9\u5356\u5bb6\u8f6c\u94b1\r\n    holder.transfer(msg.value);\r\n  }\r\n\r\n  //\u7528\u6237\u51fa\u552e\u81ea\u5df1\u62e5\u6709\u7684\u7403\u5458\u6216\u7403\u661f\r\n  function sell(uint footballerId,uint price) public returns(uint) {\r\n    require(footballerToOwner[footballerId] == msg.sender);\r\n    require(footballerToApproved[footballerId] == address(0));\r\n    footballerToApproved[footballerId] = msg.sender;\r\n    footballers[footballerId].price = price;\r\n  }\r\n\r\n  //\u663e\u793a\u7403\u961f\r\n  function getTeamBallers(address actor) public view returns (uint[]) {\r\n    uint len = footballers.length;\r\n    uint count=0;\r\n    for(uint i = 0; i < len; i++) {\r\n        if(_owns(actor, i)){\r\n          if(footballerToApproved[i] == address(0)){\r\n            count++;\r\n          }\r\n       }\r\n    }\r\n    uint[] memory res = new uint256[](count);\r\n    uint index = 0;\r\n    for(i = 0; i < len; i++) {\r\n      if(_owns(actor, i)){\r\n          if(footballerToApproved[i] == address(0)){\r\n            res[index] = i;\r\n            index++;\r\n          }\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  //\u663e\u793a\u51fa\u552e\u7684\u7403\u661f+\u7403\u5458\r\n  function getSellBallers() public view returns (uint[]) {\r\n    uint len = footballers.length;\r\n    uint count = 0;\r\n    for(uint i = 0; i < len; i++) {\r\n        if(footballerToApproved[i] != address(0)){\r\n          count++;\r\n        }\r\n    }\r\n    uint[] memory res = new uint256[](count);\r\n    uint index = 0;\r\n    for( i = 0; i < len; i++) {\r\n        if(footballerToApproved[i] != address(0)){\r\n          res[index] = i;\r\n          index++;\r\n        }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  //\u83b7\u5f97\u7403\u5458+\u7403\u661f\u7684\u603b\u6570\u91cf\r\n  function getAllBaller() public view returns (uint) {\r\n    uint len = totalSupply();\r\n    return len;\r\n  }\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"footballerToApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"CardFootballers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"getTeamBallers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSellBallers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"footballers\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"defend\",\"type\":\"uint256\"},{\"name\":\"attack\",\"type\":\"uint256\"},{\"name\":\"quality\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_defend\",\"type\":\"uint256\"},{\"name\":\"_attack\",\"type\":\"uint256\"},{\"name\":\"_quality\",\"type\":\"uint256\"}],\"name\":\"createFootballerStar\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownershipTokenCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"footballerId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllBaller\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"footballerToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"footballerId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"buyStar\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"footballerId\",\"type\":\"uint256\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"}]", "ContractName": "FootballerAction", "CompilerVersion": "v0.4.25-nightly.2018.6.8+commit.81c5a6e4", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://40d2679e4fed922e0b77944ce2477dad6010d91e246a0705578f8516d8a84b75"}]}