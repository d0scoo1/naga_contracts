{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.6;\r\n\r\ninterface IOptimizerStrategy {\r\n    /// @return Maximul PLP value that could be minted\r\n    function maxTotalSupply() external view returns (uint256);\r\n\r\n    /// @notice Period of time that we observe for price slippage\r\n    /// @return time in seconds\r\n    function twapDuration() external view returns (uint32);\r\n\r\n    /// @notice Maximum deviation of time waited avarage price in ticks\r\n    function maxTwapDeviation() external view returns (int24);\r\n\r\n    /// @notice Tick multuplier for base range calculation\r\n    function tickRangeMultiplier() external view returns (int24);\r\n\r\n    /// @notice The price impact percentage during swap denominated in hundredths of a bip, i.e. 1e-6\r\n    /// @return The max price impact percentage\r\n    function priceImpactPercentage() external view returns (uint24);\r\n}\r\n\r\n/// @title Permissioned Optimizer variables\r\n/// @notice Contains Optimizer variables that may only be called by the governance\r\ncontract OptimizerStrategy is IOptimizerStrategy {\r\n\r\n    /// @inheritdoc IOptimizerStrategy\r\n    uint256 public override maxTotalSupply;\r\n    // Address of the Optimizer's strategy owner\r\n    address public governance;\r\n    // Pending to claim ownership address\r\n    address public pendingGovernance;\r\n\r\n    /// @inheritdoc IOptimizerStrategy\r\n    uint32 public override twapDuration;\r\n    /// @inheritdoc IOptimizerStrategy\r\n    int24 public override maxTwapDeviation;\r\n    /// @inheritdoc IOptimizerStrategy\r\n    int24 public override tickRangeMultiplier;\r\n    /// @inheritdoc IOptimizerStrategy\r\n    uint24 public override priceImpactPercentage;\r\n    \r\n    event TransferGovernance(address indexed previousGovernance, address indexed newGovernance);\r\n    \r\n    /**\r\n     * @param _twapDuration TWAP duration in seconds for rebalance check\r\n     * @param _maxTwapDeviation Max deviation from TWAP during rebalance\r\n     * @param _tickRangeMultiplier Used to determine base order range\r\n     * @param _priceImpactPercentage The price impact percentage during swap in hundredths of a bip, i.e. 1e-6\r\n     * @param _maxTotalSupply Maximul PLP value that could be minted\r\n     */\r\n    constructor(\r\n        uint32 _twapDuration,\r\n        int24 _maxTwapDeviation,\r\n        int24 _tickRangeMultiplier,\r\n        uint24 _priceImpactPercentage,\r\n        uint256 _maxTotalSupply\r\n    ) {\r\n        twapDuration = _twapDuration;\r\n        maxTwapDeviation = _maxTwapDeviation;\r\n        tickRangeMultiplier = _tickRangeMultiplier;\r\n        priceImpactPercentage = _priceImpactPercentage;\r\n        maxTotalSupply = _maxTotalSupply;\r\n        governance = msg.sender;\r\n\r\n        require(_maxTwapDeviation >= 20, \"maxTwapDeviation\");\r\n        require(_twapDuration >= 100, \"twapDuration\");\r\n        require(_priceImpactPercentage < 1e6 && _priceImpactPercentage > 0, \"PIP\");\r\n        require(maxTotalSupply > 0, \"maxTotalSupply\");\r\n    }\r\n\r\n    modifier onlyGovernance {\r\n        require(msg.sender == governance, \"NOT ALLOWED\");\r\n        _;\r\n    }\r\n\r\n    function setMaxTotalSupply(uint256 _maxTotalSupply) external onlyGovernance {\r\n        require(_maxTotalSupply > 0, \"maxTotalSupply\");\r\n        maxTotalSupply = _maxTotalSupply;\r\n    }\r\n\r\n    function setTwapDuration(uint32 _twapDuration) external onlyGovernance {\r\n        require(_twapDuration >= 100, \"twapDuration\");\r\n        twapDuration = _twapDuration;\r\n    }\r\n\r\n    function setMaxTwapDeviation(int24 _maxTwapDeviation) external onlyGovernance {\r\n        require(_maxTwapDeviation >= 20, \"PF\");\r\n        maxTwapDeviation = _maxTwapDeviation;\r\n    }\r\n\r\n    function setTickRange(int24 _tickRangeMultiplier) external onlyGovernance {\r\n        tickRangeMultiplier = _tickRangeMultiplier;\r\n    }\r\n\r\n    function setPriceImpact(uint16 _priceImpactPercentage) external onlyGovernance {\r\n        require(_priceImpactPercentage < 1e6 && _priceImpactPercentage > 0, \"PIP\");\r\n        priceImpactPercentage = _priceImpactPercentage;\r\n    }\r\n\r\n    \r\n     /**\r\n     * @notice `setGovernance()` should be called by the existing governance\r\n     * address prior to calling this function.\r\n     */\r\n    function setGovernance(address _governance) external onlyGovernance {\r\n        pendingGovernance = _governance;\r\n    }\r\n\r\n    /**\r\n     * @notice Governance address is not updated until the new governance\r\n     * address has called `acceptGovernance()` to accept this responsibility.\r\n     */\r\n    function acceptGovernance() external {\r\n        require(msg.sender == pendingGovernance, \"PG\");\r\n        emit TransferGovernance(governance, pendingGovernance);\r\n        pendingGovernance = address(0);\r\n        governance = msg.sender;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"},{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"_tickRangeMultiplier\",\"type\":\"int24\"},{\"internalType\":\"uint24\",\"name\":\"_priceImpactPercentage\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernance\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"TransferGovernance\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceImpactPercentage\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTotalSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_priceImpactPercentage\",\"type\":\"uint16\"}],\"name\":\"setPriceImpact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_tickRangeMultiplier\",\"type\":\"int24\"}],\"name\":\"setTickRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickRangeMultiplier\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "OptimizerStrategy", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000960000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000007d0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://126ef2e1bfeede0146dbd3a6f4d5e4da64ddc1c39d10cc293b07f331ba6390f3"}]}