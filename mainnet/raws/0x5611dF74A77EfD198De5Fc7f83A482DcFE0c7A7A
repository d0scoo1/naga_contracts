{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"details\": {\r\n        \"constantOptimizer\": true,\r\n        \"cse\": true,\r\n        \"deduplicate\": true,\r\n        \"jumpdestRemover\": true,\r\n        \"orderLiterals\": true,\r\n        \"peephole\": true,\r\n        \"yul\": false\r\n      },\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/persistent/global-config/GlobalConfigProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n    (c) Enzyme Council <council@enzyme.finance>\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./utils/GlobalConfigProxyConstants.sol\\\";\\nimport \\\"./utils/ProxiableGlobalConfigLib.sol\\\";\\n\\n/// @title GlobalConfigProxy Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A proxy contract for global configuration, slightly modified from EIP-1822\\n/// @dev Adapted from the recommended implementation of a Proxy in EIP-1822, updated for solc 0.6.12,\\n/// and using the EIP-1967 storage slot for the proxiable implementation.\\n/// See: https://eips.ethereum.org/EIPS/eip-1822\\n/// See: https://eips.ethereum.org/EIPS/eip-1967\\ncontract GlobalConfigProxy is GlobalConfigProxyConstants {\\n    constructor(bytes memory _constructData, address _globalConfigLib) public {\\n        // Validate constants\\n        require(\\n            EIP_1822_PROXIABLE_UUID == bytes32(keccak256(\\\"mln.proxiable.globalConfigLib\\\")),\\n            \\\"constructor: Invalid EIP_1822_PROXIABLE_UUID\\\"\\n        );\\n        require(\\n            EIP_1967_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1),\\n            \\\"constructor: Invalid EIP_1967_SLOT\\\"\\n        );\\n\\n        require(\\n            ProxiableGlobalConfigLib(_globalConfigLib).proxiableUUID() == EIP_1822_PROXIABLE_UUID,\\n            \\\"constructor: _globalConfigLib not compatible\\\"\\n        );\\n\\n        assembly {\\n            sstore(EIP_1967_SLOT, _globalConfigLib)\\n        }\\n\\n        (bool success, bytes memory returnData) = _globalConfigLib.delegatecall(_constructData);\\n        require(success, string(returnData));\\n    }\\n\\n    fallback() external payable {\\n        assembly {\\n            let contractLogic := sload(EIP_1967_SLOT)\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(\\n                sub(gas(), 10000),\\n                contractLogic,\\n                0x0,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/persistent/global-config/utils/GlobalConfigProxyConstants.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n\\n    (c) Enzyme Council <council@enzyme.finance>\\n\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\n/// @title GlobalConfigProxyConstants Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice Constant values used in GlobalConfig proxy-related contracts\\nabstract contract GlobalConfigProxyConstants {\\n    // `bytes32(keccak256('mln.proxiable.globalConfigLib'))`\\n    bytes32\\n        internal constant EIP_1822_PROXIABLE_UUID = 0xf25d88d51901d7fabc9924b03f4c2fe4300e6fe1aae4b5134c0a90b68cd8e81c;\\n    // `bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)`\\n    bytes32\\n        internal constant EIP_1967_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n}\\n\"\r\n    },\r\n    \"contracts/persistent/global-config/utils/ProxiableGlobalConfigLib.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\n/*\\n    This file is part of the Enzyme Protocol.\\n    (c) Enzyme Council <council@enzyme.finance>\\n    For the full license information, please view the LICENSE\\n    file that was distributed with this source code.\\n*/\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./GlobalConfigProxyConstants.sol\\\";\\n\\n/// @title ProxiableGlobalConfigLib Contract\\n/// @author Enzyme Council <security@enzyme.finance>\\n/// @notice A contract that defines the upgrade behavior for GlobalConfigLib instances\\n/// @dev The recommended implementation of the target of a proxy according to EIP-1822 and EIP-1967\\n/// See: https://eips.ethereum.org/EIPS/eip-1822\\n/// See: https://eips.ethereum.org/EIPS/eip-1967\\nabstract contract ProxiableGlobalConfigLib is GlobalConfigProxyConstants {\\n    /// @dev Updates the target of the proxy to be the contract at _nextGlobalConfigLib\\n    function __updateCodeAddress(address _nextGlobalConfigLib) internal {\\n        require(\\n            ProxiableGlobalConfigLib(_nextGlobalConfigLib).proxiableUUID() ==\\n                bytes32(EIP_1822_PROXIABLE_UUID),\\n            \\\"__updateCodeAddress: _nextGlobalConfigLib not compatible\\\"\\n        );\\n        assembly {\\n            sstore(EIP_1967_SLOT, _nextGlobalConfigLib)\\n        }\\n    }\\n\\n    /// @notice Returns a unique bytes32 hash for GlobalConfigLib instances\\n    /// @return uuid_ The bytes32 hash representing the UUID\\n    function proxiableUUID() public pure returns (bytes32 uuid_) {\\n        return EIP_1822_PROXIABLE_UUID;\\n    }\\n}\\n\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_constructData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_globalConfigLib\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "GlobalConfigProxy", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000004807e48eb7b1fd9ed7ac6d5ab55a6c39b57d4dcc000000000000000000000000000000000000000000000000000000000000002419ab453c000000000000000000000000c3dc853dd716bd5754f421ef94fdcbac3902ab3200000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "1", "Implementation": "0x4807e48eb7b1fd9ed7ac6d5ab55a6c39b57d4dcc", "SwarmSource": ""}]}