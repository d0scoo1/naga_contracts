{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.16;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        // uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    //\u6784\u9020\u51fd\u6570\uff0c\u81ea\u52a8\u6267\u884c\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    //\u8f6c\u79fb\u5408\u7ea6\u5230\u65b0\u7684\u5408\u7ea6\u62e5\u6709\u8005\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ninterface tokenRecipient {function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external;}\r\n\r\ncontract TokenERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    // Public variables of the token\r\n    string public name;    // \u4ee3\u5e01\u7b26\u5408\uff0c\u4e00\u822c\u7528\u4ee3\u5e01\u540d\u79f0\u7684\u7f29\u5199\uff0c\u5982 LBJ\r\n    string public symbol;  // token \u6807\u5fd7\r\n    uint8 public decimals = 18;  // \u6bcf\u4e2a\u4ee3\u5e01\u53ef\u7ec6\u5206\u7684\u5230\u591a\u5c11\u4f4d\uff0c\u5373\u6700\u5c0f\u4ee3\u5e01\u5355\u4f4d\r\n    // \u4ee3\u5e01\u603b\u4f9b\u5e94\u91cf\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u4ee5\u6700\u5c0f\u5355\u4f4d\u6240\u8ba1\u91cf\u7684\u4ee3\u5e01\r\n    uint256 public totalSupply;\r\n\r\n    // \u7528mapping\u4fdd\u5b58\u6bcf\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u4f59\u989d\r\n    mapping(address => uint256) public balanceOf;\r\n    // \u8fd4\u56de_owner\u7ed9_spender\u6388\u6743token\u7684\u5269\u4f59\u91cf\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    // \u4e8b\u4ef6\uff0c\u7528\u6765\u901a\u77e5\u5ba2\u6237\u7aef\u4ea4\u6613\u53d1\u751f\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // \u4e8b\u4ef6\uff0c\u7528\u6765\u901a\u77e5\u5ba2\u6237\u7aef\u4ee3\u5e01\u88ab\u9500\u6bc1\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /**\r\n     * \u6784\u9020\u51fd\u6570\uff0c\u81ea\u52a8\u6267\u884c\r\n     *\r\n     */\r\n    constructor (\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        // \u4f9b\u5e94\u7684\u4efd\u989d\uff0c\u4efd\u989d\u8ddf\u6700\u5c0f\u7684\u4ee3\u5e01\u5355\u4f4d\u6709\u5173\uff0c\u4efd\u989d = \u5e01\u6570 * 10 ** decimals\r\n        balanceOf[msg.sender] = totalSupply;\r\n        // \u521b\u5efa\u8005\u62e5\u6709\u6240\u6709\u7684\u4ee3\u5e01\r\n        name = tokenName;\r\n        // \u4ee3\u5e01\u540d\u79f0\r\n        symbol = tokenSymbol;\r\n        // \u4ee3\u5e01\u7b26\u53f7\r\n    }\r\n\r\n    /**\r\n     * @dev \u4ee3\u5e01\u4ea4\u6613\u8f6c\u79fb\u7684\u5185\u90e8\u5b9e\u73b0,\u53ea\u80fd\u88ab\u672c\u5408\u7ea6\u8c03\u7528\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        // \u786e\u4fdd\u76ee\u5730\u5730\u5740\u4e0d\u4e3a0x0\uff0c\u56e0\u4e3a0x0\u5730\u5740\u4ee3\u8868\u7684\u662f\u9500\u6bc1\r\n        require(_to != 0x0);\r\n        // \u786e\u4fdd\u53d1\u9001\u8005\u8d26\u6237\u6709\u8db3\u591f\u7684\u4f59\u989d\r\n        require(balanceOf[_from] >= _value && _value > 0);\r\n        // \u786e\u4fdd_value\u4e3a\u6b63\u6570\uff0c\u5982\u679c\u4e3a\u8d1f\u6570\uff0c\u90a3\u76f8\u5f53\u4e8e\u4ed8\u6b3e\u8005\u8d26\u6237\u94b1\u8d8a\u4e70\u8d8a\u591a\uff5e\u54c8\u54c8\uff5e\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        // \u4ea4\u6613\u524d\uff0c\u53cc\u65b9\u8d26\u6237\u4f59\u989d\u603b\u548c\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        // \u5c06\u53d1\u9001\u65b9\u8d26\u6237\u4f59\u989d\u51cfvalue\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        // \u5c06\u63a5\u6536\u65b9\u8d26\u6237\u4f59\u989d\u52a0value\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        //\u901a\u77e5\u5ba2\u6237\u7aef\u4ea4\u6613\u53d1\u751f Transfer(_from, _to, _value);\r\n        emit Transfer(_from, _to, _value);\r\n        // \u7528assert\u6765\u68c0\u67e5\u4ee3\u7801\u903b\u8f91,\u5373\u4ea4\u6613\u524d\u540e\u53cc\u53d1\u8d26\u6237\u4f59\u989d\u7684\u548c\u5e94\u8be5\u662f\u76f8\u540c\u7684\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    /**\r\n     * Transfer tokens\r\n     *\r\n     * @dev \u4ece\u5408\u7ea6\u521b\u5efa\u4ea4\u6613\u8005\u8d26\u53f7\u53d1\u9001`_value`\u4e2a\u4ee3\u5e01\u5230 `_to`\u8d26\u53f7\r\n     *\r\n     * @param _to \u63a5\u6536\u8005\u5730\u5740\r\n     * @param _value \u8f6c\u79fb\u6570\u989d\r\n     */\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        //_from\u59cb\u7ec8\u662f\u5408\u7ea6\u521b\u5efa\u8005\u7684\u5730\u5740 _transfer(msg.sender, _to, _value); }\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u6279\u91cf\u8f6c\u8d26\u56fa\u5b9a\u91d1\u989d\r\n     */\r\n    function batchTransfer(address[] _to, uint _value) public returns (bool success) {\r\n        require(_to.length > 0 && _to.length <= 20);\r\n        for (uint i = 0; i < _to.length; i++) {\r\n            _transfer(msg.sender, _to[i], _value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Transfer tokens from other address\r\n     *\r\n     * Send `_value` tokens to `_to` in behalf of `_from`\r\n     *\r\n     * @param _from The address of the sender\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        // Check allowance\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u6388\u6743_spender\u5730\u5740\u53ef\u4ee5\u64cd\u4f5cmsg.sender\u8d26\u6237\u4e0b\u6700\u591a\u6570\u91cf\u4e3a_value\u7684token\u3002\r\n     *\r\n     * @param _spender The address authorized to spend\r\n     * @param _value the max amount they can spend\r\n     */\r\n    function approve(address _spender, uint256 _value) public\r\n    returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u8bbe\u7f6e\u5141\u8bb8\u4e00\u4e2a\u5730\u5740\uff08\u5408\u7ea6\uff09\u4ee5\u6211\uff08\u521b\u5efa\u4ea4\u6613\u8005\uff09\u7684\u540d\u4e49\u53ef\u6700\u591a\u82b1\u8d39\u7684\u4ee3\u5e01\u6570\r\n     *\r\n     * @param _spender \u88ab\u6388\u6743\u7684\u5730\u5740\uff08\u5408\u7ea6\uff09\r\n     * @param _value \u6700\u5927\u53ef\u82b1\u8d39\u4ee3\u5e01\u6570\r\n     * @param _extraData \u53d1\u9001\u7ed9\u5408\u7ea6\u7684\u9644\u52a0\u6570\u636e\r\n     */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n    public\r\n    returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            // \u901a\u77e5\u5408\u7ea6\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6bc1\u5408\u7ea6\u8d26\u6237\u4e2d\u6307\u5b9a\u6570\u91cf\u7684\u4ee3\u5e01\r\n     *\r\n     * @param _value \u9500\u6bc1\u7684\u6570\u91cf\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        // \u68c0\u67e5\u5408\u7ea6\u8d26\u6237\u662f\u5426\u6709\u8db3\u591f\u7684\u4ee3\u5e01\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        // \u5c06\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u51cf\u5c11\r\n        totalSupply = totalSupply.sub(_value);\r\n        // \u66f4\u65b0\u603b\u5e01\u6570\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u9500\u6bc1\u7528\u6237\u8d26\u6237\u4e2d\u6307\u5b9a\u4e2a\u4ee3\u5e01\r\n     *\r\n     * @param _from the address of the sender\r\n     * @param _value the amount of money to burn\r\n     */\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        // Check if the targeted balance is enough\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        // Check allowance\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        // Subtract from the targeted balance\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        // Subtract from the sender's allowance\r\n        totalSupply = totalSupply.sub(_value);\r\n        // Update totalSupply\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n}\r\n\r\n/******************************************/\r\n/*       ADVANCED TOKEN STARTS HERE       */\r\n/******************************************/\r\n\r\ncontract HYZToken is Ownable, TokenERC20 {\r\n\r\n    //\u8bbe\u7f6e\u4e70\u5356\u4ef7\u683c\r\n    uint256 public sellPrice;\r\n    uint256 public buyPrice;\r\n\r\n    uint minBalanceForAccounts;\r\n\r\n    mapping(address => bool) public frozenAccount;\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event FrozenFunds(address target, bool frozen);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor (\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) TokenERC20(initialSupply, tokenName, tokenSymbol) public {}\r\n\r\n    /* Internal transfer, only can be called by this contract */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);\r\n        // Prevent transfer to 0x0 address. Use burn() instead\r\n        require(balanceOf[_from] >= _value);\r\n        // Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // Check for overflows\r\n        require(!frozenAccount[_from]);\r\n        // \u68c0\u67e5\u53d1\u9001\u4eba\u8d26\u53f7\u662f\u5426\u88ab\u51bb\u7ed3\r\n        require(!frozenAccount[_to]);\r\n        // \u68c0\u67e5\u63a5\u6536\u4eba\u8d26\u53f7\u662f\u5426\u88ab\u51bb\u7ed3\r\n\r\n        if (msg.sender.balance < minBalanceForAccounts)\r\n            sell((minBalanceForAccounts - msg.sender.balance) / sellPrice);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        // Subtract from the sender\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        // Add the same to the recipient\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    /// \u7ed9\u6307\u5b9a\u7684\u8d26\u6237\u589e\u52a0\u4ee3\u5e01\uff0c\u540c\u65f6\u589e\u52a0\u603b\u4f9b\u5e94\u91cf\uff0c\u53ea\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u53ef\u8c03\u7528\r\n    /// @notice \u521b\u5efa`mintedAmount`\u6807\u8bb0\u5e76\u5c06\u5176\u53d1\u9001\u5230`target`\r\n    /// @param target \u76ee\u6807\u5730\u5740\u53ef\u4ee5\u6536\u5230\u589e\u53d1\u7684token\uff0c\u540c\u65f6\u53d1\u5e01\u603b\u6570\u589e\u52a0\r\n    /// @param mintedAmount \u589e\u53d1\u7684\u6570\u91cf \u5355\u4f4d\u4e3awei\r\n    function mintToken(address target, uint256 mintedAmount) onlyOwner public {\r\n        balanceOf[target] = balanceOf[target].add(mintedAmount);\r\n        totalSupply = totalSupply.add(mintedAmount);\r\n        emit Transfer(0, this, mintedAmount);\r\n        emit Transfer(this, target, mintedAmount);\r\n    }\r\n\r\n    /// \u8d44\u4ea7\u51bb\u7ed3\r\n    /// @notice `freeze? Prevent | Allow` `target` from sending & receiving tokens\r\n    /// @param target \u76ee\u6807\u51bb\u7ed3\u7684\u8d26\u6237\u5730\u5740\r\n    /// @param freeze \u662f\u5426\u51bb\u7ed3 true|false\r\n    function freezeAccount(address target, bool freeze) onlyOwner public {\r\n        frozenAccount[target] = freeze;\r\n        emit FrozenFunds(target, freeze);\r\n    }\r\n\r\n    /// \u4ee3\u5e01\u4e70\u5356\uff08\u5151\u6362\uff09\u53ea\u6709\u5408\u7ea6\u90e8\u7f72\u8005\u53ef\u8c03\u7528\r\n    /// \u6ce8\u610f\u4e70\u5356\u7684\u4ef7\u683c\u5355\u4f4d\u662fwei\uff08\u6700\u5c0f\u7684\u8d27\u5e01\u5355\u4f4d\uff1a 1 eth = 1000000000000000000 wei)\r\n    /// @notice Allow users to buy tokens for `newBuyPrice` eth and sell tokens for `newSellPrice` eth\r\n    /// @param newSellPrice Price the users can sell to the contract\r\n    /// @param newBuyPrice Price users can buy from the contract\r\n    /**\r\n    \u8fd9\u4e2a\u51fd\u6570\u662f\u8bbe\u7f6e\u4ee3\u5e01\u7684\u6c47\u7387\u3002\u5305\u62ec\u8d2d\u4e70\u6c47\u7387buyPrice\uff0c\u51fa\u552e\u6c47\u7387sellPrice\u3002\u6211\u4eec\u5728\u5b9e\u9a8c\u65f6\uff0c\u4e3a\u4e86\u7b80\u5355\uff0c\u8bbe\u7f6ebuyPrice=sellPrice=0.01ETH\u3002\u5f53\u7136\u8fd9\u4e2a\u6bd4\u4f8b\u662f\u81ea\u7531\u8bbe\u5b9a\u7684\u3002\u5728\u5b9e\u9645\u4e2d\uff0c\u4f60\u53ef\u4ee5\u8bbe\u8ba1\u4e70\u5165\u4ee3\u5e01buyPrice\u7684\u4ef7\u683c\u662f1ETH\uff0c\u5356\u51fa\u4ee3\u5e01sellPrice\u7684\u4ef7\u683c\u662f0.8ETH\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u4ee3\u5e01\u7684\u6d41\u5165\u6d41\u51fa\uff0c\u4f60\u53ef\u4ee5\u6536\u53d60.2ETH\u7684\u4ea4\u6613\u8d39\u3002\u662f\u4e0d\u662f\u5f88\u6fc0\u52a8\uff0c\u524d\u63d0\u662f\u4f60\u8981\u5ffd\u60a0\u5927\u5bb6\u7528\u4f60\u7684\u4ee3\u5e01\u30020.01eth = 10**16\r\n    */\r\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {\r\n        sellPrice = newSellPrice;\r\n        buyPrice = newBuyPrice;\r\n    }\r\n\r\n    /// \u4ece\u5408\u7ea6\u8d2d\u4e70\u8d27\u5e01\u7684\u51fd\u6570\r\n    // \u8fd9\u4e2avalue\u662f\u7528\u6237\u8f93\u5165\u7684\u8d2d\u4e70\u4ee3\u5e01\u652f\u4ed8\u7684\u4ee5\u592a\u5e01\u6570\u76ee\u3002amount\u662f\u6839\u636e\u6c47\u7387\u7b97\u51fa\u6765\u7684\u4ee3\u5e01\u6570\u76ee\r\n    function buy() payable public {\r\n        uint amount = msg.value.div(buyPrice);\r\n        // \u8ba1\u7b97\u6570\u91cf\r\n        _transfer(this, msg.sender, amount);\r\n        // makes the transfers\r\n    }\r\n\r\n    /// \u5411\u5408\u7ea6\u51fa\u552e\u8d27\u5e01\u7684\u51fd\u6570\r\n    /// @param amount amount of tokens to be sold\r\n    function sell(uint256 amount) public {\r\n        address myAddress = this;\r\n        require(myAddress.balance >= amount * sellPrice);\r\n        // \u68c0\u67e5\u5408\u7ea6\u662f\u5426\u6709\u8db3\u591f\u7684\u4ee5\u592a\u5e01\u53bb\u8d2d\u4e70\r\n        _transfer(msg.sender, this, amount);\r\n        // makes the transfers\r\n        msg.sender.transfer(amount.mul(sellPrice));\r\n        // \u53d1\u9001\u4ee5\u592a\u5e01\u7ed9\u5356\u5bb6. \u6700\u540e\u505a\u8fd9\u4ef6\u4e8b\u5f88\u91cd\u8981\uff0c\u4ee5\u907f\u514d\u9012\u5f52\u653b\u51fb\r\n    }\r\n\r\n    /* \u8bbe\u7f6e\u81ea\u52a8\u8865\u5145gas\u7684\u9608\u503c\u4fe1\u606f */\r\n    function setMinBalance(uint minimumBalanceInFinney) onlyOwner public {\r\n        minBalanceForAccounts = minimumBalanceInFinney * 1 finney;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minimumBalanceInFinney\",\"type\":\"uint256\"}],\"name\":\"setMinBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "ContractName": "HYZToken", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000b2d05e00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000348595a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e282a50000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://ef23232a38eb85bbfa0c917c814f435a2c02382fc3422efa2b458cb177fd8034"}]}