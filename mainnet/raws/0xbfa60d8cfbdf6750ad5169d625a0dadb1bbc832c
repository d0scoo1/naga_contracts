{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ZPhotoS.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Photos Sold\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                            //\\n//                                                                                                            //\\n//                                                                                                            //\\n//    GGPPBBBPPGP@@@@@@@@@@@@@@@@@@&YGY5PBGPJ5Y5@@&JPJYPBG5J55Y@@&JPYYPGG555P5@@@@@@@@@@@@@@@@@@#YG5P5PPP5    //\\n//    5P5YGBG5YPY5@@@@@@@@@@@@@@@@@@YY5JY55JJYY7@@&75JJYG5J7Y?Y@@B!P?JYG5Y?PJG@@@@@@@@@@@@@@@@@&5P55P#BPYP    //\\n//    &YPGYYPYY5GJB@@@@@@@@@@@@@@@@@G?GJ7?5!?Y5!&@&7YY7!5?7JP75@@P!PJ??57?5P?&@@@@@@@@@@@@@@@@@PYGYY55JPP5    //\\n//    @&B#BB##BB###@@@@@@@@@@@@@@@@@&#&BB#&BBB#B@@@##BBB&#BB#B&@@#B#GBB#BBB##@@@@@@@@@@@@@@@@@&P#GGG#GGG#G    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    G@@G5G5YGP55B5&@@@@@@@@@@@@@@@@PYP??5Y?JG?B@@YY5??P?7?P7#@&JPY??PJJYPY&@@@@@@@@@@@@@@@@PGGPP#PPGBG@@    //\\n//    ?B@&J55JJ57Y5YJ@@@@@@@@@@@@@@@@G~57!7J!7Y^5@@7!J7~J!!7J:#@#^J77~Y!7J??@@@@@@@@@@@@@@@@B7P5?JJ7?5?P@@    //\\n//    5Y&@#JPJYBBY?5?B@@@@@@@@@@@@@@@&75!?PGY!J?Y@@J??!YG57!Y!&@B!Y!?PGJ!Y?G@@@@@@@@@@@@@@@@Y5YYGBYJYYY@@G    //\\n//    J??@@Y?YJ75??YJ?@@@@@@@@@@@@@@@@!?J7^J~!J!7@@?~J!^J!!??~@@5^Y!~?!!?Y~#@@@@@@@@@@@@@@@P?5??5JYJYJ@@G?    //\\n//    ?5JB@&JGYJ5PJYGY#@@@@@@@@@@@@@@@G5PJJGYJ5P5@@GYPJJGYJ5PY@@GYPJJPJ?YP5@@@@@@@@@@@@@@@@5P5Y5PJJGYB@&YP    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@&@    //\\n//    GPGBG@@GGG5PBP5BP&@@@@@@@@@@@@@@&5GYYP5YYG5@@B5PJYGYYPPG@@5G5Y5GYYG5&@@@@@@@@@@@@@@@G#GG#BBB##@@####    //\\n//    Y!?57#@G~Y7~J~7Y75@@@@@@@@@@@@@@&~?7^!7^7J:&@5^J~:?^!J~J@&^?7~!!^!J^&@@@@@@@@@@@@@@P!57~Y!7Y?5@&!Y!^    //\\n//    GP?7JY@@?Y77PP?!J7@@@@@@@@@@@@@@@??~~YP7^?~#@P!?~JGJ~7!5@&~J^7P5!~J7@@@@@@@@@@@@@@@?J!?5P?7Y7&@Y7!7?    //\\n//    J5??Y!G@G!Y?!Y!!J^G@@@@@@@@@@@@@@J~7~~?~!J:B@P^?!~J~!?^5@#:J!~?!!77J@@@@@@@@@@@@@@B^J!75?7?!P@B!Y77P    //\\n//    ?YY?Y5Y@@J5?!Y?7YY5@@@@@@@@@@@@@@BJ57?57?5?#@BJP?7P??PJB@#?5?75775JG@@@@@@@@@@@@@@57J!7J~757&@YJJ!?J    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@#&##&#    //\\n//    #GB#GGBB@@GBP5BP5GP#@@@@@@@@@@@@@@PG5YG5YPP#@&PG55G55GP&@#PG5PG55GP@@@@@@@@@@@@@@&BBBB#BB##@@#&##&&#    //\\n//    5?!J^!Y7&@?77^!!^?!J@@@@@@@@@@@@@@~?!^7^~?^5@B^J~:?:~J:B@Y~?~^7:!?~@@@@@@@@@@@@@@J!?^!7^77J@&!5!~J!7    //\\n//    J?755!!7P@G!7~JP7~?7@@@@@@@@@@@@@@7?^!5Y~!!Y@B^7^?P?^?~#@J!~~YY~^77@@@@@@@@@@@@@@~7^7Y7^7^G@5!77YY!!    //\\n//    7Y??Y~!?!@@~?!~J!!J^#@@@@@@@@@@@@@?!!~!!~7~J@B:?~^?~~?:&@?!!~7!~7!J@@@@@@@@@@@@@B^?~!Y!~7~@@!?!75J~?    //\\n//    Y5J7577Y?#@5YJ7YJ?5JB@@@@@@@@@@@@@PYY7JJ7JY5@#?5775775?&@YYJ!J?!YJG@@@@@@@@@@@@@P7J!7?~J?5@B7Y!7J^?J    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@&&#&&##&    //\\n//    @BBPPBPPBG@&PG5PG55GP@@@@@@@@@@@@@#5PY5PY5PG@&5GY5GY5GP@@PG55G55GP&@@@@@@@@@@@@@GBPGBGG#B@@B#BB#B##&    //\\n//    @YJJ!J~7Y!&@!J!~?^7J~@@@@@@@@@@@@@B^?~^!^!7!@#^?~^7:!?~@@~?!^?^~?^&@@@@@@@@@@@@#~J!~?~???@#!Y!!J!J?P    //\\n//    @G77!55~7!B@J7~7PJ~?~#@@@@@@@@@@@@#~7^?5!^77@#~7^?57:7!@&~7^?P7^7!@@@@@@@@@@@@@G~!~YY!!!5@P!!75Y!?7#    //\\n//    @#~?~~?~7~Y@P~7~7!~?^G@@@@@@@@@@@@#:7~^7^!!!@&:7~^7^~7~@&^?~^7^~7~@@@@@@@@@@@@@Y~7^7!!7^B@77!~Y77?7@    //\\n//    @@5PJJPJY5P@#Y5?Y5?5YB@@@@@@@@@@@@&J5??5?J5Y@&J5??5??5Y@&J5??5?J55@@@@@@@@@@@@@YYJ7Y775?@@J577Y7JY5@    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    B@BPPYP5JP5@@Y5JJ5?Y5P@@@@@@@@@@@@@YPJJ5?JP5@&YPJJ5?J55@&Y5?YPJY5G@@@@@@@@@@@@@5GYYGY5PG@#PP5GP5GP@@    //\\n//    J@B!J7?!~?^#@~7~^?^!77@@@@@@@@@@@@@~7~^5J~7~@&^?~^7^!!7@B^7~~7^7!Y@@@@@@@@@@@@&^?~^7^7!Y@5!7^7~!J!@@    //\\n//    J@&?J75P~!!B@J7~7P?^77@@@@@@@@@@@@@77^7BJ^7!@&~7^?P7^7?@B~!^J5!~!5@@@@@@@@@@@@#~7^Y5!!!G@J7~?P?~??@#    //\\n//    7&@?Y?7?~?~P@Y7?~?~!J~@@@@@@@@@@@@@7?!^7^!?!@&^?~^7^77?@B^?~~!^7~5@@@@@@@@@@@@G^?~!7~?~B@7?7~?!??Y@G    //\\n//    G&@BBPGB5PP#@#GGPBP5BG@@@@@@@@@@@@@GG5YGY5GP@@PGY5GY5PG@&5PY5PY5PB@@@@@@@@@@@@#Y5J55YP5&@5PYYPY5PB@G    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    P&@P5J?Y7?Y5@#5PYP55GP@@@@@@@@@@@@@PPY?5JYP5@&7J!7Y!?J5@#PPYP5JP5#@@@@@@@@@@@@BPPYG5YGP@&Y5?Y5YPY#@G    //\\n//    5#@GGGPGPPPG@#5P5P55GY&@@@@@@@@@@@@55YYPJY5Y@&YP55P5P5G@#5P5P55P5#@@@@@@@@@@@@G5PYPYY5Y@&YP55P5G5#@5    //\\n//    #@@&&&&&&#&&@&###&&B##@@@@@@@@@@@@@&BB#&#B#B@@&#&&&###&@&###&&B##&@@@@@@@@@@@@&###&#B#B@@###&&#&#&@#    //\\n//    B&@#BBGBGPGB@&#B#B#G#G@@@@@@@@@@@@@#BBPBGG#G@&GPG5B5GGG@&#BBG#G#G&@@@@@@@@@@@@&B#G#B##B@@BBBG#G#G&@&    //\\n//    &@@&&&&&&#&&@@@&@&@&&&@@@@@@@@@@@@@@&&#&&&&&@@#B#B&B###@@&#&&&#&&@@@@@@@@@@@@@@&&&&&&&&@@&&##&#&#@@&    //\\n//    #@@&&#&&#&&&@&&&&&&#&&@@@@@@@@@@@@@&&&&&&&&&@@&@&&@&&@@@@&&&&&&&&@@@@@@@@@@@@@@@&&@@&@@@@@@&@@&&@@@@    //\\n//    ?&@J5J?J7Y?G@5JJ!Y7?Y?@@@@@@@@@@@@@?J7~J~7J?@&7Y77J!JJ5@G7Y!?7~Y?B@@@@@@@@@@@@GJY7YJJ5J@@J5??Y?5JB@P    //\\n//    ?@&7J7YY!7~G@?7!?57~77@@@@@@@@@@@@@~7~!J~~!!@#^7~7J!!!J@G~!~??~!~G@@@@@@@@@@@@P!7!YJ7J!&@7J!75??7P@P    //\\n//    J@B!J!??~7^#@!7~!Y!~!7@@@@@@@@@@@@@~7^!Y!^!!@#^7^?Y!~!J@G~7~JJ~!~P@@@@@@@@@@@@G~7!YY!?!#@??!?577?Y@G    //\\n//    G@BJY!J7!Y7&@7Y!~J~??Y@@@@@@@@@@@@&!J~^?^!?7@#~J~~7^?7Y@G!J~!!^?!P@@@@@@@@@@@@B!J~7?!J7G@YJ?~J!7JJ@#    //\\n//    @@@@@@@@@@@@@@@&&@&&&&@@@@@@@@@@@@@&&##&####@@##B#&###&@&########&@@@@@@@@@@@@@####&##&@@&&#&&&&&&@@    //\\n//    @@GBPGBPGB#@&GBGBBGBB&@@@@@@@@@@@@@##B##BB#&@&##B#####&@&##B##B##&@@@@@@@@@@@@@####&###&@&##B##B#B@@    //\\n//    @&?Y!!?~?!5@5!?^7!!J~#@@@@@@@@@@@@B~J~~7^77J@B~J^~7^?7Y@B~J~~7^?75@@@@@@@@@@@@@7Y7!J!?J?@#7Y!7?!Y7B@    //\\n//    @BJ?75Y~7~B@J7~7PJ!?~&@@@@@@@@@@@@G~!~?Y~~!J@G^!^?Y~~!J@B^7~?Y!~7J@@@@@@@@@@@@@7?!7PJ!?!@&7?!JP?7JP@    //\\n//    @Y??!J~~7~&@~?!!J!!?!@@@@@@@@@@@@@P~7~7?~!~Y@G^7~7J~!!J@B^7~7J~!7?@@@@@@@@@@@@@J777Y?7J!#@??77Y77Y?@    //\\n//    @PGYY57?5Y@&JP??57J55@@@@@@@@@@@@@P?J~77~J7P@G7J~7J~?JY@#7Y!!J~?JJ@@@@@@@@@@@@@P?Y7JJ75JB@PYY75JJPY&    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@@@&&&@@&&@@@@&&&&@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    5G5YGYYG5@@PG5YG55GP&@@@@@@@@@@@@@BBGPBGGBG&@#BBGBBGGB#@@BBGB#GG#B@@@@@@@@@@@@@@B#GGBGPBG@@BBGPBPPBG    //\\n//    !J7!J~7??@&~J7^?~7J~@@@@@@@@@@@@@@~?!:7^~J^B@Y!?^!!^?7J@#~Y!^?^!Y!&@@@@@@@@@@@@@7J7~J~7Y!#@J?J!J7?57    //\\n//    J7?P5~7!P@P!7!5P!!?J@@@@@@@@@@@@@&~?^75?^7^B@J!~~YY!~7?@&~?^?P?~J!#@@@@@@@@@@@@@Y?7755777P@G7J75GJ?Y    //\\n//    577?:~?^&@!?7^?!!?~P@@@@@@@@@@@@@B:?~~J~~?:#@?!!~7?~!!7@&^7~!J7!J~B@@@@@@@@@@@@@G!J77J!7?7@@7J?7Y??5    //\\n//    P5P5?Y5P@&JPJ?5??PJ&@@@@@@@@@@@@@G7Y!!J~7Y!&@JJ?~??~?J?@&7Y7~Y7!Y?G@@@@@@@@@@@@@&JP??5??5J&@P55J55Y5    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    J5YJYPP@@5GYYG5YGP#@@@@@@@@@@@@@@BBGPGBPGBG@@BBGGBBGGBB@@BBGGBBGGBB@@@@@@@@@@@@@@&BBGGBPPBP@@BGGPGBP    //\\n//    !J!!J~B@P!J!~J!!J^#@@@@@@@@@@@@@@!J7^!~^7?!@@!?7^77~??!@@7??~!7^7Y!@@@@@@@@@@@@@@#75J?Y~7Y!G@B75??Y?    //\\n//    GP77JJ@@?J!?P5!!??@@@@@@@@@@@@@@&~?^75Y!!7?@@!?~7557!J!@@J?77YP?!J7&@@@@@@@@@@@@@@Y5JJGGJ7YJ@@YY?JGB    //\\n//    J~?J!B@5~J7!?^~?:P@@@@@@@@@@@@@@G^J~~J!!7~?@@^?!!??!~?^&@J~7!7Y!!J~G@@@@@@@@@@@@@@G7YJ?5??57G@#7YJ?5    //\\n//    YJ5PP@@Y5Y?JJ!75?@@@@@@@@@@@@@@@P7Y!~Y~!Y75@&!Y7~??~7Y!&@57Y!!Y!7Y?P@@@@@@@@@@@@@@&YGYJ5YJ5P5@@PP5J5    //\\n//    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@&&&&@@@&&&&&&&&&&@@&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    5GP&@&PBPPBBGG#G@@@@@@@@@@@@@@@@#&B#####&#@@&#&##&###&#@@&#&##&##B&#@@@@@@@@@@@@@@@@#&#B####&B@@&B#B    //\\n//    YJY@@YJ5?757?575@@@@@@@@@@@@@@@#7P?!J?7JP7&@G~57~J7!?Y!&@B!5J7Y?!?57#@@@@@@@@@@@@@@@5Y5JJPJ5G5G@@5PP    //\\n//    PY&@BJ5?5GPJJ57&@@@@@@@@@@@@@@@P?Y?JPY?75!&@G~J7?5Y?7Y!#@#!5?J5PJ?Y7B@@@@@@@@@@@@@@@#JPJYGGPYP5&@#5G    //\\n//    ?#@#75YJYY?JY?P@@@@@@@@@@@@@@@@JYJ?JPY??J7@@P!Y7JPY?!Y!B@&?5?Y5GJ?YY5@@@@@@@@@@@@@@@@PY55PG555PY@@BJ    //\\n//    B@@555J?P?755J@@@@@@@@@@@@@@@@&7PJ775!75J?@@575?7Y?~75~G@@J55?757?55J@@@@@@@@@@@@@@@@&YGPYYPY5GPG@@G    //\\n//    @@@&@&&&&&&&&&@@@@@@@@@@@@@@@@&B&BB##BB###@@#B#GB#BGG#B&@@###BB#BBB#B@@@@@@@@@@@@@@@@@&&&##&&&&&&@@@    //\\n//    @&&&&&@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    //\\n//    #YG5JJPYYPG5&@@@@@@@@@@@@@@@@#JGJ7?P?JJP?#@@5PPJYGPYYGYB@@G5GYYPGYYPPP@@@@@@@@@@@@@@@@@#PBGPGBPPBBG@    //\\n//    YP5PYGP5YGJB@@@@@@@@@@@@@@@@@575??7Y7JYY!&@&?55Y?PYYYP?P@@G7PYJJPJYYPJ&@@@@@@@@@@@@@@@@@PPBPPBGGGBGG    //\\n//    #BB#&&BGBBB@@@@@@@@@@@@@@@@@@GGG5G##G5GGP@@&5BPPB&#G5BPB@@#5B5PB&#PPBP&@@@@@@@@@@@@@@@@@&B#BB#@&BB#B    //\\n//                                                                                                            //\\n//                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract ZPhotoS is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Photos Sold\\\", \\\"ZPhotoS\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ZPhotoS", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}