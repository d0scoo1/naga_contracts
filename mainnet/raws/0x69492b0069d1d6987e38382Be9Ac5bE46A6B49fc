{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"WithdrawSplitter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\ncontract WithdrawSplitter {\\n    address public constant ukraineAddress = 0x165CD37b4C644C2921454429E7F9358d18A45e14;\\n    address public immutable otherAddress; // other address for withdrawal (for example, for artists)\\n\\n    // proportions:\\n    uint16 public immutable ukrainePart;\\n    uint16 public immutable otherPart;\\n\\n    constructor(address receiver_, uint16 ukrainePart_, uint16 otherPart_) {\\n        otherAddress = receiver_;\\n        ukrainePart = ukrainePart_;\\n        otherPart = otherPart_;\\n    }\\n\\n    fallback() external payable { }\\n\\n    receive() external payable { }\\n\\n    // anybody - withdraw contract balance to ukraineAddress and otherAddress\\n    function withdraw() external {\\n        uint256 currentBalance = address(this).balance;\\n        uint256 totalPart = ukrainePart + otherPart;\\n\\n        // amount is divided according to the given proportions\\n        uint256 ukraineAmount = currentBalance * ukrainePart / totalPart;\\n        uint256 otherAmount = currentBalance * otherPart / totalPart;\\n\\n        payable(ukraineAddress).transfer(ukraineAmount);\\n        payable(otherAddress).transfer(otherAmount);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"libraries\": {\r\n      \"WithdrawSplitter.sol\": {}\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver_\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"ukrainePart_\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"otherPart_\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"otherAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherPart\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ukraineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ukrainePart\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "WithdrawSplitter", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000c9ff692dad2553bad91d2d73ebb6194600b2bef00000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000023", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}