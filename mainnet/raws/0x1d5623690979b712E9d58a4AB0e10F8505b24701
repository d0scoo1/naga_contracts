{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/otherside/Sender.sol\": {\r\n      \"content\": \"pragma solidity >=0.7.0 <0.9.0;\\n\\ninterface Sale {\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n  function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n  function safeTransferFrom(\\n    address from,\\n    address to,\\n    uint256 tokenId\\n  ) external;\\n}\\n\\ninterface Token {\\n  function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n}\\n\\ncontract Sender {\\n  address public land;\\n  address public token;\\n\\n  constructor(address _land, address _token) {\\n    land = _land;\\n    token = _token;\\n  }\\n\\n  function transferIn(address payable to) payable public {\\n    Token(token).transferFrom(msg.sender, to, 610000000000000000000);\\n    to.transfer(msg.value);\\n  }\\n\\n  function send(address to) payable public {\\n    uint256 bal = Sale(land).balanceOf(msg.sender);\\n    require(bal >= 1);\\n    uint256 tokenInd = Sale(land).tokenOfOwnerByIndex(msg.sender, 0);\\n    for (uint256 i = 0; i < bal; i++) {\\n      Sale(land).safeTransferFrom(msg.sender, to, tokenInd + i);\\n    }\\n    block.coinbase.transfer(msg.value);\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_land\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"land\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferIn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Sender", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000034d85c9cdeb23fa97cb08333b511ac86e1c4e2580000000000000000000000004d224452801aced8b2f0aebe155379bb5d594381", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}