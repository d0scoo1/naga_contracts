{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/PoemSeed.sol\": {\r\n      \"content\": \"pragma solidity 0.8.12;\\n/**\\n@title Poem Seed Contract\\n*/\\ncontract PoemSeed {\\n    /// @notice Collection Owner Address.\\n    address public constant collectionOwner = 0x8ba7E0BE0460035699BAddD1fD1aCCb178702348;\\n    \\n    /// @notice Mapping from nft id to the poem.\\n    mapping(uint => string) poem;\\n\\n    /**\\n     * @notice Constructor\\n     * @param _poems Array of poems to linked with the nft's\\n     */\\n    constructor(string[11] memory _poems) {\\n        for(uint i=0; i<11; i++){\\n            poem[i] = _poems[i];\\n        }\\n    }\\n\\n    /**\\n     * @notice Retreiving the poem by your token id\\n     * @param _id Nft id\\n     */\\n    function getSeedPoemById(uint _id) external view returns(string memory) {\\n        return poem[_id];\\n    }\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string[11]\",\"name\":\"_poems\",\"type\":\"string[11]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"collectionOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getSeedPoemById\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PoemSeed", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000056000000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000000446d6f766520756e646f206b69737320706f636b65742070726976617465206c696e696e6720796f757220746578742049e280996d206d6f766520686964652063757276650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000476e6f7420636f726e65722067726579206c6179657273206861726420736166652063616c6c20686f6c6c6f7720636f6e6e656374207265616368206e6f74207368686868686868000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048746578742073686f756c6465722068657265207369676e616c2073686f636b206d6f76656d656e74206c69676874206e6f74657320776f6d616e20626f6479206d652074686572650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049726561636820646f6f72206865726520616e6f6e796d6f757320746f646179206e6f74696679206d696768742063616c6c206461726b6e6573732071756965742049e280996d207570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000527374696c6c6e65737320736179206e69636b656c20737572652068696464656e2049e280996d20646973636f6e6e656374206c696520616e6f6e796d6f757320626f647920746f756368696e6720756e646f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000526564697420636f726e6572206c657474657273206e756d6265722073686f756c646572206865726520696e76697369626c65207265616368696e6720796f75207365656e207768697370657220676c617373000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000437065656c20736f6674206d6f766520746578742073637265656e2072656163682070726976617465207468657265207369676e616c20746f7563682068696465206e6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004768616e642077686973706572207361666520737572652063616c6c20707265737320796f7572206c696e696e6720756e646f206b697373206c6574746572206d6f76656d656e740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000477072697661746520746f646179207365656e206c6179657273206c696520636f6e6e6563742073686f636b206d69676874206d6f7665206461726b6e657373206e6f2067726964000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041636f726e6572207065656c206461726b206d61736b20757020726561636820676c617373207468657265206e6f7420626f647920686f6c6c6f77206e756d6265720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000436c6f7665206e6f74206d69676874206c6f636b2073686f756c646572206d6f7665207465787420636f6e6e6563742070726573732070726976617465206d6520796f750000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}