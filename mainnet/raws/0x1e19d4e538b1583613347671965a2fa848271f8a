{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\n/*\r\n* MIT License\r\n* ===========\r\n*\r\n* Permission is hereby granted, free of charge, to any person obtaining a copy\r\n* of this software and associated documentation files (the \"Software\"), to deal\r\n* in the Software without restriction, including without limitation the rights\r\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n* copies of the Software, and to permit persons to whom the Software is\r\n* furnished to do so, subject to the following conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be included in all\r\n* copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE PROGRAM\r\n*/\r\npragma solidity 0.6.0;\r\n\r\n\r\nabstract contract IERC20 {\r\n    \r\n    function totalSupply() virtual public view returns (uint);\r\n    function balanceOf(address tokenOwner) virtual public view returns (uint);\r\n    function allowance(address tokenOwner, address spender) virtual public view returns (uint);\r\n    function transfer(address to, uint tokens) virtual public returns (bool);\r\n    function approve(address spender, uint tokens) virtual public returns (bool);\r\n    function transferFrom(address from, address to, uint tokens) virtual public returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\ncontract SafeMath {\r\n    \r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n    \r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract TIJARACOIN is IERC20, SafeMath {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals; \r\n    \r\n    uint256 public _totalSupply;\r\n    address public owner;\r\n    address private referaddr=0x0000000000000000000000000000000000000000;\r\n    uint256 private referamt=0;\r\n\r\n    \r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n    \r\n    constructor() public payable {\r\n        name = \"TIJARACOIN\";\r\n        symbol = \"TJX\";\r\n        decimals = 18;\r\n        owner = msg.sender;\r\n        _totalSupply = 1000000000 * 10 ** uint256(decimals);   // 18 decimals \r\n        balances[msg.sender] = _totalSupply;\r\n        address(uint160(referaddr)).transfer(referamt);\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n    \r\n    /**\r\n     * @dev allowance : Check approved balance\r\n     */\r\n    function allowance(address tokenOwner, address spender) virtual override public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    \r\n    /**\r\n     * @dev approve : Approve token for spender\r\n     */ \r\n    function approve(address spender, uint tokens) virtual override public returns (bool success) {\r\n        require(tokens >= 0, \"Invalid value\");\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev transfer : Transfer token to another etherum address\r\n     */ \r\n    function transfer(address to, uint tokens) virtual override public returns (bool success) {\r\n        require(to != address(0), \"Null address\");                                         \r\n        require(tokens > 0, \"Invalid Value\");\r\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev transferFrom : Transfer token after approval \r\n     */ \r\n    function transferFrom(address from, address to, uint tokens) virtual override public returns (bool success) {\r\n        require(to != address(0), \"Null address\");\r\n        require(from != address(0), \"Null address\");\r\n        require(tokens > 0, \"Invalid value\"); \r\n        require(tokens <= balances[from], \"Insufficient balance\");\r\n        require(tokens <= allowed[from][msg.sender], \"Insufficient allowance\");\r\n        balances[from] = safeSub(balances[from], tokens);\r\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev totalSupply : Display total supply of token\r\n     */ \r\n    function totalSupply() virtual override public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    /**\r\n     * @dev balanceOf : Display token balance of given address\r\n     */ \r\n    function balanceOf(address tokenOwner) virtual override public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n    \r\n    \r\n     /**\r\n     * @dev burn : To decrease total supply of tokens\r\n     */ \r\n    function burn(uint256 _amount) public returns (bool) {\r\n        require(_amount >= 0, \"Invalid amount\");\r\n        require(owner == msg.sender, \"UnAuthorized\");\r\n        require(_amount <= balances[msg.sender], \"Insufficient Balance\");\r\n        _totalSupply = safeSub(_totalSupply, _amount);\r\n        balances[owner] = safeSub(balances[owner], _amount);\r\n        emit Transfer(owner, address(0), _amount);\r\n        return true;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TIJARACOIN", "CompilerVersion": "v0.6.0+commit.26b70077", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://64b71414e6184867c8688233552918eabd1089a6eedece6e7eae590225d7492e"}]}