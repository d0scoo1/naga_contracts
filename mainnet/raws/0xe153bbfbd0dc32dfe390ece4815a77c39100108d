{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.23;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// Borrowed from MiniMeToken\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 Token, with the addition of symbol, name and decimals and a\r\n// fixed supply\r\n// ----------------------------------------------------------------------------\r\ncontract BTYCToken is ERC20Interface, Owned {\r\n     using SafeMath for uint;\r\n    /*\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint _totalSupply;*/\r\n\r\n    uint256 public sellPrice; //\u51fa\u552e\u4ef7\u683c 1\u679a\u4ee3\u5e01\u6362\u591a\u5c11\u4ee5\u592a /1000\r\n\tuint256 public buyPrice; //\u8d2d\u4e70\u4ef7\u683c \u591a\u5c11\u4ee5\u592a\u53ef\u8d2d\u4e701\u679a\u4ee3\u5e01 /1000\r\n\tuint256 public sysPrice; //\u6316\u77ff\u7684\u8861\u91cf\u503c\r\n\tuint256 public sysPer; //\u6316\u77ff\u7684\u589e\u91cf\u767e\u5206\u6bd4 /100\r\n\t\r\n\tuint256 public onceOuttime; //\u589e\u91cf\u7684\u65f6\u95f4 \u6d4b\u8bd5  \r\n\tuint256 public onceAddTime; //\u6316\u77ff\u7684\u65f6\u95f4 \u6d4b\u8bd5\r\n\tuint256 public onceoutTimePer; //\u589e\u91cf\u7684\u767e\u5206\u6bd4 \u6d4b\u8bd5\r\n\t\r\n\t\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    /* \u51bb\u7ed3\u8d26\u6237 */\r\n\tmapping(address => bool) public frozenAccount;\r\n\t// \u8bb0\u5f55\u5404\u4e2a\u8d26\u6237\u7684\u51bb\u7ed3\u6570\u76ee\r\n\t//mapping(address => uint256) public freezeOf;\r\n\t// \u8bb0\u5f55\u5404\u4e2a\u8d26\u6237\u7684\u53ef\u7528\u6570\u76ee\r\n\tmapping(address => uint256) public canOf;\r\n\t// \u8bb0\u5f55\u5404\u4e2a\u8d26\u6237\u7684\u91ca\u653e\u65f6\u95f4\r\n\tmapping(address => uint) public cronoutOf;\r\n\t// \u8bb0\u5f55\u5404\u4e2a\u8d26\u6237\u7684\u589e\u91cf\u65f6\u95f4\r\n\tmapping(address => uint) public cronaddOf;\r\n\t\r\n\t /* \u901a\u77e5 */\r\n\tevent FrozenFunds(address target, bool frozen);\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    constructor() public{\r\n       \r\n        \r\n        sellPrice = 510; //\u51fa\u552e\u4ef7\u683c 1\u679a\u4ee3\u5e01\u6362\u591a\u5c11\u4ee5\u592a /1000000\r\n    \tbuyPrice =  526; //\u8d2d\u4e70\u4ef7\u683c \u591a\u5c11\u4ee5\u592a\u53ef\u8d2d\u4e701\u679a\u4ee3\u5e01 /1000000\r\n    \tsysPrice = 766; //\u6316\u77ff\u7684\u8861\u91cf\u503c\r\n    \tsysPer = 225; //\u6316\u77ff\u7684\u589e\u91cf\u767e\u5206\u6bd4 /100\r\n    \t\r\n    \t//onceOuttime = 86400; //\u589e\u91cf\u7684\u65f6\u95f4 \u6b63\u5f0f \r\n    \t//onceAddTime = 864000; //\u6316\u77ff\u7684\u65f6\u95f4 \u6b63\u5f0f\r\n    \t//onceoutTimePer = 8640000; //\u589e\u91cf\u7684\u767e\u5206\u6bd4 \u6b63\u5f0f\r\n    \t\r\n    \tonceOuttime = 600; //\u589e\u91cf\u7684\u65f6\u95f4 \u6d4b\u8bd5  \r\n    \tonceAddTime = 1800; //\u6316\u77ff\u7684\u65f6\u95f4 \u6d4b\u8bd5\r\n    \tonceoutTimePer = 60000; //\u589e\u91cf\u7684\u767e\u5206\u6bd4 \u6d4b\u8bd5\r\n\t\r\n\t\r\n        \r\n       \r\n    }\r\n\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get the token balance for account `tokenOwner`\r\n    // ------------------------------------------------------------------------\r\n    \r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n    \r\n    function canuseOf(address tokenOwner) public view returns (uint balance) {\r\n        return canOf[tokenOwner];\r\n    }\r\n    function myuseOf(address tokenOwner) public returns (uint balance) {\r\n        //return balances[tokenOwner];\r\n        if(cronoutOf[tokenOwner] < 1) {\r\n\t\t\treturn 0;\r\n\t\t}else{\r\n\t\t    uint lefttimes = now - cronoutOf[tokenOwner];\r\n    \t\tif(lefttimes >= onceOuttime) {\r\n    \t\t\tuint leftpers = lefttimes / onceoutTimePer;\r\n    \t\t\tif(leftpers > 1) {\r\n    \t\t\t\tleftpers = 1;\r\n    \t\t\t}\r\n    \t\t\tcanOf[tokenOwner] = balances[tokenOwner] * leftpers;\r\n    \t\t\treturn canOf[tokenOwner];\r\n    \t\t}else{\r\n    \t\t    return canOf[tokenOwner];\r\n    \t\t}\r\n\t\t}\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Transfer the balance from token owner's account to `to` account\r\n    // - Owner's account must have sufficient balance to transfer\r\n    // - 0 value transfers are allowed\r\n    // ------------------------------------------------------------------------\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        require(!frozenAccount[msg.sender]);\r\n        require(!frozenAccount[to]);\r\n        canOf[msg.sender] = myuseOf(msg.sender);\r\n        canOf[msg.sender] = canOf[msg.sender].sub(tokens);\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n    /*\r\n    function buytoken(address user, uint256 amount) public{\r\n        balances[user] = balances[user].sub(amount);\r\n        //buyeth(amount);\r\n        emit Transfer(address(0), user, amount);\r\n    }*/\r\n    \r\n    // ------------------------------------------------------------------------\r\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\r\n    // from the token owner's account\r\n    //\r\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n    // recommends that there are no checks for the approval double-spend attack\r\n    // as this should be implemented in user interfaces \r\n    // ------------------------------------------------------------------------\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Transfer `tokens` from the `from` account to the `to` account\r\n    // \r\n    // The calling account must already have sufficient tokens approve(...)-d\r\n    // for spending from the `from` account and\r\n    // - From account must have sufficient balance to transfer\r\n    // - Spender must have sufficient allowance to transfer\r\n    // - 0 value transfers are allowed\r\n    // ------------------------------------------------------------------------\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balances[from] = balances[from].sub(tokens);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Returns the amount of tokens approved by the owner that can be\r\n    // transferred to the spender's account\r\n    // ------------------------------------------------------------------------\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\r\n    // from the token owner's account. The `spender` contract function\r\n    // `receiveApproval(...)` is then executed\r\n    // ------------------------------------------------------------------------\r\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n        return true;\r\n    }\r\n\r\n    /// \u5411\u6307\u5b9a\u8d26\u6237\u62e8\u53d1\u8d44\u91d1\r\n\tfunction mintToken(address target, uint256 mintedAmount) onlyOwner public {\r\n\t\trequire(!frozenAccount[target]);\r\n\t\tif(cronoutOf[target] < 1) {\r\n\t\t    cronoutOf[target] = now + onceOuttime;\r\n\t\t}\r\n\t\tif(cronaddOf[target] < 1) {\r\n\t\t    cronaddOf[target] = now + onceAddTime;\r\n\t\t}\r\n\r\n\t\tbalances[target] += mintedAmount;\r\n\t\tuint256 amounts = mintedAmount / 100;\r\n\t\tcanOf[target] += amounts;\r\n\t\t//emit Transfer(0, this, mintedAmount);\r\n\t\temit Transfer(this, target, mintedAmount);\r\n\r\n\t}\r\n\t//\u7528\u6237\u6bcf\u969410\u5929\u6316\u77ff\u4e00\u6b21\r\n\tfunction mint() public {\r\n\t\trequire(!frozenAccount[msg.sender]);\r\n\t\trequire(cronaddOf[msg.sender] > 0 && now > cronaddOf[msg.sender]);\r\n\t\tuint256 mintAmount = balances[msg.sender] * sysPer / 10000;\r\n\t\tbalances[msg.sender] += mintAmount;\r\n\t\tcronaddOf[msg.sender] = now + onceAddTime;\r\n\t\t//emit Transfer(0, this, mintAmount);\r\n\t\temit Transfer(this, msg.sender, mintAmount);\r\n\r\n\t}\r\n    \r\n\t/// \u51bb\u7ed3 or \u89e3\u51bb\u8d26\u6237\r\n\tfunction freezeAccount(address target, bool freeze) onlyOwner public {\r\n\t\tfrozenAccount[target] = freeze;\r\n\t\temit FrozenFunds(target, freeze);\r\n\t}\r\n\t// \u8bbe\u7f6e\u9500\u552e\u8d2d\u4e70\u4ef7\u683c\r\n\tfunction setPrices( uint256 newBuyPrice, uint256 newSellPrice, uint256 systyPrice, uint256 sysPermit) onlyOwner public {\r\n\t\tbuyPrice = newBuyPrice;\r\n\t\tsellPrice = newSellPrice;\r\n\t\tsysPrice = systyPrice;\r\n\t\tsysPer = sysPermit;\r\n\t}\r\n\t// \u83b7\u53d6\u4ef7\u683c \r\n\tfunction getprice()  public view returns (uint256 bprice,uint256 spice,uint256 sprice,uint256 sper) {\r\n          bprice = buyPrice;\r\n          spice = sellPrice;\r\n          sprice = sysPrice;\r\n          sper = sysPer;\r\n   }\r\n   \r\n\r\n\r\n    \r\n}\r\ncontract BTYC is BTYCToken{\r\n  string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint _totalSupply;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    constructor() public{\r\n        symbol = \"BYTCT\";\r\n        name = \"BYTYCT Coin\";\r\n        decimals = 18;\r\n        _totalSupply = 1000000 * 10**uint(decimals);\r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply.sub(balances[address(0)]);\r\n    }\r\n    function buy(uint money) public payable {\r\n        require(!frozenAccount[msg.sender]);\r\n        uint amount = money / buyPrice;\r\n        balances[msg.sender] += amount;\r\n        msg.sender.transfer(money);\r\n    }\r\n    /*\r\n    function selleth(uint amount) public payable {\r\n        //address user = msg.sender;\r\n        //canOf[user] = myuseOf(user);\r\n        //require(balances[user] >= amount );\r\n        //uint money = amount * sellPrice;\r\n       // balances[msg.sender] += money;\r\n        owner.transfer(amount);\r\n    }*/\r\n    function sell(uint amount)  public returns (bool success){\r\n        //address user = msg.sender;\r\n        //canOf[msg.sender] = myuseOf(msg.sender);\r\n        //require(!frozenAccount[msg.sender]);\r\n        require(canOf[msg.sender] >= amount ); \r\n        balances[msg.sender] -= amount;\r\n        canOf[msg.sender] -= amount;\r\n        uint moneys = amount / sellPrice;\r\n        owner.transfer(moneys);\r\n        //canOf[user] -= amount;\r\n        return true;              \r\n    }\r\n    \r\n\r\n  \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getprice\",\"outputs\":[{\"name\":\"bprice\",\"type\":\"uint256\"},{\"name\":\"spice\",\"type\":\"uint256\"},{\"name\":\"sprice\",\"type\":\"uint256\"},{\"name\":\"sper\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceAddTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"canOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceoutTimePer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sysPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"myuseOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"canuseOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"cronaddOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"cronoutOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBuyPrice\",\"type\":\"uint256\"},{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"systyPrice\",\"type\":\"uint256\"},{\"name\":\"sysPermit\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onceOuttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "BTYC", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://24a9b1f133234795ff6560e82d3ed28db7ef5673448b2e8177bba785360e0110"}]}