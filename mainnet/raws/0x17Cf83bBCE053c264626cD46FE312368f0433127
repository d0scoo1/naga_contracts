{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ProxyReader.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT license\\npragma solidity ^0.8.0;\\n\\nabstract contract StateToken {\\n  function balanceOf(address _owner) external view virtual returns (uint256);\\n}\\n\\nabstract contract CompoundStakingReward {\\n    function calculateSharesValueInState(address user) external view virtual returns (uint256);\\n}\\n\\ncontract ProxyReader {\\n    address constant stateTokenAddr = 0xdC6104b7993e997Ca5f08aCAB7D3AE86E13D20a6;\\n    address constant stakingAddr = 0xBb56Aec363b501Fa4ED406f544A05595Eb67072e;\\n\\n    function balanceOf(address _owner) public view returns (uint256) {\\n        return StateToken(stateTokenAddr).balanceOf(_owner) + 2 * CompoundStakingReward(stakingAddr).calculateSharesValueInState(_owner);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ProxyReader", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}