{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\n//     _   _   _     _      _       _   _                \r\n//    / \\ | |_| |__ | | ___| |_ ___| | | | ___ _ __ ___  \r\n//   / _ \\| __| '_ \\| |/ _ \\ __/ _ \\ |_| |/ _ \\ '__/ _ \\ \r\n//  / ___ \\ |_| | | | |  __/ ||  __/  _  |  __/ | | (_) |\r\n// /_/   \\_\\__|_| |_|_|\\___|\\__\\___|_| |_|\\___|_|  \\___/ \r\n//                                                       \r\n\r\ncontract Verification {\r\n\r\n function recover(bytes32 hash, bytes signature) public pure returns (address)\r\n {\r\n   bytes32 r;\r\n   bytes32 s;\r\n   uint8 v;\r\n\r\n   if (signature.length != 65) {\r\n     return (address(0));\r\n   }\r\n\r\n   assembly {\r\n     r := mload(add(signature, 0x20))\r\n     s := mload(add(signature, 0x40))\r\n     v := byte(0, mload(add(signature, 0x60)))\r\n   }\r\n\r\n   if (v < 27) { v += 27; }\r\n\r\n   if (v != 27 && v != 28) {\r\n     return (address(0));\r\n    } else {\r\n     return ecrecover(hash, v, r, s);\r\n    }\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "Verification", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://3e2ce7ad3cf85a6d9b2a81eafbfae6b7901a45975c932758e69c63d11c258f40"}]}