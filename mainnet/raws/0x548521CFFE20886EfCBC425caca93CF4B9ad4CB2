{"status": "1", "message": "OK", "result": [{"SourceCode": "// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/spell.sol\n// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.5.15 >=0.6.12;\n\n////// lib/tinlake-rpc-tests/lib/tinlake-title/lib/tinlake-auth/src/auth.sol\n// Copyright (C) Centrifuge 2020, based on MakerDAO dss https://github.com/makerdao/dss\n/* pragma solidity >=0.5.15; */\n\ncontract Auth {\n    mapping (address => uint256) public wards;\n    \n    event Rely(address indexed usr);\n    event Deny(address indexed usr);\n\n    function rely(address usr) external auth {\n        wards[usr] = 1;\n        emit Rely(usr);\n    }\n    function deny(address usr) external auth {\n        wards[usr] = 0;\n        emit Deny(usr);\n    }\n\n    modifier auth {\n        require(wards[msg.sender] == 1, \"not-authorized\");\n        _;\n    }\n\n}\n\n////// src/spell.sol\n/* pragma solidity >=0.6.12; */\n/* import \"tinlake-auth/auth.sol\"; */\n// Copyright (C) 2020 Centrifuge\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\ninterface AuthLike {\n    function rely(address) external;\n    function deny(address) external;\n    function wards(address) external returns(uint);\n}\n\ninterface TinlakeRootLike {\n    function relyContract(address, address) external;\n    function denyContract(address, address) external;\n}\n\ninterface FileLike {\n    function file(bytes32, uint) external;\n    function file(bytes32, address) external;\n}\n\ninterface LogLike {\n    function getAddress(bytes32) external returns(address);\n}\n\n// spell to keep the mkr end contract updated\ncontract TinlakeSpell is Auth {\n\n    // spell can be executed anytime as long as it is active\n    bool public active;\n    string constant public description = \"Tinlake MGR spell\";\n\n    // MAINNET ADDRESSES\n    // The contracts in this list should correspond to a tinlake deployment\n    // https://github.com/centrifuge/tinlake-pool-config/blob/master/mainnet-production.json\n\n    address public NS2_MGR = 0x2474F297214E5d96Ba4C81986A9F0e5C260f445D;\n    address public HTC2_MGR = 0xe1ed3F588A98bF8a3744f4BF74Fd8540e81AdE3f;\n    address public CF4_MGR = 0x2A9798c6F165B6D60Cfb923Fe5BFD6f338695D9B;\n    address public FF1_MGR = 0x5b702e1fEF3F556cbe219eE697D7f170A236cc66;\n\n    address public NS2_ROOT = 0x53b2d22d07E069a3b132BfeaaD275b10273d381E;\n    address public HTC2_ROOT = 0x4cA805cE8EcE2E63FfC1F9f8F2731D3F48DF89Df;\n    address public CF4_ROOT = 0xdB3bC9fB1893222d266762e9fF857EB74D75c7D6;\n    address public FF1_ROOT = 0x4B6CA198d257D755A5275648D471FE09931b764A;\n\n    address public ADMIN = 0xf3BceA7494D8f3ac21585CA4b0E52aa175c24C25; // multisig \n    address public CHAINLOG = 0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F;\n    address self;\n    \n\n    constructor() public {\n        wards[ADMIN] = 1; // rely ADMIN\n        wards[msg.sender]= 0; // deny deployer\n        active = true;\n    }\n\n     function file(bytes32 name, bool value) public auth {\n        if (name == \"active\") {\n            active = value;\n        } else { revert(\"unknown-name\"); }\n     }\n\n    function cast() public {\n        require(active, \"spell-not-active\");\n        execute();\n    }\n\n    function execute() internal {\n       self = address(this);\n\n       // permissions \n       TinlakeRootLike(address(NS2_ROOT)).relyContract(NS2_MGR, self);\n       TinlakeRootLike(address(HTC2_ROOT)).relyContract(HTC2_MGR, self);\n       TinlakeRootLike(address(CF4_ROOT)).relyContract(CF4_MGR, self);\n       TinlakeRootLike(address(FF1_ROOT)).relyContract(FF1_MGR, self);\n    \n       address END = LogLike(CHAINLOG).getAddress(\"MCD_END\");\n    \n       FileLike(NS2_MGR).file(\"end\", END);\n       FileLike(HTC2_MGR).file(\"end\", END);\n       FileLike(CF4_MGR).file(\"end\", END);\n       FileLike(FF1_MGR).file(\"end\", END);\n     } \n}\n", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CF4_MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CF4_ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CHAINLOG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FF1_MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FF1_ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HTC2_MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HTC2_ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NS2_MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NS2_ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TinlakeSpell", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}