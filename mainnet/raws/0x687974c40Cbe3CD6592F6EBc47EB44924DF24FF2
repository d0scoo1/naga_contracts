{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Enums.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nenum Accessory {\\n    GOLD_EARRINGS,\\n    SCARS,\\n    GOLDEN_CHAIN,\\n    AMULET,\\n    CUBAN_LINK_GOLD_CHAIN,\\n    FANNY_PACK,\\n    NONE\\n}\\n\\nenum BackAccessory {\\n    NETRUNNER,\\n    MERCENARY,\\n    RONIN,\\n    ENCHANTER,\\n    VANGUARD,\\n    MINER,\\n    PATHFINDER,\\n    SCOUT\\n}\\n\\nenum Background {\\n    STARRY_PINK,\\n    STARRY_YELLOW,\\n    STARRY_PURPLE,\\n    STARRY_GREEN,\\n    NEBULA,\\n    STARRY_RED,\\n    STARRY_BLUE,\\n    SUNSET,\\n    MORNING,\\n    INDIGO,\\n    CITY__PURPLE,\\n    CONTROL_ROOM,\\n    LAB,\\n    GREEN,\\n    ORANGE,\\n    PURPLE,\\n    CITY__GREEN,\\n    CITY__RED,\\n    STATION,\\n    BOUNTY,\\n    BLUE_SKY,\\n    RED_SKY,\\n    GREEN_SKY\\n}\\n\\nenum Clothing {\\n    MARTIAL_SUIT,\\n    AMETHYST_ARMOR,\\n    SHIRT_AND_TIE,\\n    THUNDERDOME_ARMOR,\\n    FLEET_UNIFORM__BLUE,\\n    BANANITE_SHIRT,\\n    EXPLORER,\\n    COSMIC_GHILLIE_SUIT__BLUE,\\n    COSMIC_GHILLIE_SUIT__GOLD,\\n    CYBER_JUMPSUIT,\\n    ENCHANTER_ROBES,\\n    HOODIE,\\n    SPACESUIT,\\n    MECHA_ARMOR,\\n    LAB_COAT,\\n    FLEET_UNIFORM__RED,\\n    GOLD_ARMOR,\\n    ENERGY_ARMOR__BLUE,\\n    ENERGY_ARMOR__RED,\\n    MISSION_SUIT__BLACK,\\n    MISSION_SUIT__PURPLE,\\n    COWBOY,\\n    GLITCH_ARMOR,\\n    NONE\\n}\\n\\nenum Eyes {\\n    SPACE_VISOR,\\n    ADORABLE,\\n    VETERAN,\\n    SUNGLASSES,\\n    WHITE_SUNGLASSES,\\n    RED_EYES,\\n    WINK,\\n    CASUAL,\\n    CLOSED,\\n    DOWNCAST,\\n    HAPPY,\\n    BLUE_EYES,\\n    HUD_GLASSES,\\n    DARK_SUNGLASSES,\\n    NIGHT_VISION_GOGGLES,\\n    BIONIC,\\n    HIVE_GOGGLES,\\n    MATRIX_GLASSES,\\n    GREEN_GLOW,\\n    ORANGE_GLOW,\\n    RED_GLOW,\\n    PURPLE_GLOW,\\n    BLUE_GLOW,\\n    SKY_GLOW,\\n    RED_LASER,\\n    BLUE_LASER,\\n    GOLDEN_SHADES,\\n    HIPSTER_GLASSES,\\n    PINCENEZ,\\n    BLUE_SHADES,\\n    BLIT_GLASSES,\\n    NOUNS_GLASSES\\n}\\n\\nenum Fur {\\n    MAGENTA,\\n    BLUE,\\n    GREEN,\\n    RED,\\n    BLACK,\\n    BROWN,\\n    SILVER,\\n    PURPLE,\\n    PINK,\\n    SEANCE,\\n    TURQUOISE,\\n    CRIMSON,\\n    GREENYELLOW,\\n    GOLD,\\n    DIAMOND,\\n    METALLIC\\n}\\n\\nenum Head {\\n    HALO,\\n    ENERGY_FIELD,\\n    BLUE_TOP_HAT,\\n    RED_TOP_HAT,\\n    ENERGY_CRYSTAL,\\n    CROWN,\\n    BANDANA,\\n    BUCKET_HAT,\\n    HOMBURG_HAT,\\n    PROPELLER_HAT,\\n    HEADBAND,\\n    DORAG,\\n    PURPLE_COWBOY_HAT,\\n    SPACESUIT_HELMET,\\n    PARTY_HAT,\\n    CAP,\\n    LEATHER_COWBOY_HAT,\\n    CYBER_HELMET__BLUE,\\n    CYBER_HELMET__RED,\\n    SAMURAI_HAT,\\n    NONE\\n}\\n\\nenum Mouth {\\n    SMIRK,\\n    SURPRISED,\\n    SMILE,\\n    PIPE,\\n    OPEN_SMILE,\\n    NEUTRAL,\\n    MASK,\\n    TONGUE_OUT,\\n    GOLD_GRILL,\\n    DIAMOND_GRILL,\\n    NAVY_RESPIRATOR,\\n    RED_RESPIRATOR,\\n    MAGENTA_RESPIRATOR,\\n    GREEN_RESPIRATOR,\\n    MEMPO,\\n    VAPE,\\n    PILOT_OXYGEN_MASK,\\n    CIGAR,\\n    BANANA,\\n    CHROME_RESPIRATOR,\\n    STOIC\\n}\\n\\nlibrary Enums {\\n    function toString(Accessory v) external pure returns (string memory) {\\n        if (v == Accessory.GOLD_EARRINGS) {\\n            return \\\"Gold Earrings\\\";\\n        }\\n\\n        if (v == Accessory.SCARS) {\\n            return \\\"Scars\\\";\\n        }\\n\\n        if (v == Accessory.GOLDEN_CHAIN) {\\n            return \\\"Golden Chain\\\";\\n        }\\n\\n        if (v == Accessory.AMULET) {\\n            return \\\"Amulet\\\";\\n        }\\n\\n        if (v == Accessory.CUBAN_LINK_GOLD_CHAIN) {\\n            return \\\"Cuban Link Gold Chain\\\";\\n        }\\n\\n        if (v == Accessory.FANNY_PACK) {\\n            return \\\"Fanny Pack\\\";\\n        }\\n\\n        if (v == Accessory.NONE) {\\n            return \\\"None\\\";\\n        }\\n        revert(\\\"invalid accessory\\\");\\n    }\\n\\n    function toString(BackAccessory v) external pure returns (string memory) {\\n        if (v == BackAccessory.NETRUNNER) {\\n            return \\\"Netrunner\\\";\\n        }\\n\\n        if (v == BackAccessory.MERCENARY) {\\n            return \\\"Mercenary\\\";\\n        }\\n\\n        if (v == BackAccessory.RONIN) {\\n            return \\\"Ronin\\\";\\n        }\\n\\n        if (v == BackAccessory.ENCHANTER) {\\n            return \\\"Enchanter\\\";\\n        }\\n\\n        if (v == BackAccessory.VANGUARD) {\\n            return \\\"Vanguard\\\";\\n        }\\n\\n        if (v == BackAccessory.MINER) {\\n            return \\\"Miner\\\";\\n        }\\n\\n        if (v == BackAccessory.PATHFINDER) {\\n            return \\\"Pathfinder\\\";\\n        }\\n\\n        if (v == BackAccessory.SCOUT) {\\n            return \\\"Scout\\\";\\n        }\\n        revert(\\\"invalid back accessory\\\");\\n    }\\n\\n    function toString(Background v) external pure returns (string memory) {\\n        if (v == Background.STARRY_PINK) {\\n            return \\\"Starry Pink\\\";\\n        }\\n\\n        if (v == Background.STARRY_YELLOW) {\\n            return \\\"Starry Yellow\\\";\\n        }\\n\\n        if (v == Background.STARRY_PURPLE) {\\n            return \\\"Starry Purple\\\";\\n        }\\n\\n        if (v == Background.STARRY_GREEN) {\\n            return \\\"Starry Green\\\";\\n        }\\n\\n        if (v == Background.NEBULA) {\\n            return \\\"Nebula\\\";\\n        }\\n\\n        if (v == Background.STARRY_RED) {\\n            return \\\"Starry Red\\\";\\n        }\\n\\n        if (v == Background.STARRY_BLUE) {\\n            return \\\"Starry Blue\\\";\\n        }\\n\\n        if (v == Background.SUNSET) {\\n            return \\\"Sunset\\\";\\n        }\\n\\n        if (v == Background.MORNING) {\\n            return \\\"Morning\\\";\\n        }\\n\\n        if (v == Background.INDIGO) {\\n            return \\\"Indigo\\\";\\n        }\\n\\n        if (v == Background.CITY__PURPLE) {\\n            return \\\"City - Purple\\\";\\n        }\\n\\n        if (v == Background.CONTROL_ROOM) {\\n            return \\\"Control Room\\\";\\n        }\\n\\n        if (v == Background.LAB) {\\n            return \\\"Lab\\\";\\n        }\\n\\n        if (v == Background.GREEN) {\\n            return \\\"Green\\\";\\n        }\\n\\n        if (v == Background.ORANGE) {\\n            return \\\"Orange\\\";\\n        }\\n\\n        if (v == Background.PURPLE) {\\n            return \\\"Purple\\\";\\n        }\\n\\n        if (v == Background.CITY__GREEN) {\\n            return \\\"City - Green\\\";\\n        }\\n\\n        if (v == Background.CITY__RED) {\\n            return \\\"City - Red\\\";\\n        }\\n\\n        if (v == Background.STATION) {\\n            return \\\"Station\\\";\\n        }\\n\\n        if (v == Background.BOUNTY) {\\n            return \\\"Bounty\\\";\\n        }\\n\\n        if (v == Background.BLUE_SKY) {\\n            return \\\"Blue Sky\\\";\\n        }\\n\\n        if (v == Background.RED_SKY) {\\n            return \\\"Red Sky\\\";\\n        }\\n\\n        if (v == Background.GREEN_SKY) {\\n            return \\\"Green Sky\\\";\\n        }\\n        revert(\\\"invalid background\\\");\\n    }\\n\\n    function toString(Clothing v) external pure returns (string memory) {\\n        if (v == Clothing.MARTIAL_SUIT) {\\n            return \\\"Martial Suit\\\";\\n        }\\n\\n        if (v == Clothing.AMETHYST_ARMOR) {\\n            return \\\"Amethyst Armor\\\";\\n        }\\n\\n        if (v == Clothing.SHIRT_AND_TIE) {\\n            return \\\"Shirt and Tie\\\";\\n        }\\n\\n        if (v == Clothing.THUNDERDOME_ARMOR) {\\n            return \\\"Thunderdome Armor\\\";\\n        }\\n\\n        if (v == Clothing.FLEET_UNIFORM__BLUE) {\\n            return \\\"Fleet Uniform - Blue\\\";\\n        }\\n\\n        if (v == Clothing.BANANITE_SHIRT) {\\n            return \\\"Bananite Shirt\\\";\\n        }\\n\\n        if (v == Clothing.EXPLORER) {\\n            return \\\"Explorer\\\";\\n        }\\n\\n        if (v == Clothing.COSMIC_GHILLIE_SUIT__BLUE) {\\n            return \\\"Cosmic Ghillie Suit - Blue\\\";\\n        }\\n\\n        if (v == Clothing.COSMIC_GHILLIE_SUIT__GOLD) {\\n            return \\\"Cosmic Ghillie Suit - Gold\\\";\\n        }\\n\\n        if (v == Clothing.CYBER_JUMPSUIT) {\\n            return \\\"Cyber Jumpsuit\\\";\\n        }\\n\\n        if (v == Clothing.ENCHANTER_ROBES) {\\n            return \\\"Enchanter Robes\\\";\\n        }\\n\\n        if (v == Clothing.HOODIE) {\\n            return \\\"Hoodie\\\";\\n        }\\n\\n        if (v == Clothing.SPACESUIT) {\\n            return \\\"Spacesuit\\\";\\n        }\\n\\n        if (v == Clothing.MECHA_ARMOR) {\\n            return \\\"Mecha Armor\\\";\\n        }\\n\\n        if (v == Clothing.LAB_COAT) {\\n            return \\\"Lab Coat\\\";\\n        }\\n\\n        if (v == Clothing.FLEET_UNIFORM__RED) {\\n            return \\\"Fleet Uniform - Red\\\";\\n        }\\n\\n        if (v == Clothing.GOLD_ARMOR) {\\n            return \\\"Gold Armor\\\";\\n        }\\n\\n        if (v == Clothing.ENERGY_ARMOR__BLUE) {\\n            return \\\"Energy Armor - Blue\\\";\\n        }\\n\\n        if (v == Clothing.ENERGY_ARMOR__RED) {\\n            return \\\"Energy Armor - Red\\\";\\n        }\\n\\n        if (v == Clothing.MISSION_SUIT__BLACK) {\\n            return \\\"Mission Suit - Black\\\";\\n        }\\n\\n        if (v == Clothing.MISSION_SUIT__PURPLE) {\\n            return \\\"Mission Suit - Purple\\\";\\n        }\\n\\n        if (v == Clothing.COWBOY) {\\n            return \\\"Cowboy\\\";\\n        }\\n\\n        if (v == Clothing.GLITCH_ARMOR) {\\n            return \\\"Glitch Armor\\\";\\n        }\\n\\n        if (v == Clothing.NONE) {\\n            return \\\"None\\\";\\n        }\\n        revert(\\\"invalid clothing\\\");\\n    }\\n\\n    function toString(Eyes v) external pure returns (string memory) {\\n        if (v == Eyes.SPACE_VISOR) {\\n            return \\\"Space Visor\\\";\\n        }\\n\\n        if (v == Eyes.ADORABLE) {\\n            return \\\"Adorable\\\";\\n        }\\n\\n        if (v == Eyes.VETERAN) {\\n            return \\\"Veteran\\\";\\n        }\\n\\n        if (v == Eyes.SUNGLASSES) {\\n            return \\\"Sunglasses\\\";\\n        }\\n\\n        if (v == Eyes.WHITE_SUNGLASSES) {\\n            return \\\"White Sunglasses\\\";\\n        }\\n\\n        if (v == Eyes.RED_EYES) {\\n            return \\\"Red Eyes\\\";\\n        }\\n\\n        if (v == Eyes.WINK) {\\n            return \\\"Wink\\\";\\n        }\\n\\n        if (v == Eyes.CASUAL) {\\n            return \\\"Casual\\\";\\n        }\\n\\n        if (v == Eyes.CLOSED) {\\n            return \\\"Closed\\\";\\n        }\\n\\n        if (v == Eyes.DOWNCAST) {\\n            return \\\"Downcast\\\";\\n        }\\n\\n        if (v == Eyes.HAPPY) {\\n            return \\\"Happy\\\";\\n        }\\n\\n        if (v == Eyes.BLUE_EYES) {\\n            return \\\"Blue Eyes\\\";\\n        }\\n\\n        if (v == Eyes.HUD_GLASSES) {\\n            return \\\"HUD Glasses\\\";\\n        }\\n\\n        if (v == Eyes.DARK_SUNGLASSES) {\\n            return \\\"Dark Sunglasses\\\";\\n        }\\n\\n        if (v == Eyes.NIGHT_VISION_GOGGLES) {\\n            return \\\"Night Vision Goggles\\\";\\n        }\\n\\n        if (v == Eyes.BIONIC) {\\n            return \\\"Bionic\\\";\\n        }\\n\\n        if (v == Eyes.HIVE_GOGGLES) {\\n            return \\\"Hive Goggles\\\";\\n        }\\n\\n        if (v == Eyes.MATRIX_GLASSES) {\\n            return \\\"Matrix Glasses\\\";\\n        }\\n\\n        if (v == Eyes.GREEN_GLOW) {\\n            return \\\"Green Glow\\\";\\n        }\\n\\n        if (v == Eyes.ORANGE_GLOW) {\\n            return \\\"Orange Glow\\\";\\n        }\\n\\n        if (v == Eyes.RED_GLOW) {\\n            return \\\"Red Glow\\\";\\n        }\\n\\n        if (v == Eyes.PURPLE_GLOW) {\\n            return \\\"Purple Glow\\\";\\n        }\\n\\n        if (v == Eyes.BLUE_GLOW) {\\n            return \\\"Blue Glow\\\";\\n        }\\n\\n        if (v == Eyes.SKY_GLOW) {\\n            return \\\"Sky Glow\\\";\\n        }\\n\\n        if (v == Eyes.RED_LASER) {\\n            return \\\"Red Laser\\\";\\n        }\\n\\n        if (v == Eyes.BLUE_LASER) {\\n            return \\\"Blue Laser\\\";\\n        }\\n\\n        if (v == Eyes.GOLDEN_SHADES) {\\n            return \\\"Golden Shades\\\";\\n        }\\n\\n        if (v == Eyes.HIPSTER_GLASSES) {\\n            return \\\"Hipster Glasses\\\";\\n        }\\n\\n        if (v == Eyes.PINCENEZ) {\\n            return \\\"Pince-nez\\\";\\n        }\\n\\n        if (v == Eyes.BLUE_SHADES) {\\n            return \\\"Blue Shades\\\";\\n        }\\n\\n        if (v == Eyes.BLIT_GLASSES) {\\n            return \\\"Blit GLasses\\\";\\n        }\\n\\n        if (v == Eyes.NOUNS_GLASSES) {\\n            return \\\"Nouns Glasses\\\";\\n        }\\n        revert(\\\"invalid eyes\\\");\\n    }\\n\\n    function toString(Fur v) external pure returns (string memory) {\\n        if (v == Fur.MAGENTA) {\\n            return \\\"Magenta\\\";\\n        }\\n\\n        if (v == Fur.BLUE) {\\n            return \\\"Blue\\\";\\n        }\\n\\n        if (v == Fur.GREEN) {\\n            return \\\"Green\\\";\\n        }\\n\\n        if (v == Fur.RED) {\\n            return \\\"Red\\\";\\n        }\\n\\n        if (v == Fur.BLACK) {\\n            return \\\"Black\\\";\\n        }\\n\\n        if (v == Fur.BROWN) {\\n            return \\\"Brown\\\";\\n        }\\n\\n        if (v == Fur.SILVER) {\\n            return \\\"Silver\\\";\\n        }\\n\\n        if (v == Fur.PURPLE) {\\n            return \\\"Purple\\\";\\n        }\\n\\n        if (v == Fur.PINK) {\\n            return \\\"Pink\\\";\\n        }\\n\\n        if (v == Fur.SEANCE) {\\n            return \\\"Seance\\\";\\n        }\\n\\n        if (v == Fur.TURQUOISE) {\\n            return \\\"Turquoise\\\";\\n        }\\n\\n        if (v == Fur.CRIMSON) {\\n            return \\\"Crimson\\\";\\n        }\\n\\n        if (v == Fur.GREENYELLOW) {\\n            return \\\"Green-Yellow\\\";\\n        }\\n\\n        if (v == Fur.GOLD) {\\n            return \\\"Gold\\\";\\n        }\\n\\n        if (v == Fur.DIAMOND) {\\n            return \\\"Diamond\\\";\\n        }\\n\\n        if (v == Fur.METALLIC) {\\n            return \\\"Metallic\\\";\\n        }\\n        revert(\\\"invalid fur\\\");\\n    }\\n\\n    function toString(Head v) external pure returns (string memory) {\\n        if (v == Head.HALO) {\\n            return \\\"Halo\\\";\\n        }\\n\\n        if (v == Head.ENERGY_FIELD) {\\n            return \\\"Energy Field\\\";\\n        }\\n\\n        if (v == Head.BLUE_TOP_HAT) {\\n            return \\\"Blue Top Hat\\\";\\n        }\\n\\n        if (v == Head.RED_TOP_HAT) {\\n            return \\\"Red Top Hat\\\";\\n        }\\n\\n        if (v == Head.ENERGY_CRYSTAL) {\\n            return \\\"Energy Crystal\\\";\\n        }\\n\\n        if (v == Head.CROWN) {\\n            return \\\"Crown\\\";\\n        }\\n\\n        if (v == Head.BANDANA) {\\n            return \\\"Bandana\\\";\\n        }\\n\\n        if (v == Head.BUCKET_HAT) {\\n            return \\\"Bucket Hat\\\";\\n        }\\n\\n        if (v == Head.HOMBURG_HAT) {\\n            return \\\"Homburg Hat\\\";\\n        }\\n\\n        if (v == Head.PROPELLER_HAT) {\\n            return \\\"Propeller Hat\\\";\\n        }\\n\\n        if (v == Head.HEADBAND) {\\n            return \\\"Headband\\\";\\n        }\\n\\n        if (v == Head.DORAG) {\\n            return \\\"Do-rag\\\";\\n        }\\n\\n        if (v == Head.PURPLE_COWBOY_HAT) {\\n            return \\\"Purple Cowboy Hat\\\";\\n        }\\n\\n        if (v == Head.SPACESUIT_HELMET) {\\n            return \\\"Spacesuit Helmet\\\";\\n        }\\n\\n        if (v == Head.PARTY_HAT) {\\n            return \\\"Party Hat\\\";\\n        }\\n\\n        if (v == Head.CAP) {\\n            return \\\"Cap\\\";\\n        }\\n\\n        if (v == Head.LEATHER_COWBOY_HAT) {\\n            return \\\"Leather Cowboy Hat\\\";\\n        }\\n\\n        if (v == Head.CYBER_HELMET__BLUE) {\\n            return \\\"Cyber Helmet - Blue\\\";\\n        }\\n\\n        if (v == Head.CYBER_HELMET__RED) {\\n            return \\\"Cyber Helmet - Red\\\";\\n        }\\n\\n        if (v == Head.SAMURAI_HAT) {\\n            return \\\"Samurai Hat\\\";\\n        }\\n\\n        if (v == Head.NONE) {\\n            return \\\"None\\\";\\n        }\\n        revert(\\\"invalid head\\\");\\n    }\\n\\n    function toString(Mouth v) external pure returns (string memory) {\\n        if (v == Mouth.SMIRK) {\\n            return \\\"Smirk\\\";\\n        }\\n\\n        if (v == Mouth.SURPRISED) {\\n            return \\\"Surprised\\\";\\n        }\\n\\n        if (v == Mouth.SMILE) {\\n            return \\\"Smile\\\";\\n        }\\n\\n        if (v == Mouth.PIPE) {\\n            return \\\"Pipe\\\";\\n        }\\n\\n        if (v == Mouth.OPEN_SMILE) {\\n            return \\\"Open Smile\\\";\\n        }\\n\\n        if (v == Mouth.NEUTRAL) {\\n            return \\\"Neutral\\\";\\n        }\\n\\n        if (v == Mouth.MASK) {\\n            return \\\"Mask\\\";\\n        }\\n\\n        if (v == Mouth.TONGUE_OUT) {\\n            return \\\"Tongue Out\\\";\\n        }\\n\\n        if (v == Mouth.GOLD_GRILL) {\\n            return \\\"Gold Grill\\\";\\n        }\\n\\n        if (v == Mouth.DIAMOND_GRILL) {\\n            return \\\"Diamond Grill\\\";\\n        }\\n\\n        if (v == Mouth.NAVY_RESPIRATOR) {\\n            return \\\"Navy Respirator\\\";\\n        }\\n\\n        if (v == Mouth.RED_RESPIRATOR) {\\n            return \\\"Red Respirator\\\";\\n        }\\n\\n        if (v == Mouth.MAGENTA_RESPIRATOR) {\\n            return \\\"Magenta Respirator\\\";\\n        }\\n\\n        if (v == Mouth.GREEN_RESPIRATOR) {\\n            return \\\"Green Respirator\\\";\\n        }\\n\\n        if (v == Mouth.MEMPO) {\\n            return \\\"Mempo\\\";\\n        }\\n\\n        if (v == Mouth.VAPE) {\\n            return \\\"Vape\\\";\\n        }\\n\\n        if (v == Mouth.PILOT_OXYGEN_MASK) {\\n            return \\\"Pilot Oxygen Mask\\\";\\n        }\\n\\n        if (v == Mouth.CIGAR) {\\n            return \\\"Cigar\\\";\\n        }\\n\\n        if (v == Mouth.BANANA) {\\n            return \\\"Banana\\\";\\n        }\\n\\n        if (v == Mouth.CHROME_RESPIRATOR) {\\n            return \\\"Chrome Respirator\\\";\\n        }\\n\\n        if (v == Mouth.STOIC) {\\n            return \\\"Stoic\\\";\\n        }\\n        revert(\\\"invalid mouth\\\");\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"enum Eyes\",\"name\":\"v\",\"type\":\"Eyes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Accessory\",\"name\":\"v\",\"type\":\"Accessory\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Fur\",\"name\":\"v\",\"type\":\"Fur\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Head\",\"name\":\"v\",\"type\":\"Head\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Clothing\",\"name\":\"v\",\"type\":\"Clothing\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Mouth\",\"name\":\"v\",\"type\":\"Mouth\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum BackAccessory\",\"name\":\"v\",\"type\":\"BackAccessory\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Background\",\"name\":\"v\",\"type\":\"Background\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "Enums", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}