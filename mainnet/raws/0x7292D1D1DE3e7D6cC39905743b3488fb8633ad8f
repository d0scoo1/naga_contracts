{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.9;\r\n\r\ncontract HostileBank {\r\n    address payable private _marketing;\r\n    address payable private _buyback;\r\n    address payable private _dev;\r\n    address payable private _gameDev;\r\n\r\n    constructor (address payable Marketing, address payable BuyBack, address payable Dev, address payable GameDev) {\r\n        _marketing = Marketing;\r\n        _buyback = BuyBack;\r\n        _dev = Dev;\r\n        _gameDev = GameDev;\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n    function splitEth() external {\r\n        require(msg.sender == _marketing || msg.sender == _dev, \"Loser!\");\r\n        disperseEth();\r\n    }\r\n    \r\n    function disperseEth() private {\r\n         uint256 BALANCE = address(this).balance;\r\n         uint256 GAMEFEE = BALANCE / 8 * 2;\r\n         uint256 MKTGFEE = BALANCE / 8 * 4;\r\n         uint256 DEVFEE = BALANCE / 8 * 1;\r\n         uint256 BBFEE = BALANCE /8 * 1;\r\n         payable(_gameDev).transfer(GAMEFEE);\r\n         payable(_marketing).transfer(MKTGFEE);\r\n         payable(_buyback).transfer(BBFEE);\r\n         payable(_dev).transfer(DEVFEE);\r\n         \r\n    }\r\n\r\n    function updateMarketing(address payable Marketing) external {\r\n        require(msg.sender == _marketing || msg.sender == _dev, \"Loser!\");\r\n        _marketing = Marketing;\r\n    }\r\n\r\n    function updateBuyBack(address payable BuyBack) external {\r\n        require(msg.sender == _marketing || msg.sender == _dev, \"Loser!\");\r\n        _buyback = BuyBack;\r\n    }\r\n\r\n    function updateDev(address payable Dev) external {\r\n        require(msg.sender == _marketing || msg.sender == _dev, \"Loser!\");\r\n        _dev = Dev;\r\n    }\r\n\r\n    function updateGameDev(address payable GameDev) external {\r\n        require(msg.sender == _marketing || msg.sender == _dev, \"Loser!\");\r\n        _gameDev = GameDev;\r\n    }\r\n\r\n    function manualSOS() external {\r\n        require(msg.sender == _marketing || msg.sender == _dev, \"Loser!\");\r\n        uint256 BALANCE = address(this).balance;\r\n        sendETH(BALANCE);\r\n    }\r\n\r\n    function sendETH(uint256 amount) private {\r\n        _dev.transfer(amount);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"Marketing\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"BuyBack\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"Dev\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"GameDev\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"manualSOS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"BuyBack\",\"type\":\"address\"}],\"name\":\"updateBuyBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"Dev\",\"type\":\"address\"}],\"name\":\"updateDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"GameDev\",\"type\":\"address\"}],\"name\":\"updateGameDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"Marketing\",\"type\":\"address\"}],\"name\":\"updateMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "HostileBank", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000007f22b4d77eaa010c53ad7383f93725db405f44c7000000000000000000000000cd01c9f709535fdfdb1cd943c7c01d58714a0ca6000000000000000000000000ae859cc7fd075cbff43e2e659694fb1f7aee0ecf000000000000000000000000ab9cc7e0e2b86d77be6059bc69c4db3a9b53a6bf", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://575fc16964601738f9ecdb6807befe58df28f36bc39387a24f95349301bded7e"}]}