{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: AGPL-3.0\r\n\r\n// (C) 2021 Intellectual Property Collectors and Managers, Inc\r\n// (C) 2018 GroupTrap Labs\r\n// (C) 2017 Popped Balloon Intellectual Property Corporation\r\n// (C) 2015 coinslap420@hotmail.com\r\n\r\npragma solidity ^0.8.13;\r\n\r\ninterface Dmap {\r\n    function set(bytes32 name, bytes32 meta, bytes32 data) external;\r\n}\r\n\r\ncontract ZoneHandle {\r\n    Dmap immutable public dmap;\r\n    address        public owner;\r\n\r\n    event Give(address indexed whom);\r\n\r\n    constructor(Dmap d) {\r\n        dmap = d;\r\n    }\r\n    function give(address whom) external {\r\n        require(msg.sender == owner, 'ERR_OWNER');\r\n        owner = whom;\r\n        emit Give(whom);\r\n    }\r\n    function set(bytes32 name, bytes32 meta, bytes32 data) external {\r\n        require(msg.sender == owner, 'ERR_OWNER');\r\n        dmap.set(name, meta, data);\r\n    }\r\n}\r\n\r\nabstract contract PoppedBalloonEVMSmartContractExecutionContext {\r\n    function _getCallerOfCurrentFunction() internal view returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\nabstract contract DmapHaverAbstractBaseContract {\r\n    Dmap localDmapReferenceSavedInStorage;\r\n    constructor(Dmap dmapAddressProvidedToConstructorAtDeployTime) {\r\n        localDmapReferenceSavedInStorage = dmapAddressProvidedToConstructorAtDeployTime;\r\n    }\r\n}\r\n\r\ncontract PoppedBalloonZoneHandleFactory is DmapHaverAbstractBaseContract, PoppedBalloonEVMSmartContractExecutionContext {\r\n    event ThisContractBuiltAZoneHandle(address indexed theAddressOfTheZoneHandleThatWasBuilt, address indexed theCallerOfTheBuildAZoneHandleAndReturnItFunction);\r\n    constructor(Dmap dmapAddressProvidedToConstructorAtDeployTime) DmapHaverAbstractBaseContract(dmapAddressProvidedToConstructorAtDeployTime) {\r\n\r\n    }\r\n    function buildAZoneHandleAndReturnIt() external returns (ZoneHandle) {\r\n        ZoneHandle newZoneHandleContractObject = new ZoneHandle(localDmapReferenceSavedInStorage);\r\n        newZoneHandleContractObject.give(_getCallerOfCurrentFunction()); // this is an alias for transferZoneToAddress\r\n        emit ThisContractBuiltAZoneHandle(_getCallerOfCurrentFunction(), address(newZoneHandleContractObject));\r\n        return newZoneHandleContractObject; // return newZoneProxContractObject to caller\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract Dmap\",\"name\":\"dmapAddressProvidedToConstructorAtDeployTime\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"theAddressOfTheZoneHandleThatWasBuilt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"theCallerOfTheBuildAZoneHandleAndReturnItFunction\",\"type\":\"address\"}],\"name\":\"ThisContractBuiltAZoneHandle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buildAZoneHandleAndReturnIt\",\"outputs\":[{\"internalType\":\"contract ZoneHandle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PoppedBalloonZoneHandleFactory", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000090949c9937a11ba943c7a72c3fa073a37e3fdd96", "EVMVersion": "Default", "Library": "", "LicenseType": "Unknown", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://62523d7bd068a05fba9c0372e5e8a623842bedc4909dbc895c5b43eb072e5fd3"}]}