{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity 0.6.10;\r\n\r\ncontract FrontRunMe {\r\n    event success();\r\n    event fail();\r\n\r\n    bytes32 public secretHash;\r\n\r\n    constructor (bytes32 _secretHash) public payable {\r\n        secretHash = _secretHash;\r\n    }\r\n\r\n    function take(string calldata _secret) external {\r\n        if(keccak256(abi.encodePacked(_secret)) == secretHash) {\r\n            uint256 _myBalance = address(this).balance;\r\n            msg.sender.transfer(_myBalance);\r\n            emit success();\r\n        } else {\r\n            emit fail();\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_secretHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"fail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"success\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"secretHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_secret\",\"type\":\"string\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FrontRunMe", "CompilerVersion": "v0.6.10+commit.00c0fcaf", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "871dd7c4e3e373b785355573b7525f67a06def0d9b6e99061131817967ee5bde", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c73118561a32ce74497ea341be75df8a2af33a13d014860b8db994ade5d0c285"}]}