{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    // don't need to define other functions, only using `transfer()` in this case\r\n}\r\n\r\ncontract FiatCrypto {\r\n\r\n    address private owner_;\r\n\r\n    constructor() {    \r\n        owner_ = msg.sender;\r\n    }\r\n\r\n    uint256 public ethBalance;\r\n\r\n\r\n    function depositEth() public payable {\r\n        ethBalance += msg.value;\r\n    }\r\n\r\n    function getEthBalance() public view returns(uint256) {\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function depositToken(address tokenContract, uint256 amount) external {\r\n        IERC20 token = IERC20(tokenContract);\r\n        require(token.transferFrom(msg.sender,address(this),amount),'transfer failed');\r\n    }\r\n\r\n    function withdrawToken(address tokenContract , address receiverWallet, uint256 amount) external{\r\n        require(msg.sender == owner_,'only owner can withdraw');\r\n        IERC20 token = IERC20(tokenContract);\r\n        require(getTokenBalance(tokenContract) >= amount,'insufficient token balance');\r\n        token.transfer(receiverWallet, amount);\r\n    }\r\n\r\n    function getTokenBalance(address tokenContract) public view returns (uint256) {\r\n        IERC20 token = IERC20(tokenContract);\r\n        return token.balanceOf(address(this));\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FiatCrypto", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://920a25f31b52776147a319bead55f17b8a4147d5ca7384623294287df8e20188"}]}