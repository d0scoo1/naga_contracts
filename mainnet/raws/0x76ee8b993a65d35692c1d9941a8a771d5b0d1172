{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: Whoops\r\n\r\npragma solidity ^0.8.7;\r\n\r\ncontract AlwaysKnowTheDevelopers {\r\n    address constant one   = address(0x4F4eBF556CFDc21c3424F85ff6572C77c514Fcae);\r\n    address constant two   = address(0xef764BAC8a438E7E498c2E5fcCf0f174c3E3F8dB);\r\n    address constant three = address(0x9D221b2100CbE5F05a0d2048E2556a6Df6f9a6C3);\r\n    address constant four  = address(0xA4Fe8067cC11d5D6513DAD75a215988e43e6E3C5);\r\n    address constant five  = address(0x520885De1075712818D0435371A116F6d8566C67);\r\n    address constant six   = address(0x7435a9D165dEC083f4D61D572c65e6d898e6b606);\r\n    address constant seven = address(0x11e52c75998fe2E7928B191bfc5B25937Ca16741);\r\n\r\n    mapping(address => bool) hasShare;\r\n\r\n    uint256 share;\r\n\r\n    constructor() payable {\r\n        share = msg.value / 6;\r\n\r\n        hasShare[one]   = true;\r\n        hasShare[two]   = true;\r\n        hasShare[three] = true;\r\n        hasShare[four]  = true;\r\n        hasShare[five]  = true;\r\n        hasShare[six]   = true;\r\n    }\r\n\r\n    function getMeOutOfHere() public {\r\n        require(hasShare[msg.sender]);\r\n        hasShare[msg.sender] = false;\r\n\r\n        payable(msg.sender).transfer(share);\r\n    }\r\n\r\n    function recover() public {\r\n        require(msg.sender == seven);\r\n        payable(seven).transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMeOutOfHere\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AlwaysKnowTheDevelopers", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3c6f61be65d3a916ad6bfef1ae99f6f13d2930b91fb1e10abc9553d3fa2ca61e"}]}