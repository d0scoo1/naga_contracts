{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.2;\r\n\r\ncontract Migrations {\r\n  address public owner;\r\n  uint public last_completed_migration;\r\n\r\n  modifier restricted() {\r\n    if (msg.sender == owner) _;\r\n  }\r\n\r\n  function Migrations() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function setCompleted(uint completed) public restricted {\r\n    last_completed_migration = completed;\r\n  }\r\n\r\n  function upgrade(address new_address) public restricted {\r\n    Migrations upgraded = Migrations(new_address);\r\n    upgraded.setCompleted(last_completed_migration);\r\n  }\r\n}\r\n\r\npragma solidity ^0.4.18;\r\n\r\ncontract HelloChicken {\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  string public constant name = \"Chicken\";\r\n  string public constant symbol = \"CHK\";\r\n\r\n  uint256 totalSupply_;\r\n  uint256 dailyLimit_;\r\n\r\n  mapping(address => uint256) balances_;\r\n  mapping(address => uint256) lastDay_;\r\n  mapping(address => uint256) spentToday_;\r\n\r\n  function Chicken() public {\r\n    totalSupply_ = 0;\r\n    dailyLimit_ = 5;\r\n  }\r\n\r\n  function underLimit(uint256 _value) internal returns (bool) {\r\n    if (today() > lastDay_[msg.sender]) {\r\n      spentToday_[msg.sender] = 0;\r\n      lastDay_[msg.sender] = today();\r\n    }\r\n    if (spentToday_[msg.sender] + _value >= spentToday_[msg.sender] && spentToday_[msg.sender] + _value <= dailyLimit_) {\r\n      spentToday_[msg.sender] += _value;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function today() private view returns (uint256) {\r\n    return now / 1 days;\r\n  }\r\n\r\n  modifier limitedDaily(uint256 _value) {\r\n    require(underLimit(_value));\r\n    _;\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return totalSupply_;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public limitedDaily(_value) returns (bool) {\r\n    require(_to != address(0));\r\n    require(_to != msg.sender);\r\n\r\n    totalSupply_ += _value;\r\n    balances_[_to] += _value;\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances_[_owner];\r\n  }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_completed_migration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"completed\",\"type\":\"uint256\"}],\"name\":\"setCompleted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "Migrations", "CompilerVersion": "v0.4.19+commit.c4cbbb05", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://9011aa76940104e0237b6587ab97057c0727b3be6fb05fc99ef068b9ff282ea7"}]}