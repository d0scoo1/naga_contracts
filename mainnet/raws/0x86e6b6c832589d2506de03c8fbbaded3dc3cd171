{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"HeelsClaim.sol\":{\"content\":\"// Developed by Orcania (https://orcania.io/)\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity =0.7.6;\\r\\n\\r\\nimport \\\"OMS.sol\\\";\\r\\n\\r\\n\\r\\ninterface IERC721 {\\r\\n\\r\\n    function balanceOf(address _owner) external view returns (uint256);\\r\\n\\r\\n    function adminMint(address to, uint256 amount) external;\\r\\n\\r\\n}\\r\\n\\r\\ninterface IERC1155 {\\r\\n\\r\\n    function adminMint(address user, uint256 amount, uint256 id) external;\\r\\n\\r\\n}\\r\\n\\r\\ncontract HeelsClaim is OMS { \\r\\n    IERC721 immutable DAW = IERC721(0xF1268733C6FB05EF6bE9cF23d24436Dcd6E0B35E);\\r\\n    IERC721 immutable Heels = IERC721(0xB1444F1d64B5920e8a5c3B62F57808a68bD9b6e9);\\r\\n    IERC1155 immutable HeelsSpecial = IERC1155(0xa9Bcc11a59b9085a426155418c511d7a8605835B);\\r\\n\\r\\n    mapping(address =\\u003e uint256) private _heels; //how many heels this address gets\\r\\n    mapping(address =\\u003e bool) private _claimed; //If user claimed or not\\r\\n\\r\\n    uint256 private dawHeelsMints;\\r\\n\\r\\n    //Read Functions======================================================================================================================================================\\r\\n\\r\\n    //Amount of heels a user has available to claim\\r\\n    function heels(address user) external view returns(uint256) {\\r\\n        if(_claimed[user]) {return 0;}\\r\\n        else if(_heels[user] \\u003e 0) {return (_heels[user] * 2) + 1;}\\r\\n        else if(DAW.balanceOf(user) != 0) {return 1;}\\r\\n        else {return 0;}\\r\\n    }\\r\\n\\r\\n    function hasToClaim(address user) external view returns(bool) {\\r\\n        if(_claimed[user]) {return false;}\\r\\n\\r\\n        if(_heels[user] \\u003e 0) {return true;}\\r\\n        if(DAW.balanceOf(user) \\u003e 0) {return true;}\\r\\n    }\\r\\n\\r\\n    function claimed(address user) external view returns(bool) {\\r\\n        return _claimed[user];\\r\\n    }\\r\\n    \\r\\n    //Moderator Functions======================================================================================================================================================\\r\\n\\r\\n    function setHeels(address[] calldata users) external Manager{\\r\\n        uint256 length = users.length;\\r\\n\\r\\n        for(uint256 t; t \\u003c length; ++t) {\\r\\n            ++_heels[users[t]];\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function claim() external {\\r\\n        require(!_claimed[msg.sender], \\\"ALREADY_CLAIMED\\\");\\r\\n\\r\\n        uint256 heels = _heels[msg.sender];\\r\\n        if(heels \\u003e 0) {\\r\\n            Heels.adminMint(msg.sender, heels);\\r\\n            HeelsSpecial.adminMint(msg.sender, heels, 0);\\r\\n\\r\\n            if(dawHeelsMints++ \\u003c 333) {\\r\\n                HeelsSpecial.adminMint(msg.sender, 1, 1); //DAW edition\\r\\n            }\\r\\n        }\\r\\n        else if(DAW.balanceOf(msg.sender) \\u003e 0) {\\r\\n            if(dawHeelsMints++ \\u003c 333) {\\r\\n                HeelsSpecial.adminMint(msg.sender, 1, 1); //DAW edition\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _claimed[msg.sender] = true;\\r\\n    }\\r\\n}\\r\\n\"},\"OMS.sol\":{\"content\":\"// Developed by Orcania (https://orcania.io/)\\r\\ninterface IERC20{\\r\\n         \\r\\n    function transfer(address recipient, uint256 amount) external;\\r\\n    \\r\\n}\\r\\n\\r\\nabstract contract OMS { //Orcania Management Standard\\r\\n\\r\\n    address private _owner;\\r\\n    mapping(address =\\u003e bool) private _manager;\\r\\n\\r\\n    event OwnershipTransfer(address indexed newOwner);\\r\\n    event SetManager(address indexed manager, bool state);\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    constructor() {\\r\\n        _owner = msg.sender;\\r\\n        _manager[msg.sender] = true;\\r\\n\\r\\n        emit SetManager(msg.sender, true);\\r\\n    }\\r\\n\\r\\n    //Modifiers ==========================================================================================================================================\\r\\n    modifier Owner() {\\r\\n        require(msg.sender == _owner, \\\"OMS: NOT_OWNER\\\");\\r\\n        _;  \\r\\n    }\\r\\n\\r\\n    modifier Manager() {\\r\\n      require(_manager[msg.sender], \\\"OMS: MOT_MANAGER\\\");\\r\\n      _;  \\r\\n    }\\r\\n\\r\\n    //Read functions =====================================================================================================================================\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    function manager(address user) external view returns(bool) {\\r\\n        return _manager[user];\\r\\n    }\\r\\n\\r\\n    \\r\\n    //Write functions ====================================================================================================================================\\r\\n    function setNewOwner(address user) external Owner {\\r\\n        _owner = user;\\r\\n        emit OwnershipTransfer(user);\\r\\n    }\\r\\n\\r\\n    function setManager(address user, bool state) external Owner {\\r\\n        _manager[user] = state;\\r\\n        emit SetManager(user, state);\\r\\n    }\\r\\n\\r\\n    //===============\\r\\n    \\r\\n    function withdraw(address payable to, uint256 value) external Manager {\\r\\n        require(to.send(value), \\\"OMS: ISSUE_SENDING_FUNDS\\\");    \\r\\n    }\\r\\n\\r\\n    function withdrawERC20(address token, address to, uint256 value) external Manager {\\r\\n        IERC20(token).transfer(to, value);   \\r\\n    }\\r\\n\\r\\n}\"}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetManager\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasToClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"heels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"name\":\"setHeels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "HeelsClaim", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4d478277089a6cdbcbb3167146c0aa8b93dd0281bccea27016dcd4d4a2c91a4c"}]}