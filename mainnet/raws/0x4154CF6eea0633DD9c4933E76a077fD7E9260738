{"status": "1", "message": "OK", "result": [{"SourceCode": "// Root file: src/gas-receiver/AxelarGasReceiverProxy.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.9;\r\n\r\ncontract AxelarGasReceiverProxy {\r\n    error SetupFailed();\r\n    error EtherNotAccepted();\r\n\r\n    // bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    constructor(address gasReceiverImplementation, bytes memory params) {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(_IMPLEMENTATION_SLOT, gasReceiverImplementation)\r\n        }\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, ) = gasReceiverImplementation.delegatecall(\r\n            //0x9ded06df is the setup selector.\r\n            abi.encodeWithSelector(0x9ded06df, params)\r\n        );\r\n\r\n        if (!success) revert SetupFailed();\r\n    }\r\n\r\n    function implementation() public view returns (address implementation_) {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            implementation_ := sload(_IMPLEMENTATION_SLOT)\r\n        }\r\n    }\r\n\r\n    // solhint-disable-next-line no-empty-blocks\r\n    function setup(bytes calldata data) public {}\r\n\r\n    // solhint-disable-next-line no-complex-fallback\r\n    fallback() external payable {\r\n        address implementaion_ = implementation();\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            let result := delegatecall(gas(), implementaion_, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    receive() external payable {\r\n        revert EtherNotAccepted();\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gasReceiverImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EtherNotAccepted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetupFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AxelarGasReceiverProxy", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "000000000000000000000000c34e9700ee09b8662c3c4667c134ef43ec7f251600000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000a57adce1d2fe72949e4308867d894cd7e7de0ef2", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "1", "Implementation": "0xa607e2aed0d349297faecfc6750b533a7b170513", "SwarmSource": "ipfs://d5e3aa57f28d1469e78a435ee678ff8c71ce8a30d60c0152c305e3f11276b699"}]}