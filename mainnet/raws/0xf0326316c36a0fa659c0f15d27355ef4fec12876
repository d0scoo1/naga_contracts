{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/MintAndDisperse.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\ncontract MintAndDisperse {\\n    uint256 public constant cost = 100 * 10**18;\\n\\n    error LengthMismatch();\\n    error FailedConfettiTransfer();\\n    error RemainingFighters();\\n\\n    IConfetti public constant Confetti =\\n        IConfetti(0xCfef8857E9C80e3440A823971420F7Fa5F62f020);\\n\\n    IFighter public constant Fighter =\\n        IFighter(0x87E738a3d5E5345d6212D8982205A564289e6324);\\n\\n    ISummon public constant Summon =\\n        ISummon(0x808ed7A55b133f64069318Da0b173b71bbe44414);\\n\\n    constructor() {\\n        Confetti.approve(\\n            0x808ed7A55b133f64069318Da0b173b71bbe44414,\\n            type(uint256).max\\n        );\\n    }\\n\\n    function execute(\\n        uint256 total,\\n        uint256 tokenId,\\n        address[] calldata to,\\n        uint256[] calldata counts\\n    ) external {\\n        if (to.length != counts.length) {\\n            revert LengthMismatch();\\n        }\\n\\n        if (!Confetti.transferFrom(msg.sender, address(this), total * cost)) {\\n            revert FailedConfettiTransfer();\\n        }\\n\\n        for (uint256 i; i < total; i++) {\\n            Summon.mintFighter();\\n        }\\n\\n        for (uint256 i; i < to.length; i++) {\\n            for (uint256 j; j < counts[i]; j++) {\\n                Fighter.transferFrom(address(this), to[i], tokenId);\\n                tokenId += 1;\\n            }\\n        }\\n\\n        if (Fighter.balanceOf(address(this)) > 0) {\\n            revert RemainingFighters();\\n        }\\n    }\\n}\\n\\ninterface IFighter {\\n    function balanceOf(address) external returns (uint256);\\n\\n    function tokenOfOwnerByIndex(address, uint256) external returns (uint256);\\n\\n    function transferFrom(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n}\\n\\ninterface ISummon {\\n    function mintFighter() external;\\n}\\n\\ninterface IConfetti {\\n    function approve(address, uint256) external returns (bool);\\n\\n    function balanceOf(address) external returns (uint256);\\n\\n    function transferFrom(\\n        address,\\n        address,\\n        uint256\\n    ) external returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"src/=src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\"\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedConfettiTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RemainingFighters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Confetti\",\"outputs\":[{\"internalType\":\"contract IConfetti\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Fighter\",\"outputs\":[{\"internalType\":\"contract IFighter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Summon\",\"outputs\":[{\"internalType\":\"contract ISummon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"counts\",\"type\":\"uint256[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MintAndDisperse", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "10000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}