{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\n/*\r\n   \u2591 \u2591 \u2591 \u2591 \u2591     \u2591             \u2591 \u2591 \u2591   \u2591   \u2591       \u2591           \u2591 \u2591 \u2591 \u2591     \u2591 \u2591  \r\n\u2591 \u2591   \u2591 \u2591       \u2591               \u2591 \u2591 \u2591 \u2591 \u2591     \u2591   \u2591           \u2591 \u2591   \u2591 \u2591   \u2591 \u2591 \u2591 \r\n \u2591 \u2591 \u2591   \u2591       \u2591  \u2592\u2591\u2591\u2591\u2591\u2591\u2591        \u2591   \u2591   \u2591         \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591    \u2591 \u2591 \u2591   \u2591   \u2591  \r\n\u2591 \u2591   \u2591 \u2591 \u2591   \u2591    \u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2592       \u2591   \u2591     \u2591     \u2592\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2592   \u2591 \u2591 \u2591 \u2591     \u2591   \r\n           \u2591 \u2591 \u2591 \u2591 \u2591\u2593\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2593\u2591      \u2591 \u2591 \u2591 \u2591      \u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2593\u2592  \u2591 \u2591   \u2591 \u2591 \u2591 \u2591   \u2591\r\n\u2591 \u2591   \u2591   \u2591   \u2591 \u2591    \u2592\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2593\u2591         \u2591     \u2592\u2593\u2593\u2593\u2593\u2592\u2592\u2592\u2593\u2593\u2592\u2591    \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \r\n \u2591 \u2591 \u2591   \u2591 \u2591   \u2591       \u2592\u2593\u2588\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2593\u2591           \u2592\u2593\u2593\u2593\u2593\u2593\u2592\u2593\u2593\u2593\u2592\u2591     \u2591 \u2591   \u2591 \u2591 \u2591 \u2591 \u2591 \u2591\r\n\u2591   \u2591         \u2591 \u2591  \u2591\u2591    \u2592\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2593\u2591       \u2592\u2593\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2591            \u2591   \u2591 \u2591 \u2591   \r\n       \u2591 \u2591   \u2591     \u2591\u2588\u2593     \u2592\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2593\u2591   \u2592\u2593\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2592     \u2591\u2593    \u2591   \u2591 \u2591 \u2591 \u2591 \u2591 \u2591\r\n\u2591   \u2591 \u2591 \u2591 \u2591 \u2591 \u2591     \u2588\u2588\u2588\u2592    \u2591\u2592\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2592\u2592\u2593\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2592      \u2593\u2588\u2588   \u2591 \u2591   \u2591   \u2591 \u2591 \u2591 \r\n \u2591 \u2591   \u2591 \u2591 \u2591 \u2591      \u2593\u2593\u2593\u2588\u2588\u2593    \u2591\u2593\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2593\u2592      \u2593\u2588\u2588\u2588\u2588    \u2591     \u2591 \u2591 \u2591 \u2591 \u2591\r\n\u2591 \u2591 \u2591   \u2591 \u2591 \u2591   \u2591   \u2593\u2593\u2593\u2593\u2593\u2588\u2592     \u2591\u2593\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2593\u2592      \u2593\u2588\u2588\u2588\u2588\u2588\u2588   \u2591       \u2591 \u2591 \u2591 \u2591 \r\n \u2591 \u2591         \u2591 \u2591    \u2593\u2593\u2593\u2593\u2593\u2588\u2592       \u2591\u2593\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2592     \u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        \u2591   \u2591 \u2591   \u2591\r\n\u2591   \u2591 \u2591   \u2591 \u2591 \u2591     \u2593\u2593\u2593\u2593\u2593\u2588\u2592         \u2591\u2593\u2588\u2593\u2593\u2588\u2588\u2592     \u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     \u2591       \u2591 \u2591 \u2591 \r\n   \u2591 \u2591 \u2591 \u2591   \u2591 \u2591    \u2593\u2593\u2593\u2593\u2593\u2588\u2592           \u2591\u2593\u2588\u2593     \u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588  \u2591 \u2591 \u2591     \u2591 \u2591   \u2591\r\n\u2591   \u2591 \u2591 \u2591 \u2591 \u2591   \u2591   \u2593\u2593\u2593\u2593\u2593\u2593\u2592     \u2591 \u2591     \u2591    \u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591 \u2593\u2588\u2588\u2588\u2588\u2588   \u2591 \u2591 \u2591 \u2591     \u2591   \r\n \u2591 \u2591 \u2591 \u2591 \u2591   \u2591 \u2591    \u2593\u2593\u2593\u2593\u2593\u2588\u2592    \u2591 \u2591         \u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2592   \u2588\u2588\u2588\u2588\u2588\u2588    \u2591   \u2591 \u2591 \u2591 \u2591 \u2591  \r\n\u2591 \u2591 \u2591 \u2591 \u2591           \u2593\u2593\u2593\u2593\u2593\u2593\u2592   \u2591   \u2591 \u2591    \u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588      \u2588\u2588\u2588\u2588\u2588\u2588     \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \r\n \u2591   \u2591 \u2591 \u2591 \u2591       \u2591\u2593\u2593\u2593\u2593\u2593\u2588\u2592    \u2591 \u2591 \u2591     \u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593     \u2588\u2588\u2588\u2588\u2588\u2588    \u2591 \u2591     \u2591   \u2591 \u2591\r\n\u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591   \u2593\u2593\u2593\u2593\u2593\u2593\u2592   \u2591 \u2591 \u2591 \u2591       \u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2591  \u2588\u2588\u2588\u2588\u2588\u2588   \u2591   \u2591 \u2591   \u2591 \u2591   \r\n \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591   \u2591\u2593\u2593\u2593\u2593\u2593\u2593\u2592    \u2591   \u2591   \u2591      \u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593 \u2588\u2588\u2588\u2588\u2588\u2588    \u2591   \u2591 \u2591   \u2591 \u2591  \r\n\u2591     \u2591 \u2591 \u2591 \u2591      \u2591\u2593\u2593\u2593\u2593\u2593\u2593\u2592       \u2591 \u2591 \u2591     \u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2592  \u2588\u2588\u2588\u2588\u2588\u2588   \u2591 \u2591   \u2591       \u2591 \r\n         \u2591   \u2591 \u2591   \u2591\u2593\u2593\u2593\u2593\u2593\u2593\u2592  \u2591   \u2591 \u2591      \u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591    \u2588\u2588\u2588\u2588\u2588\u2588      \u2591 \u2591 \u2591 \u2591   \u2591 \u2591\r\n\u2591 \u2591 \u2591     \u2591 \u2591   \u2591    \u2591\u2593\u2593\u2593\u2593\u2592   \u2591   \u2591     \u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2591      \u2588\u2588\u2588\u2588\u2588\u2592     \u2591   \u2591 \u2591   \u2591   \r\n \u2591   \u2591 \u2591 \u2591 \u2591 \u2591 \u2591 \u2591     \u2592\u2593\u2588\u2592  \u2591   \u2591    \u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591        \u2588\u2588\u2593\u2591      \u2591 \u2591 \u2591 \u2591   \u2591 \u2591 \u2591\r\n\u2591   \u2591 \u2591   \u2591   \u2591          \u2592\u2592         \u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591          \u2593\u2592     \u2591 \u2591 \u2591 \u2591 \u2591   \u2591     \r\n \u2591   \u2591   \u2591   \u2591   \u2591   \u2591              \u2591            \u2591 \u2591         \u2591 \u2591 \u2591\r\n\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\r\n\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2592\u2592\u2592\u2593\u2593\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2593\u2592\u2592\u2592\u2592\u2592\u2593\u2592\u2592\u2592\r\n\u2593\u2588\u2593\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2592\u2592\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2588\u2588\u2593\u2592\u2592\u2592\u2593\u2588\u2592\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2592\u2592\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2592\u2588\u2593\u2592\u2592\u2593\u2588\u2588\u2592\u2592\u2592\r\n\u2593\u2588\u2588\u2593\u2592\u2592\u2592\u2588\u2588\u2588\u2592\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2592\u2588\u2588\u2588\u2588\u2592\u2592\u2593\u2588\u2592\u2592\u2588\u2588\u2592\u2592\u2592\u2591\u2588\u2593\u2593\u2588\u2593\u2592\u2592\u2592\u2592\u2593\u2588\u2593\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2593\u2592\u2588\u2588\u2593\u2592\u2592\u2592\u2592\r\n\u2593\u2588\u2592\u2588\u2593\u2592\u2588\u2588\u2593\u2588\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2588\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2588\u2592\u2588\u2588\u2591\u2588\u2588\u2593\u2593\u2588\u2592\u2592\u2588\u2588\u2593\u2593\u2593\u2588\u2588\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2593\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u2593\u2592\u2592\u2592\u2592\u2592\r\n\u2593\u2588\u2592\u2592\u2588\u2588\u2588\u2592\u2593\u2588\u2592\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2593\u2588\u2588\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2592\u2588\u2588\u2592\u2592\u2593\u2588\u2588\u2588\u2592\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2593\u2588\u2593\u2592\u2592\u2592\u2592\u2593\u2588\u2593\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2593\u2592\u2592\u2588\u2588\u2592\u2593\u2588\u2588\u2592\u2592\u2592\u2592\r\n\u2593\u2588\u2592\u2592\u2592\u2588\u2592\u2592\u2593\u2588\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2588\u2588\u2592\u2592\u2592\u2592\u2588\u2588\u2592\u2592\u2588\u2588\u2592\u2592\u2592\u2588\u2588\u2593\u2592\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2592\u2588\u2593\u2592\u2592\u2592\u2588\u2588\u2593\u2592\u2592\r\n\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2593\u2592\u2592\u2592\u2593\u2592\u2592\u2592\u2592\u2592\u2593\u2593\u2592\u2592\r\n            Written, deployed & Migrated by Krakovia (@karola96)\r\n */\r\n// o/\r\npragma solidity 0.8.13;\r\n//interfaces\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IERC20Metadata is IERC20 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n}\r\n// contracts\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view returns (address) {\r\n        \r\n        return _owner;\r\n    }   \r\n    \r\n    modifier onlyOwner() {\r\n        \r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        \r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n    \r\n    function getTime() public view returns (uint256) {\r\n        \r\n        return block.timestamp;\r\n    }\r\n}\r\n// main contract\r\ncontract moonrock is Context, IERC20, Ownable {\r\n\r\n//custom\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n//string\r\n    string private _name = \"MoonRock\";\r\n    string private _symbol = \"ROCK\";\r\n//bool\r\n    bool public moveEthToWallets = true;\r\n    bool public TakeEthForFees = true;\r\n    bool public swapAndLiquifyEnabled = true;\r\n    bool public blockMultiBuys = true;\r\n    bool public marketActive = false;\r\n    bool private isInternalTransaction = false;\r\n    bool public vestingActive = true;\r\n//address\r\n    address public uniswapV2Pair;\r\n    address public _MarketingWalletAddress = 0x9151D7B75601E8407049F3642365629e24d8f13d;\r\n    address public _DevelopmentWalletAddress = 0xc040621C8853d1E5fF74f891F976168d39Ba29aA;\r\n    address public _InvfundWalletAddress = 0x03c754661A0B30E01768D612328d95938716Cd31;\r\n    address[] private _excluded;\r\n//uint\r\n    uint public buyReflectionFee = 4;\r\n    uint public sellReflectionFee = 4;\r\n    uint public buyMarketingFee = 2;\r\n    uint public sellMarketingFee = 2;\r\n    uint public buyDevelopmentFee = 2;\r\n    uint public sellDevelopmentFee = 2;\r\n    uint public buyInvfundFee = 2;\r\n    uint public sellInvfundFee = 2;\r\n    uint public buyFee = buyReflectionFee + buyMarketingFee + buyDevelopmentFee + buyInvfundFee;\r\n    uint public sellFee = sellReflectionFee + sellMarketingFee + sellDevelopmentFee + sellInvfundFee;\r\n    uint public buySecondsLimit = 5;\r\n    uint public minimumTokensBeforeSwap;\r\n    uint public tokensToSwap;\r\n    uint public intervalSecondsForSwap = 60;\r\n    uint public minimumWeiForTokenomics = 1 * 10**16; // 0.01 ETH\r\n    uint private startTimeForSwap;\r\n    uint private MarketActiveAt;\r\n    uint private constant MAX = ~uint256(0);\r\n    uint8 private _decimals = 9;\r\n    uint private _tTotal = 1_000_000_000 * 10 ** _decimals;\r\n    uint private _rTotal = (MAX - (MAX % _tTotal));\r\n    uint private _tFeeTotal;\r\n    uint private _ReflectionFee;\r\n    uint private _MarketingFee;\r\n    uint private _DevelopmentFee;\r\n    uint private _InvfundFee;\r\n    uint private _OldReflectionFee;\r\n    uint private _OldMarketingFee;\r\n    uint private _OldDevelopmentFee;\r\n    uint private _OldInvfundFee;\r\n//struct\r\n    struct userData {\r\n        uint lastBuyTime;\r\n    }\r\n//mapping\r\n    mapping (address => uint256) private _rOwned;\r\n    mapping (address => uint256) private _tOwned;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) public premarketUser;\r\n    mapping (address => bool) public VestedUser;\r\n    mapping (address => bool) public excludedFromFees;\r\n    mapping (address => bool) private _isExcluded;\r\n    mapping (address => bool) public automatedMarketMakerPairs;\r\n    mapping (address => userData) public userLastTradeData;\r\n//event\r\n    event MarketingCollected(uint256 amount);\r\n    event DevelopmentCollected(uint256 amount);\r\n    event InvestmentFundCollected(uint256 amount);\r\n    event ExcludedFromFees(address indexed user, bool state);\r\n    event SwapSystemChanged(bool status, uint256 intervalSecondsToWait, uint256 minimumToSwap, uint256 tokensToSwap);\r\n    event MoveEthToWallets(bool state);\r\n// constructor\r\n    constructor() {\r\n        // set gvars\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Router = _uniswapV2Router;\r\n        minimumTokensBeforeSwap = 50_000 * 10 ** _decimals ;\r\n        tokensToSwap = minimumTokensBeforeSwap;\r\n        excludedFromFees[address(this)] = true;\r\n        excludedFromFees[owner()] = true;\r\n        premarketUser[owner()] = true;\r\n        excludedFromFees[_MarketingWalletAddress] = true;\r\n        //spawn pair\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n        .createPair(address(this), _uniswapV2Router.WETH());\r\n        // mappings\r\n        automatedMarketMakerPairs[uniswapV2Pair] = true;\r\n        _rOwned[owner()] = _rTotal;\r\n        emit Transfer(address(0), owner(), _tTotal);\r\n    }\r\n    // accept eth for autoswap\r\n    receive() external payable {\r\n  \t}\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n        return true;\r\n    }\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        return true;\r\n    }\r\n    function isExcludedFromReward(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n    function totalFees() public view returns (uint256) {\r\n        return _tFeeTotal;\r\n    }\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferFee) {\r\n            (uint256 rAmount,,,,,,,) = _getValues(tAmount);\r\n            return rAmount;\r\n        } else {\r\n            (,uint256 rTransferAmount,,,,,,) = _getValues(tAmount);\r\n            return rTransferAmount;\r\n        }\r\n    }\r\n    function tokenFromReflection(uint256 rAmount) public view returns(uint256) {\r\n        require(rAmount <= _rTotal, \"Amount must be less than total reflections\");\r\n        uint256 currentRate =  _getRate();\r\n        return rAmount / currentRate;\r\n    }\r\n    function setFees() private {\r\n        buyFee = buyReflectionFee + buyMarketingFee + buyDevelopmentFee + buyInvfundFee;\r\n        sellFee = sellReflectionFee + sellMarketingFee + sellDevelopmentFee + sellInvfundFee;\r\n    }\r\n    function excludeFromReward(address account) external onlyOwner() {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if(_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n    function includeInReward(address account) external onlyOwner() {\r\n        require(_isExcluded[account], \"Account is already included\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    function setMoveEthToWallets(bool state) external onlyOwner {\r\n        moveEthToWallets = state;\r\n        emit MoveEthToWallets(state);\r\n    }\r\n    function excludeFromFee(address account) external onlyOwner {\r\n        excludedFromFees[account] = true;\r\n        emit ExcludedFromFees(account,true);\r\n    }\r\n    function includeInFee(address account) external onlyOwner {\r\n        excludedFromFees[account] = false;\r\n        emit ExcludedFromFees(account,false);\r\n    }\r\n    function setReflectionFee(uint buy, uint sell) external onlyOwner() {\r\n        buyReflectionFee = buy;\r\n        sellReflectionFee = sell;\r\n        setFees();\r\n        require(buyFee + sellFee <= 25, \"Fees to high\");\r\n    }\r\n    function setMarketingFee(uint buy, uint sell) external onlyOwner() {\r\n        buyMarketingFee = buy;\r\n        sellMarketingFee = sell;\r\n        setFees();\r\n        require(buyFee + sellFee <= 25, \"Fees to high\");\r\n    }\r\n    function setDevelopmentFee(uint buy, uint sell) external onlyOwner() {\r\n        buyDevelopmentFee = buy;\r\n        sellDevelopmentFee = sell;\r\n        setFees();\r\n        require(buyFee + sellFee <= 25, \"Fees to high\");\r\n    }\r\n    function setInvfundFee(uint buy, uint sell) external onlyOwner() {\r\n        buyInvfundFee = buy;\r\n        sellInvfundFee = sell;\r\n        setFees();\r\n        require(buyFee + sellFee <= 25, \"Fees to high\");\r\n    }\r\n    function VestingMultipleAccounts(address[] calldata accounts, bool _state) external onlyOwner {\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n            VestedUser[accounts[i]] = _state;\r\n        }\r\n    }\r\n    function setMinimumWeiForTokenomics(uint _value) external onlyOwner {\r\n        minimumWeiForTokenomics = _value;\r\n    }\r\n    function disableVesting() external onlyOwner {\r\n        // there is no coming back after disabling vesting.\r\n        vestingActive = false;\r\n    }\r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal - rFee;\r\n        _tFeeTotal = _tFeeTotal + tFee;\r\n    }\r\n\r\n    function _getValues(uint256 tAmount) private view returns (uint256 rAmount, uint256 rTransferAmount, uint256 rFee,\r\n                                                               uint256 tTransferAmount, uint256 tFee, uint256 tMarketing,\r\n                                                               uint256 tDevelopment, uint256 tInvfund) {\r\n        (tTransferAmount, tFee, tMarketing, tDevelopment, tInvfund) = _getTValues(tAmount);\r\n        (rAmount, rTransferAmount, rFee) = _getRValues(tAmount, tFee, tMarketing, tDevelopment, tInvfund, _getRate());\r\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tMarketing, tDevelopment, tInvfund);\r\n    }\r\n\r\n    function _getTValues(uint256 tAmount) private view returns (uint256 tTransferAmount, uint256 tFee, uint256 tMarketing, uint256 tDevelopment, uint256 tInvfund) {\r\n        tFee = calculateReflectionFee(tAmount);\r\n        tMarketing = calculateMarketingFee(tAmount);\r\n        tDevelopment = calculateDevelopmentFee(tAmount);\r\n        tInvfund = calculateInvfundFee(tAmount);\r\n        tTransferAmount = tAmount - tFee - tMarketing - tDevelopment - tInvfund;\r\n        return (tTransferAmount, tFee, tMarketing, tDevelopment, tInvfund);\r\n    }\r\n\r\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tMarketing, uint256 tDevelopment, uint256 tInvfund, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\r\n        uint256 rAmount = tAmount * currentRate;\r\n        uint256 rFee = tFee * currentRate;\r\n        uint256 rMarketing = tMarketing * currentRate;\r\n        uint256 rDevelopment = tDevelopment * currentRate;\r\n        uint256 rInvfund = tInvfund * currentRate;\r\n        uint256 rTransferAmount = rAmount - rFee - rMarketing - rDevelopment - rInvfund;\r\n        return (rAmount, rTransferAmount, rFee);\r\n    }\r\n\r\n    function _getRate() private view returns(uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply / tSupply;\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns(uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;      \r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal);\r\n            rSupply = rSupply - _rOwned[_excluded[i]];\r\n            tSupply = tSupply - _tOwned[_excluded[i]];\r\n        }\r\n        if (rSupply < _rTotal / _tTotal) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n    function _takeMarketing(uint256 tMarketing) private {\r\n        uint256 currentRate =  _getRate();\r\n        uint256 rMarketing = tMarketing * currentRate;\r\n        _rOwned[address(this)] = _rOwned[address(this)] + rMarketing;\r\n        if(_isExcluded[address(this)])\r\n            _tOwned[address(this)] = _tOwned[address(this)] + tMarketing;\r\n    }\r\n    function _takeDevelopment(uint256 tDevelopment) private {\r\n        uint256 currentRate =  _getRate();\r\n        uint256 rDevelopment = tDevelopment * currentRate;\r\n        _rOwned[address(this)] = _rOwned[address(this)] + rDevelopment;\r\n        if(_isExcluded[address(this)])\r\n            _tOwned[address(this)] = _tOwned[address(this)] + tDevelopment;\r\n    }\r\n    function _takeInvfund(uint256 tInvfund) private {\r\n        uint256 currentRate =  _getRate();\r\n        uint256 rInvfund = tInvfund * currentRate;\r\n        _rOwned[address(this)] = _rOwned[address(this)] + rInvfund;\r\n        if(_isExcluded[address(this)])\r\n            _tOwned[address(this)] = _tOwned[address(this)] + tInvfund;\r\n    }\r\n\r\n    function calculateReflectionFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount * _ReflectionFee / 10**2;\r\n    }\r\n    function calculateMarketingFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount * _MarketingFee / 10**2;\r\n    }\r\n    function calculateDevelopmentFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount * _DevelopmentFee / 10**2;\r\n    }\r\n    function calculateInvfundFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount * _InvfundFee / 10**2;\r\n    }\r\n    function setOldFees() private {\r\n        _OldReflectionFee = _ReflectionFee;\r\n        _OldMarketingFee = _MarketingFee;\r\n        _OldDevelopmentFee = _DevelopmentFee;\r\n        _OldInvfundFee = _InvfundFee;\r\n    }\r\n    function shutdownFees() private {\r\n        _ReflectionFee = 0;\r\n        _MarketingFee = 0;\r\n        _DevelopmentFee = 0;\r\n        _InvfundFee = 0;\r\n    }\r\n    function setFeesByType(uint tradeType) private {\r\n        //buy\r\n        if(tradeType == 1) {\r\n            _ReflectionFee = buyReflectionFee;\r\n            _MarketingFee = buyMarketingFee;\r\n            _DevelopmentFee = buyDevelopmentFee;\r\n            _InvfundFee = buyInvfundFee;\r\n        }\r\n        //sell\r\n        else if(tradeType == 2) {\r\n            _ReflectionFee = sellReflectionFee;\r\n            _MarketingFee = sellMarketingFee;\r\n            _DevelopmentFee = sellDevelopmentFee;\r\n            _InvfundFee = sellInvfundFee;\r\n        }\r\n    }\r\n    function restoreFees() private {\r\n        _ReflectionFee = _OldReflectionFee;\r\n        _MarketingFee = _OldMarketingFee;\r\n        _DevelopmentFee = _OldDevelopmentFee;\r\n            _InvfundFee = _OldInvfundFee;\r\n    }\r\n\r\n    modifier CheckDisableFees(bool isEnabled, uint tradeType, address from) {\r\n        if(!isEnabled) {\r\n            setOldFees();\r\n            shutdownFees();\r\n            _;\r\n            restoreFees();\r\n        } else {\r\n            // vesting, used to lock vested users, no tranfer, no sell, buy allowed.\r\n            // can be disabled and cannot be enabled again\r\n            if(vestingActive) {\r\n                if(tradeType == 0 || tradeType == 2) {\r\n                    require(!VestedUser[from],\"your account is locked.\");\r\n                }\r\n            }\r\n            //buy & sell\r\n            if(tradeType == 1 || tradeType == 2) {\r\n                setOldFees();\r\n                setFeesByType(tradeType);\r\n                _;\r\n                restoreFees();\r\n            }\r\n            // no wallet to wallet tax\r\n            else {\r\n                setOldFees();\r\n                shutdownFees();\r\n                _;\r\n                restoreFees();\r\n            }\r\n        }\r\n    }\r\n\r\n    function isExcludedFromFee(address account) public view returns(bool) {\r\n        return excludedFromFees[account];\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    modifier FastTx() {\r\n        isInternalTransaction = true;\r\n        _;\r\n        isInternalTransaction = false;\r\n    }\r\n    function sendToWallet(uint amount) private {\r\n        uint256 marketing_part = amount * sellMarketingFee / 100;\r\n        uint256 development_part = amount * sellDevelopmentFee / 100;\r\n        uint256 invfund_part = amount * sellInvfundFee / 100;\r\n        (bool success, ) = payable(_MarketingWalletAddress).call{value: marketing_part}(\"\");\r\n        if(success) {\r\n            emit MarketingCollected(marketing_part);\r\n        }\r\n        (bool success1, ) = payable(_DevelopmentWalletAddress).call{value: development_part}(\"\");\r\n        if(success1) {\r\n            emit DevelopmentCollected(development_part);\r\n        }\r\n        (bool success2, ) = payable(_InvfundWalletAddress).call{value: invfund_part}(\"\");\r\n        if(success2) {\r\n            emit InvestmentFundCollected(invfund_part);\r\n        }\r\n    }\r\n\r\n    function swapAndLiquify(uint256 _tokensToSwap) private FastTx {\r\n        swapTokensForEth(_tokensToSwap);\r\n    }\r\n// utility functions\r\n    function transferForeignToken(address _token, address _to, uint _value) external onlyOwner returns(bool _sent){\r\n        if(_value == 0) {\r\n            _value = IERC20(_token).balanceOf(address(this));\r\n        }\r\n        _sent = IERC20(_token).transfer(_to, _value);\r\n    }\r\n    function Sweep() external onlyOwner {\r\n        uint balance = address(this).balance;\r\n        payable(owner()).transfer(balance);\r\n    }\r\n//switch functions\r\n    function ActivateMarket(bool _state) external onlyOwner {\r\n        marketActive = _state;\r\n        if(_state) {\r\n            MarketActiveAt = block.timestamp;\r\n        }\r\n    }\r\n//set functions\r\n    function setMarketingAddress(address _value) external onlyOwner {\r\n        _MarketingWalletAddress = _value;\r\n    }\r\n    function setDevelopmentAddress(address _value) external onlyOwner {\r\n        _DevelopmentWalletAddress = _value;\r\n    }\r\n    function setInvfundAddress(address _value) external onlyOwner {\r\n        _InvfundWalletAddress = _value;\r\n    }\r\n    function setSwapAndLiquify(bool _state, uint _minimumTokensBeforeSwap, uint _intervalSecondsForSwap, uint _tokenToSwap) external onlyOwner {\r\n        swapAndLiquifyEnabled = _state;\r\n        intervalSecondsForSwap = _intervalSecondsForSwap;\r\n        minimumTokensBeforeSwap = _minimumTokensBeforeSwap*10**decimals();\r\n        tokensToSwap = _tokenToSwap*10**decimals();\r\n        require(tokensToSwap <= _tTotal / 500,\"tokensToSwap should be max 0.2% of total supply.\");\r\n        emit SwapSystemChanged(_state,_intervalSecondsForSwap,_minimumTokensBeforeSwap,_tokenToSwap);\r\n    }\r\n// mappings functions\r\n    function editPowerUser(address _target, bool _status) external onlyOwner {\r\n        premarketUser[_target] = _status;\r\n        excludedFromFees[_target] = _status;\r\n    }\r\n    function editPremarketUser(address _target, bool _status) external onlyOwner {\r\n        premarketUser[_target] = _status;\r\n    }\r\n    function editExcludedFromFees(address _target, bool _status) external onlyOwner {\r\n        excludedFromFees[_target] = _status;\r\n    }\r\n    function editBatchExcludedFromFees(address[] memory _address, bool _status) external onlyOwner {\r\n        for(uint i=0; i< _address.length; i++){\r\n            address adr = _address[i];\r\n            excludedFromFees[adr] = _status;\r\n        }\r\n    }\r\n    function editAutomatedMarketMakerPairs(address _target, bool _status) external onlyOwner {\r\n        automatedMarketMakerPairs[_target] = _status;\r\n    }\r\n// operational functions\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        uint trade_type = 0;\r\n        bool takeFee = true;\r\n        bool overMinimumTokenBalance = balanceOf(address(this)) >= minimumTokensBeforeSwap;\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n    // market status flag\r\n        if(!marketActive) {\r\n            require(premarketUser[from],\"cannot trade before the market opening\");\r\n        }\r\n    // normal transaction\r\n        if(!isInternalTransaction) {\r\n        // tx limits\r\n            //buy\r\n            if(automatedMarketMakerPairs[from]) {\r\n                trade_type = 1;\r\n            }\r\n            //sell\r\n            else if(automatedMarketMakerPairs[to]) {\r\n                trade_type = 2;\r\n                // liquidity generator for tokenomics\r\n                if (swapAndLiquifyEnabled && \r\n                    balanceOf(uniswapV2Pair) > 0 && \r\n                    overMinimumTokenBalance &&\r\n                    startTimeForSwap + intervalSecondsForSwap <= block.timestamp\r\n                    ) {\r\n                        startTimeForSwap = block.timestamp;\r\n                        swapAndLiquify(tokensToSwap);\r\n                }\r\n            }\r\n            // send converted eth from fees to respective wallets\r\n            if(moveEthToWallets) {\r\n                uint256 remaningEth = address(this).balance;\r\n                if(remaningEth > minimumWeiForTokenomics) {\r\n                    sendToWallet(remaningEth);\r\n                }\r\n            }\r\n        }\r\n        //if any account belongs to excludedFromFees account then remove the fee\r\n        if(excludedFromFees[from] || excludedFromFees[to]){\r\n            takeFee = false;\r\n        }\r\n        // transfer tokens\r\n        _tokenTransfer(from,to,amount,takeFee,trade_type);\r\n    }\r\n\r\n    function _tokenTransfer(address sender, address recipient, uint256 amount,bool takeFee, uint tradeType) private CheckDisableFees(takeFee,tradeType,sender) {\r\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferFromExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferToExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferStandard(sender, recipient, amount);\r\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferBothExcluded(sender, recipient, amount);\r\n        } else {\r\n            _transferStandard(sender, recipient, amount);\r\n        }\r\n    }\r\n\r\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tMarketing, uint256 tDevelopment, uint256 tInvFund) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n        _takeMarketing(tMarketing);\r\n        _takeDevelopment(tDevelopment);\r\n        _takeInvfund(tInvFund);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tMarketing, uint256 tDevelopment, uint256 tInvFund) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n        _takeMarketing(tMarketing);\r\n        _takeDevelopment(tDevelopment);\r\n        _takeInvfund(tInvFund);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tMarketing, uint256 tDevelopment, uint256 tInvFund) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender] - tAmount;\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n        _takeMarketing(tMarketing);\r\n        _takeDevelopment(tDevelopment);\r\n        _takeInvfund(tInvFund);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n    function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tMarketing, uint256 tDevelopment, uint256 tInvFund) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender] - tAmount;\r\n        _rOwned[sender] = _rOwned[sender] - rAmount;\r\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\r\n        _takeMarketing(tMarketing);\r\n        _takeDevelopment(tDevelopment);\r\n        _takeInvfund(tInvFund);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n    function KKMigration(address[] memory _address, uint256[] memory _amount) external onlyOwner {\r\n        require(_amount.length == _amount.length,\"wrong address:amount rows\");\r\n        for(uint i=0; i< _amount.length; i++){\r\n            address adr = _address[i];\r\n            uint amnt = _amount[i] *10**decimals();\r\n            (uint256 rAmount, uint256 rTransferAmount,,,,,,) = _getValues(amnt);\r\n            _rOwned[owner()] = _rOwned[owner()] - rAmount;\r\n            _rOwned[adr] = _rOwned[adr] + rTransferAmount;\r\n            emit Transfer(owner(),adr,rTransferAmount);\r\n        } \r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DevelopmentCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"ExcludedFromFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvestmentFundCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MarketingCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"MoveEthToWallets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intervalSecondsToWait\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumToSwap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensToSwap\",\"type\":\"uint256\"}],\"name\":\"SwapSystemChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"ActivateMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"KKMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TakeEthForFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"VestedUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"VestingMultipleAccounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_DevelopmentWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_InvfundWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MarketingWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockMultiBuys\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyDevelopmentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyInvfundFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyReflectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySecondsLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"editAutomatedMarketMakerPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"editBatchExcludedFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"editExcludedFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"editPowerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"editPremarketUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"excludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"intervalSecondsForSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTokensBeforeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumWeiForTokenomics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moveEthToWallets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"premarketUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDevelopmentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellInvfundFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellReflectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setDevelopmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sell\",\"type\":\"uint256\"}],\"name\":\"setDevelopmentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setInvfundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sell\",\"type\":\"uint256\"}],\"name\":\"setInvfundFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setMarketingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sell\",\"type\":\"uint256\"}],\"name\":\"setMarketingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMinimumWeiForTokenomics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setMoveEthToWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sell\",\"type\":\"uint256\"}],\"name\":\"setReflectionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minimumTokensBeforeSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_intervalSecondsForSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenToSwap\",\"type\":\"uint256\"}],\"name\":\"setSwapAndLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferForeignToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_sent\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastTradeData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastBuyTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "moonrock", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://048851d91743f385716c148c54b67fe9121b3fba781dfd21e731e22c57987cc6"}]}