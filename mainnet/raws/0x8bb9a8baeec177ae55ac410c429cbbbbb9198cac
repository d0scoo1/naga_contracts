{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ninterface Renderer {\r\n    function renderBroker(uint256, uint256) external view returns (string memory, uint256);\r\n}\r\n\r\ncontract CyberBrokersRenderer {\r\n    Renderer renderer = Renderer(0xEC3e38e536AD4fA55a378B14B257976148b618aC);\r\n\r\n    function renderBroker(uint256 tokenId) public view returns (string memory) {\r\n        uint256 idx = 0;\r\n        string memory svg = '';\r\n        while (true) {\r\n            (string memory svg0, uint256 nidx) = renderer.renderBroker(tokenId, idx);\r\n\r\n            svg = string.concat(svg, svg0);\r\n\r\n            idx = nidx;\r\n            if (idx == 0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return svg;\r\n    }\r\n\r\n    function renderBroker(uint256 tokenId, uint256 iterations) public view returns (string memory) {\r\n        uint256 idx = 0;\r\n        string memory svg = '';\r\n        uint256 iter = 0;\r\n        while (true) {\r\n            (string memory svg0, uint256 nidx) = renderer.renderBroker(tokenId, idx);\r\n\r\n            svg = string.concat(svg, svg0);\r\n\r\n            idx = nidx;\r\n            if (idx == 0) {\r\n                break;\r\n            }\r\n            iter ++;\r\n            if (iter == iterations) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return svg;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"renderBroker\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"iterations\",\"type\":\"uint256\"}],\"name\":\"renderBroker\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CyberBrokersRenderer", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d1c0885045aa6637fd13cb549f3e37399d012105209d0b8ce849cbcc0a109571"}]}