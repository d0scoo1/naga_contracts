{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n}\r\n\r\ninterface IMOLOCH { \r\n    function totalShares() external view returns (uint256);\r\n    function totalLoot() external view returns (uint256);\r\n    function memberAddressByDelegateKey(address user) external view returns (address);\r\n    function members(address user) external view returns (address, uint256, uint256, bool, uint256, uint256);\r\n}\r\n\r\ncontract MolochToken {\r\n    IMOLOCH public moloch;\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public constant decimals = 18;\r\n\r\n    function setUp(address _moloch, string memory _name, string memory _symbol) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        moloch = IMOLOCH(_moloch);\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return (moloch.totalShares() + moloch.totalLoot()) * (10 ** decimals);\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        uint256 shares;\r\n        uint256 loot;\r\n        address memberAddress = moloch.memberAddressByDelegateKey(account);\r\n        (,shares,loot,,,) = moloch.members(memberAddress);\r\n        \r\n        return (shares + loot) * (10 ** decimals);\r\n    }\r\n}\r\n\r\ncontract CloneFactory {\r\n\r\n  function createClone(address target) internal returns (address result) {\r\n    bytes20 targetBytes = bytes20(target);\r\n    assembly {\r\n      let clone := mload(0x40)\r\n      mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\r\n      mstore(add(clone, 0x14), targetBytes)\r\n      mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\r\n      result := create(0, clone, 0x37)\r\n    }\r\n  }\r\n}\r\n\r\ncontract MolochTokenFactory is CloneFactory {\r\n    address payable public immutable template;\r\n\r\n    event MolochTokenCreated(address molochToken, address moloch, string name, string symbol);\r\n\r\n    constructor(address payable _template) {\r\n        template = _template;\r\n    }\r\n\r\n    function summonMolochToken(\r\n        address _moloch,\r\n        string memory _name,\r\n        string memory _symbol\r\n    ) external returns (address) {\r\n        MolochToken mt = MolochToken(payable(createClone(template)));\r\n\r\n        mt.setUp(_moloch, _name, _symbol);\r\n\r\n        emit MolochTokenCreated(address(mt), _moloch, _name, _symbol);\r\n\r\n        return (address(mt));\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moloch\",\"outputs\":[{\"internalType\":\"contract IMOLOCH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_moloch\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MolochToken", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://26b086e0c73896d78031a1d917efea09c983483d270e7cfbb863f9a7e2674465"}]}