{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ImageAndDescriptionContracts/CodeContributor1.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"../ImageAndDescription.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract CodeContributor1 is ImageAndDescription {\\n\\n    constructor(address _parent) ImageAndDescription(_parent) {}\\n\\n    function image(uint256) external override view onlyParent returns (string memory) {\\n        return string(\\n            abi.encodePacked(\\n                '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 400 400\\\" xml:space=\\\"preserve\\\">',\\n                    '<style>',\\n                        'svg{',\\n                        'font-family: monospace;',\\n                        '}',\\n                        '.ringtext{',\\n                        'letter-spacing: 1.5px;',\\n                        'font-size: 15px;',\\n                        'fill: #ffffff;',\\n                        '}',\\n                        '.cointext{',\\n                        'letter-spacing: 9px;',\\n                        'font-size: 28px;',\\n                        'text-anchor: middle;',\\n                        'fill: #ffffff;',\\n                        '}',\\n                        '.obverse{',\\n                        'letter-spacing: 2px;',\\n                        'font-size: 18px;',\\n                        'text-anchor: middle;',\\n                        'fill: #ffffff;',\\n                        '}',\\n                        '.star{',\\n                        'font-size: 30px;',\\n                        '}',\\n                    '</style>',\\n                    '<defs>',\\n                        '<path id=\\\"ring\\\" d=\\\"M80,200a120,120 0 1,0 240,0a120,120 0 1,0 -240,0\\\" fill=\\\"none\\\"/>',\\n                        '<clipPath id=\\\"clip1\\\"><rect x=\\\"300\\\" y=\\\"0\\\" width=\\\"100\\\" height=\\\"400\\\">',\\n                            '<animate attributeName=\\\"x\\\" values=\\\"300;300;0;0\\\" keyTimes=\\\"0;.5;.8;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\"/>',\\n                            '<animate attributeName=\\\"width\\\" values=\\\"100;100;300;70\\\" keyTimes=\\\"0;.5;.8;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\"/>',\\n                        '</rect></clipPath>',\\n                        '<clipPath id=\\\"clip2\\\"><rect x=\\\"300\\\" y=\\\"0\\\" width=\\\"100\\\" height=\\\"400\\\">',\\n                            '<animate attributeName=\\\"x\\\" values=\\\"300;0;0;0\\\" keyTimes=\\\"0;.3;.5;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\"/>',\\n                            '<animate attributeName=\\\"width\\\" values=\\\"100;300;100;100\\\" keyTimes=\\\"0;.3;.5;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\"/>',\\n                        '</rect></clipPath>',\\n                        '<radialGradient id=\\\"background\\\">',\\n                        '<stop offset=\\\"0%\\\" style=\\\"stop-color:#6E2F5D;\\\" />',\\n                        '<stop offset=\\\"100%\\\" style=\\\"stop-color:#2E0F2B;\\\" />',\\n                        '</radialGradient>',\\n                    '</defs>',\\n                    '<rect width=\\\"400\\\" height=\\\"400\\\" fill=\\\"url(#background)\\\"/>',\\n                    '<text>',\\n                        '<textPath xlink:href=\\\"#ring\\\"><tspan class=\\\"ringtext\\\">TOKEN OF APPRECIATION \\\\u2726 TOKEN OF APPRECIATION \\\\u2726 TOKEN OF APPRECIATION \\\\u2726</tspan></textPath>',\\n                        '<animateTransform attributeName=\\\"transform\\\" type=\\\"rotate\\\" from=\\\"360 200 200\\\" to=\\\"0 200 200\\\" dur=\\\"74s\\\" repeatCount=\\\"indefinite\\\"/>',\\n                    '</text>',\\n                    '<g>',\\n                        '<ellipse cx=\\\"185\\\" cy=\\\"200\\\" rx=\\\"0\\\" ry=\\\"88\\\" fill=\\\"#FE267D\\\">',\\n                            '<animate attributeName=\\\"cx\\\" values=\\\"185;200;215\\\" keyTimes=\\\"0;.5;1\\\" dur=\\\"4s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                            '<animate attributeName=\\\"rx\\\" values=\\\"0;88;0\\\" keyTimes=\\\"0;.5;1\\\" dur=\\\"4s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                            '<animate attributeName=\\\"fill\\\" values=\\\"#FE267D;#95023D;#FE267D\\\" keyTimes=\\\"0;.5;1\\\" dur=\\\"4s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                        '</ellipse>',\\n                        '<rect x=\\\"185\\\" y=\\\"112\\\" width=\\\"30\\\" height=\\\"176\\\" fill=\\\"#FE267D\\\">',\\n                            '<animate attributeName=\\\"x\\\" values=\\\"185;200;185;200;185\\\" keyTimes=\\\"0;.25;.5;.75;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5;0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                            '<animate attributeName=\\\"width\\\" values=\\\"30;0;30;0;30\\\" keyTimes=\\\"0;.25;.5;.75;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5;0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                            '<animate attributeName=\\\"fill\\\" values=\\\"#FE267D;#95023D;#FE267D;#95023D;#FE267D\\\" keyTimes=\\\"0;.25;.5;.75;1\\\" dur=\\\"8s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5;0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                        '</rect>',\\n                        '<ellipse cx=\\\"215\\\" cy=\\\"200\\\" rx=\\\"0\\\" ry=\\\"88\\\" fill=\\\"#EEDACC\\\">',\\n                            '<animate attributeName=\\\"cx\\\" values=\\\"215;200;185\\\" keyTimes=\\\"0;.5;1\\\" dur=\\\"4s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                            '<animate attributeName=\\\"rx\\\" values=\\\"0;88;0\\\" keyTimes=\\\"0;.5;1\\\" dur=\\\"4s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                            '<animate attributeName=\\\"fill\\\" values=\\\"#510020;#F45A98;#510020\\\" keyTimes=\\\"0;.5;1\\\" dur=\\\"4s\\\" repeatCount=\\\"indefinite\\\" calcMode=\\\"spline\\\" keySplines=\\\"0.5 0.5 0.5 1; 0.5 0 0.5 0.5\\\"/>',\\n                        '</ellipse>',\\n                    '</g>',\\n                    '<g clip-path=\\\"url(#clip1)\\\">',\\n                        '<text transform=\\\"translate(200,149)\\\" class=\\\"obverse\\\"><tspan class=\\\"star\\\" x=\\\"0\\\" y=\\\"0\\\"></tspan><tspan class=\\\"star\\\" x=\\\"0\\\" y=\\\"20\\\">\\\\u2726</tspan><tspan x=\\\"0\\\" y=\\\"45\\\">CODE</tspan><tspan x=\\\"0\\\" y=\\\"70\\\">CONTRIBUTOR</tspan><tspan class=\\\"star\\\" x=\\\"0\\\" y=\\\"95\\\"></tspan><tspan class=\\\"star\\\" x=\\\"0\\\" y=\\\"115\\\"></tspan></text>',\\n                    '</g>',\\n                    '<g clip-path=\\\"url(#clip2)\\\">',\\n                        '<text transform=\\\"translate(200,172)\\\" class=\\\"cointext\\\"><tspan>NFT</tspan><tspan x=\\\"0\\\" y=\\\"34\\\">PAWN</tspan><tspan x=\\\"0\\\" y=\\\"68\\\">SHOP</tspan></text>',\\n                    '</g>',\\n                    '</svg>'\\n                )\\n            );\\n    }\\n\\n    function description(uint256) external override view onlyParent returns (string memory) {\\n        return string(\\n            abi.encodePacked(\\n                \\\"Level 1 Code Contributor token, given to community members who contributed code that has been deployed to production.\\\"\\n                )\\n            );\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/ImageAndDescription.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nabstract contract ImageAndDescription {\\n    address public parent;\\n\\n    modifier onlyParent() {\\n        require(msg.sender == parent, \\\"ImageAndDescription: only parent\\\");\\n        _;\\n    }\\n\\n    constructor(address _parent) {\\n        parent = _parent;\\n    }\\n\\n    function image(uint256 tokenId) external view virtual returns (string memory);\\n    function description(uint256 tokenId) external view virtual returns (string memory);\\n}\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_parent\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"image\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CodeContributor1", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000b9a069f85d51cc5cf23e910d1a5fd69744e926f1", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}