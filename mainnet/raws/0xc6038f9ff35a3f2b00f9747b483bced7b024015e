{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.25;\r\n/**\r\n*\r\n* ETH CRYPTOCURRENCY DISTRIBUTION PROJECT\r\n* \r\n*  - GAIN 4% PER 24 HOURS (every 5900 blocks)\r\n*  - Life-long payments\r\n*  - The revolutionary reliability\r\n*  - Minimal contribution 0.01 eth\r\n*  - Currency and payment - ETH\r\n*  - Contribution allocation schemes:\r\n*    -- 85% payments\r\n*    -- 15% Marketing + Operating Expenses\r\n*\r\n*   ---About the Project\r\n*  Blockchain-enabled smart contracts have opened a new era of trustless relationships without \r\n*  intermediaries. This technology opens incredible financial possibilities. Our automated investment \r\n*  distribution model is written into a smart contract, uploaded to the Ethereum blockchain and can be \r\n*  freely accessed online. In order to insure our investors' complete security, full control over the \r\n*  project has been transferred from the organizers to the smart contract: nobody can influence the \r\n*  system's permanent autonomous functioning.\r\n* \r\n* ---How to use:\r\n*  1. Send from ETH wallet to this smart contract address\r\n*     any amount from 0.01 ETH.\r\n*  2. Verify your transaction in the history of your application or etherscan.io, specifying the address \r\n*     of your wallet.\r\n*  3a. Claim your profit by sending 0 ether transaction (every day, every week, i don't care unless you're \r\n*      spending too much on GAS)\r\n*  OR\r\n*  3b. For reinvest, you need to first remove the accumulated percentage of charges (by sending 0 ether \r\n*      transaction), and only after that, deposit the amount that you want to reinvest.\r\n*  \r\n* RECOMMENDED GAS LIMIT: 200000\r\n* RECOMMENDED GAS PRICE: https://ethgasstation.info/\r\n* You can check the payments on the etherscan.io site, in the \"Internal Txns\" tab of your wallet.\r\n*\r\n* ---It is not allowed to transfer from exchanges, only from your personal ETH wallet, for which you \r\n* have private keys.\r\n* \r\n* Contracts reviewed and approved by pros!\r\n* \r\n* Main contract - ETHEREUM DISTRIBUTION.\r\n*/\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    return _a / _b;\r\n  }\r\n\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b <= _a);\r\n    return _a - _b;\r\n  }\r\n\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a + _b;\r\n    assert(c >= _a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ETH_DISTRIBUTION {\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress public constant marketingAddress = 0x2dB7088799a5594A152c8dCf05976508e4EaA3E4;\r\n\r\n\tmapping (address => uint256) deposited;\r\n\tmapping (address => uint256) withdrew;\r\n\tmapping (address => uint256) refearned;\r\n\tmapping (address => uint256) blocklock;\r\n\r\n\tuint256 public totalDepositedWei = 0;\r\n\tuint256 public totalWithdrewWei = 0;\r\n\r\n\tfunction() payable external\r\n\t{\r\n\t\tuint256 marketingPerc = msg.value.mul(15).div(100);\r\n\r\n\t\tmarketingAddress.transfer(marketingPerc);\r\n\t\t\r\n\t\tif (deposited[msg.sender] != 0)\r\n\t\t{\r\n\t\t\taddress investor = msg.sender;\r\n\t\t\tuint256 depositsPercents = deposited[msg.sender].mul(4).div(100).mul(block.number-blocklock[msg.sender]).div(5900);\r\n\t\t\tinvestor.transfer(depositsPercents);\r\n\r\n\t\t\twithdrew[msg.sender] += depositsPercents;\r\n\t\t\ttotalWithdrewWei = totalWithdrewWei.add(depositsPercents);\r\n\t\t}\r\n\r\n\t\taddress referrer = bytesToAddress(msg.data);\r\n\t\tuint256 refPerc = msg.value.mul(4).div(100);\r\n\t\t\r\n\t\tif (referrer > 0x0 && referrer != msg.sender)\r\n\t\t{\r\n\t\t\treferrer.transfer(refPerc);\r\n\r\n\t\t\trefearned[referrer] += refPerc;\r\n\t\t}\r\n\r\n\t\tblocklock[msg.sender] = block.number;\r\n\t\tdeposited[msg.sender] += msg.value;\r\n\r\n\t\ttotalDepositedWei = totalDepositedWei.add(msg.value);\r\n\t}\r\n\r\n\tfunction userDepositedWei(address _address) public view returns (uint256)\r\n\t{\r\n\t\treturn deposited[_address];\r\n    }\r\n\r\n\tfunction userWithdrewWei(address _address) public view returns (uint256)\r\n\t{\r\n\t\treturn withdrew[_address];\r\n    }\r\n\r\n\tfunction userDividendsWei(address _address) public view returns (uint256)\r\n\t{\r\n\t\treturn deposited[_address].mul(4).div(100).mul(block.number-blocklock[_address]).div(5900);\r\n    }\r\n\r\n\tfunction userReferralsWei(address _address) public view returns (uint256)\r\n\t{\r\n\t\treturn refearned[_address];\r\n    }\r\n\r\n\tfunction bytesToAddress(bytes bys) private pure returns (address addr)\r\n\t{\r\n\t\tassembly {\r\n\t\t\taddr := mload(add(bys, 20))\r\n\t\t}\r\n\t}\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDividendsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDepositedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userReferralsWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userWithdrewWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "ETH_DISTRIBUTION", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://b6e61c8e4a584c7588dd9d1ffa05e0da9d8e581d7a0b7a7c351c6ea44b8effea"}]}