{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/EIGHT.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: 8th project\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                                                                                                                                                                                                    //\\n//                                                                                                                                                                                                                                                                                                                    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo':0WMMMMMMMMMMMMWNK0KNWMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNo'cONMMWXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo'lKWMMMMMMMMMMWNKkOO0NMMMWX0KNWMMMWNNXXKKKKKXXNNWMMMMMMMMMMMMMMWXx;'oKWWNXNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXo'cKWMMMMMMMMMWKd:cxXMMMMWXXXXNX0kdoc::::ccodxKXNNWMMMMMMMMMMMMMMMMWXd;:ONMN0KWMMMXKNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo.:0NWWMMMMMMWXd;cxONMMMMMWX0Oxl:;:coxO0KXNNWMMMMMMWNX0kxxkKNMMMMMMMMMWKOkOXWKONMMWK0NXk0WMMMMMMMMMMMMMWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXc,xNWWMMMMMMNk::kNWMMMMMWNOl;,:oOKNWMMMMMMWWMMWWMMMMMWX0kdddxOXWMMMMMMMMMM0kNWN0XWXKWWNd,l0WMMMMMWNKOkdoooooodOKWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;oKNNWMMMMMXl,oXMMMMMMW0d:,:xKNMMMMMMMWNNWNWMMWNXK0OkkxOKNXKkk0XNWMMMMMMMMWNNWNooX0lOWWKo'lNMMMN0xc;',;::,'''',xNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0OOOkkkOOKNWMMMMMNo;kXNMMMMMW0:'dNMMMMMWKo;;dKWMMMMMMMMNkx0NWWXOOdcclodk0OKWMMMMMMMMMMMMMMMMMMMWWMKkKXk0NWWNKXWMN0occcclxKNXkddddkKWMMMMMMMMMMMMMMMMWXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNKkdolodxxxxxdddookXWMMXc:KNWMMMMM0;;kNMMMMWXd,;xXWMMMMMMMWKocd0Kko:;;dkkKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXxd0WWWWWMMMMMMWWMMMMMMMMMMWNNNWWWWMMWWMMWWMMMMMMMWWWWWWWWMMWWMMMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0dlodOKNWMMMMMMMMWNXXNWMWO,cXWWMMMW0:,kWMMMWOo:,oKWMMMMMMMMWO;,oxc,,:d0NWMMMMMMMWNXK0OKNNNNWMMMMMMMMMMMMMMMMMMMMMMMMMWN0kkkKWNNWMMMMMMMMMMMMMMMMMMMWXxooodx0NWMMMMWNWMMMWWNNNNNNXNWWNNNWMMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkcco0NMMMMMMMMMMMMMMMMMMMMWd.cXMMMMMK;'kWMMMNd,.:ONWMMMMMMMMWX0d:;,ckKWMMMMWWWWXOxxkxk00XMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWOoooo0MNNWMMMMMMMMMMMMMMMMMMMMNK00d::lx0NWMMW0ONWWWNNNWMMMWNNWWWNXNMMMMMMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c;oKWMMMMMMMMMMMMMMMMMMMMMMWx'cXMMMMM0:lXWMMXo'ckKWMMMMMMMMMMW0o,;dKWMMMMMMWKkkOxxOXMMMMWMMMWWWWNWMMMMMMMMMMMMMMMMMMMMMMWNNWWMMMMMMMMMWNWMMMMMMMMMMMMMMMMMMWNNNNX0XWMMKd0WMWWWMMMMMMMNNWWMWWMMMMMWWMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx,:OWMMMMMMMMMMMMMMMMMMMMMMMMWO,;KMMMMNo;kWMMNo'lXWMMMMMMMMMMMNx;;dXWMMMMMWXkl;:OWMMMMMNO0K0XMMWNXK00OOOkkkkOO00XNWMMMMMMMMMWWMMMMMMNKKWMMMMMMMMMMMMMMMMMMMMMMMMMMNXXWMMNxxNMMMMMMMMMMMMMWMMMMMMMMWWWWWM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXd':KWMMMMMMMMMMMMMMMMMMMMMMMMMMK:'kWMMMK::KWMXo'cKMMMMMMMMMMMW0c'lKWMMMMMW0o;cO0NMMWXKWX00XWNKkoc;,,,;;;;;:;;;,''',:ldOXWMMMMMWKXMWXXxlkNWWWMMMMMMMMMMMMMMMMMMMWX0kxkxxKWXdoXMMMMMMMMMMMMWNMMMMMMMMMMWWNN    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKkl;.;0MMMMMMMMMMMMMMMMMMMMMMMMMMMMNo.lKXWWO;dWMM0;;0WMMWWMMMMMMWk,,oKMMMMMWKkdlxKMMWXNKodXMNKxc;,,:ldO0KXKO0XNNNNNK0Oxo:,'':oOXWMNXNMXOK0k0KKKKOKNKkxxxxxk0NWMMMMMWXOxxxolkNNxdKWMMMMWWNNNNNNWMMMMMMMMMWWMWN    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0dc;''..xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,,okXNo,OMMWk;dXNMMWWMMMMMNx',cxNMMMMMKdxXWMMWNKx0KKN0d;',cx0NWWWMMMWXOKXKXWMMMMMMMWNKxc,.,lONMMMMMWWNWMWXx::l;,loollloxk0KK00KKXNNNXKXNN00NMMWWNNNNWWWWWWWWMMMMMMMNNMMW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0xc,''''..;KMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMNo.;d0Xc,OMMXl;0NWMMMMMMMMNx':xd0MMMMMMMMMMMMWNWXO00d;',ckXWMMMWNWMMMMWWWXdoKMMMMMMMNNMMWNkc;.,xXWNK0OkOOdl;'''';o0Kk0NNNNXXKKK0OO0K000OOOOOOO000XNNWNNNXKXXNWWMMMMMWWMWW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXkl;'''''''..:XMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMXl':xKo'xWMK:lXWMMMMMMMMXo.;0MMMMMMMWMMMMMMMXXMNOl'.:xXWMMMMMMWWMMMMMMMMNOdKMMMMMMMNNMMMMNNNk:.,dKNKOko;''''''';o00od0NKXWMMMMMWWWNNWMNXXXXXK00OOOOOxxOKKXNWWWMMMMMWMMWW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOo;''''''''''..:XMMMMMMMMMMMMMMMMMMMMMMMMMMNNWMMMXl,lKk,lNWx'oNWWMMMMMMMK:'xWMMMMMMMMMMMMMXXWNO:..:OWMMMWMMMMMWWMMMMMMMMWKKWMMMMMMMWWMMMMMMWWNO:.,kNWKdoo:'';c::o0NNXNN00WWWNXXNWN0ONMMWNNWMMMNXXWNXXK0000000KXNWWMMMMWW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOl,''''''''''''..;KMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMXo;k0;:KNo.oNWXXXNMMMMO;lKWMMMMMMWMMMMMM00Xo..,kNMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMNk'.:0N0OKo''';ldO00XMMMWWWWNNXNWWNXNWMMMNXWMMWXOKWWWWNXNWWXKKK00000KNNWM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0l,'''''''''',::lookXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkoxl,xNd.oNNNXKNMMMNl,kWMMMMMMMMMMMMMMW0c..lXMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMMMMWKc.'kNWKdllll:l0NNWWWNNWWWMWWWWWWMWMMMMWWMMMMWWWMMMMMWWMMMMMMMWWNKK00NM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXd;''''''''''''oKXNWWMMWWWWWWWWNWWMMMMMMMMMMMMMMMMMMMMMMMMMXK0xONx.cNMMMMMMMMK::KWWMMMMMMMMWWMWNk'.'xNMMMMMMMMMMMMMMMMMMMN0ONMMMMWWMMMMMMMMMWNWMMMMMMWWMKc..dNWKOXWWkcdOXN0oco0NWNNNWNXNWWWXKNWWWNWMWWMMMMMMWWWMMMMMWWWNKKNNWM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWOc''''''''''''''dNMMMWWMWWWMMMMWWWWMMMMMMMMMMMMMMMMMWKOxxOKOdddccc,.;0WMMMMMMWk,lNMMMMMMMMMMMMMNx. 'kWMMMMMMMMMMMMMMMMMMMMNXXWMWWMWWMMMMMMMMMNKNMMMMMMWXOOKd..oNWOO0Oo:xNNOc,:oONWNXNWX0O0XKOOXWMXO0WMMMMMMMNxxXMMMMMWWWXKKNNNW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXx;'''''''''''',lkKWMWWNWMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOdll:;;,;c:,''...dWMWWNNN0d,lNWWMMMMMMMW0kOo. 'kWMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWMMMMMMMMMMMMMMMMMMNKNWMMNo..dXkoc'''oNKockXNWMMMMNKxccx0KNWWWNWWWMMMMMMMMW00NMMMWWMMWNNWWWWM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKo,'',codxxdl;,''xWWMMNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXK0OOl'',,''''''..;OOdlckWMMOkWNNMMMMMW0xc,.  .xWMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN00XWMMMXl.'OKkc;;'oX0oldk0KWMW0ooOkxOXWWWX0KKOKWNNKKKKKXNNWMMMWNWMWWWWMMWK    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c'',cONWMMMWWKx:,dWMMWNWMMMMMMMMMMMMMMMMMMMMMWMMMWMWWX0kkkdc,''''''''''..,,'''lOOO0XNKXMWXOoc,'''.. cNMMK0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNKXWMMMMMMMMMWNMMXXMM0, cXKd;;;o0o,'';cdKWKdcoKWWWK0NMMMWXkol::,,,,;;:cdkXWMMMMWWMMMMN0    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c'''c0WMMMMMMMMW0:dWMMWNWMMMMMMMMMMMMMWWWWMMMMMMMMWNNWNKOOkOx;''''''''''...,,,',''..:c,okl;''''''.. .kWMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0xKWMNKNMMMWMMWMMMMMMWo .xd,:clol,''',dKNWN0kOXNKd;dKO0kl,..''''''''''''';oONWK0XWMMMMW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKc''''oXMMMMMMMMMMXkOWMMWNWMMMMMMMMMMWWWWWWWWMMMMMMWKdodl:,,,,;,'''''''''''...coxOOko..''''''''''''.  ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMXkONMWKOXMMMWNWWMMMMMMMO. c0kxkkl'.''',:ok0KOKWXx;.';oc''.'''''''''''''''''''ckkx0WMMMMW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKl'''''c0WMWNNWMMMMKokNMMWNWMMMMMMMWWWWWMMMMMMMMMMMMWNd,'''''''''''''''''''''...'ckOkl'.''''''''''''.  lNMMMMMMMMMMMMMMMMMMMMMMMMWMMMWWWMMMMMWkdKMMX0XWMMWNWMMMMMM00WK:.ckONNx,''''',;;;xNWWXl'.'';;'.'''''''''''''''''''''';kNMMWWMNO    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo,''''',ckNN00NWMW0lcxXMMMWNWWMMMMWNNWMMMMMMMMMWWWWWKx:''''''''''',cc;,ldll:'....'''''''''''''''''''.  oWMMMMMMMMMMMMMMMMMMMMMMMNNMMMNNWMMMMM0oxNMNXXNMMNNWWMMWWWXcoWNd'cxOXKl'''''',c:cONMXo'.''''''''''''''''''''''''''''''c0WMNNMWK    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx,'''''''',codk0Oxl;'':ONWWWNXNWMMWWNWWMMMMMWWWWWNWWWKko:,;clooc,'':OXklOWWWOl;''''''''''''''''''''''. .dWMMMMMMMMMMMMMMMMMMMMMMMMWWMWNNWMMMMNdlKMW0x0WMNKXMMMMWWNl cNNl ,0XX0c''''''',;oONWk;.''''''''''''''''''''''''''''''''xWMWNNNX    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0:'''''''''''..',,''''',cxxkKWWNNWMWNWMMMMMWWWWWMMMMMMMMWX0OO00x:cooxOOOOXMMMKxc''''''''''''''''''''''. .oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKXWMNkkXMW0ONMMMMMMXc :KXc ,0NNNOl:;''',:oddOKk:'''''''''''''''''''''''''''''''''dNW00WWN    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl'''''''''''...'''''''';okO0NWWMWWMWWWMMMMWNNWMMMMMMMMMMMMMWXXWd,lKWWXxOMXOOkl,.''''''''''''''''''''''.  cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0KWWMXk0MNXMMMMN0kKWK; cO0KXNxl;''';odc,oO0d'''''''''''''''''''''''''''''''''dWWXXMMW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx,'''''''''''...'''''''',o0XNWWMMMMMWNWMMMWNNWMMMMMMMMMMMMMNOcoOl''lOOkllOl'''''''''''''',,'.''''...'''.  ,0MMMMMMMMMMMMMWWWWWMMMWWMMWKXWMMMMN00NMWXx0MMWOkNMMMMMMWKKMMWk..dNNNNXx;':lo:;;'';cc;'''''''''''''''''''''''''',::;'',xNNWMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOooollloooool;;loooooooooxkk0NWMMMMMMWNWMMWNWMMMMMMMMMMMMWKxc:ccc:;,''''''''''''''''''''',,'..''.. ...''. .dWMMMMMMMMMMMWNXNWWMMMWWMMNKNMMMMW0xkXWXK0XMMXx0MMXXMMMMKKWWNc ,KMMMMWX0xkK0xo;'''''''''''''''''''''''''''''''''''''.:0NNWWX00    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWWWWWWWWXxkWWWWWWWWMWWWMMMMMMMMMMMWNWMWNWMMMMMMMMMMMWNK0KXKkolc:,''''''''''''''''''''''''''''.....''.  ;KMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMWNXNWN0XWWWWOkNMMMMMMXdkMMMO..dWMMMMWXXNNWNNKo;'''',,'''''''''''''''''''''''''''''';kNWMMMNOO    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdkWMMMMMMMMMMMMMMMMMMMMMMMWWNNNWMMMMMMMMMWWWMMWWWk,'::'''''''''''''''''''''''''''''''''''''.. .oNMMMMMMMMMMMMMMMMMMWWMMWWMMMMMWXKXWWNKNMWMXdOWWMMMWMO'lWMX:.:KNWWWMWNNNNWKKkc,,''':ol'''''''''''''''''''''''''''':OX0XWMMMWW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNxkXXXXNWMMMMMMMMMMMMMMMWKKNNkco0NMMWWMMMNNWMMMW0xc''''.'''''''''''''''''''''''''''''''''''''.. .xWMMMMMMMMMMMMMMMMXKXXNNWMWN0kOKNMMNXNNWMWkxXWWMMMMKX00MXc ,0KO0KXXNMMWWMNNX0kkkxdodkxc,''''''',,'''''''''''''.,dXWNNNWMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXKXXXXKKKXWMMMMMMMMMMMMKx0Nk;',;o0NWMMMNXWMMMNk;'',;,''''''''''''''''''''''''''''''''''''''''.. .xWMMMMMMMMMMMMMWNXNNXXNXxooxO0KNMWNNKKWMXxOWMMMMOckWNWXc 'OWWWWMWXXXK0KNMNK0OO0Oo;,dXXOdc,'''''''''''''''..,:d0WWMMMMWMMMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKKNMMMMMMMMMMMKkXW0c'''';lkKNNO0WMWXkolllodc''''''',,,,,'''''''''''''''''''''''''''''.. .oNMMMMMMMMMMMMMMMMMMMWN00KNNNXNMMWWWNMWOkXMMMXXXkKMW0:.,OWWWMMMMWNXNXXNWX0XNXOxc,,;oOXNX0kxollc:;,,,,;;:ldONNXNWMMNOONWMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkdxOXWMMMMMMMMMMMMMMMMMMMWX0XMMMMMMMMMMXxOXOc'''''',oOo:xNWKx0WWOc;;;'''',;ccccc:,'.''''''''''''''''''''''''''... .:KWMMMMWWMWWWMMMWWMMMMMMMMWKXWNNNNNWMXk0MMMMOOMMWNx'.:KWMWWX00XOooONWNXNNNNKko;''',ccldO0OOKNNNKkoloodxKWWMWNWWWWNKKXNMMM    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKxl:cdKWMMMMMMMMMMMMMMMMMMMX0WMMMMMMMMMWKkkOl'''''',cl,'oK0cc0NOc;'''''''''';cloodooc:;,'''''''',,'''''''''''...... 'dXMMMMMMMMMMMMMWMMMMMNXNXkkXNWMMMMM0ONMMMMMMMW0c..:kWMMWN0ddkxooxkdc:xX0dc:;'''',;,;o0XK0XWWXkl;,''''oXWWMMWWWMMWWWWMWW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKkccOWMMMMMMMMMMMMMMMMMMXOOKXNNWWWMMMMNOkxc:;''',;,'':o:':lc;'''',;;'';oOXWWWMMMMWXKOo;''''''''''''''''''''''''....,xXWMMMMMMMWMMMMMMMMWXNWX0XMMMMMMNO0MMMMMMW0c..l0KXWWWWWWWNNWNNOdxxkOkl,,,'''''''';lxkKWWNOl:dkdol:;ckXWWNNWMMMMMWWMWW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c:OWMMMMMMMMMMMMMMMMMWX0000OOOOOOO0XWWKOxl:,'''''''',,,'.'''''''',l0NWWWMMMMMMMMMMWXx;''''''''''''''''''''''''.. .,o0WMMMMMMMMMMMMMMMMMMWNNMMMWWW0OKXMMWNk:..c0WMMMMWKKWMWNNWNKocdOKk:,,,,'''''''':dOXWMNkc;;dO0NNXK0KNWX0XMMWMMMWWMMW    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx;dNMMMMMMMMMMMMMMMMWNXXXXNNNNNXXKKNWWN0K0xl;,'''''':c,;;''''''.'dXWMMMMMMMMMMMMMMMMW0c'''''''''''''''''''''''''.....:dKWWMMMMMMMMMMMMMMMMMMMMNNN0KXXNOl,.'o0WWWWMMMWXXWWN0KWNkxOkko:;,'',,,;''''';ckXWKd:;;cdOXWMMW0kKWMWWMMMMMWXXMNX    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd;xWMMMMMMMMMMMMMMWXXXK0OO0OOkkOO00KNMMMWXOdc,;:,''',,'cc''',,'.cXMMMMMMMMMMMMMMMMMMMW0:'''''''''''''''''''''''''''.....;lkKNMMMMMMMMMMMMMMMMWNWKO0Ol,.,ckXWWMWNNWWMMWWNWWNNWN0O0XKc,,,''',:c,';:;',cxd:,;,,;l0MMNOolkKXNWNKOOOOd:xKOK    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO:lKMMMMMMMWNXXXKKKKKWMMMMMMWWNNNXXKXNMWNWWWXOdxkkd:,''''''''';;:OWMMMMMMMMMMMMMMMMMMMMXc.'''''''''''''''''''''''''''''......,codxk0KKKXXKK000XWNkOXOdd0XWWWWWWWWNNWWWNXNMMMMWXKNWWk:,'''',,;;'';;''':c;,,;;'';xXOl;':oolxXKd:''''':c;,    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWNKOocdKWMMMMMMMXxOKKKXNWMMMMMWWNNNNWWWWWMMMXkkOxxO0KXX0d:',,''''''c:dWMMMMMMMMMMMMMMMMMMMMMXc.''''''''''''''''''''''''''''''''''........''''''...cKWX0OXWWMMMMMMMMWWWMWNNNNWWMMMMW0ONMNx;,''''''''''''''',;;::;;'',ll;,;;:xkl,;cl:'''''''''    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkllllld0NMMMWWMMMM0o0MMMMMMMMN0OkOK0ddO0KX0KKNKoll,':loool:c::;,''''';;l0NWMMXXMMMMMMMMMMNNMMWO;'',,,''',;:;'''''''''''''''''''',,,,c;'''''.........ck00KXXNWMWWWMMMMMMMWNNNWWWWWWNNNNNNNXx;,',:,'',;;;,'''',,,;,''''',,,;,,:l:'''';;.''''''''    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0;'d0XNWMW0dc:clxKWNxkNMMMMMNOookXN0c'',;cllk0kkxxkl,''''';xKKx:,'''''''',dXWMWWXkxOKNMMMMMMMW0c'',clc;'',,,,'''''''''''''''''';ccloxKkddl;;;,;;:l:,,..,:llcdOKK0XWMMMMMMMWKO0NWWNXNWWMMWWNx;'',;;;;;ol:;,,,''''''''''',;,,'',;,;,':c,..'''''''    //\\n//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO,;0WMMMXl. .....,dNXxOWMMMNo:o0WMXl'''..:l:xXNkllxl,,,,;,,;cc:,;:,''''''',cONMMNOkO0NMMMMMMNO:'''';clc'''''''''''''''''''''''';lxXNNXXNNKkdcokkdocokl:okd:l0KKOkKX0KXXNXNNK0KXK0KNMMMWWWMMKl,                                                     //\\n//                                                                                                                                                                                                                                                                                                                    //\\n//                                                                                                                                                                                                                                                                                                                    //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract EIGHT is ERC721Creator {\\n    constructor() ERC721Creator(\\\"8th project\\\", \\\"EIGHT\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "EIGHT", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}