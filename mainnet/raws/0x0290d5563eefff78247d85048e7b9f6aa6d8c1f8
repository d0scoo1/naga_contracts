{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\ncontract DogCoreInterface {\r\n    address public ceoAddress;\r\n    address public cfoAddress;\r\n    function getDog(uint256 _id)\r\n        external\r\n        view\r\n        returns (\r\n        //\u51b7\u5374\u671f\u7d22\u5f15\u53f7\r\n        uint256 cooldownIndex,\r\n        //\u672c\u6b21\u51b7\u5374\u671f\u7ed3\u675f\u6240\u5728\u533a\u5757\r\n        uint256 nextActionAt,\r\n        //\u914d\u79cd\u7684\u516c\u72d7ID\r\n        uint256 siringWithId,\r\n        //\u51fa\u751f\u65f6\u95f4\r\n        uint256 birthTime,\r\n        //\u6bcd\u4eb2ID\r\n        uint256 matronId,\r\n        //\u7236\u4eb2ID\r\n        uint256 sireId,\r\n        //\u4ee3\u6570\r\n        uint256 generation,\r\n        //\u57fa\u56e0\r\n        uint256 genes,\r\n        //\u53d8\u5f02\uff0c0\u8868\u793a\u672a\u53d8\u5f02\uff0c1-7\u8868\u793a\u53d8\u5f02\r\n        uint8  variation,\r\n        //0\u4ee3\u7956\u5148\u7684ID\r\n        uint256 gen0\r\n    );\r\n    function ownerOf(uint256 _tokenId) external view returns (address);\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n    function sendMoney(address _to, uint256 _money) external;\r\n    function totalSupply() external view returns (uint);\r\n}\r\n\r\n\r\n/*\r\n    LotteryBase \u4e3b\u8981\u5b9a\u4e49\u4e86\u5f00\u5956\u4fe1\u606f\uff0c\u5956\u91d1\u6c60\u8f6c\u5165\u51fd\u6570\u4ee5\u53ca\u5224\u65ad\u662f\u5426\u5f00\u5fc5\u4e2d\r\n*/\r\ncontract LotteryBase {\r\n    \r\n    // \u5f53\u524d\u5f00\u5956\u57fa\u56e0\u4f4d\u6570\r\n    uint8 public currentGene;\r\n    // \u5f53\u524d\u5f00\u5956\u6240\u5728\u533a\u5757\r\n    uint256 public lastBlockNumber;\r\n    // \u968f\u673a\u6570\u79cd\u5b50\r\n    uint256 randomSeed = 1;\r\n    // \u5956\u91d1\u6c60\u5730\u5740\r\n    address public bonusPool;\r\n    // \u4e2d\u5956\u4fe1\u606f\r\n    struct CLottery {\r\n        // \u8be5\u671f\u4e2d\u5956\u57fa\u56e0\r\n        uint8[7]        luckyGenes;\r\n        // \u8be5\u671f\u5956\u91d1\u6c60\u603b\u989d\r\n        uint256         totalAmount;\r\n        // \u8be5\u671f\u7b2c7\u4e2a\u57fa\u56e0\u5f00\u5956\u6240\u5728\u533a\u5757\r\n        uint256         openBlock;\r\n        // \u662f\u5426\u53d1\u5956\u5b8c\u6bd5\r\n        bool            isReward;\r\n        // \u672a\u5f00\u4e00\u7b49\u5956\u6807\u8bb0\r\n        bool         noFirstReward;\r\n    }\r\n    // \u5386\u53f2\u5f00\u5956\u4fe1\u606f\r\n    CLottery[] public CLotteries;\r\n    // \u53d1\u5956\u5408\u7ea6\u5730\u5740\r\n    address public finalLottery;\r\n    // \u84c4\u5956\u6c60\u91d1\u989d\r\n    uint256 public SpoolAmount = 0;\r\n    // \u5ba0\u7269\u4fe1\u606f\u63a5\u53e3\r\n    DogCoreInterface public dogCore;\r\n    // \u968f\u673a\u5f00\u5956\u4e8b\u4ef6\r\n    event OpenLottery(uint8 currentGene, uint8 luckyGenes, uint256 currentTerm, uint256 blockNumber, uint256 totalAmount);\r\n    //\u5fc5\u4e2d\u5f00\u5956\u4e8b\u4ef6\r\n    event OpenCarousel(uint256 luckyGenes, uint256 currentTerm, uint256 blockNumber, uint256 totalAmount);\r\n    \r\n    \r\n    //\r\n    modifier onlyCEO() {\r\n        require(msg.sender == dogCore.ceoAddress());\r\n        _;  \r\n    }\r\n    //\r\n    modifier onlyCFO() {\r\n        require(msg.sender == dogCore.cfoAddress());\r\n        _;  \r\n    }\r\n    /*\r\n        \u84c4\u5956\u6c60\u8f6c\u5165\u5956\u91d1\u6c60\u51fd\u6570\r\n    */\r\n    function toLotteryPool(uint amount) public onlyCFO {\r\n        require(SpoolAmount >= amount);\r\n        SpoolAmount -= amount;\r\n    }\r\n    /*\r\n    \u5224\u65ad\u5f53\u671f\u662f\u5426\u5f00\u5fc5\u4e2d\r\n    */\r\n    function _isCarousal(uint256 currentTerm) external view returns(bool) {\r\n       return (currentTerm > 1 && CLotteries[currentTerm - 2].noFirstReward && CLotteries[currentTerm - 1].noFirstReward); \r\n    }\r\n    \r\n    /*\r\n      \u8fd4\u56de\u5f53\u524d\u671f\u6570\r\n    */ \r\n    function getCurrentTerm() external view returns (uint256) {\r\n\r\n        return (CLotteries.length - 1);\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    LotteryGenes\u4e3b\u8981\u5b9e\u73b0\u5956\u5ba0\u7269\u539f\u59cb\u57fa\u56e0\u8f6c\u5316\u4e3a\u5151\u5956\u6570\u7ec4\r\n*/\r\ncontract LotteryGenes is LotteryBase {\r\n    /*\r\n     \u5c06\u57fa\u56e0\u6570\u5b57\u683c\u5f0f\u8f6c\u6362\u4e3a\u62bd\u5956\u6570\u7ec4\u683c\u5f0f\r\n    */\r\n    function convertGeneArray(uint256 gene) public pure returns(uint8[7]) {\r\n        uint8[28] memory geneArray; \r\n        uint8[7] memory lotteryArray;\r\n        uint index = 0;\r\n        for (index = 0; index < 28; index++) {\r\n            uint256 geneItem = gene % (2 ** (5 * (index + 1)));\r\n            geneItem /= (2 ** (5 * index));\r\n            geneArray[index] = uint8(geneItem);\r\n        }\r\n        for (index = 0; index < 7; index++) {\r\n            uint size = 4 * index;\r\n            lotteryArray[index] = geneArray[size];\r\n            \r\n        }\r\n        return lotteryArray;\r\n    }\r\n\r\n    /**\r\n       \u5c06\u663e\u6027\u57fa\u56e0\u4e32\u62fc\u51d1\u6210\u539f\u59cb\u57fa\u56e0\u6570\u5b57\r\n    */ \r\n    function convertGene(uint8[7] luckyGenes) public pure returns(uint256) {\r\n        uint8[28] memory geneArray;\r\n        for (uint8 i = 0; i < 28; i++) {\r\n            if (i%4 == 0) {\r\n                geneArray[i] = luckyGenes[i/4];\r\n            } else {\r\n                geneArray[i] = 6;\r\n            }\r\n        }\r\n        uint256 gene = uint256(geneArray[0]);\r\n        \r\n        for (uint8 index = 1; index < 28; index++) {\r\n            uint256 geneItem = uint256(geneArray[index]);\r\n            gene += geneItem << (index * 5);\r\n        }\r\n        return gene;\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    SetLottery\u4e3b\u8981\u5b9e\u73b0\u4e86\u968f\u673a\u5f00\u5956\u548c\u5fc5\u4e2d\u5f00\u5956\r\n*/\r\ncontract SetLottery is LotteryGenes {\r\n\r\n    function random(uint8 seed) internal returns(uint8) {\r\n        randomSeed = block.timestamp;\r\n        return uint8(uint256(keccak256(randomSeed, block.difficulty))%seed)+1;\r\n    }\r\n\r\n    /*\r\n     \u968f\u673a\u5f00\u5956\u51fd\u6570\uff0c\u6bcf\u4e00\u671f\u5f007\u6b21\u3002\r\n     currentGene\u8868\u793a\u5f53\u671f\u5f00\u5956\u7684\u7b2cN\u4e2a\u57fa\u56e0\r\n     \u82e5\u5f53\u524dcurrentGene\u6307\u6807\u4e3a0\uff0c\u5219\u8868\u793a\u5728\u5f00\u5956\u671f\u672a\u5f00\u4efb\u4f55\u6570\u5b57\uff0c\u6216\u8005\u5f00\u5956\u671f\u5df2\u7ecf\u5f00\u5b8c\u4e86\u6240\u6709\u6570\u5b57\r\n     \u5f53\u524d\u5f00\u5956\u671f\u6700\u540e\u4e00\u4e2a\u57fa\u56e0\u5f00\u5b8c\u540e\uff0c\u8bb0\u5f55\u5f53\u524d\u6240\u5728\u533a\u5757\u53f7\u548c\u5f53\u524d\u5956\u91d1\u6c60\u91d1\u989d\r\n     \u8fd4\u56de\u503c\u5206\u522b\u4e3a\u5f53\u524d\u5f00\u5956\u57fa\u56e0(0\u4ee3\u8868\u4e0d\u5b58\u5728)\u3001\u67e5\u8be2\u5f00\u5956\u57fa\u56e0(0\u4ee3\u8868\u4e0d\u5b58\u5728)\u3001\r\n     \u5f00\u5956\u72b6\u6001(0\u8868\u793a\u5f00\u5956\u6210\u529f\uff0c1\u8868\u793a\u5f53\u671f\u5f00\u5956\u7ed3\u675f\u4e14\u5728\u7b49\u5f85\u53d1\u5956\uff0c2\u8868\u793a\u5f53\u524d\u57fa\u56e0\u5f00\u5956\u533a\u5757\u4e0e\u4e0a\u4e2a\u57fa\u56e0\u5f00\u5956\u533a\u5757\u76f8\u540c,3\u8868\u793a\u5956\u91d1\u6c60\u91d1\u989d\u4e0d\u8db3)\r\n     */\r\n    function openLottery(uint8 _viewId) public returns(uint8,uint8) {\r\n        uint8 viewId = _viewId;\r\n        require(viewId < 7);\r\n        // \u83b7\u53d6\u5f53\u524d\u4e2d\u5956\u4fe1\u606f\r\n        uint256 currentTerm = CLotteries.length - 1;\r\n        CLottery storage clottery = CLotteries[currentTerm];\r\n\r\n        // \u5982\u679c7\u4e2a\u57fa\u56e0\u90fd\u5b8c\u6210\u5f00\u5956\u5e76\u4e14\u5f53\u671f\u6ca1\u6709\u53d1\u5956\uff0c\u5219\u8bf4\u660e\u5f53\u671f\u6240\u6709\u57fa\u56e0\u5df2\u7ecf\u5f00\u5956\u5b8c\u6bd5\u5728\u7b49\u5f85\u53d1\u5956\uff0c\u9000\u51fa\r\n        if (currentGene == 0 && clottery.openBlock > 0 && clottery.isReward == false) {\r\n            // \u89e6\u53d1\u4e8b\u4ef6\uff0c\u8fd4\u56de\u67e5\u8be2\u7684\u57fa\u56e0\r\n            OpenLottery(viewId, clottery.luckyGenes[viewId], currentTerm, 0, 0);\r\n            //\u5206\u522b\u8fd4\u56de\u67e5\u8be2\u57fa\u56e0\uff0c\u72b6\u60011 (\u8868\u793a\u5f53\u671f\u6240\u6709\u57fa\u56e0\u5f00\u5956\u5b8c\u6bd5\u5728\u7b49\u5f85\u53d1\u5956)\r\n            return (clottery.luckyGenes[viewId],1);\r\n        }\r\n        // \u5982\u679c\u4e0a\u4e2a\u57fa\u56e0\u5f00\u5956\u548c\u672c\u6b21\u5f00\u5956\u5728\u540c\u4e00\u4e2a\u533a\u5757\uff0c\u9000\u51fa\r\n        if (lastBlockNumber == block.number) {\r\n            // \u89e6\u53d1\u4e8b\u4ef6\uff0c\u8fd4\u56de\u67e5\u8be2\u7684\u57fa\u56e0\r\n            OpenLottery(viewId, clottery.luckyGenes[viewId], currentTerm, 0, 0);\r\n            //\u5206\u522b\u8fd4\u56de\u67e5\u8be2\u57fa\u56e0\uff0c\u72b6\u60012 (\u5f53\u524d\u57fa\u56e0\u5f00\u5956\u533a\u5757\u4e0e\u4e0a\u4e2a\u57fa\u56e0\u5f00\u5956\u533a\u5757\u76f8\u540c)\r\n            return (clottery.luckyGenes[viewId],2);\r\n        }\r\n        // \u5982\u679c\u5f53\u524d\u5f00\u5956\u57fa\u56e0\u4f4d\u4e3a0\u4e14\u5f53\u671f\u5df2\u7ecf\u53d1\u5956\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u671f\u5f00\u5956\r\n        if (currentGene == 0 && clottery.isReward == true) {\r\n            // \u521d\u59cb\u5316\u5f53\u524dlottery\u4fe1\u606f\r\n            CLottery memory _clottery;\r\n            _clottery.luckyGenes = [0,0,0,0,0,0,0];\r\n            _clottery.totalAmount = uint256(0);\r\n            _clottery.isReward = false;\r\n            _clottery.openBlock = uint256(0);\r\n            currentTerm = CLotteries.push(_clottery) - 1;\r\n        }\r\n\r\n        // \u5982\u679c\u524d\u4e24\u671f\u90fd\u6ca1\u6709\u4e00\u7b49\u5956\u4ea7\u751f\uff0c\u5219\u8be5\u671f\u4ea7\u751f\u5fc5\u4e2d\u5956\uff0c\u9000\u51fa\u968f\u673a\u5f00\u5956\u51fd\u6570\r\n        if (this._isCarousal(currentTerm)) {\r\n            revert();\r\n        }\r\n\r\n        //\u5f00\u5956\u7ed3\u679c\r\n        uint8 luckyNum = 0;\r\n        \r\n        if (currentGene == 6) {\r\n            // \u5982\u679c\u5956\u91d1\u6c60\u91d1\u989d\u4e3a\u96f6\uff0c\u5219\u9000\u51fa\r\n            if (bonusPool.balance <= SpoolAmount) {\r\n                // \u89e6\u53d1\u4e8b\u4ef6\uff0c\u8fd4\u56de\u67e5\u8be2\u7684\u57fa\u56e0\r\n                OpenLottery(viewId, clottery.luckyGenes[viewId], currentTerm, 0, 0);\r\n                //\u5206\u522b\u8fd4\u56de\u67e5\u8be2\u57fa\u56e0\uff0c\u72b6\u60013 (\u5956\u91d1\u6c60\u91d1\u989d\u4e0d\u8db3)\r\n                return (clottery.luckyGenes[viewId],3);\r\n            }\r\n            //\u5c06\u968f\u673a\u6570\u8d4b\u503c\u7ed9\u5f53\u524d\u57fa\u56e0\r\n            luckyNum = random(8);\r\n            CLotteries[currentTerm].luckyGenes[currentGene] = luckyNum;\r\n            //\u89e6\u53d1\u5f00\u5956\u4e8b\u4ef6\r\n            OpenLottery(currentGene, luckyNum, currentTerm, block.number, bonusPool.balance);\r\n            //\u5982\u679c\u5f53\u524d\u4e3a\u6700\u540e\u4e00\u4e2a\u5f00\u5956\u57fa\u56e0\uff0c\u5219\u4e0b\u4e00\u4e2a\u5f00\u5956\u57fa\u56e0\u4f4d\u4e3a0\uff0c\u540c\u65f6\u8bb0\u5f55\u4e0b\u5f53\u524d\u533a\u5757\u53f7\u5e76\u5199\u5165\u5f00\u5956\u4fe1\u606f\uff0c\u540c\u65f6\u5c06\u5956\u91d1\u6c60\u91d1\u989d\u5199\u5165\u5f00\u5956\u4fe1\u606f, \u540c\u65f6\u542f\u52a8\u4e3b\u5408\u7ea6\r\n            currentGene = 0;\r\n            CLotteries[currentTerm].openBlock = block.number;\r\n            CLotteries[currentTerm].totalAmount = bonusPool.balance;\r\n            //\u8bb0\u5f55\u5f53\u524d\u5f00\u5956\u6240\u5728\u533a\u5757\r\n            lastBlockNumber = block.number;\r\n        } else { \r\n            //\u5c06\u968f\u673a\u6570\u8d4b\u503c\u7ed9\u5f53\u524d\u57fa\u56e0\r\n        \r\n            luckyNum = random(12);\r\n            CLotteries[currentTerm].luckyGenes[currentGene] = luckyNum;\r\n\r\n            //\u89e6\u53d1\u5f00\u5956\u4e8b\u4ef6\r\n            OpenLottery(currentGene, luckyNum, currentTerm, 0, 0);\r\n            //\u5176\u5b83\u60c5\u51b5\u4e0b\uff0c\u4e0b\u4e00\u4e2a\u5f00\u5956\u57fa\u56e0\u4f4d\u52a01\r\n            currentGene ++;\r\n            //\u8bb0\u5f55\u5f53\u524d\u5f00\u5956\u6240\u5728\u533a\u5757\r\n            lastBlockNumber = block.number;\r\n        }\r\n        //\u5206\u522b\u8fd4\u56de\u5f00\u5956\u57fa\u56e0\uff0c\u67e5\u8be2\u57fa\u56e0\u548c\u5f00\u5956\u6210\u529f\u72b6\u6001\r\n        return (luckyNum,0);\r\n    } \r\n\r\n    function random2() internal view returns (uint256) {\r\n        return uint256(uint256(keccak256(block.timestamp, block.difficulty))%uint256(dogCore.totalSupply()) + 1);\r\n    }\r\n\r\n    /*\r\n     \u5fc5\u4e2d\u5f00\u5956\u51fd\u6570,\u6bcf\u671f\u5f00\u4e00\u6b21\r\n    */\r\n    function openCarousel() public {\r\n        //\u83b7\u53d6\u5f53\u524d\u5f00\u5956\u4fe1\u606f\r\n        uint256 currentTerm = CLotteries.length - 1;\r\n        CLottery storage clottery = CLotteries[currentTerm];\r\n\r\n        // \u5982\u679c\u5f53\u524d\u5f00\u5956\u57fa\u56e0\u6307\u9488\u4e3a0\u4e14\u5f00\u5956\u57fa\u56e0\u5b58\u5728\uff0c\u4e14\u672a\u53d1\u5956\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u57fa\u56e0\u5f00\u5956\u5b8c\u6bd5\uff0c\u5728\u7b49\u5f85\u53d1\u5956\r\n        if (currentGene == 0 && clottery.openBlock > 0 && clottery.isReward == false) {\r\n\r\n            //\u89e6\u53d1\u5f00\u5956\u4e8b\u4ef6,\u8fd4\u56de\u5f53\u671f\u73b0\u6709\u5f00\u5956\u6570\u636e\r\n            OpenCarousel(convertGene(clottery.luckyGenes), currentTerm, clottery.openBlock, clottery.totalAmount);\r\n        }\r\n\r\n        // \u5982\u679c\u5f00\u5956\u57fa\u56e0\u6307\u9488\u4e3a0\u4e14\u5f00\u5956\u57fa\u56e0\u5b58\u5728\uff0c\u5e76\u4e14\u53d1\u5956\u5b8c\u6bd5\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u5f00\u5956\u5468\u671f\r\n        if (currentGene == 0 && clottery.openBlock > 0 && clottery.isReward == true) {\r\n            CLottery memory _clottery;\r\n            _clottery.luckyGenes = [0,0,0,0,0,0,0];\r\n            _clottery.totalAmount = uint256(0);\r\n            _clottery.isReward = false;\r\n            _clottery.openBlock = uint256(0);\r\n            currentTerm = CLotteries.push(_clottery) - 1;\r\n        }\r\n\r\n        //\u671f\u6570\u5927\u4e8e3 \u4e14\u524d\u4e09\u671f\u672a\u4ea7\u751f\u7279\u7b49\u5956\r\n        require (this._isCarousal(currentTerm));\r\n        // \u968f\u673a\u83b7\u53d6\u5fc5\u4e2d\u57fa\u56e0\r\n        uint256 genes = _getValidRandomGenes();\r\n        require (genes > 0);\r\n        uint8[7] memory luckyGenes = convertGeneArray(genes);\r\n        //\u89e6\u53d1\u5f00\u5956\u4e8b\u4ef6\r\n        OpenCarousel(genes, currentTerm, block.number, bonusPool.balance);\r\n\r\n        //\u5199\u5165\u8bb0\u5f55\r\n        CLotteries[currentTerm].luckyGenes = luckyGenes;\r\n        CLotteries[currentTerm].openBlock = block.number;\r\n        CLotteries[currentTerm].totalAmount = bonusPool.balance;\r\n        \r\n    }\r\n    \r\n    /*\r\n      \u968f\u673a\u83b7\u53d6\u5408\u6cd5\u7684\u5fc5\u4e2d\u57fa\u56e0\r\n    */\r\n    function _getValidRandomGenes() internal view returns (uint256) {\r\n        uint256 luckyDog = random2();\r\n        uint256 genes = _validGenes(luckyDog);\r\n        uint256 totalSupply = dogCore.totalSupply();\r\n        if (genes > 0) {\r\n            return genes;\r\n        }  \r\n        // \u5982\u679cdog\u4e0d\u80fd\u5151\u5956\uff0c\u5219\u6e10\u8fdb\u632f\u8361\u5224\u65ad\u5176\u5b83dog\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\r\n        uint256 min = (luckyDog < totalSupply-luckyDog) ? (luckyDog - 1) : totalSupply-luckyDog;\r\n        for (uint256 i = 1; i < min + 1; i++) {\r\n            genes = _validGenes(luckyDog - i);\r\n            if (genes > 0) {\r\n                break;\r\n            }\r\n            genes = _validGenes(luckyDog + i);\r\n            if (genes > 0) {\r\n                    break;\r\n                }\r\n            }\r\n            // min\u6b21\u9707\u8361\u4ecd\u7136\u672a\u627e\u5230\u53ef\u5151\u5956\u57fa\u56e0\r\n        if (genes == 0) {\r\n            //luckyDog\u53f3\u4fa7\u66f4\u957f\r\n            if (min == luckyDog - 1) {\r\n                for (i = min + luckyDog; i < totalSupply + 1; i++) {\r\n                        genes = _validGenes(i);\r\n                        if (genes > 0) {\r\n                            break;\r\n                        }\r\n                    }   \r\n                }\r\n            //luckyDog\u5de6\u4fa7\u66f4\u957f\r\n            if (min == totalSupply - luckyDog) {\r\n                for (i = min; i < luckyDog; i++) {\r\n                        genes = _validGenes(luckyDog - i - 1);\r\n                        if (genes > 0) {\r\n                            break;\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        return genes;\r\n    }\r\n\r\n\r\n    /*\r\n      \u5224\u65ad\u72d7\u662f\u5426\u80fd\u5151\u5956\uff0c\u80fd\u5219\u76f4\u63a5\u8fd4\u56de\u72d7\u7684\u57fa\u56e0\uff0c\u4e0d\u80fd\u5219\u8fd4\u56de0\r\n    */\r\n    function _validGenes(uint256 dogId) internal view returns (uint256) {\r\n\r\n        var(, , , , , ,generation, genes, variation,) = dogCore.getDog(dogId);\r\n        if (generation == 0 || dogCore.ownerOf(dogId) == finalLottery || variation > 0) {\r\n            return 0;\r\n        } else {\r\n            return genes;\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n/*\r\n  LotteryCore\u662f\u5f00\u5956\u51fd\u6570\u7684\u5165\u53e3\u5408\u7ea6\r\n  \u5f00\u5956\u5305\u62ec\u5fc5\u4e2d\u5f00\u5956\u548c\u968f\u673a\u5f00\u5956\r\n  \u540c\u65f6LotteryCore\u63d0\u4f9b\u5bf9\u5916\u67e5\u8be2\u63a5\u53e3\r\n*/\r\n\r\ncontract LotteryCore is SetLottery {\r\n    \r\n    // \u6784\u9020\u51fd\u6570\uff0c\u4f20\u5165\u5956\u91d1\u6c60\u5730\u5740,\u521d\u59cb\u5316\u4e2d\u5956\u4fe1\u606f\r\n    function LotteryCore(address _ktAddress) public {\r\n\r\n        bonusPool = _ktAddress;\r\n        dogCore = DogCoreInterface(_ktAddress);\r\n\r\n        //\u521d\u59cb\u5316\u4e2d\u5956\u4fe1\u606f\r\n        CLottery memory _clottery;\r\n        _clottery.luckyGenes = [0,0,0,0,0,0,0];\r\n        _clottery.totalAmount = uint256(0);\r\n        _clottery.isReward = false;\r\n        _clottery.openBlock = uint256(0);\r\n        CLotteries.push(_clottery);\r\n    }\r\n    /*\r\n    \u8bbe\u7f6eFinalLottery\u5730\u5740\r\n    */\r\n    function setFinalLotteryAddress(address _flAddress) public onlyCEO {\r\n        finalLottery = _flAddress;\r\n    }\r\n    /*\r\n    \u83b7\u53d6\u5f53\u524d\u4e2d\u5956\u8bb0\u5f55\r\n    */\r\n    function getCLottery() \r\n        public \r\n        view \r\n        returns (\r\n            uint8[7]        luckyGenes,\r\n            uint256         totalAmount,\r\n            uint256         openBlock,\r\n            bool            isReward,\r\n            uint256         term\r\n        ) {\r\n            term = CLotteries.length - uint256(1);\r\n            luckyGenes = CLotteries[term].luckyGenes;\r\n            totalAmount = CLotteries[term].totalAmount;\r\n            openBlock = CLotteries[term].openBlock;\r\n            isReward = CLotteries[term].isReward;\r\n    }\r\n\r\n    /*\r\n    \u66f4\u6539\u53d1\u5956\u72b6\u6001\r\n    */\r\n    function rewardLottery(bool isMore) external {\r\n        // require contract address is final lottery\r\n        require(msg.sender == finalLottery);\r\n\r\n        uint256 term = CLotteries.length - 1;\r\n        CLotteries[term].isReward = true;\r\n        CLotteries[term].noFirstReward = isMore;\r\n    }\r\n\r\n    /*\r\n    \u8f6c\u5165\u84c4\u5956\u6c60\r\n    */\r\n    function toSPool(uint amount) external {\r\n        // require contract address is final lottery\r\n        require(msg.sender == finalLottery);\r\n\r\n        SpoolAmount += amount;\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    FinalLottery \u5305\u542b\u5151\u5956\u51fd\u6570\u548c\u53d1\u5956\u51fd\u6570\r\n    \u4e2d\u5956\u4fe1\u606fflotteries\u5b58\u5165\u5f00\u5956\u671f\u6570\u5230[\u5404\u7b49\u5956\u83b7\u5956\u8005\uff0c\u5404\u7b49\u5956\u4e2d\u5956\u91d1\u989d]\u7684\u6620\u5c04\r\n*/\r\ncontract FinalLottery {\r\n    bool public isLottery = true;\r\n    LotteryCore lotteryCore;\r\n    DogCoreInterface dogCore;\r\n    uint8[7] public luckyGenes;\r\n    uint256         totalAmount;\r\n    uint256         openBlock;\r\n    bool            isReward;\r\n    uint256         currentTerm;\r\n    uint256  public duration;\r\n    uint8   public  lotteryRatio;\r\n    uint8[7] public lotteryParam;\r\n    uint8   public  carousalRatio;\r\n    uint8[7] public carousalParam; \r\n    // \u4e2d\u5956\u4fe1\u606f\r\n    struct FLottery {\r\n        //  \u8be5\u671f\u5404\u7b49\u5956\u83b7\u5956\u8005\r\n        //  \u4e00\u7b49\u5956\r\n        address[]        owners0;\r\n        uint256[]        dogs0;\r\n        //  \u4e8c\u7b49\u5956\r\n        address[]        owners1;\r\n        uint256[]        dogs1;\r\n        //  \u4e09\u7b49\u5956\r\n        address[]        owners2;\r\n        uint256[]        dogs2;\r\n        //  \u56db\u7b49\u5956\r\n        address[]        owners3;\r\n        uint256[]        dogs3;\r\n        //  \u4e94\u7b49\u5956\r\n        address[]        owners4;\r\n        uint256[]        dogs4;\r\n        //  \u516d\u7b49\u5956\r\n        address[]        owners5;\r\n        uint256[]        dogs5;\r\n        //  \u4e03\u7b49\u5956\r\n        address[]        owners6;\r\n        uint256[]        dogs6;\r\n        // \u4e2d\u5956\u91d1\u989d\r\n        uint256[]       reward;\r\n    }\r\n    // \u5151\u5956\u53d1\u5956\u4fe1\u606f\r\n    mapping(uint256 => FLottery) flotteries;\r\n    // \u6784\u9020\u51fd\u6570\r\n    function FinalLottery(address _lcAddress) public {\r\n        lotteryCore = LotteryCore(_lcAddress);\r\n        dogCore = DogCoreInterface(lotteryCore.bonusPool());\r\n        duration = 11520;\r\n        lotteryRatio = 23;\r\n        lotteryParam = [46,16,10,9,8,6,5];\r\n        carousalRatio = 12;\r\n        carousalParam = [35,18,14,12,8,7,6];\r\n        \r\n    }\r\n    \r\n    // \u53d1\u5956\u4e8b\u4ef6\r\n    event DistributeLottery(uint256[] rewardArray, uint256 currentTerm);\r\n    // \u5151\u5956\u4e8b\u4ef6\r\n    event RegisterLottery(uint256 dogId, address owner, uint8 lotteryClass, string result);\r\n    // \u8bbe\u7f6e\u5151\u5956\u5468\u671f\r\n    function setLotteryDuration(uint256 durationBlocks) public {\r\n        require(msg.sender == dogCore.ceoAddress());\r\n        require(durationBlocks > 140);\r\n        require(durationBlocks < block.number);\r\n        duration = durationBlocks;\r\n    }\r\n    /*\r\n     \u767b\u8bb0\u5151\u5956\u51fd\u6570,\u53d1\u751f\u5728\u5f53\u671f\u5f00\u5956\u7ed3\u675f\u4e4b\u540e7\u5929\u5185\uff08\u537340\uff0c320\u4e2a\u533a\u5757\u5185\uff09\r\n    */\r\n    function registerLottery(uint256 dogId) public returns (uint8) {\r\n        uint256 _dogId = dogId;\r\n        (luckyGenes, totalAmount, openBlock, isReward, currentTerm) = lotteryCore.getCLottery();\r\n        // \u83b7\u53d6\u5f53\u524d\u5f00\u5956\u4fe1\u606f\r\n        address owner = dogCore.ownerOf(_dogId);\r\n        // \u56de\u6536\u7684\u4e0d\u80fd\u5151\u5956\r\n        require (owner != address(this));\r\n        // \u8c03\u7528\u8005\u5fc5\u987b\u662f\u4e3b\u5408\u7ea6\r\n        require(address(dogCore) == msg.sender);\r\n        // \u6240\u6709\u57fa\u56e0\u4f4d\u5f00\u5956\u5b8c\u6bd5\uff08\u6307\u9488\u4e3a0\u540c\u65f6\u5956\u91d1\u6c60\u5927\u4e8e0\uff09\u4e14\u672a\u53d1\u5956\u4e14\u672a\u5151\u5956\u7ed3\u675f\r\n        require(totalAmount > 0 && isReward == false && openBlock > (block.number-duration));\r\n        // \u83b7\u53d6\u8be5\u5ba0\u7269\u7684\u57fa\u56e0\uff0c\u4ee3\u6570\uff0c\u51fa\u751f\u65f6\u95f4\r\n        var(, , , birthTime, , ,generation,genes, variation,) = dogCore.getDog(_dogId);\r\n        // \u51fa\u751f\u65e5\u671f\u5c0f\u4e8e\u5f00\u5956\u65f6\u95f4\r\n        require(birthTime < openBlock);\r\n        // 0\u4ee3\u72d7\u4e0d\u80fd\u5151\u5956\r\n        require(generation > 0);\r\n        // \u53d8\u5f02\u7684\u4e0d\u80fd\u5151\u5956\r\n        require(variation == 0);\r\n        // \u5224\u65ad\u8be5\u7528\u6237\u83b7\u51e0\u7b49\u5956\uff0c100\u8868\u793a\u672a\u4e2d\u5956\r\n        uint8 _lotteryClass = getLotteryClass(luckyGenes, genes);\r\n        // \u82e5\u672a\u83b7\u5956\u5219\u9000\u51fa\r\n        require(_lotteryClass < 7);\r\n        // \u907f\u514d\u91cd\u590d\u5151\u5956\r\n        address[] memory owners;\r\n        uint256[] memory dogs;\r\n         (dogs, owners) = _getLuckyList(currentTerm, _lotteryClass);\r\n            \r\n        for (uint i = 0; i < dogs.length; i++) {\r\n            if (_dogId == dogs[i]) {\r\n            //    revert();\r\n                RegisterLottery(_dogId, owner, _lotteryClass,\"dog already registered\");\r\n                 return 5;\r\n            }\r\n        }\r\n        // \u5c06\u767b\u8bb0\u4e2d\u5956\u8005\u7684\u8d26\u6237\u5b58\u5165\u5956\u91d1\u4fe1\u606f\u8868\r\n        _pushLuckyInfo(currentTerm, _lotteryClass, owner, _dogId);\r\n        // \u89e6\u53d1\u5151\u5956\u6210\u529f\u4e8b\u4ef6\r\n        RegisterLottery(_dogId, owner, _lotteryClass,\"successful\");\r\n        return 0;\r\n    }\r\n    /*\r\n    \u53d1\u5956\u51fd\u6570\uff0c\u53d1\u751f\u5728\u5f53\u671f\u5f00\u5956\u7ed3\u675f\u4e4b\u540e\r\n    */\r\n    \r\n    function distributeLottery() public returns (uint8) {\r\n        (luckyGenes, totalAmount, openBlock, isReward, currentTerm) = lotteryCore.getCLottery();\r\n        \r\n        // \u5fc5\u987b\u5728\u5f53\u671f\u5f00\u5956\u7ed3\u675f\u4e00\u5468\u4e4b\u540e\u53d1\u5956\r\n        require(openBlock > 0 && openBlock < (block.number-duration));\r\n\r\n        //\u5956\u91d1\u6c60\u53ef\u7528\u91d1\u989d\u5fc5\u987b\u5927\u4e8e\u6216\u7b49\u4e8e0\r\n        require(totalAmount >= lotteryCore.SpoolAmount());\r\n\r\n        // \u5982\u679c\u5df2\u7ecf\u53d1\u5956\r\n        if (isReward == true) {\r\n            DistributeLottery(flotteries[currentTerm].reward, currentTerm);\r\n            return 1;\r\n        }\r\n        uint256 legalAmount = totalAmount - lotteryCore.SpoolAmount();\r\n        uint256 totalDistribute = 0;\r\n        uint8[7] memory lR;\r\n        uint8 ratio;\r\n\r\n        // \u5fc5\u4e2d\u548c\u968f\u673a\u4e24\u79cd\u4e0d\u540c\u7684\u5956\u91d1\u5206\u914d\u6bd4\u7387\r\n        if (lotteryCore._isCarousal(currentTerm) ) {\r\n            lR = carousalParam;\r\n            ratio = carousalRatio;\r\n        } else {\r\n            lR = lotteryParam;\r\n            ratio = lotteryRatio;\r\n        }\r\n        // \u8ba1\u7b97\u5404\u5956\u9879\u91d1\u989d\u5e76\u5206\u53d1\u7ed9\u4e2d\u5956\u8005\r\n        for (uint8 i = 0; i < 7; i++) {\r\n            address[] memory owners;\r\n            uint256[] memory dogs;\r\n            (dogs, owners) = _getLuckyList(currentTerm, i);\r\n            if (owners.length > 0) {\r\n                    uint256 reward = (legalAmount * ratio * lR[i])/(10000 * owners.length);\r\n                    totalDistribute += reward * owners.length;\r\n                    // \u8f6c\u7ed9CFO\u7684\u624b\u7eed\u8d39\uff0810%\uff09\r\n                    dogCore.sendMoney(dogCore.cfoAddress(),reward * owners.length/10);\r\n                    \r\n                    for (uint j = 0; j < owners.length; j++) {\r\n                        address gen0Add;\r\n                        if (i == 0) {\r\n                            // \u8f6c\u8d26\r\n                            dogCore.sendMoney(owners[j],reward*95*9/1000);\r\n                            // gen0 \u5956\u52b1\r\n                            gen0Add = _getGen0Address(dogs[j]);\r\n                            assert(gen0Add != address(0));\r\n                            dogCore.sendMoney(gen0Add,reward*5/100);\r\n                        } else if (i == 1) {\r\n                            // \u8f6c\u8d26\r\n                            dogCore.sendMoney(owners[j],reward*97*9/1000);\r\n                            // gen0 \u5956\u52b1\r\n                            gen0Add = _getGen0Address(dogs[j]);\r\n                            assert(gen0Add != address(0));\r\n                            dogCore.sendMoney(gen0Add,reward*3/100);\r\n                        } else if (i == 2) {\r\n                            // \u8f6c\u8d26\r\n                            dogCore.sendMoney(owners[j],reward*98*9/1000);\r\n                            // gen0 \u5956\u52b1\r\n                            gen0Add = _getGen0Address(dogs[j]);\r\n                            assert(gen0Add != address(0));\r\n                            dogCore.sendMoney(gen0Add,reward*2/100);\r\n                        } else {\r\n                            // \u8f6c\u8d26\r\n                            dogCore.sendMoney(owners[j],reward*9/10);\r\n                        }\r\n                    }\r\n                  // \u8bb0\u5f55\u5404\u7b49\u5956\u53d1\u5956\u91d1\u989d\r\n                    flotteries[currentTerm].reward.push(reward);  \r\n                } else {\r\n                    flotteries[currentTerm].reward.push(0); \r\n                } \r\n        }\r\n        //\u6ca1\u6709\u4eba\u767b\u8bb0\u4e00\u7b49\u5956\u4e2d\u5956\uff0c\u5c06\u5956\u91d1\u6c605%\u8f6c\u5165\u84c4\u5956\u6c60,\u5e76\u4e14\u66f4\u65b0\u65e0\u4e00\u7b49\u5956\u8ba1\u6570\r\n        if (flotteries[currentTerm].owners0.length == 0) {\r\n            lotteryCore.toSPool((lotteryCore.bonusPool().balance - lotteryCore.SpoolAmount())/20);\r\n            lotteryCore.rewardLottery(true);\r\n        } else {\r\n            //\u53d1\u5956\u5b8c\u6210\u4e4b\u540e\uff0c\u66f4\u65b0\u5f53\u524d\u5956\u9879\u72b6\u6001\u3001\u5c06\u5f53\u524d\u5956\u9879\u52a0\u5165\u5386\u53f2\u8bb0\u5f55\r\n            lotteryCore.rewardLottery(false);\r\n        }\r\n        \r\n        DistributeLottery(flotteries[currentTerm].reward, currentTerm);\r\n        return 0;\r\n    }\r\n\r\n     /*\r\n    \u83b7\u53d6\u72d7\u7684gen0\u7956\u5148\u7684\u4e3b\u4eba\u8d26\u6237\r\n    */\r\n    function _getGen0Address(uint256 dogId) internal view returns(address) {\r\n        var(, , , , , , , , , gen0) = dogCore.getDog(dogId);\r\n        return dogCore.ownerOf(gen0);\r\n    }\r\n\r\n    /*\r\n      \u901a\u8fc7\u5956\u9879\u7b49\u7ea7\u83b7\u53d6\u4e2d\u5956\u8005\u5217\u8868\u548c\u4e2d\u5956\u72d7\u5217\u8868\r\n    */\r\n    function _getLuckyList(uint256 currentTerm1, uint8 lotclass) public view returns (uint256[] kts, address[] ons) {\r\n        if (lotclass==0) {\r\n            ons = flotteries[currentTerm1].owners0;\r\n            kts = flotteries[currentTerm1].dogs0;\r\n        } else if (lotclass==1) {\r\n            ons = flotteries[currentTerm1].owners1;\r\n            kts = flotteries[currentTerm1].dogs1;\r\n        } else if (lotclass==2) {\r\n            ons = flotteries[currentTerm1].owners2;\r\n            kts = flotteries[currentTerm1].dogs2;\r\n        } else if (lotclass==3) {\r\n            ons = flotteries[currentTerm1].owners3;\r\n            kts = flotteries[currentTerm1].dogs3;\r\n        } else if (lotclass==4) {\r\n            ons = flotteries[currentTerm1].owners4;\r\n            kts = flotteries[currentTerm1].dogs4;\r\n        } else if (lotclass==5) {\r\n            ons = flotteries[currentTerm1].owners5;\r\n            kts = flotteries[currentTerm1].dogs5;\r\n        } else if (lotclass==6) {\r\n            ons = flotteries[currentTerm1].owners6;\r\n            kts = flotteries[currentTerm1].dogs6;\r\n        }\r\n    }\r\n\r\n    /*\r\n      \u5c06owner\u548cdogId\u63a8\u5165\u4e2d\u5956\u4fe1\u606f\u5b58\u50a8\r\n    */\r\n    function _pushLuckyInfo(uint256 currentTerm1, uint8 _lotteryClass, address owner, uint256 _dogId) internal {\r\n        if (_lotteryClass == 0) {\r\n            flotteries[currentTerm1].owners0.push(owner);\r\n            flotteries[currentTerm1].dogs0.push(_dogId);\r\n        } else if (_lotteryClass == 1) {\r\n            flotteries[currentTerm1].owners1.push(owner);\r\n            flotteries[currentTerm1].dogs1.push(_dogId);\r\n        } else if (_lotteryClass == 2) {\r\n            flotteries[currentTerm1].owners2.push(owner);\r\n            flotteries[currentTerm1].dogs2.push(_dogId);\r\n        } else if (_lotteryClass == 3) {\r\n            flotteries[currentTerm1].owners3.push(owner);\r\n            flotteries[currentTerm1].dogs3.push(_dogId);\r\n        } else if (_lotteryClass == 4) {\r\n            flotteries[currentTerm1].owners4.push(owner);\r\n            flotteries[currentTerm1].dogs4.push(_dogId);\r\n        } else if (_lotteryClass == 5) {\r\n            flotteries[currentTerm1].owners5.push(owner);\r\n            flotteries[currentTerm1].dogs5.push(_dogId);\r\n        } else if (_lotteryClass == 6) {\r\n            flotteries[currentTerm1].owners6.push(owner);\r\n            flotteries[currentTerm1].dogs6.push(_dogId);\r\n        }\r\n    }\r\n\r\n    /*\r\n      \u68c0\u6d4b\u8be5\u57fa\u56e0\u83b7\u5956\u7b49\u7ea7\r\n    */\r\n    function getLotteryClass(uint8[7] luckyGenesArray, uint256 genes) internal view returns(uint8) {\r\n        // \u4e0d\u5b58\u5728\u5f00\u5956\u4fe1\u606f,\u5219\u76f4\u63a5\u8fd4\u56de\u672a\u4e2d\u5956\r\n        if (currentTerm < 0) {\r\n            return 100;\r\n        }\r\n        \r\n        uint8[7] memory dogArray = lotteryCore.convertGeneArray(genes);\r\n        uint8 cnt = 0;\r\n        uint8 lnt = 0;\r\n        for (uint i = 0; i < 6; i++) {\r\n\r\n            if (luckyGenesArray[i] > 0 && luckyGenesArray[i] == dogArray[i]) {\r\n                cnt++;\r\n            }\r\n        }\r\n        if (luckyGenesArray[6] > 0 && luckyGenesArray[6] == dogArray[6]) {\r\n            lnt = 1;\r\n        }\r\n        uint8 lotclass = 100;\r\n        if (cnt==6 && lnt==1) {\r\n            lotclass = 0;\r\n        } else if (cnt==6 && lnt==0) {\r\n            lotclass = 1;\r\n        } else if (cnt==5 && lnt==1) {\r\n            lotclass = 2;\r\n        } else if (cnt==5 && lnt==0) {\r\n            lotclass = 3;\r\n        } else if (cnt==4 && lnt==1) {\r\n            lotclass = 4;\r\n        } else if (cnt==3 && lnt==1) {\r\n            lotclass = 5;\r\n        } else if (cnt==3 && lnt==0) {\r\n            lotclass = 6;\r\n        } else {\r\n            lotclass = 100;\r\n        }\r\n        return lotclass;\r\n    }\r\n    /*\r\n       \u68c0\u6d4b\u8be5\u57fa\u56e0\u83b7\u5956\u7b49\u7ea7\u63a5\u53e3\r\n    */\r\n    function checkLottery(uint256 genes) public view returns(uint8) {\r\n        var(luckyGenesArray, , , isReward1, ) = lotteryCore.getCLottery();\r\n        if (isReward1) {\r\n            return 100;\r\n        }\r\n        return getLotteryClass(luckyGenesArray, genes);\r\n    }\r\n    /*\r\n       \u83b7\u53d6\u5f53\u524dLottery\u4fe1\u606f\r\n    */\r\n    function getCLottery() \r\n        public \r\n        view \r\n        returns (\r\n            uint8[7]        luckyGenes1,\r\n            uint256         totalAmount1,\r\n            uint256         openBlock1,\r\n            bool            isReward1,\r\n            uint256         term1,\r\n            uint8           currentGenes1,\r\n            uint256         tSupply,\r\n            uint256         sPoolAmount1,\r\n            uint256[]       reward1\r\n        ) {\r\n            (luckyGenes1, totalAmount1, openBlock1, isReward1, term1) = lotteryCore.getCLottery();\r\n            currentGenes1 = lotteryCore.currentGene();\r\n            tSupply = dogCore.totalSupply();\r\n            sPoolAmount1 = lotteryCore.SpoolAmount();\r\n            reward1 = flotteries[term1].reward;\r\n    }\r\n    \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"luckyGenes\",\"type\":\"uint8[7]\"}],\"name\":\"convertGene\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toSPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCLottery\",\"outputs\":[{\"name\":\"luckyGenes\",\"type\":\"uint8[7]\"},{\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"name\":\"openBlock\",\"type\":\"uint256\"},{\"name\":\"isReward\",\"type\":\"bool\"},{\"name\":\"term\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openCarousel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_viewId\",\"type\":\"uint8\"}],\"name\":\"openLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SpoolAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"currentTerm\",\"type\":\"uint256\"}],\"name\":\"_isCarousal\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gene\",\"type\":\"uint256\"}],\"name\":\"convertGeneArray\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[7]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_flAddress\",\"type\":\"address\"}],\"name\":\"setFinalLotteryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentTerm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toLotteryPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentGene\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dogCore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isMore\",\"type\":\"bool\"}],\"name\":\"rewardLottery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CLotteries\",\"outputs\":[{\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"name\":\"openBlock\",\"type\":\"uint256\"},{\"name\":\"isReward\",\"type\":\"bool\"},{\"name\":\"noFirstReward\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ktAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"currentGene\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"luckyGenes\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"currentTerm\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLottery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"luckyGenes\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"currentTerm\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"OpenCarousel\",\"type\":\"event\"}]", "ContractName": "LotteryCore", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000074cd98fbd837fe9200cf867f4b1ba9573c6d865e", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://cea7b8d1150b9df70aa9bdeaa2db99f61e075656d8d4cf9fcf8a4399aeaa680c"}]}