{"status": "1", "message": "OK", "result": [{"SourceCode": "/// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\ncontract protected {\r\n\r\n    mapping (address => bool) is_auth;\r\n\r\n    function authorized(address addy) public view returns(bool) {\r\n        return is_auth[addy];\r\n    }\r\n\r\n    function set_authorized(address addy, bool booly) public onlyAuth {\r\n        is_auth[addy] = booly;\r\n    }\r\n\r\n    modifier onlyAuth() {\r\n        require( is_auth[msg.sender] || msg.sender==owner, \"not owner\");\r\n        _;\r\n    }\r\n\r\n    address owner;\r\n    modifier onlyOwner() {\r\n        require(msg.sender==owner, \"not owner\");\r\n        _;\r\n    }\r\n\r\n    bool locked;\r\n    modifier safe() {\r\n        require(!locked, \"reentrant\");\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n}\r\n\r\n\r\ncontract ANFT is protected {\r\n\r\n    string public content;\r\n    bytes32 public name;\r\n\r\n    constructor(address new_owner, string memory _content, bytes32 _name) {\r\n        owner = new_owner;\r\n        is_auth[new_owner] = true;\r\n        content = _content;\r\n        name = _name;\r\n    }\r\n\r\n}\r\n\r\ncontract ANFT_Collection is protected {\r\n\r\n    mapping(uint96 => string) public content;\r\n    uint96 public last_id;\r\n    bytes32 public name;\r\n\r\n    constructor(address new_owner, bytes32 _name) {\r\n        owner = new_owner;\r\n        is_auth[new_owner] = true;\r\n        name = _name;\r\n    }\r\n\r\n    function store(string calldata to_store) public onlyAuth {\r\n        content[last_id] = to_store;\r\n        last_id += 1;\r\n    }\r\n\r\n}\r\n\r\ncontract AFS is protected {\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        is_auth[owner] = true;\r\n    }\r\n\r\n    uint64 fee = 20000000000000000;\r\n\r\n    function set_fee(uint64 nufee) public onlyAuth {\r\n        fee = nufee;\r\n    }\r\n\r\n    function create_single_storage(bytes32 name, string calldata content) public payable returns(address location) {\r\n        if(!is_auth[msg.sender]) {\r\n            require(msg.value == fee);\r\n        }\r\n        ANFT resulting_token = new ANFT(msg.sender, content, name);\r\n        return(address(resulting_token));\r\n    }\r\n\r\n    function create_collection_storage(bytes32 name) public payable returns(address location) {        \r\n        if(!is_auth[msg.sender]) {\r\n            require(msg.value == fee*2);\r\n        }\r\n        ANFT_Collection resulting_token = new ANFT_Collection(msg.sender, name);\r\n        return(address(resulting_token));\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"create_collection_storage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"create_single_storage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"booly\",\"type\":\"bool\"}],\"name\":\"set_authorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"nufee\",\"type\":\"uint64\"}],\"name\":\"set_fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AFS", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5b485f98dc6a235d277386bb35bb07a25f05bc71644b2ee402a0557650b77eea"}]}