{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"EIP20Interface.sol\":{\"content\":\"// Abstract contract for the full ERC 20 Token standard\\r\\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\r\\npragma solidity \\u003e=0.7.0 \\u003c0.9.0;\\r\\n// SPDX-License-Identifier: GPL-3.0-or-later\\r\\nabstract contract EIP20Interface {\\r\\n    /* This is a slight change to the ERC20 base standard.\\r\\n    function totalSupply() constant returns (uint256 supply);\\r\\n    is replaced with:\\r\\n    uint256 public totalSupply;\\r\\n    This automatically creates a getter function for the totalSupply.\\r\\n    This is moved to the base contract since public getter functions are not\\r\\n    currently recognised as an implementation of the matching abstract\\r\\n    function by the compiler.\\r\\n    */\\r\\n    /// total amount of tokens\\r\\n    uint256 public totalSupply;\\r\\n\\r\\n    function balanceOf(address _owner) public virtual view returns (uint256 balance);\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public virtual returns (bool success);\\r\\n\\r\\n    function transferFrom(address _from, address _to, uint256 _value) public virtual returns (bool success);\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public virtual returns (bool success);\\r\\n\\r\\n    function allowance(address _owner, address _spender) public virtual view returns (uint256 remaining);\\r\\n\\r\\n    // solhint-disable-next-line no-simple-event-func-name\\r\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\r\\n}\"},\"TheBestToken.sol\":{\"content\":\"/*\\r\\nImplements EIP20 token standard: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\r\\n.*/\\r\\n\\r\\n\\r\\npragma solidity \\u003e=0.7.0 \\u003c0.9.0;\\r\\n\\r\\nimport \\\"./EIP20Interface.sol\\\";\\r\\n//SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\ncontract TheBestToken is EIP20Interface {\\r\\n\\r\\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\\r\\n    mapping (address =\\u003e uint256) public balances;\\r\\n    mapping (address =\\u003e mapping (address =\\u003e uint256)) public allowed;\\r\\n\\r\\n    string public name;                   //fancy name: eg Simon Bucks\\r\\n    uint8 public decimals;                //How many decimals to show.\\r\\n    string public symbol;                 //An identifier: eg SBX\\r\\n\\r\\n    address ownerAdress;\\r\\n\\r\\n    constructor(\\r\\n        uint256 _initialAmount,\\r\\n        string memory _tokenName,\\r\\n        uint8 _decimalUnits,\\r\\n        string memory _tokenSymbol\\r\\n    ) {\\r\\n        ownerAdress = msg.sender;\\r\\n        balances[msg.sender] = _initialAmount;               // Give the creator all initial tokens\\r\\n        totalSupply = _initialAmount;                        // Update total supply\\r\\n        name = _tokenName;                                   // Set the name for display purposes\\r\\n        decimals = _decimalUnits;                            // Amount of decimals for display purposes\\r\\n        symbol = _tokenSymbol;                               // Set the symbol for display purposes\\r\\n    }\\r\\n\\r\\n     function transfer(address _to, uint256 _value) override public returns (bool success) {\\r\\n        require(balances[msg.sender] \\u003e= _value);\\r\\n        require(msg.sender == ownerAdress);\\r\\n        balances[msg.sender] -= _value;\\r\\n        balances[_to] += _value;\\r\\n        emit Transfer(msg.sender, _to, _value); //solhint-disable-line indent, no-unused-vars\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address _from, address _to, uint256 _value) override public returns (bool success) {\\r\\n        require(msg.sender == ownerAdress);\\r\\n        uint256 allowance2 = allowed[_from][msg.sender];\\r\\n        require(balances[_from] \\u003e= _value \\u0026\\u0026 allowance2 \\u003e= _value);\\r\\n        balances[_to] += _value;\\r\\n        balances[_from] -= _value;\\r\\n        if (allowance2 \\u003c MAX_UINT256) {\\r\\n            allowed[_from][msg.sender] -= _value;\\r\\n        }\\r\\n        emit Transfer(_from, _to, _value); //solhint-disable-line indent, no-unused-vars\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address _owner) override public view returns (uint256 balance) {\\r\\n        return balances[_owner];\\r\\n    }\\r\\n\\r\\n    function approve(address _spender, uint256 _value) override public returns (bool success) {\\r\\n        allowed[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value); //solhint-disable-line indent, no-unused-vars\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address _owner, address _spender) override public view returns (uint256 remaining) {\\r\\n        return allowed[_owner][_spender];\\r\\n    }\\r\\n}\"}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TheBestToken", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001349424d20746f6b656e697a65642073746f636b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349424d0000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3f5af8879f953838c6f704874e6fb23638e23717cc57d4f5f752c2ec9a94b7a3"}]}