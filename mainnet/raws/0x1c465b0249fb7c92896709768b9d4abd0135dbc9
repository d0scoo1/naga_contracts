{"status": "1", "message": "OK", "result": [{"SourceCode": "// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/metadata.sol\n// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.7 <0.9.0;\n\n////// src/metadata.sol\n/* pragma solidity ^0.8.7; */\n\ncontract MetaData {\n    bytes32 public constant DEFAULT_ID = \"\";\n\n    // correct multiHash construction see https://github.com/multiformats/multihash\n    // 0-1  bytes:  hashFunction\n    // 1-2  bytes:  size\n    // 2-34 bytes:  hash (in most cases 32 bytes but not guranteed)\n    event MultiHash(address indexed addr, bytes32 indexed id, bytes multiHash);\n\n    /// @notice publish an IPFS hash as an event\n    /// @param multiHash as bytes array\n    function publish(bytes calldata multiHash) external {\n        emit MultiHash(msg.sender, DEFAULT_ID, multiHash);\n    }\n\n    /// @notice publish an IPFS hash as an event with an id\n    /// @param multiHash as bytes array\n    /// @param id identifier for the multiHash\n    function publish(bytes32 id, bytes calldata multiHash) external {\n        emit MultiHash(msg.sender, id, multiHash);\n    }\n}\n", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"multiHash\",\"type\":\"bytes\"}],\"name\":\"MultiHash\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"multiHash\",\"type\":\"bytes\"}],\"name\":\"publish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"multiHash\",\"type\":\"bytes\"}],\"name\":\"publish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MetaData", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "10000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}