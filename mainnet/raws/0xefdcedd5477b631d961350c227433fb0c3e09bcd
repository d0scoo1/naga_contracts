{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/AQUE.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Aqueous\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                //\\n//                                                                                                                                //\\n//                   .:dxkkkxxxxxxxxxxxxxdl;..                                   ..                       ,xxxxxxxxxxxxxxxxxxx    //\\n//                   .lxxxkkkkkkxxxxxxxxxol,.                                     .,.                     ;xxxxxxxxxxxxxxxxxxx    //\\n//                   'oxxxkkxxxkxxxkkkkkxol;.                                     .'.                    .lxxxxxxxxxxxxxxxxddd    //\\n//                   .oxxxxkxxxxxxxxxxkkxddl:;:clcc'   .                                                 ;xxxddxxxxxxxxxxxxxdd    //\\n//                   .ckxdodxxxxxxxkkkkOOOOkO0XNWNXkc'..                                                .lxxdloxxxxxxxxxxxxxxd    //\\n//                   .okxl',dxxxxxxxkOO0KKXXNNWWX0kxxc.                                           ..',:cloddoloxxxxxxxxxxddddd    //\\n//                   :xkxc..cxxxxxxkOO0KXXNWWWXK0OkOkxl'                                          .;oxxxddxddxxxxxxxxxxxxxxxdd    //\\n//                  .okkxl..:xkkkkOO0KKXXNWWNXKKKKK0Oxdc.              AQUEOUS                    .;dkkxxxxddddddddxxxddxddddd    //\\n//                 .:xkkd:. 'dOOO00KXXXNNNXKKXXXXXK0Okdc'                                         ,xOOOkxxxxxxxxxxxxxxxxxxxxxd    //\\n//                .;dkkxc.   cO0KKXNNNNWNKkk0KXXXXK0kdl;.                                         :k00OOkkxxxxxxxxxxxxxxxxxxxd    //\\n//                ;dkkxc.   .l0KXNNWWWWWWWNNNNXXXXX0kl,..                                         .c0KK0Okkxxxxxxxxdxxxxdddddd    //\\n//               .ckxd:.  .lk000KNNWWWWWWWMMMMWWWWWNKd:.                                     ... .'lxk0K00Okxxxxxxxxxxxxxxxxxd    //\\n//               'dd:.   .dKKXX0O0XXXNNXXXXNNNWWWMMWWXOx;.                                ..''.  .:ccldxxkkOkkkkxxxxxxxxxxxxxx    //\\n//               :d;.   .dKXNNWXdcdk00OO0KKXXXXXXXNNNNNXKx:.    .............'',,.        ..''...,;;,,,'',,:looxkkxxxxxxxxxxxx    //\\n//               ,l,.,:d0XNNWWXx;..':lcodxOKXKK00XNNXKXNWWWKxodk0XXXXXXXXXXXXXXXKOl'.        .....      .      .,cldxxxxdddddd    //\\n//                .lOKXXNNWWXx;........';;coxkO0KKXXXXXWWWWWXkxkOO00KKXNNWWMMWWWNWN0xd:......                    .:oddxddddxdd    //\\n//                .oXXNNWWKd;.  ..'.    ..'codk000KKXXNWWWNNXOoooooodddxkO0OkOOO000Oxo;....                      .;oxddddddddd    //\\n//                .dXNWWKd,.              .;ldxxddxkOKKKOddkOx:';;;;;,,,;;;,..'',,'..                            .;odxdddddddx    //\\n//                .kXWNk;.                  ':llcloxOKKOl':xkxl,''''............                                .lxxkxddddddxx    //\\n//                .xN0l'..            .,'     .';ldOKNN0dloOK0Oo;;;;'....                                    .,lx0KK0Okxddo:;:    //\\n//               .ckkoc,......        cx:       .,lx0KOxddddOkoc'...       watercolor artist                 .lkO0XNWNNX0OOxl;    //\\n//               ,dxxxoc;,,,.        .,'          .,cc::ccc;:;..            gone digital maven              .:xxlloxO0XWWNNXXX    //\\n//               :xxolllccl;.       ..                 ..                                              ..';lxO00d;....;xXNNNNN    //\\n//              .cc;cllllc;.                                                                         .clldxkO00Kx'     ;KWWN0x    //\\n//             .,;;:loool,.                               .....,;;;;'.....                          .lxdoddkOO00k,  .,cOWWW0ol    //\\n//             ',,cddolc,.                           .',:llodddONWNWXkkO0Okdlc:::;,..               cxxxxddxxxkkxl:oOKXNNNOllo    //\\n//            .:ldxl:,..                            ,looddddxxdxKWWWWKOKXXNXXKKKXXXK0Odc,..         :kkkkkkxdddxk00kdol::,....    //\\n//           .dOkxl,.                              ,loooooddddddxXWWWNXKNNNNNXXXXXNNNX0OOOxoc;..    .okkOOOkkkOKNWKl'...          //\\n//           ;00xl,.                              .clllloooddddookXNWWNK00KXXXXXXXXKK0kkOOkkkkkxo:.  .lkOOOOO0XNWWNk:,;.......    //\\n//           :O0xc.                               .lllllooooodoooxOKNNWXxoodxO0KK0OOOkkxkkkkkkkkkOkl,.;xKKKKXNNWWWWWXk,  .....    //\\n//          .cxOKx,     .;:;..                    .:ooooooddddxxdxkKNNWWXOxdooxOKOxxxxdodkO0OOOkkO0OxlckXNNNNNNXXWWMNk:.          //\\n//         .,oOKKOc.    c0KOd:..                   'ldddddxxxxxxxkKXNNNWN0Okdc::c:,;:;,:lxkOOOkkO0000OxxKNWWWNKKNWWNkcc,          //\\n//        ':cdkxxd;    .oXN0o;..                    ;ddddxxxkkkxdxxxdONXd;'.............',;::coxOO0KK0dl0WWNXKXNWWNkoodx:..'''    //\\n//        ..:olllo;.   .xNWN0dollllcll:'..          ,oddxxxxxOXKkolodxKNk,.           .........;clclccoOXXK00KNWNKkx0NNWN00XNX    //\\n//          ,llldd:.  .:0WWWKkO000OKWWNKkoc,..      .lddxO0O0XNXkoooddkXNk:.             ..',;;'..  .lKX0OO0KNWWXK0KNWWMMW0doc    //\\n//          .codddc,,cd0NWMNkxkOkx0NWNXkoooc;'.      .lkKWWNKOkdooooodx0NWOc,.          ..';ldxl'  .cO0000KXWWWX0kOXWNX0Od,       //\\n//          'loxko:cxO0XWMWKdododONWWNkc:lc:'.        ,0WWXOolooddddxxxkKWNXOc.        ....;oxxdl,'l0KXXNNWWWN0o:;cxxoc:::;,''    //\\n//          .:lol::x0O0NWWNOdddx0NWWNOl'.....         .ckkxdodddxxxxkkkkOXWWW0:         ...'cdxddx0NWWWWWWWXOo,...;:cccc::::::    //\\n//          .,lc;:ok00XWWWKxddx0NWWNko:.          .:do,.,oxxkkxkkkkkkkkkxONWWNx.       .....,oOKXNNNNWWWWXkl,.  .',',,;;::cccl    //\\n//      .,cc..:cccok0KNMMNOddxKNWWNklc,.          'll,.  :kOOOOOOOOkkkkkkk0NWW0:        . .;okXWWWWWWNNXOl;.     ........,;:cc    //\\n//     ..;lc..;oollk0XWMMXxdkKWWNKd:;'.                  .cO00000OOOkkkkkkkKNNN0xdl,.    .lKNNWWNWWN0xoc,..          . ..;clc:    //\\n//            :xd::d0NWWW0ddOXXKk;...                     'kK000OOOOOkkkkkOKXKOxxOXX0dc:cxXWNNWWXKKx:,'...            ..;lolll    //\\n//           .;ol;';d0XNXkdk0KK0l,'..                    .'x00OOOOOO00KK0xdoc,.  ;kXNNWWWNWWWWWN0d:;;;,'.         .....;coc...    //\\n//      .';cl;,cl:..':lkkdkKKXKxlll:..                .:dkkO0KKXXNNNNWWW0l'....'l0XXXWWWWWWWNXKK0o;;;;:,.   . ..... ..,::c;.      //\\n//      .,oxxl,coc,....,;d0KXKxllc;..               .ck0KXXNNWWMMWWWWWWNNK0kO0OkkkdookXWWWWXkdool,.. .'. ..        ..':lool:,.    //\\n//      .:dxxo:lddc'   .;dkxxoc:,.                .ck0XNWWMMMMWWWNXXKKKKK0kdl:,...,:cd0NWNX0dc,..                 .,:oxkkkkkxd    //\\n//     .;dxxxdloddo;.   ..... ..               'cxKNWWMMMMWWNNNXK0Okkxoc;'...';ldkKKkddkXNKOo.                  .codxkkxxxxxxx    //\\n//     .cdxxxdddxxdl.                        ;kNWWWWWWNNXKKKKKKKK0Oxc:;,:llloOKKOdllcccxKN0:.                  .lxo:coxxxxxkkx    //\\n//     .,:loodxxkxxd:....                  .dNMWNXK0OOkkkxxkOO0XXXKKXNNNK0Odlc;'..cx0K0OKKc                   .cdxxooxxxxxxxxx    //\\n//    ...',;:ldxkkxxxdoool'               .kXK0OkkxxxkxxxddddxO0XNNNKkxo:,...,:cdKXKkl:cko.       ..'''',,,;;codxxxxxxxxkxxxxx    //\\n//      ..,:lolodxdol:;;::.               ;kkxxkkxkOkkkkkkkxxdoco0K0x;.,;;:dOOkkxl;,''dkl'..  .;,,clooooddddxxxxxxxxxxxxxxddxx    //\\n//     ..';lddocccc:,....                .dOOkO0OkxxkOOkxkkOOxoloxxkOOO00d:;,..... .,xW0; .......,coddddddxxxxxxxxxxxxxxxxdoll    //\\n//    ;coodxkxxxxdddoc:,'''''.           :KXKKXNXX0kkkOkkkOOkxooodxk0KKKKkoodddddkkk0NXo.........;lodxxxxxxxxxxxxdlcllloddo:'.    //\\n//    ,:lodxkxxkkkkxo:.'oxxxxdc.         lKK0KKK0kdxkkOOkkkxxxdo:,;l0XXXNNNXK00OOKXNKxc'...... ..',;;;;;;:::::;;;,.....';clccc    //\\n//    .,:odxxkxkkkkko' .okkkxxxo,        :kxdxxxo:;cdxkkxdoc;;,'....cKNNWNKOO000K0Ox;........            .','...',,,,;cldxxxxx    //\\n//    :ldxxxkkkkxxxko. ;xkkkkkkxd:.       .';lxdlc:',:cc:;'...      .oNWWX0O0KKXNXXk;..                 .'coddddxkkkkxxxxxxxxx    //\\n//    oxxkkkxxxxxxxxl..lxxkkkkkxxdl;.        ......    ...           ;KNKOO00O0XXK0Oc..            ...,coxxxxxxxxkkkxxxxxxxxxx    //\\n//    kkkkkkxxxxxxxxxooxxxxxkkkkxxxxdl,.......                       .xX00000KXX0OOOc.         ..;ldddxkxxxxxxxxxxxxxxxxxxxxxx    //\\n//    xkkkkkkxxxxxxxxxxxxxxkkkkxxxxxxxxxxxxkOko;.                     ;OK0OO0XX0OOO0l       .'coxxkxkxxxxxddxxxxxxxxxxxxxxxxxx    //\\n//    xxxxxxxxxxxxkkxxxxxxxxxkkxxddxxxkkOkkO000x;                     .xKOO0KX0Okk00:      .,lxxxxdxxxxxdxxddxxxxxxxxxxxxxxxxx    //\\n//                                                                                                                                //\\n//                                                                                                                                //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract AQUE is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Aqueous\\\", \\\"AQUE\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AQUE", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}