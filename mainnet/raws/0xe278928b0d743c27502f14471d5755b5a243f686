{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ninterface ToMint {\r\n    function claim() external;\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n}\r\n\r\ncontract Receiver {\r\n    constructor(address payable to) public {\r\n        ToMint erc721 = ToMint(0x4D13D387E34D412088a6428Cd360a06B533E8A8f);\r\n        erc721.claim();\r\n        uint256 id = erc721.tokenOfOwnerByIndex(address(this), 0);\r\n        erc721.transferFrom(address(this), to, id);\r\n        selfdestruct(to);\r\n    }\r\n}\r\n\r\ncontract Minter {\r\n    function batchClaim(uint256 amount, address payable beneficiary) public {\r\n        for (uint256 i = 0; i < amount; i++) {\r\n            new Receiver(beneficiary);\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"batchClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Minter", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://62c781a0059a0df8b55de53bfbeee78d26a972b29c7904dc5eb95b33b9d2c5c3"}]}