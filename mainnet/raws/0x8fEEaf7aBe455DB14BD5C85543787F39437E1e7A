{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/airdrop.sol\": {\r\n      \"content\": \"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                            //\\n//      NNNNNNNN        NNNNNNNN   ffffffffffffffff           tttt                                               iiii                         //\\n//      N:::::::N       N::::::N  f::::::::::::::::f       ttt:::t                                              i::::i                        //\\n//      N::::::::N      N::::::N f::::::::::::::::::f      t:::::t                                               iiii                         //\\n//      N:::::::::N     N::::::N f::::::fffffff:::::f      t:::::t                                                                            //\\n//      N::::::::::N    N::::::N f:::::f       ffffffttttttt:::::ttttttt      aaaaaaaaaaaaa  nnnn  nnnnnnnn    iiiiiii   aaaaaaaaaaaaa        //\\n//      N:::::::::::N   N::::::N f:::::f             t:::::::::::::::::t      a::::::::::::a n:::nn::::::::nn  i:::::i   a::::::::::::a       //\\n//      N:::::::N::::N  N::::::Nf:::::::ffffff       t:::::::::::::::::t      aaaaaaaaa:::::an::::::::::::::nn  i::::i   aaaaaaaaa:::::a      //\\n//      N::::::N N::::N N::::::Nf::::::::::::f       tttttt:::::::tttttt               a::::ann:::::::::::::::n i::::i            a::::a      //\\n//      N::::::N  N::::N:::::::Nf::::::::::::f             t:::::t              aaaaaaa:::::a  n:::::nnnn:::::n i::::i     aaaaaaa:::::a      //\\n//      N::::::N   N:::::::::::Nf:::::::ffffff             t:::::t            aa::::::::::::a  n::::n    n::::n i::::i   aa::::::::::::a      //\\n//      N::::::N    N::::::::::N f:::::f                   t:::::t           a::::aaaa::::::a  n::::n    n::::n i::::i  a::::aaaa::::::a      //\\n//      N::::::N     N:::::::::N f:::::f                   t:::::t    tttttta::::a    a:::::a  n::::n    n::::n i::::i a::::a    a:::::a      //\\n//      N::::::N      N::::::::Nf:::::::f                  t::::::tttt:::::ta::::a    a:::::a  n::::n    n::::ni::::::ia::::a    a:::::a      //\\n//      N::::::N       N:::::::Nf:::::::f                  tt::::::::::::::ta:::::aaaa::::::a  n::::n    n::::ni::::::ia:::::aaaa::::::a      //\\n//      N::::::N        N::::::Nf:::::::f                    tt:::::::::::tt a::::::::::aa:::a n::::n    n::::ni::::::i a::::::::::aa:::a     //\\n//      NNNNNNNN         NNNNNNNfffffffff                      ttttttttttt    aaaaaaaaaa  aaaa nnnnnn    nnnnnniiiiiiii  aaaaaaaaaa  aaaa     //\\n//                                                                                                                                            //\\n//                                                                                                                                            //\\n//                                                     .:~!?YPGB#&&@@@@@@&&&#BG5Y?!^:                                                         //\\n//                                                .^7YPB&@@@@@@@@@@@@@@@@@@@@@@@@@@@&BPJ7^.                                                   //\\n//                                            :!YG#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#PJ~.                                               //\\n//                                         ^?G&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#P7:                                            //\\n//                                      ^JB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&G?:                                         //\\n//                                   .7G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&P~                                       //\\n//                                 .?#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B7.                                    // \\n//                               .J#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B7                                   //\\n//                              7#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B~                                 //\\n//                            ^G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@5.                               //\\n//                           7&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#~                              //\\n//                         .5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@?                             //\\n//                        .P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Y                            //\\n//                       .G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Y                           //\\n//                       P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@?                          //\\n//                      J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@~                         //\\n//                     ^&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B.                        //\\n//                     P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@?                        //\\n//                    ^@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B.                       //\\n//                    J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@~                       //\\n//                    P@@@@@@@@@#G5J7!~~~~!7?YP#@@@@@@@@@@@@@@&BPJ7!~~~~~!?YPB&@@@@@@@@@@@@@&BPY?!~~~~~!7J5B&@@@@@@@@@?                       //\\n//                    B@@@@@@GJ~.              .^7P&@@@@@@@BY!:               :!5#@@@@@@@#5!:               :~JB@@@@@@5                       //\\n//                    B@@@@G^                      .7#@@@&~                      .7@@@@G!.                      ~#@@@@5                       //\\n//                    ^P@@@&P~                       ^&@@@7                       Y@@@#.                       !G@@@&Y.                       //\\n//                      ~G@@@@P^                      J@@@#:                     ~@@@@!                      !G@@@@5^                         //\\n//                        !G@@@@5^                    .B@@@5                    .B@@@5                     ~G@@@@P^                           //\\n//                          !B@@@@5:                   ~@@@@!                   J@@@#:                   ~P@@@@P~                             //\\n//                            7B@@@&Y:                  Y@@@#.                 ^@@@@7                  ^P@@@@G~                               //\\n//                              7#@@@&Y:                .B@@@5                 G@@@P                 ^5@@@@G!                                 //\\n//                               .?#@@@&J.               !@@@@~               ?@@@&:               :5&@@@B!                                   //\\n//                                 .?#@@@#?.              5@@@B.             ^&@@@?              :Y&@@@B7                                     //\\n//                                   .J&@@@#?.            .#@@@Y             P@@@G             :J&@@@#7.                                      //\\n//                                     :J&@@@#7            !@@@@~           7@@@&^           .J&@@@#?.                                        //\\n//                                       :Y&@@@B7           P@@@G          :&@@@J          .?#@@@#?.                                          //\\n//                                         :5&@@@B!         :&@@@J         P@@@G         .?#@@@&J.                                            //\\n//                                           ^5@@@@G!        7@@@&^       7@@@@~        7#@@@&J:                                              //\\n//                                             ^P@@@@G~       P@@@G      :#@@@Y       7B@@@&Y:                                                //\\n//                                               ~P@@@@P~     ^&@@@?     5@@@B.     !B@@@&5:                                                  //\\n//                                                 ~G@@@@P^    J@@@&7777?@@@@!    !G@@@@5^                                                    //\\n//                                                   ~G@@@@5JPB#@@@@@@@@@@@@@#G5JP@@@&5^                                                      //\\n//                                                    :5@@@@@@@@&#BGGPPPGGB#&@@@@@@@@J.                                                       //\\n//                                                 .!P&@@@@#GY7^:.         .:~7YG&@@@@#5~                                                     //\\n//                                               .?B@@@@BY~.                     .~Y#@@@@G!                                                   //\\n//                                              7#@@@@P~                            .~P@@@@G~                                                 //\\n//                                            :P@@@@5^                                 ^P@@@@Y.                                               //\\n//                                           ^#@@@#!      ::::::::   .:~!77!~^.          !#@@@G:                                              //\\n//                                          ^&@@@G:       G@&&&&&#:~5#&@@@@@@@#P!         :B@@@B.                                             //\\n//                                         .B@@@G.        B@@@@@@&B@@@@@@@@@@@@@@P.        .B@@@P                                             //\\n//                                         Y@@@&^         B@@@@@@@@@&BGGB@@@@@@@@@J         ^&@@@7                                            //\\n//                                        .#@@@Y          B@@@@@@@&7.    ^G@@@@@@@G          5@@@G                                            //\\n//                                        !@@@@~          B@@@@@@@?       7@@@@@@@B          !@@@&:                                           //\\n//                                        7@@@@^          B@@@@@@@!       !@@@@@@@B          ^@@@@^                                           //\\n//                                        !@@@@~          B@@@@@@@!       !@@@@@@@B          ~@@@&^                                           //\\n//                                        :&@@@J          B@@@@@@@!       !@@@@@@@B          Y@@@B.                                           //\\n//                                         P@@@#.         B@@@@@@@!       !@@@@@@@B         :&@@@J                                            //\\n//                                         ^&@@@5         B@@@@@@@!       !@@@@@@@B         P@@@B.                                            //\\n//                                          7@@@@5        B@@@@@@@!       7@@@@@@@#.       5@@@&^                                             //\\n//                                           7@@@@G:      ?YYYYYYY^       ^YYYYYYY?      :G@@@&~                                              //\\n//                                            !#@@@&?.                                 .J&@@@B^                                               //\\n//                                             :5@@@@#?:                             :J#@@@&J.                                                //\\n//                                               ~P@@@@&P!:                       :7P&@@@&Y:                                                  //\\n//                                                 ^Y#@@@@&GY!^.             .^7YG&@@@@BJ:                                                    //\\n//                                                   .!5B@@@@@@&BGPYYJJJY5PGB&@@@@@&BY~                                                       //\\n//                                                       ^7YG#&@@@@@@@@@@@@@@@&#GY!:                                                          //\\n//                                                           .^~7JY5PPPP55Y?7~:.                                                              //\\n//                                                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n// SPDX-License-Identifier: MIT\\n\\n// @title: Nftania NFT2.0\\n// @author: Nftania.com\\n// @custom: security-contact info@nftania.com\\n// @Contract: Nftania Airdrop\\n// Life is too short discover its purpose\\n\\npragma solidity 0.8.15;\\n   //////////////////////// Imports ////////////////////////////////////////\\n    import \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n    import \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n    import \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n    import \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract NftaniaAirdrop is Pausable, Ownable, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n   //////////////////////// Main Variables ///////////////////////////////////\\n    address public tokenAddress;\\n    address public immutable contractSigner;  \\n    uint256 public totalAirdropedTokens;\\n    uint256 public airdropID;        \\n    uint256 public remainingTokens;\\n    uint256 private minAirdrop;                           // Minimum number of tokens allowed per airdrop (in complete units not decimals)\\n    uint private startDate;\\n    uint private endDate;\\n    bool private tokensFinished; \\n    bool private timeEnded;\\n    bool private closed;\\n    mapping (address => uint) public nextNonce; // Store next valid nonce value for each address\\n\\n   //////////////////////// Events ///////////////////////////////////////////\\n    // Pause/unpause Smart Contract\\n        event ContractIsPaused (bool status);\\n    // Airdrop Claim                                     \\n        event AirdropClaim ( address indexed to, uint256 amount, uint256 indexed AirdropID, uint256 indexed Date );\\n    // New Airdrop Status\\n        event NewAirdropStatus (uint256 totalAirdropedTokens,uint256 remainingTokens, uint256 indexed Date);\\n    // New Airdrop Dates\\n        event airdropDateUpdate (uint startDate, uint endDate);\\n        // Withdraw Tokens \\n        event WithdrawTokens (address to, uint256  amount);\\n            \\n   //////////////////////// Constructor //////////////////////////////////////            \\n    constructor(uint _startDate, uint _endDate, address _tokenAddress,uint256 _minAirdrop, address _contractSigner) {\\n\\n        require (_startDate > block.timestamp, \\\"Nftania Airdrop: Start date is before current time\\\");\\n        require (_endDate > _startDate,\\\"Nftania Airdrop: End Date should be after Start Date.\\\");\\n        require (_tokenAddress != address(0),\\\"Nftania Airdrop: not allowed address\\\");\\n        require (_contractSigner != address(0),\\\"Nftania Airdrop: not allowed address\\\");\\n        contractSigner = _contractSigner;\\n        startDate = _startDate;\\n        endDate = _endDate;\\n        minAirdrop = _minAirdrop;\\n        tokenAddress = _tokenAddress;\\n    }\\n\\n   //////////////////////// Fallback //////////////////////////////////////   \\n    fallback() external payable {} \\n    receive() external payable {}\\n\\n   //////////////////////// Claim Airdrop //////////////////////////////////// \\n    function getAirdrop ( bytes32 msgh, uint8 v, bytes32 r, bytes32 s, uint256 amount, address to, uint256 signedNonce)\\n     public whenNotPaused whenNotClosed nonReentrant returns (bool) { \\n        \\n        // Prequalify airdrop\\n        updateStatus();\\n        require(amount * 10**18 <= remainingTokens,\\\"Nftania Airdrop: No remaining Tokens, no more Airdrop tokens are available\\\");\\n        \\n        // Verify message\\n        bytes32 HashedMessage = messageHash (to, amount, signedNonce);\\n        bytes32 SignedHashedMessage = getSignedMessageHash (HashedMessage);\\n        bool nonce = nonceCheck (signedNonce);\\n        require(ecrecover(msgh, v, r, s) == contractSigner,\\\"Nftania Airdrop: Invalid Signer\\\");\\n        require(msgh == SignedHashedMessage,\\\"Nftania Airdrop: Invalid Message\\\");\\n        require(nonce == true,\\\"Nftania Airdrop: This airdrop is already minted\\\");\\n        \\n        // Update status \\n        remainingTokens -= amount * 10**18;\\n        totalAirdropedTokens += amount; \\n        airdropID += 1;\\n        \\n        // Deliver tokens\\n        deliverTokens (to, amount);\\n        \\n        // Events\\n        emit AirdropClaim (to, amount, airdropID, block.timestamp);\\n        emit NewAirdropStatus (totalAirdropedTokens, remainingTokens / 10**18, block.timestamp);\\n        return true;        \\n    }\\n\\n   //////////////////////// function Deliver Tokens /////////////  \\n    function deliverTokens(address to, uint256 amount) internal {\\n        uint256 amountWithDecimal = amount * 10**18;\\n        IERC20(tokenAddress).safeTransferFrom(owner(), to, amountWithDecimal); \\n    }    \\n\\n   //////////////////////// function update Status /////////////  \\n    function updateStatus() internal {\\n        uint256 tokenAllowance;\\n        uint256 tokenBallance;\\n        require(block.timestamp >= startDate,\\\"Nftania Airdrop: Airdrop has not started yet\\\");   \\n        tokenAllowance = IERC20(tokenAddress).allowance(owner(), address(this));\\n        tokenBallance = IERC20(tokenAddress).balanceOf(owner());\\n        remainingTokens = min (tokenAllowance, tokenBallance);\\n        tokensFinished = remainingTokens < minAirdrop * 10**18;  // Checks if there is remaining tokens supply\\n        timeEnded = block.timestamp > endDate; // Checks if date Ended\\n        closed = tokensFinished || timeEnded;  \\n        require(!tokensFinished,\\\"Nftania Airdrop: Airdrop tokens finished, all tokens are distributed out\\\");   \\n        require(!timeEnded,\\\"Nftania Airdrop: Airdrop time has ended\\\");     \\n\\n    }\\n\\n   //////////////////////// Function Reopen Airdrpo after close /////////////  \\n   //Owner must make sure of enough allowance and new date before reopen\\n    function reopenAirdrop() public onlyOwner{\\n        closed = false;\\n    }\\n\\n   //////////////////////// get Details ////////////////////////////////\\n    function getDetails() public view returns (address _tokenAddress, bool _tokensFinished, bool _timeEnded, bool _closed, uint _startDate, uint _endDate) {\\n        return (tokenAddress, tokensFinished, timeEnded, closed, startDate, endDate) ;\\n    }\\n\\n   //////////////////////// function Minimum Value /////////////  \\n    function min (uint256 a ,uint256 b) internal pure returns (uint minimum) {\\n        if (a>b) {return b; } else{return a; }\\n    }\\n\\n   //////////////////////// Claim Aidrop Supporting Functions ////////////////\\n    function messageHash(address to, uint amount, uint signedNonce ) internal pure returns (bytes32 base_msg) {\\n        return keccak256(abi.encodePacked(to , amount, signedNonce));\\n    }\\n\\n    function getSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked( \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\" , hash ));\\n    }\\n\\n    function nonceCheck(uint signedNonce) internal  returns (bool nonce){\\n        // For new airdrop: If user did not use previous airdrop with previous SignedNonce\\n        // value, we enable him to use the new airdrop and we update the NextNonce value to\\n        // the new SignedNonce plus one.\\n        if (signedNonce > nextNonce[msg.sender]) {\\n            nextNonce[msg.sender]=signedNonce+1;\\n            nonce = true;\\n        }\\n        // Check if the new request SignedNonce value is equal to the NextNonce ID, if its\\n        // equal then its valid newly issued message\\n        if (signedNonce == nextNonce[msg.sender]){\\n            \\n            //setting the NextNonce value, as the current nonce value is just used.\\n            nextNonce[msg.sender]+=1;\\n            nonce = true;\\n        }\\n        // in this case nonce value is already claimed and nonce is rejected(false)\\n        // the new request is trying to \\\"recalim the airdrop again\\\"\\n        else {\\n            nonce = false;\\n        }\\n    }\\n\\n   //////////////////////// Set Dates //////////////////////////////////////// \\n    function setDates(uint _startDate, uint _endDate) public onlyOwner returns (bool status){\\n        require (_endDate > _startDate, \\\"Nftania Airdrop: End Date should be after Start Date.\\\");\\n        startDate = _startDate;\\n        endDate = _endDate;\\n        emit airdropDateUpdate (startDate, endDate);\\n        return status = true;        \\n    } \\n\\n   //////////////////////// Withdraw Balance ////////////////////////////////     \\n    function withdrawEth(uint amount, address payable receivingWallet) public onlyOwner returns (uint256 balance , bool status)  {\\n        require(amount <= address(this).balance, \\\"Nftania Airdrop: Insufficient funds\\\");\\n        (bool success, ) = receivingWallet.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Error\\\");\\n        return (address(this).balance,true);\\n    }\\n\\n   //////////////////////// Withdraw Tokens ////////////////////////////////    \\n    function withdrawTokens (IERC20 token , address to , uint256 amount ) public onlyOwner {\\n        uint256 tokenBalance = token.balanceOf (address(this)) ;\\n        require (amount <= tokenBalance,\\\"Nftania Airdrop: Token balance is low\\\") ;\\n        token.safeTransfer(to, amount);\\n        emit WithdrawTokens(to, amount);\\n    }\\n\\n   ////////////////// Modifier Checks if Not Closed  ///////////////////// \\n    modifier whenNotClosed {\\n        require(!closed,\\\"Nftania Airdrop: Airdrop is closed\\\");\\n        _;\\n    }\\n\\n   //////////////////////// Pause/UnPause Smart Contract ///////////////////// \\n    function pause() public onlyOwner {\\n        _pause();\\n        emit ContractIsPaused (true);        \\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n        emit ContractIsPaused (false);\\n    }\\n\\n   /////////////////////// Disable Renounce Ownership //////////////////////////////////// \\n    function renounceOwnership() public view override onlyOwner {\\n        revert(\\\"Nftania Airdrop: Ownership cannot be renounced\\\"); \\n    }\\n}\"\r\n    },\r\n    \"@openzeppelin/contracts/security/ReentrancyGuard.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/security/Pausable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAirdrop\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"AirdropID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Date\",\"type\":\"uint256\"}],\"name\":\"AirdropClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"ContractIsPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAirdropedTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Date\",\"type\":\"uint256\"}],\"name\":\"NewAirdropStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"}],\"name\":\"airdropDateUpdate\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"airdropID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgh\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"signedNonce\",\"type\":\"uint256\"}],\"name\":\"getAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_tokensFinished\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_timeEnded\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_closed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reopenAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"setDates\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAirdropedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receivingWallet\",\"type\":\"address\"}],\"name\":\"withdrawEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "NftaniaAirdrop", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000062b609b00000000000000000000000000000000000000000000000000000000062f06010000000000000000000000000c01719c9998f5114f92f67ef171b78fc2047acbf0000000000000000000000000000000000000000000000000000000000001d4c000000000000000000000000e6471b9cc67f8493c91718ed16ea568617069d36", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}