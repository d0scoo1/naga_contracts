{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/SAUVAGE.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Moustache Sauvage\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                            //\\n//                                                                                                            //\\n//           :JBP^             !#&#&P:.   .5G?7?JY!      ^P&@@@@@@&@#&&!                                :!    //\\n//         .7GP!.              :77?BG~:    .^YP55?~      :Y&@@@@&@@@&&5.                             :~77^    //\\n//       .7GP7.                    ^?!J?.    ..        :~7JB@@&J7&@@@&!                         :^~!77^..^    //\\n//     :?PP7.                      :JJJ^              .!777YBBP^.G@@@#!                    .:^~77~:...^~!7    //\\n//    YPY~.                               ::!Y^       :777777JB77B@@@&P:                :~7?!~^.  .:~!7777    //\\n//    7:                                 .!!.~~:.     .!777777P#&@@@&5^          ..:~!7??~:    .:~!77777?Y    //\\n//                                         ^?PP55??~   ^7777J7?&@&&&J.       .~7777!~^:.     .^!77777J5PB&    //\\n//    ..:^~~!!!!~~~~~~!!77??777!~^..       JBJ:.:::.   .!77?Y5Y#@&B7.      :7?!:.          .^!7777?YGG5GBY    //\\n//    ?JJ???77!!!!!~~~~^^:::::^~!?JJ?!:    :.          .~JG#&&&@@@5^.   .^7?~.            :!7777JPG5JJGP7~    //\\n//    !!77777777!!!~^:.            .^?5J^.        ::^!JP#@@@&&&##&BGPYJJ55J?7!!7!.      .^777?YPGY??5P7:.     //\\n//    777777??77777777!~:.            .7YY!:.. :!JGGGB&@@@@&#PYJYPYJJJJ?7!~^^^~^::~   .:!77J5GPJ?J5Y!.        //\\n//    ?JY?7PBPGY?77777777~:      .:^~!!!7J5J?7~^~^!!!55YBBPYJ7~~:..           .7^:?!..J5JJPPY?JYJ!:           //\\n//    Y5GGP#Y7YPPY77777777!:.:^~!7!~~^^^:.. ..  ..::... ::.:.                  .77!!7?YJPBY?YY7:              //\\n//    BBB##GJ?5GY5Y77!!!^::~~^^..                    ..                          .:::.^7?PPY~.                //\\n//    ~^75B#BGGGP?Y:...   .       :..: ..                                           .~777J#?^                 //\\n//        :!?YPGBP5~.            !^ ~???:.                                         ^!7777J#J!.                //\\n//            ..:~7Y5!.         .!::^~!~~^                                       .~777777PB7^                 //\\n//                  ^75~          :~!~^:                                      .:^!777777Y#Y:                  //\\n//                    ^5:                       ..:^^~:.                     :!7777777?5BJ:                   //\\n//             .::..   J!                 ..:^~!!777777~.                    ^!!77777JG57:                    //\\n//              .:~??~:!J          ...:^~!!7777777777777^                     ...:!75P?!:                     //\\n//      ::. .!!!7?YPPP5Y5      .^~!!!777777777777777777~.                        :7755~.                      //\\n//     :Y5YJJPP5GGGGGGGGB! . .^!7777777777777777777777~.                         ~777P~                       //\\n//    J5GGGGGGP5PP5PGGGGB5~7.^7777777777777777777777~:                          .!777JP~.                     //\\n//    5J7!!?5PGGGGGGGGBGPJJP~~77777777777777777777!:                            .!7777GJ~.                    //\\n//           .:~!777!~^:.  !J^777777777777~!7777!^.                             .!7777YP7~                    //\\n//                          7?777777777777~7777!:                                !7777?G?7^                   //\\n//                           7J7777777777777777:                                 ^7777?G?7~           .::     //\\n//                            !??77777777777777:                                 .~777JP77!.         ^JP5^    //\\n//                         .~^:.!YY777777777777~.                                 .~77PY77!.      ..755PPJ    //\\n//                           :!!^7Y5?7777777777!:                                  .!?G?YY~    .~JY55!J55G    //\\n//        ..                   :7?7J5?777777777!:                                   ~Y5JGP:  .~J5GGP^!PPJ5    //\\n//    .^~!!!!~~^^^~~~~~~~~~~^^:..~J7YY777777777!^                                  .7P?YP?: ^J?!YPPP!YG5JP    //\\n//    !777777777777777777777777!: :!JP7777777777~                                  .JG7YY. ~5Y?5PPY55PPPYY    //\\n//    777777777777777777???JJJJ?!~~^!PY777777777!^                                 ~P555Y!7?JJJ5P5???7~:^^    //\\n//    7777777777777?Y5555YYJ7!^^^^:::~57777777777!.              .                 !5P?^^!~:::.::7YJYY~       //\\n//    77777777777!!77!!~^:.          77~777777777!.             :?!7~               .~5P!.        .:..        //\\n//    7!~^^~~^^::....               .P7~77777777!:               ^~~:                 .!G5~.                  //\\n//    .                             ^B~!7777777!:                                       :?BP7^                //\\n//                                  JP:!777777!:                                          ~5&#?.              //\\n//                                 :G7.!777777~                                          .^75&&Y:             //\\n//                                 ^#~ ~777777~                                        .~YPGB&@@#Y~           //\\n//                                 ~B^ !777777!:                                   .^^:J#&@@@@@@@@#Y^         //\\n//                                 ~P::77777777~                                .^?G#B#@@@@@@@@@@@@&B~        //\\n//                                 .Y~:77777777!:                       .:..^!?5P#&@@@@@@@@@@@@@#5PB#P???7    //\\n//                                 :P7.!?????JJ??7!7!::~!~::::^!77^!?JYJ5GPP#&&@@@@@@@@@@@@@&#P7^:.^^:..:^    //\\n//                                ~G&#GB#&##&&&&&&&&&##&&&#BB#&&&##&&&&&&&@&@@@@@@@@@@@@@@&BJ~.               //\\n//                         :~: . :G@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BY^                  //\\n//                        :Y5!^Y^.G@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#5^                    //\\n//                      ^!7PJ7?P7.5#YJJ?7~~!77JYP#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&5!~                     //\\n//                     ^5PPP?YPGPJYB!:..^~.     .:!JPB&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#?~Y7                     //\\n//                    .?PPPP75PPPGPB#GYJ?!.         .:^7JP#@@@@@@@@@@@@@@@@@@@@@@@@#!~?^                      //\\n//                .:^^?PGGGGGBBBGPY?!^..                 .:!YB&@@@@@@@@@@@@@@@@@@@&?.~.                       //\\n//            :^!?JYJ5PGBBGPY7~:.                            .~YB&@@@@@@@@@@@@@@@@J.                          //\\n//    ^!!^..!JYJ7~!?Y5PY?~:.                                    :!5#@@@@@@@@@@@@&Y.                           //\\n//    ?~:JJYJ!::!5PJ~:.                                            ^?G&@@@@@@@@#?.                            //\\n//       ^~:.^?P5!:                                                 .^?P&@@@@@#!                              //\\n//        .!5PJ^.                                                   :777JB@@@@J                               //\\n//      ^JP57:                                                      .7777?5#@#^                               //\\n//    !YGY~.                                   .....::::::.       .:^!77777Y&G.                               //\\n//    GJ^                                .:^^~!!!!77777777!~^::::~!7777777775#7                               //\\n//    .                                 .~!777777777777777777777777777777777?B#~  .::.:::.                    //\\n//                                     .^!77777777777777777777777777J77777777GB7:^!777777!~^.                 //\\n//                              .^7?YYYY5PPGGGPPP5YJ?77777777777777?GJ7777777PBJ!7???7777777:                 //\\n//                          :~?YYJ7~^^:::^~!???JJYPGGGPY?77777777777P5777??J5#@&#B##GGGBGPGG?:                //\\n//                         ^??!:.         .:^!~~!!77?JPGBG5J7777_\u00a92022_All_Rights_Reserved_77777.             //\\n//                                       ^Moustache_Sauvage*ERC721*Francesco_Tortorella^V001.:!LOVE^          //\\n//                                                                                                            //\\n//                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract SAUVAGE is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Moustache Sauvage\\\", \\\"SAUVAGE\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SAUVAGE", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}