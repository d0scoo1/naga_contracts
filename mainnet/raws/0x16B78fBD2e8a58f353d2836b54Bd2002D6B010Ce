{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Rental/Payment.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity =0.8.6;\\r\\n\\r\\nimport \\\"./IPayment.sol\\\"; \\r\\n\\r\\ncontract Payment is IPayment {\\r\\n    address private _admin;\\r\\n    mapping(uint8 => address) private _addresses;\\r\\n\\r\\n    constructor(address admin) {\\r\\n        _admin = admin;\\r\\n    }\\r\\n\\r\\n    function getPaymentToken(uint8 pt)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (address)\\r\\n    {\\r\\n        return _addresses[pt];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set ERC-20 token to be used as payment currency\\r\\n     * in vRent contract\\r\\n    */\\r\\n    function setPaymentToken(uint8 index, address currencyAddress) external override {\\r\\n        require(index != 0, \\\"vRent::cant set to null\\\");\\r\\n        require(msg.sender == _admin, \\\"vRent::only admin\\\");\\r\\n        _addresses[index] = currencyAddress;\\r\\n    }\\r\\n}\"\r\n    },\r\n    \"contracts/Rental/IPayment.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity =0.8.6;\\r\\n\\r\\ninterface IPayment {\\r\\n    enum PaymentToken {\\r\\n        SENTINEL,\\r\\n        WETH,\\r\\n        USDC,\\r\\n        DAI,\\r\\n        USDT,\\r\\n        TUSD,\\r\\n        RENT\\r\\n    }\\r\\n\\r\\n    function getPaymentToken(uint8 index) external view returns (address);\\r\\n\\r\\n    function setPaymentToken(uint8 index, address currencyAddress) external;\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"pt\",\"type\":\"uint8\"}],\"name\":\"getPaymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"currencyAddress\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Payment", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000008e1722c39fd6962abb139cc643b485ddb7a2bcdc", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}