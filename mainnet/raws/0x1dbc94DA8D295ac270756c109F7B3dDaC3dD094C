{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/redemption.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n//          .@@@                                                                  \\n//               ,@@@@@@@&,                  #@@%                                  \\n//                    @@@@@@@@@@@@@@.          @@@@@@@@@                           \\n//                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                      \\n//                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                   \\n//                                @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                 \\n//                                    @@@@@@@    &@@@@@@@@@@@@@@@@@                \\n//                                        @@@/        &@@@@@@@@@@@@@,              \\n//                                            @            @@@@@@@@@@@             \\n//                                                             /@@@@@@@#           \\n//                                                                  @@@@@          \\n//                                                                      *@&   \\n//         RTFKT Studios (https://twitter.com/RTFKT)\\n//         Redemption Contract (made by @CardilloSamuel)\\n\\npragma solidity ^0.8.7;\\n\\nabstract contract redeemableCollection {\\n    function redeem(address owner, address initialCollection, uint256 tokenId) public virtual returns(uint256);\\n    function hasBeenRedeem(address initialCollection, uint256 tokenId) public view virtual returns(address);\\n}\\n\\ncontract RTFKTRedemption {\\n    mapping (address => bool) authorizedOwners;\\n    mapping (address => bool) authorizedContract;\\n    mapping (address => uint256) public redeemPrice;\\n\\n    constructor() {\\n        authorizedOwners[msg.sender] = true;\\n    }\\n\\n    /** \\n        MODIFIER \\n    **/\\n\\n    modifier isAuthorizedOwner() {\\n        require(authorizedOwners[msg.sender], \\\"You are not authorized to perform this action\\\");\\n        _;\\n    }\\n\\n    /**\\n        MAIN FUNCTION\\n    **/\\n\\n    function redeemToken(address newCollection, address initialCollection, uint256 tokenId) public payable { \\n        require(authorizedContract[newCollection], \\\"This contract is not authorized\\\");\\n        require(msg.value == redeemPrice[newCollection], \\\"Not enough money sent\\\");\\n        redeemableCollection externalContract = redeemableCollection(newCollection);\\n        require(externalContract.hasBeenRedeem(initialCollection, tokenId) == 0x0000000000000000000000000000000000000000, \\\"This token has been redeemed already\\\");\\n\\n        externalContract.redeem(msg.sender, initialCollection, tokenId);\\n    }\\n\\n    function hasBeenRedeemed(address newCollection, address initialCollection, uint256 tokenId) public view returns(address) {\\n        redeemableCollection externalContract = redeemableCollection(newCollection);\\n        return externalContract.hasBeenRedeem(initialCollection, tokenId);\\n    }\\n\\n    /** \\n        CONTRACT MANAGEMENT FUNCTIONS \\n    **/ \\n\\n    function changeRedeemPrice(address collectionAddress, uint256 newPrice) public isAuthorizedOwner {\\n        redeemPrice[collectionAddress] = newPrice;\\n    }\\n\\n    function toggleAuthorizedContract(address redeemableContract) public isAuthorizedOwner {\\n        authorizedContract[redeemableContract] = !authorizedContract[redeemableContract];\\n    }\\n\\n    function toggleAuthorizedOwner(address newAddress) public isAuthorizedOwner {\\n        require(msg.sender != newAddress, \\\"You can't revoke your own access\\\");\\n\\n        authorizedOwners[msg.sender] = !authorizedOwners[msg.sender];\\n    }\\n\\n    function withdrawFunds(address withdrawalAddress) public isAuthorizedOwner {\\n        payable(withdrawalAddress).transfer(address(this).balance);\\n    }\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changeRedeemPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCollection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasBeenRedeemed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCollection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialCollection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"redeemToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"redeemableContract\",\"type\":\"address\"}],\"name\":\"toggleAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"toggleAuthorizedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"withdrawalAddress\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RTFKTRedemption", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}