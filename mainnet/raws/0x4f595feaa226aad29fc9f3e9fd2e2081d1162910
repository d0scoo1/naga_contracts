{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\nImplements EIP20 token standard: https://github.com/ethereum/EIPs/issues/20\r\n.*/\r\n\r\n\r\npragma solidity ^0.4.18;\r\n\r\n// Abstract contract for the full ERC 20 Token standard\r\n// https://github.com/ethereum/EIPs/issues/20\r\npragma solidity ^0.4.18;\r\n\r\n\r\ncontract EIP20Interface {\r\n/* This is a slight change to the ERC20 base standard.\r\nfunction totalSupply() constant returns (uint256 supply);\r\nis replaced with:\r\nuint256 public totalSupply;\r\nThis automatically creates a getter function for the totalSupply.\r\nThis is moved to the base contract since public getter functions are not\r\ncurrently recognised as an implementation of the matching abstract\r\nfunction by the compiler.\r\n*/\r\n/// total amount of tokens\r\nuint256 public totalSupply;\r\n\r\n/// @param _owner The address from which the balance will be retrieved\r\n/// @return The balance\r\nfunction balanceOf(address _owner) public view returns (uint256 balance);\r\n\r\n/// @notice send `_value` token to `_to` from `msg.sender`\r\n/// @param _to The address of the recipient\r\n/// @param _value The amount of token to be transferred\r\n/// @return Whether the transfer was successful or not\r\nfunction transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n/// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n/// @param _from The address of the sender\r\n/// @param _to The address of the recipient\r\n/// @param _value The amount of token to be transferred\r\n/// @return Whether the transfer was successful or not\r\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n/// @notice `msg.sender` approves `_spender` to spend `_value` tokens\r\n/// @param _spender The address of the account able to transfer the tokens\r\n/// @param _value The amount of tokens to be approved for transfer\r\n/// @return Whether the approval was successful or not\r\nfunction approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n/// @param _owner The address of the account owning tokens\r\n/// @param _spender The address of the account able to transfer the tokens\r\n/// @return Amount of remaining tokens allowed to spent\r\nfunction allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n// solhint-disable-next-line no-simple-event-func-name \r\nevent Transfer(address indexed _from, address indexed _to, uint256 _value); \r\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\ncontract YUN is EIP20Interface {\r\n\r\nuint256 constant private MAX_UINT256 = 2**256 - 1;\r\nmapping (address => uint256) public balances;\r\nmapping (address => mapping (address => uint256)) public allowed;\r\n/*\r\nNOTE:\r\nThe following variables are OPTIONAL vanities. One does not have to include them.\r\nThey allow one to customise the token contract & in no way influences the core functionality.\r\nSome wallets/interfaces might not even bother to look at this information.\r\n*/\r\nstring public name; //fancy name: eg Simon Bucks\r\nuint8 public decimals; //How many decimals to show.\r\nstring public symbol; //An identifier: eg SBX\r\n\r\nfunction YUN(\r\nuint256 _initialAmount,\r\nstring _tokenName,\r\nuint8 _decimalUnits,\r\nstring _tokenSymbol\r\n) public {\r\nbalances[msg.sender] = _initialAmount; // Give the creator all initial tokens\r\ntotalSupply = _initialAmount; // Update total supply\r\nname = _tokenName; // Set the name for display purposes\r\ndecimals = _decimalUnits; // Amount of decimals for display purposes\r\nsymbol = _tokenSymbol; // Set the symbol for display purposes\r\n}\r\n\r\nfunction transfer(address _to, uint256 _value) public returns (bool success) {\r\nrequire(balances[msg.sender] >= _value);\r\nbalances[msg.sender] -= _value;\r\nbalances[_to] += _value;\r\nTransfer(msg.sender, _to, _value);\r\nreturn true;\r\n}\r\n\r\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\nuint256 allowance = allowed[_from][msg.sender];\r\nrequire(balances[_from] >= _value && allowance >= _value);\r\nbalances[_to] += _value;\r\nbalances[_from] -= _value;\r\nif (allowance < MAX_UINT256) {\r\nallowed[_from][msg.sender] -= _value;\r\n}\r\nTransfer(_from, _to, _value);\r\nreturn true;\r\n}\r\n\r\nfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\nreturn balances[_owner];\r\n}\r\n\r\nfunction approve(address _spender, uint256 _value) public returns (bool success) {\r\nallowed[msg.sender][_spender] = _value;\r\nApproval(msg.sender, _spender, _value);\r\nreturn true;\r\n}\r\n\r\nfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\nreturn allowed[_owner][_spender];\r\n} \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "YUN", "CompilerVersion": "v0.4.20+commit.3155dd80", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000773594000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000359554e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000359554e0000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://7e6603b9ed40ca1102edc317589bb7a9390bd2826be07c65982bbc7b3fad0240"}]}