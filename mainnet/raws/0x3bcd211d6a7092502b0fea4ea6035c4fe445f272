{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/macrov/src/binance/dex/nft-dex-contract-v3/contracts/TransferPlatformToken.sol\": {\r\n      \"content\": \"/*\\n\\n  << Transfer Platform Token >>\\n\\n*/\\n\\nimport \\\"./lib/ReentrancyGuarded.sol\\\";\\n\\npragma solidity 0.7.5;\\n\\ncontract TransferPlatformToken is ReentrancyGuarded {\\n    function transferETH(address[] calldata addrs, uint[] calldata amounts) external payable reentrancyGuard returns (bool) {\\n        require(addrs.length == amounts.length, \\\"transferETH: Addresses and amounts must match in quantity\\\");\\n\\n        for (uint i = 0; i < amounts.length; i++) {\\n            address(uint160(addrs[i])).transfer(amounts[i]);\\n        }\\n\\n        return true;\\n    }\\n\\n    // important to receive ETH\\n    receive() payable external {}\\n}\\n\"\r\n    },\r\n    \"/Users/macrov/src/binance/dex/nft-dex-contract-v3/contracts/lib/ReentrancyGuarded.sol\": {\r\n      \"content\": \"/*\\n\\n  Simple contract extension to provide a contract-global reentrancy guard on functions.\\n\\n*/\\n\\npragma solidity 0.7.5;\\n\\n/**\\n * @title ReentrancyGuarded\\n * @author Wyvern Protocol Developers\\n */\\ncontract ReentrancyGuarded {\\n\\n    bool reentrancyLock = false;\\n\\n    /* Prevent a contract function from being reentrant-called. */\\n    modifier reentrancyGuard {\\n        require(!reentrancyLock, \\\"Reentrancy detected\\\");\\n        reentrancyLock = true;\\n        _;\\n        reentrancyLock = false;\\n    }\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 750\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TransferPlatformToken", "CompilerVersion": "v0.7.5+commit.eb77ed08", "OptimizationUsed": "1", "Runs": "750", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}