{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"BasicToken.sol\":{\"content\":\"pragma solidity ^0.4.23;\\r\\n\\r\\nimport \\\"./ERC20Basic.sol\\\";\\r\\nimport \\\"./SafeMath.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title \u5b9e\u73b0ERC20\u57fa\u672c\u5408\u7ea6\u7684\u63a5\u53e3\\r\\n * @dev \u57fa\u672c\u7684StandardToken\uff0c\u4e0d\u5305\u542ballowances.\\r\\n */\\r\\ncontract BasicToken is ERC20Basic {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address =\\u003e uint256) balances;\\r\\n\\r\\n    uint256 totalSupply_;\\r\\n\\r\\n    /**\\r\\n     * @dev \u8fd4\u56de\u5b58\u5728\u7684token\u603b\u6570\\r\\n     */\\r\\n    function totalSupply() public view returns (uint256) {\\r\\n        return totalSupply_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \u7ed9\u7279\u5b9a\u7684address\u8f6ctoken\\r\\n     * @param _to \u8981\u8f6c\u8d26\u5230\u7684address\\r\\n     * @param _value \u8981\u8f6c\u8d26\u7684\u91d1\u989d\\r\\n     */\\r\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\r\\n        //\u505a\u76f8\u5173\u7684\u5408\u6cd5\u9a8c\u8bc1\\r\\n        require(_to != address(0));\\r\\n        require(_value \\u003c= balances[msg.sender]);\\r\\n        // msg.sender\u4f59\u989d\u4e2d\u51cf\u53bb\u989d\u5ea6\uff0c_to\u4f59\u989d\u52a0\u4e0a\u76f8\u5e94\u989d\u5ea6\\r\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n        balances[_to] = balances[_to].add(_value);\\r\\n        //\u89e6\u53d1Transfer\u4e8b\u4ef6\\r\\n        emit Transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \u83b7\u53d6\u6307\u5b9aaddress\u7684\u4f59\u989d\\r\\n     * @param _owner \u67e5\u8be2\u4f59\u989d\u7684address.\\r\\n     * @return An uint256 representing the amount owned by the passed address.\\r\\n     */\\r\\n    function balanceOf(address _owner) public view returns (uint256) {\\r\\n        return balances[_owner];\\r\\n    }\\r\\n}\\r\\n\"},\"ERC20.sol\":{\"content\":\"pragma solidity ^0.4.23;\\r\\n\\r\\nimport \\\"./ERC20Basic.sol\\\";\\r\\n\\r\\ncontract ERC20 is ERC20Basic {\\r\\n    function allowance(address owner, address spender)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) public returns (bool);\\r\\n\\r\\n    function approve(address spender, uint256 value) public returns (bool);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\"},\"ERC20Basic.sol\":{\"content\":\"pragma solidity ^0.4.23;\\r\\n\\r\\ncontract ERC20Basic {\\r\\n    function totalSupply() public view returns (uint256);\\r\\n\\r\\n    function balanceOf(address who) public view returns (uint256);\\r\\n\\r\\n    function transfer(address to, uint256 value) public returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\\r\\n\"},\"IFILToken.sol\":{\"content\":\"pragma solidity ^0.4.23;\\r\\nimport \\\"./StandardToken.sol\\\";\\r\\nimport \\\"./ERC20.sol\\\";\\r\\n\\r\\n// ERC20 standard token\\r\\ncontract IFILToken is StandardToken {\\r\\n    address public admin;\\r\\n    string public name = \\\"IFIL Token\\\";\\r\\n    string public symbol = \\\"IFIL\\\";\\r\\n    uint8 public decimals = 18;\\r\\n    uint256 public INITIAL_SUPPLY = 2000000000000000000000000000;\\r\\n    // \u540c\u4e00\u4e2a\u8d26\u6237\u6ee1\u8db3\u4efb\u610f\u51bb\u7ed3\u6761\u4ef6\u5747\u88ab\u51bb\u7ed3\\r\\n    mapping(address =\\u003e bool) public frozenAccount; //\u65e0\u9650\u671f\u51bb\u7ed3\u7684\u8d26\u6237\\r\\n    mapping(address =\\u003e uint256) public frozenTimestamp; // \u6709\u9650\u671f\u51bb\u7ed3\u7684\u8d26\u6237\\r\\n    mapping(address =\\u003e ERC20) public tokens; // \u4ee3\u5e01token map\\r\\n\\r\\n    bool public exchangeFlag = true; // \u4ee3\u5e01\u5151\u6362\u5f00\u542f\\r\\n    // \u4e0d\u6ee1\u8db3\u6761\u4ef6\u6216\u52df\u96c6\u5b8c\u6210\u591a\u51fa\u7684eth\u5747\u8fd4\u56de\u7ed9\u539f\u8d26\u6237\\r\\n    uint256 public minWei = 1; //\u6700\u4f4e\u6253 1 wei  1eth = 1*10^18 wei\\r\\n    uint256 public maxWei = 20000000000000000000000; // \u6700\u591a\u4e00\u6b21\u6253 20000 eth\\r\\n    uint256 public maxRaiseAmount = 20000000000000000000000; // \u52df\u96c6\u4e0a\u9650 20000 eth\\r\\n    uint256 public raisedAmount = 0; // \u5df2\u52df\u96c6 0 eth\\r\\n    uint256 public raiseRatio = 1; // \u5151\u6362\u6bd4\u4f8b 1eth = 20\u4e07token\\r\\n    // event \u901a\u77e5\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    // \u6784\u9020\u51fd\u6570\\r\\n    constructor() public {\\r\\n        totalSupply_ = INITIAL_SUPPLY;\\r\\n        admin = msg.sender;\\r\\n        balances[msg.sender] = INITIAL_SUPPLY;\\r\\n    }\\r\\n\\r\\n    // fallback \u5411\u5408\u7ea6\u5730\u5740\u8f6c\u8d26 or \u8c03\u7528\u975e\u5408\u7ea6\u51fd\u6570\u89e6\u53d1\\r\\n    // eth\u81ea\u52a8\u5151\u6362\u4ee3\u5e01\\r\\n    function() public payable {\\r\\n        require(msg.value \\u003e 0);\\r\\n        if (exchangeFlag) {\\r\\n            if (msg.value \\u003e= minWei \\u0026\\u0026 msg.value \\u003c= maxWei) {\\r\\n                if (raisedAmount \\u003c maxRaiseAmount) {\\r\\n                    uint256 valueNeed = msg.value;\\r\\n                    raisedAmount = raisedAmount.add(msg.value);\\r\\n                    if (raisedAmount \\u003e maxRaiseAmount) {\\r\\n                        uint256 valueLeft = raisedAmount.sub(maxRaiseAmount);\\r\\n                        valueNeed = msg.value.sub(valueLeft);\\r\\n                        msg.sender.transfer(valueLeft);\\r\\n                        raisedAmount = maxRaiseAmount;\\r\\n                    }\\r\\n                    if (raisedAmount \\u003e= maxRaiseAmount) {\\r\\n                        exchangeFlag = false;\\r\\n                    }\\r\\n                    // \u5df2\u5904\u7406\u8fc7\u7cbe\u5ea6 *10^18\\r\\n                    uint256 _value = valueNeed.mul(raiseRatio);\\r\\n\\r\\n                    require(_value \\u003c= balances[admin]);\\r\\n                    balances[admin] = balances[admin].sub(_value);\\r\\n                    balances[msg.sender] = balances[msg.sender].add(_value);\\r\\n\\r\\n                    emit Transfer(admin, msg.sender, _value);\\r\\n                }\\r\\n            } else {\\r\\n                msg.sender.transfer(msg.value);\\r\\n            }\\r\\n        } else {\\r\\n            msg.sender.transfer(msg.value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u4fee\u6539\u7ba1\u7406\u5458\\r\\n     */\\r\\n    function changeAdmin(address _newAdmin) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        require(_newAdmin != address(0));\\r\\n        balances[_newAdmin] = balances[_newAdmin].add(balances[admin]);\\r\\n        balances[admin] = 0;\\r\\n        admin = _newAdmin;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u589e\u53d1\\r\\n     */\\r\\n    function generateToken(address _target, uint256 _amount)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(msg.sender == admin);\\r\\n        require(_target != address(0));\\r\\n        balances[_target] = balances[_target].add(_amount);\\r\\n        totalSupply_ = totalSupply_.add(_amount);\\r\\n        INITIAL_SUPPLY = totalSupply_;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4ece\u5408\u7ea6\u63d0\u73b0\\r\\n    // \u53ea\u80fd\u63d0\u7ed9\u7ba1\u7406\u5458\\r\\n    function withdraw(uint256 _amount) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        msg.sender.transfer(_amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4ece\u5408\u7ea6\u63d0\u73b0\\r\\n    // \u53ea\u80fd\u7ba1\u7406\u5458\u63d0\u7ed9to\\r\\n    function withdrawUser(address _to, uint256 _amount) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        _to.transfer(_amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4ece\u5408\u7ea6\u63d0\u73b0token\\r\\n    // \u53ea\u80fd\u63d0\u7ed9\u7ba1\u7406\u5458\\r\\n    function withdrawToken(address _contract,uint256 _amount) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        tokens[_contract] = ERC20(_contract);\\r\\n        tokens[_contract].transfer(msg.sender, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4ece\u5408\u7ea6\u63d0\u73b0token\\r\\n    // \u53ea\u80fd\u7ba1\u7406\u5458\u63d0\u7ed9to\\r\\n    function withdrawTokenUser(address _contract, address _to, uint256 _amount) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        tokens[_contract] = ERC20(_contract);\\r\\n        tokens[_contract].transfer(_to, _amount);\\r\\n        return true;\\r\\n    }\\r\\n    /**\\r\\n     * \u9501\u5b9a\u8d26\u6237\\r\\n     */\\r\\n    function freeze(address _target, bool _freeze) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        require(_target != address(0));\\r\\n        frozenAccount[_target] = _freeze;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u901a\u8fc7\u65f6\u95f4\u6233\u9501\u5b9a\u8d26\u6237\\r\\n     */\\r\\n    function freezeWithTimestamp(address _target, uint256 _timestamp)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(msg.sender == admin);\\r\\n        require(_target != address(0));\\r\\n        frozenTimestamp[_target] = _timestamp;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u6279\u91cf\u9501\u5b9a\u8d26\u6237\\r\\n     */\\r\\n    function multiFreeze(address[] _targets, bool[] _freezes)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(msg.sender == admin);\\r\\n        require(_targets.length == _freezes.length);\\r\\n        uint256 len = _targets.length;\\r\\n        require(len \\u003e 0);\\r\\n        for (uint256 i = 0; i \\u003c len; i = i.add(1)) {\\r\\n            address _target = _targets[i];\\r\\n            require(_target != address(0));\\r\\n            bool _freeze = _freezes[i];\\r\\n            frozenAccount[_target] = _freeze;\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u6279\u91cf\u901a\u8fc7\u65f6\u95f4\u6233\u9501\u5b9a\u8d26\u6237\\r\\n     */\\r\\n    function multiFreezeWithTimestamp(address[] _targets, uint256[] _timestamps)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(msg.sender == admin);\\r\\n        require(_targets.length == _timestamps.length);\\r\\n        uint256 len = _targets.length;\\r\\n        require(len \\u003e 0);\\r\\n        for (uint256 i = 0; i \\u003c len; i = i.add(1)) {\\r\\n            address _target = _targets[i];\\r\\n            require(_target != address(0));\\r\\n            uint256 _timestamp = _timestamps[i];\\r\\n            frozenTimestamp[_target] = _timestamp;\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u6279\u91cf\u8f6c\u8d26\\r\\n     */\\r\\n    function multiTransfer(address[] _tos, uint256[] _values)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(!frozenAccount[msg.sender]);\\r\\n        require(now \\u003e frozenTimestamp[msg.sender]);\\r\\n        require(_tos.length == _values.length);\\r\\n        uint256 len = _tos.length;\\r\\n        require(len \\u003e 0);\\r\\n        uint256 amount = 0;\\r\\n        for (uint256 i = 0; i \\u003c len; i = i.add(1)) {\\r\\n            amount = amount.add(_values[i]);\\r\\n        }\\r\\n        require(amount \\u003c= balances[msg.sender]);\\r\\n        for (uint256 j = 0; j \\u003c len; j = j.add(1)) {\\r\\n            address _to = _tos[j];\\r\\n            require(_to != address(0));\\r\\n            balances[_to] = balances[_to].add(_values[j]);\\r\\n            balances[msg.sender] = balances[msg.sender].sub(_values[j]);\\r\\n            emit Transfer(msg.sender, _to, _values[j]);\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u4ece\u8c03\u7528\u8005\u8f6c\u8d26\u81f3_to\\r\\n     */\\r\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\r\\n        require(!frozenAccount[msg.sender]);\\r\\n        require(now \\u003e frozenTimestamp[msg.sender]);\\r\\n        require(_to != address(0));\\r\\n        require(_value \\u003c= balances[msg.sender]);\\r\\n\\r\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n        balances[_to] = balances[_to].add(_value);\\r\\n\\r\\n        emit Transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * \u4ece\u8c03\u7528\u8005\u4f5c\u4e3afrom\u4ee3\u7406\u5c06from\u8d26\u6237\u4e2d\u7684token\u8f6c\u8d26\u81f3to\\r\\n     * \u8c03\u7528\u8005\u5728from\u7684\u8bb8\u53ef\u989d\u5ea6\u4e2d\u5fc5\u987b\\u003e=value\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool) {\\r\\n        require(!frozenAccount[_from]);\\r\\n        require(now \\u003e frozenTimestamp[msg.sender]);\\r\\n        require(_to != address(0));\\r\\n        require(_value \\u003c= balances[_from]);\\r\\n        require(_value \\u003c= allowed[_from][msg.sender]);\\r\\n\\r\\n        balances[_from] = balances[_from].sub(_value);\\r\\n        balances[_to] = balances[_to].add(_value);\\r\\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u8c03\u6574\u8f6c\u8d26\u4ee3\u7406\u65b9spender\u7684\u4ee3\u7406\u7684\u8bb8\u53ef\u989d\u5ea6\\r\\n     */\\r\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\r\\n        // \u8f6c\u8d26\u7684\u65f6\u5019\u4f1a\u6821\u9a8cbalances\uff0c\u8be5\u5904require\u65e0\u610f\u4e49\\r\\n        // require(_value \\u003c= balances[msg.sender]);\\r\\n\\r\\n        allowed[msg.sender][_spender] = _value;\\r\\n\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    //********************************************************************************\\r\\n    //\u67e5\u8be2\u8d26\u6237\u662f\u5426\u5b58\u5728\u9501\u5b9a\u65f6\u95f4\u6233\\r\\n    function getFrozenTimestamp(address _target) public view returns (uint256) {\\r\\n        require(_target != address(0));\\r\\n        return frozenTimestamp[_target];\\r\\n    }\\r\\n\\r\\n    //\u67e5\u8be2\u8d26\u6237\u662f\u5426\u88ab\u9501\u5b9a\\r\\n    function getFrozenAccount(address _target) public view returns (bool) {\\r\\n        require(_target != address(0));\\r\\n        return frozenAccount[_target];\\r\\n    }\\r\\n\\r\\n    //\u67e5\u8be2\u5408\u7ea6\u7684\u4f59\u989d\\r\\n    function getBalance() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539name\\r\\n    function setName(string _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        name = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539symbol\\r\\n    function setSymbol(string _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        symbol = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539\u52df\u96c6flag\\r\\n    function setExchangeFlag(bool _flag) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        exchangeFlag = _flag;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539\u5355\u7b14\u52df\u96c6\u4e0b\u9650\\r\\n    function setMinWei(uint256 _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        minWei = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539\u5355\u7b14\u52df\u96c6\u4e0a\u9650\\r\\n    function setMaxWei(uint256 _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        maxWei = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539\u603b\u52df\u96c6\u4e0a\u9650\\r\\n    function setMaxRaiseAmount(uint256 _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        maxRaiseAmount = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539\u5df2\u52df\u96c6\u6570\\r\\n    function setRaisedAmount(uint256 _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        raisedAmount = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u4fee\u6539\u52df\u96c6\u6bd4\u4f8b\\r\\n    function setRaiseRatio(uint256 _value) public returns (bool) {\\r\\n        require(msg.sender == admin);\\r\\n        raiseRatio = _value;\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // \u9500\u6bc1\u5408\u7ea6\\r\\n    function kill() public {\\r\\n        require(msg.sender == admin);\\r\\n        selfdestruct(admin);\\r\\n    }\\r\\n}\\r\\n\"},\"SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\n// pragma solidity ^0.6.0;\\r\\n\\r\\npragma solidity ^0.4.23;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b \\u003c= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b \\u003e 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\\u0027t hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\"},\"StandardToken.sol\":{\"content\":\"pragma solidity ^0.4.23;\\r\\n\\r\\nimport \\\"./BasicToken.sol\\\";\\r\\nimport \\\"./ERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title \u6807\u51c6 ERC20 token\\r\\n *\\r\\n * @dev \u5b9e\u73b0\u57fa\u7840\u7684\u6807\u51c6token\\r\\n * @dev https://github.com/ethereum/EIPs/issues/20\\r\\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n */\\r\\ncontract StandardToken is ERC20, BasicToken {\\r\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) internal allowed;\\r\\n\\r\\n    /**\\r\\n     * @dev \u4ece\u4e00\u4e2a\u5730\u5740\u5411\u53e6\u5916\u4e00\u4e2a\u5730\u5740\u8f6ctoken\\r\\n     * @param _from \u8f6c\u8d26\u7684from\u5730\u5740\\r\\n     * @param _to address \u8f6c\u8d26\u7684to\u5730\u5740\\r\\n     * @param _value uint256 \u8f6c\u8d26token\u6570\u91cf\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool) {\\r\\n        // \u505a\u5408\u6cd5\u6027\u68c0\u67e5\\r\\n        require(_to != address(0));\\r\\n        require(_value \\u003c= balances[_from]);\\r\\n        require(_value \\u003c= allowed[_from][msg.sender]);\\r\\n        //_from\u4f59\u989d\u51cf\u53bb\u76f8\u5e94\u7684\u91d1\u989d\\r\\n        //_to\u4f59\u989d\u52a0\u4e0a\u76f8\u5e94\u7684\u91d1\u989d\\r\\n        //msg.sender\u53ef\u4ee5\u4ece\u8d26\u6237_from\u4e2d\u8f6c\u51fa\u7684\u6570\u91cf\u51cf\u5c11_value\\r\\n        balances[_from] = balances[_from].sub(_value);\\r\\n        balances[_to] = balances[_to].add(_value);\\r\\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n        // \u89e6\u53d1Transfer\u4e8b\u4ef6\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \u6279\u51c6\u4f20\u9012\u7684address\u4ee5\u4ee3\u8868msg.sender\u82b1\u8d39\u6307\u5b9a\u6570\u91cf\u7684token\\r\\n     *\\r\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n     * race condition is to first reduce the spender\\u0027s allowance to 0 and set the desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     * @param _spender \u82b1\u8d39\u8d44\u91d1\u7684\u5730\u5740\\r\\n     * @param _value \u53ef\u4ee5\u88ab\u82b1\u8d39\u7684token\u6570\u91cf\\r\\n     */\\r\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\r\\n        //\u8bb0\u5f55msg.sender\u5141\u8bb8_spender\u52a8\u7528\u7684token\\r\\n        allowed[msg.sender][_spender] = _value;\\r\\n        //\u89e6\u53d1Approval\u4e8b\u4ef6\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \u51fd\u6570\u68c0\u67e5\u6240\u6709\u8005\u5141\u8bb8\u7684_spender\u82b1\u8d39\u7684token\u6570\u91cf\\r\\n     * @param _owner address \u8d44\u91d1\u6240\u6709\u8005\u5730\u5740.\\r\\n     * @param _spender address \u82b1\u8d39\u8d44\u91d1\u7684spender\u7684\u5730\u5740.\\r\\n     * @return A uint256 \u6307\u5b9a_spender\u4ecd\u53ef\u7528token\u7684\u6570\u91cf\u3002\\r\\n     */\\r\\n    function allowance(address _owner, address _spender)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        //\u5141\u8bb8_spender\u4ece_owner\u4e2d\u8f6c\u51fa\u7684token\u6570\\r\\n        return allowed[_owner][_spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \u589e\u52a0\u6240\u6709\u8005\u5141\u8bb8_spender\u82b1\u8d39\u4ee3\u5e01\u7684\u6570\u91cf\u3002\\r\\n     *\\r\\n     * allowed[_spender] == 0\u65f6approve\u5e94\u8be5\u88ab\u8c03\u7528. \u589e\u52a0allowed\u503c\u6700\u597d\u4f7f\u7528\u6b64\u51fd\u6570\u907f\u514d2\u6b64\u8c03\u7528\uff08\u7b49\u5f85\u77e5\u9053\u7b2c\u4e00\u7b14\u4ea4\u6613\u88ab\u6316\u51fa\uff09\\r\\n     * From MonolithDAO Token.sol\\r\\n     * @param _spender \u82b1\u8d39\u8d44\u91d1\u7684\u5730\u5740\\r\\n     * @param _addedValue \u7528\u4e8e\u589e\u52a0\u5141\u8bb8\u52a8\u7528\u7684token\u724c\u6570\u91cf\\r\\n     */\\r\\n    function increaseApproval(address _spender, uint256 _addedValue)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        //\u5728\u4e4b\u524d\u5141\u8bb8\u7684\u6570\u91cf\u4e0a\u589e\u52a0_addedValue\\r\\n        allowed[msg.sender][_spender] = (\\r\\n            allowed[msg.sender][_spender].add(_addedValue)\\r\\n        );\\r\\n        //\u89e6\u53d1Approval\u4e8b\u4ef6\\r\\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \u51cf\u5c11\u6240\u6709\u8005\u5141\u8bb8_spender\u82b1\u8d39\u4ee3\u5e01\u7684\u6570\u91cf\\r\\n     *\\r\\n     * allowed[_spender] == 0\u65f6approve\u5e94\u8be5\u88ab\u8c03\u7528. \u51cf\u5c11allowed\u503c\u6700\u597d\u4f7f\u7528\u6b64\u51fd\u6570\u907f\u514d2\u6b64\u8c03\u7528\uff08\u7b49\u5f85\u77e5\u9053\u7b2c\u4e00\u7b14\u4ea4\u6613\u88ab\u6316\u51fa\uff09\\r\\n     * From MonolithDAO Token.sol\\r\\n     * @param _spender  \u82b1\u8d39\u8d44\u91d1\u7684\u5730\u5740\\r\\n     * @param _subtractedValue \u7528\u4e8e\u51cf\u5c11\u5141\u8bb8\u52a8\u7528\u7684token\u724c\u6570\u91cf\\r\\n     */\\r\\n    function decreaseApproval(address _spender, uint256 _subtractedValue)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        uint256 oldValue = allowed[msg.sender][_spender];\\r\\n        if (_subtractedValue \\u003e oldValue) {\\r\\n            //\u51cf\u5c11\u7684\u6570\u91cf\u5c11\u4e8e\u4e4b\u524d\u5141\u8bb8\u7684\u6570\u91cf\uff0c\u5219\u6e05\u96f6\\r\\n            allowed[msg.sender][_spender] = 0;\\r\\n        } else {\\r\\n            //\u51cf\u5c11\u5bf9\u5e94\u7684_subtractedValue\u6570\u91cf\\r\\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\\r\\n        }\\r\\n        //\u89e6\u53d1Approval\u4e8b\u4ef6\\r\\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\"}}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"maxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMinWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setExchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeFlag\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_freezes\",\"type\":\"bool[]\"}],\"name\":\"multiFreeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxRaiseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"freezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_timestamps\",\"type\":\"uint256[]\"}],\"name\":\"multiFreezeWithTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setRaiseRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getFrozenTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMaxWei\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "IFILToken", "CompilerVersion": "v0.4.23+commit.124ca40d", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://d980fa802df904fc704132c8fde5f67a9c772c93da647b6e602b1d5db8bc0306"}]}