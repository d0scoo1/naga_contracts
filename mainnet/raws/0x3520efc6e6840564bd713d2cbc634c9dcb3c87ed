{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\ninterface BDNFT {\r\n\tfunction ownerOf(uint256 tokenID) external view returns(address);\r\n\tfunction totalSupply() external view returns(uint256);\r\n\tfunction balanceOf(address owner) external view returns(uint256);\r\n}\r\n\r\ncontract BDHelper {\r\n\r\n\taddress BasementDwellersNFT = 0x9A95eCEe5161b888fFE9Abd3D920c5D38e8539dA;\r\n\r\n\tfunction getOwner(uint256 tokenID) internal view returns(address _owner){\r\n\t\treturn(BDNFT(BasementDwellersNFT).ownerOf(tokenID));\r\n\t}\r\n\r\n\r\n   function walletOfOwner(address wallet) public view returns(uint256[] memory walletNFTs){\r\n        uint256 _idx = 0;\r\n        uint256 _total = BDNFT(BasementDwellersNFT).totalSupply();\r\n        uint256 _walletBalance = BDNFT(BasementDwellersNFT).balanceOf(wallet);\r\n        if(_walletBalance > 0){\r\n\t        walletNFTs = new uint256[](_walletBalance);\r\n\t        for(uint256 i=0; i<_total; i++){\r\n\t            if(getOwner(i) == wallet){\r\n\t                walletNFTs[_idx] = i;\r\n\t                _idx += 1;\r\n\t            }\r\n\t        \tif(_idx == _walletBalance){\r\n\t        \t\treturn walletNFTs;\r\n\t        \t}\r\n\t        }\r\n        }\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"walletNFTs\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "BDHelper", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c00783a2d9533617126c3f0292e24c010639c4bb5b2ad1745d286a5a23fe0bf7"}]}