{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 'PatrickHuynh' token contract\r\n//\r\n// Deployed to : 0x5A86f0cafD4ef3ba4f0344C138afcC84bd1ED222\r\n// Symbol      : PATRICKHUYNH\r\n// Name        : Patrick Huynh\r\n// Total supply: 100\r\n// Decimals    : 18\r\n//\r\n// Enjoy.\r\n//\r\n// (c) by Moritz Neto with BokkyPooBah / Bok Consulting Pty Ltd Au 2017. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\ncontract SafeMath {\r\nfunction safeAdd(uint a, uint b) public pure returns (uint c) {\r\n\tc = a + b;\r\n\trequire(c >= a);\r\n}\r\nfunction safeSub(uint a, uint b) public pure returns (uint c) {\r\n\trequire(b <= a);\r\n\tc = a - b;\r\n}\r\nfunction safeMul(uint a, uint b) public pure returns (uint c) {\r\n\tc = a * b;\r\n\trequire(a == 0 || c / a == b);\r\n}\r\nfunction safeDiv(uint a, uint b) public pure returns (uint c) {\r\n\trequire(b > 0);\r\n\tc = a / b;\r\n}\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\nfunction totalSupply() public constant returns (uint);\r\nfunction balanceOf(address tokenOwner) public constant returns (uint balance);\r\nfunction allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\nfunction transfer(address to, uint tokens) public returns (bool success);\r\nfunction approve(address spender, uint tokens) public returns (bool success);\r\nfunction transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\nevent Transfer(address indexed from, address indexed to, uint tokens);\r\nevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// Borrowed from MiniMeToken\r\n// ----------------------------------------------------------------------------\r\ncontract ApproveAndCallFallBack {\r\nfunction receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\naddress public owner;\r\naddress public newOwner;\r\n\r\nevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\nfunction Owned() public {\r\n\towner = msg.sender;\r\n}\r\n\r\nmodifier onlyOwner {\r\n\trequire(msg.sender == owner);\r\n\t_;\r\n}\r\n\r\nfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\tnewOwner = _newOwner;\r\n}\r\nfunction acceptOwnership() public {\r\n\trequire(msg.sender == newOwner);\r\n\temit OwnershipTransferred(owner, newOwner);\r\n\towner = newOwner;\r\n\tnewOwner = address(0);\r\n}\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 Token, with the addition of symbol, name and decimals and assisted\r\n// token transfers\r\n// ----------------------------------------------------------------------------\r\ncontract PatrickHuynhToken is ERC20Interface, Owned, SafeMath {\r\nstring public symbol;\r\nstring public  name;\r\nuint8 public decimals;\r\nuint public _totalSupply;\r\n\r\nmapping(address => uint) balances;\r\nmapping(address => mapping(address => uint)) allowed;\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Constructor\r\n// ------------------------------------------------------------------------\r\nfunction PatrickHuynhToken() public {\r\n\tsymbol = \"PATRICKHUYNH\";\r\n\tname = \"Patrick Huynh Token\";\r\n\tdecimals = 18;\r\n\t_totalSupply = 100000000000000000000;\r\n\tbalances[0xF40902aeF9faF9aE17A1d9E1381dBEcD2325E625] = _totalSupply;\r\n\temit Transfer(address(0), 0xF40902aeF9faF9aE17A1d9E1381dBEcD2325E625, _totalSupply);\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Total supply\r\n// ------------------------------------------------------------------------\r\nfunction totalSupply() public constant returns (uint) {\r\n\treturn _totalSupply  - balances[address(0)];\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Get the token balance for account tokenOwner\r\n// ------------------------------------------------------------------------\r\nfunction balanceOf(address tokenOwner) public constant returns (uint balance) {\r\n\treturn balances[tokenOwner];\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Transfer the balance from token owner's account to to account\r\n// - Owner's account must have sufficient balance to transfer\r\n// - 0 value transfers are allowed\r\n// ------------------------------------------------------------------------\r\nfunction transfer(address to, uint tokens) public returns (bool success) {\r\n\tbalances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n\tbalances[to] = safeAdd(balances[to], tokens);\r\n\temit Transfer(msg.sender, to, tokens);\r\n\treturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Token owner can approve for spender to transferFrom(...) tokens\r\n// from the token owner's account\r\n//\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// recommends that there are no checks for the approval double-spend attack\r\n// as this should be implemented in user interfaces \r\n// ------------------------------------------------------------------------\r\nfunction approve(address spender, uint tokens) public returns (bool success) {\r\n\tallowed[msg.sender][spender] = tokens;\r\n\temit Approval(msg.sender, spender, tokens);\r\n\treturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Transfer tokens from the from account to the to account\r\n// \r\n// The calling account must already have sufficient tokens approve(...)-d\r\n// for spending from the from account and\r\n// - From account must have sufficient balance to transfer\r\n// - Spender must have sufficient allowance to transfer\r\n// - 0 value transfers are allowed\r\n// ------------------------------------------------------------------------\r\nfunction transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n\tbalances[from] = safeSub(balances[from], tokens);\r\n\tallowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\r\n\tbalances[to] = safeAdd(balances[to], tokens);\r\n\temit Transfer(from, to, tokens);\r\n\treturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Returns the amount of tokens approved by the owner that can be\r\n// transferred to the spender's account\r\n// ------------------------------------------------------------------------\r\nfunction allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\r\n\treturn allowed[tokenOwner][spender];\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Token owner can approve for spender to transferFrom(...) tokens\r\n// from the token owner's account. The spender contract function\r\n// receiveApproval(...) is then executed\r\n// ------------------------------------------------------------------------\r\nfunction approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\r\n\tallowed[msg.sender][spender] = tokens;\r\n\temit Approval(msg.sender, spender, tokens);\r\n\tApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n\treturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Don't accept ETH\r\n// ------------------------------------------------------------------------\r\nfunction () public payable {\r\n\trevert();\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Owner can transfer out any accidentally sent ERC20 tokens\r\n// ------------------------------------------------------------------------\r\nfunction transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n\treturn ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n}\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "PatrickHuynhToken", "CompilerVersion": "v0.4.21+commit.dfe3193c", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://45d8611e5eb8a1ce0b60f237a1743d1c0b7e2de172164ef125c668b84969eaa4"}]}