{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.7.6;\r\n\r\n/**\r\n * @title ETHRelayer\r\n * @dev Ether relayer used to relay all ether received in this contract to the receiver address.\r\n * Receives ETH via legacy .transfer function using defualt 23000 gas limit and relay it using 100k gas limit to \r\n * contracts that have enabled the fallback payable funciton.\r\n */\r\ncontract ETHRelayer{\r\n\r\n    address payable public receiver;\r\n\r\n    constructor(address payable _receiver) public {\r\n        receiver = _receiver;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function relay() public {\r\n      (bool success,) = receiver.call{gas: 100000, value: address(this).balance}(\"\");\r\n      require(success, \"ETHRelayer: Relay transfer failed\");\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ETHRelayer", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000001de6e51e74f11a21784f7073f1dd351a98c944ea", "EVMVersion": "Default", "Library": "", "LicenseType": "Unknown", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d6ed04e808bb8a919896f8b9d7e98962aa88281c454c19c2fb24029e0e0f7aa4"}]}