{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/WRLD_Name_Service_Resolver_V1.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IWRLD_Name_Service_Resolver.sol\\\";\\nimport \\\"./IWRLD_Name_Service_Registry.sol\\\";\\n\\ncontract WRLD_NameService_Resolver_V1 is IWRLD_Name_Service_Resolver {\\n  IWRLD_Name_Service_Registry immutable nameServiceRegistry;\\n\\n  mapping(uint256 => mapping(string => StringRecord)) private wrldNameStringRecords;\\n  mapping(uint256 => string[]) private wrldNameStringRecordsList;\\n\\n  mapping(uint256 => mapping(string => AddressRecord)) private wrldNameAddressRecords;\\n  mapping(uint256 => string[]) private wrldNameAddressRecordsList;\\n\\n  mapping(uint256 => mapping(string => UintRecord)) private wrldNameUintRecords;\\n  mapping(uint256 => string[]) private wrldNameUintRecordsList;\\n\\n  mapping(uint256 => mapping(string => IntRecord)) private wrldNameIntRecords;\\n  mapping(uint256 => string[]) private wrldNameIntRecordsList;\\n\\n  mapping(bytes32 => string) private wrldNameStringEntries;\\n  mapping(bytes32 => address) private wrldNameAddressEntries;\\n  mapping(bytes32 => uint) private wrldNameUintEntries;\\n  mapping(bytes32 => int) private wrldNameIntEntries;\\n\\n  constructor(address _nameServiceRegistry) {\\n    nameServiceRegistry = IWRLD_Name_Service_Registry(_nameServiceRegistry);\\n  }\\n\\n  /******************\\n   * Record Setters *\\n   ******************/\\n\\n  function setStringRecord(string calldata _name, string calldata _record, string calldata _value, string calldata _typeOf, uint256 _ttl) external override onlyNameServiceRegistry {\\n    wrldNameStringRecords[_getNameTokenId(_name)][_record] = StringRecord({\\n      value: _value,\\n      typeOf: _typeOf,\\n      ttl: _ttl\\n    });\\n\\n    wrldNameStringRecordsList[_getNameTokenId(_name)].push(_record);\\n\\n    emit StringRecordUpdated(_name, _name, _record, _value, _typeOf, _ttl);\\n  }\\n\\n  function setAddressRecord(string memory _name, string memory _record, address _value, uint256 _ttl) external override onlyNameServiceRegistry {\\n    wrldNameAddressRecords[_getNameTokenId(_name)][_record] = AddressRecord({\\n      value: _value,\\n      ttl: _ttl\\n    });\\n\\n    wrldNameAddressRecordsList[_getNameTokenId(_name)].push(_record);\\n\\n    emit AddressRecordUpdated(_name, _name, _record, _value, _ttl);\\n  }\\n\\n  function setUintRecord(string calldata _name, string calldata _record, uint256 _value, uint256 _ttl) external override onlyNameServiceRegistry {\\n    wrldNameUintRecords[_getNameTokenId(_name)][_record] = UintRecord({\\n      value: _value,\\n      ttl: _ttl\\n    });\\n\\n    wrldNameUintRecordsList[_getNameTokenId(_name)].push(_record);\\n\\n    emit UintRecordUpdated(_name, _name, _record, _value, _ttl);\\n  }\\n\\n  function setIntRecord(string calldata _name, string calldata _record, int256 _value, uint256 _ttl) external override onlyNameServiceRegistry {\\n    wrldNameIntRecords[_getNameTokenId(_name)][_record] = IntRecord({\\n      value: _value,\\n      ttl: _ttl\\n    });\\n\\n    wrldNameIntRecordsList[_getNameTokenId(_name)].push(_record);\\n\\n    emit IntRecordUpdated(_name, _name, _record, _value, _ttl);\\n  }\\n\\n  /******************\\n   * Record Getters *\\n   ******************/\\n\\n  function getNameStringRecord(string calldata _name, string calldata _record) external view override returns (StringRecord memory) {\\n    return wrldNameStringRecords[_getNameTokenId(_name)][_record];\\n  }\\n\\n  function getNameStringRecordsList(string calldata _name) external view override returns (string[] memory) {\\n    return wrldNameStringRecordsList[_getNameTokenId(_name)];\\n  }\\n\\n  function getNameAddressRecord(string calldata _name, string calldata _record) external view override returns (AddressRecord memory) {\\n    return wrldNameAddressRecords[_getNameTokenId(_name)][_record];\\n  }\\n\\n  function getNameAddressRecordsList(string calldata _name) external view override returns (string[] memory) {\\n    return wrldNameAddressRecordsList[_getNameTokenId(_name)];\\n  }\\n\\n  function getNameUintRecord(string calldata _name, string calldata _record) external view override returns (UintRecord memory) {\\n    return wrldNameUintRecords[_getNameTokenId(_name)][_record];\\n  }\\n\\n  function getNameUintRecordsList(string calldata _name) external view override returns (string[] memory) {\\n    return wrldNameUintRecordsList[_getNameTokenId(_name)];\\n  }\\n\\n  function getNameIntRecord(string calldata _name, string calldata _record) external view override returns (IntRecord memory) {\\n    return wrldNameIntRecords[_getNameTokenId(_name)][_record];\\n  }\\n\\n  function getNameIntRecordsList(string calldata _name) external view override returns (string[] memory) {\\n    return wrldNameIntRecordsList[_getNameTokenId(_name)];\\n  }\\n\\n  /*****************\\n   * Entry Setters *\\n   *****************/\\n\\n  function setStringEntry(address _setter, string calldata _name, string calldata _entry, string calldata _value) external override onlyNameServiceRegistry {\\n    wrldNameStringEntries[_getEntryHash(_setter, _name, _entry)] = _value;\\n  }\\n\\n  function setAddressEntry(address _setter, string calldata _name, string calldata _entry, address _value) external override onlyNameServiceRegistry {\\n    wrldNameAddressEntries[_getEntryHash(_setter, _name, _entry)] = _value;\\n  }\\n\\n  function setUintEntry(address _setter, string calldata _name, string calldata _entry, uint256 _value) external override onlyNameServiceRegistry {\\n    wrldNameUintEntries[_getEntryHash(_setter, _name, _entry)] = _value;\\n  }\\n\\n  function setIntEntry(address _setter, string calldata _name, string calldata _entry, int256 _value) external override onlyNameServiceRegistry {\\n    wrldNameIntEntries[_getEntryHash(_setter, _name, _entry)] = _value;\\n  }\\n\\n  /*****************\\n   * Entry Getters *\\n   *****************/\\n\\n  function getStringEntry(address _setter, string calldata _name, string calldata _entry) external view override returns (string memory) {\\n    return wrldNameStringEntries[_getEntryHash(_setter, _name, _entry)];\\n  }\\n\\n  function getAddressEntry(address _setter, string calldata _name, string calldata _entry) external view override returns (address) {\\n    return wrldNameAddressEntries[_getEntryHash(_setter, _name, _entry)];\\n  }\\n\\n  function getUintEntry(address _setter, string calldata _name, string calldata _entry) external view override returns (uint256) {\\n    return wrldNameUintEntries[_getEntryHash(_setter, _name, _entry)];\\n  }\\n\\n  function getIntEntry(address _setter, string calldata _name, string calldata _entry) external view override returns (int256) {\\n    return wrldNameIntEntries[_getEntryHash(_setter, _name, _entry)];\\n  }\\n\\n  /**********\\n   * ERC165 *\\n   **********/\\n\\n  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {\\n    return interfaceId == type(IWRLD_Name_Service_Resolver).interfaceId;\\n  }\\n\\n  /***********\\n   * Helpers *\\n   ***********/\\n\\n  function _getNameTokenId(string memory _name) private view returns (uint256) {\\n    return nameServiceRegistry.getNameTokenId(_name);\\n  }\\n\\n  function _getEntryHash(address _setter, string memory _name, string memory _entry) private pure returns (bytes32) {\\n    return keccak256(abi.encode(_setter, _name, _entry));\\n  }\\n\\n  /*************\\n   * Modifiers *\\n   *************/\\n\\n  modifier onlyNameServiceRegistry() {\\n    require(msg.sender == address(nameServiceRegistry), \\\"Sender is not name service.\\\");\\n    _;\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/IWRLD_Name_Service_Resolver.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\nimport \\\"./IWRLD_Records.sol\\\";\\n\\ninterface IWRLD_Name_Service_Resolver is IERC165, IWRLD_Records {\\n  /***********\\n   * Records *\\n   ***********/\\n\\n  function setStringRecord(string calldata _name, string calldata _record, string calldata _value, string calldata _typeOf, uint256 _ttl) external;\\n  function getNameStringRecord(string calldata _name, string calldata _record) external view returns (StringRecord memory);\\n  function getNameStringRecordsList(string calldata _name) external view returns (string[] memory);\\n\\n  function setAddressRecord(string memory _name, string memory _record, address _value, uint256 _ttl) external;\\n  function getNameAddressRecord(string calldata _name, string calldata _record) external view returns (AddressRecord memory);\\n  function getNameAddressRecordsList(string calldata _name) external view returns (string[] memory);\\n\\n  function setUintRecord(string calldata _name, string calldata _record, uint256 _value, uint256 _ttl) external;\\n  function getNameUintRecord(string calldata _name, string calldata _record) external view returns (UintRecord memory);\\n  function getNameUintRecordsList(string calldata _name) external view returns (string[] memory);\\n\\n  function setIntRecord(string calldata _name, string calldata _record, int256 _value, uint256 _ttl) external;\\n  function getNameIntRecord(string calldata _name, string calldata _record) external view returns (IntRecord memory);\\n  function getNameIntRecordsList(string calldata _name) external view returns (string[] memory);\\n\\n  /***********\\n   * Entries *\\n   ***********/\\n\\n  function setStringEntry(address _setter, string calldata _name, string calldata _entry, string calldata _value) external;\\n  function getStringEntry(address _setter, string calldata _name, string calldata _entry) external view returns (string memory);\\n\\n  function setAddressEntry(address _setter, string calldata _name, string calldata _entry, address _value) external;\\n  function getAddressEntry(address _setter, string calldata _name, string calldata _entry) external view returns (address);\\n\\n  function setUintEntry(address _setter, string calldata _name, string calldata _entry, uint256 _value) external;\\n  function getUintEntry(address _setter, string calldata _name, string calldata _entry) external view returns (uint256);\\n\\n  function setIntEntry(address _setter, string calldata _name, string calldata _entry, int256 _value) external;\\n  function getIntEntry(address _setter, string calldata _name, string calldata _entry) external view returns (int256);\\n\\n  /**********\\n   * Events *\\n   **********/\\n\\n  event StringRecordUpdated(string indexed idxName, string name, string record, string value, string typeOf, uint256 ttl);\\n  event AddressRecordUpdated(string indexed idxName, string name, string record, address value, uint256 ttl);\\n  event UintRecordUpdated(string indexed idxName, string name, string record, uint256 value, uint256 ttl);\\n  event IntRecordUpdated(string indexed idxName, string name, string record, int256 value, uint256 ttl);\\n\\n  event StringEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, string value);\\n  event AddressEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, address value);\\n  event UintEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, uint256 value);\\n  event IntEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, int256 value);\\n}\\n\"\r\n    },\r\n    \"contracts/IWRLD_Name_Service_Registry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\ninterface IWRLD_Name_Service_Registry is IERC165 {\\n  function register(address _registerer, string[] calldata _names, uint16[] memory _registrationYears) external;\\n  function extendRegistration(string[] calldata _names, uint16[] calldata _additionalYears) external;\\n\\n  function getNameTokenId(string calldata _name) external view returns (uint256);\\n\\n  event NameRegistered(string indexed idxName, string name, uint16 registrationYears);\\n  event NameRegistrationExtended(string indexed idxName, string name, uint16 additionalYears);\\n  event NameControllerUpdated(string indexed idxName, string name, address controller);\\n\\n  event ResolverStringRecordUpdated(string indexed idxName, string name, string record, string value, string typeOf, uint256 ttl, address resolver);\\n  event ResolverAddressRecordUpdated(string indexed idxName, string name, string record, address value, uint256 ttl, address resolver);\\n  event ResolverUintRecordUpdated(string indexed idxName, string name, string record, uint256 value, uint256 ttl, address resolver);\\n  event ResolverIntRecordUpdated(string indexed idxName, string name, string record, int256 value, uint256 ttl, address resolver);\\n\\n  event ResolverStringEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, string value);\\n  event ResolverAddressEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, address value);\\n  event ResolverUintEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, uint256 value);\\n  event ResolverIntEntryUpdated(address indexed setter, string indexed idxName, string indexed idxEntry, string name, string entry, int256 value);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\r\n    },\r\n    \"contracts/IWRLD_Records.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IWRLD_Records {\\n  struct StringRecord {\\n    string value;\\n    string typeOf;\\n    uint256 ttl;\\n  }\\n\\n  struct AddressRecord {\\n    address value;\\n    uint256 ttl;\\n  }\\n\\n  struct UintRecord {\\n    uint256 value;\\n    uint256 ttl;\\n  }\\n\\n  struct IntRecord {\\n    int256 value;\\n    uint256 ttl;\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1500\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nameServiceRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxEntry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"entry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"AddressEntryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"record\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"name\":\"AddressRecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxEntry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"entry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"IntEntryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"record\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"name\":\"IntRecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxEntry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"entry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"StringEntryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"record\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"typeOf\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"name\":\"StringRecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxEntry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"entry\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UintEntryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"idxName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"record\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"name\":\"UintRecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"}],\"name\":\"getAddressEntry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"}],\"name\":\"getIntEntry\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"}],\"name\":\"getNameAddressRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"internalType\":\"struct IWRLD_Records.AddressRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getNameAddressRecordsList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"}],\"name\":\"getNameIntRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"internalType\":\"struct IWRLD_Records.IntRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getNameIntRecordsList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"}],\"name\":\"getNameStringRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeOf\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"internalType\":\"struct IWRLD_Records.StringRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getNameStringRecordsList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"}],\"name\":\"getNameUintRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ttl\",\"type\":\"uint256\"}],\"internalType\":\"struct IWRLD_Records.UintRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getNameUintRecordsList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"}],\"name\":\"getStringEntry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"}],\"name\":\"getUintEntry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddressEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_value\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ttl\",\"type\":\"uint256\"}],\"name\":\"setAddressRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"_value\",\"type\":\"int256\"}],\"name\":\"setIntEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"_value\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_ttl\",\"type\":\"uint256\"}],\"name\":\"setIntRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setStringEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_typeOf\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_ttl\",\"type\":\"uint256\"}],\"name\":\"setStringRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_entry\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUintEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_record\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ttl\",\"type\":\"uint256\"}],\"name\":\"setUintRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "WRLD_NameService_Resolver_V1", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "1500", "ConstructorArguments": "000000000000000000000000c4a9328f135cd4a568cd5e12ed528b8e539a158b", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}