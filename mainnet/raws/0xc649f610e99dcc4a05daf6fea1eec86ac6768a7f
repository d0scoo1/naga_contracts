{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2022-04-12\r\n*/\r\n\r\n// File: contracts/dropair.sol\r\n\r\n/**\r\n *Submitted for verification at polygonscan.com on 2022-04-11\r\n*/\r\n\r\n// File: contracts/bulkairdrop.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.10;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract BulkAirdrop {\r\n    constructor() {}\r\n\r\n    function BulkAirdropERC20(\r\n        IERC20 _token,\r\n        address[] calldata _to,\r\n        uint256[] calldata _value\r\n    ) public {\r\n        require(\r\n            _to.length == _value.length,\r\n            \"Receivers and amount are different length\"\r\n        );\r\n        for (uint256 i = 0; i < _to.length; i++) {\r\n            require(_token.transferFrom(msg.sender, _to[i], _value[i]));\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"BulkAirdropERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BulkAirdrop", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://80b0ed9606ebddf579529d5e7cda883686765d348b3aa6305b16b6030da2f55d"}]}