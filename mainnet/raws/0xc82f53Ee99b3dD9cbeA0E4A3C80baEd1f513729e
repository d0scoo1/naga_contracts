{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/inventory/InventoryManagerAllies.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\npragma solidity 0.8.7;\\n\\ncontract InventoryManagerAllies {\\n\\n    address impl_;\\n    address public manager;\\n\\n    address public shInv;\\n    address public ogInv;\\n    address public mgInv;\\n    address public rgInv;\\n\\n    mapping(uint8 => address) public bodies;\\n\\n    function setAddresses(address sh_, address og_, address mg_, address rg_) external {\\n        require(msg.sender == manager, \\\"not manager\\\");\\n        shInv = sh_;\\n        ogInv = og_;\\n        mgInv = mg_;\\n        rgInv = rg_;\\n    }\\n\\n    function getTokenURI(uint256 id_, uint256 class_, uint256 level_, uint256 modF_, uint256 skillCredits_, bytes22 details_) external view returns (string memory) {\\n        if (class_ == 1) return InventoryManagerAllies(shInv).getTokenURI(id_, class_, level_, modF_, skillCredits_, details_);\\n        if (class_ == 2) return InventoryManagerAllies(ogInv).getTokenURI(id_, class_, level_, modF_, skillCredits_, details_);\\n        if (class_ == 3) return InventoryManagerAllies(rgInv).getTokenURI(id_, class_, level_, modF_, skillCredits_, details_);\\n        if (class_ == 4) return InventoryManagerAllies(mgInv).getTokenURI(id_, class_, level_, modF_, skillCredits_, details_);\\n    }\\n   \\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bodies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"class_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"modF_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"skillCredits_\",\"type\":\"uint256\"},{\"internalType\":\"bytes22\",\"name\":\"details_\",\"type\":\"bytes22\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mgInv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ogInv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rgInv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sh_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"og_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mg_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rg_\",\"type\":\"address\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shInv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "InventoryManagerAllies", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}