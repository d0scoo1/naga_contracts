{"status": "1", "message": "OK", "result": [{"SourceCode": "/********************************\r\n\r\n\u23c1\u27d2\u2340\u2340\u23c3\u238e\u235c\u2340\u22d4\u23c3\u23c1\u27df\u235c\u22cf \u23c1\u2340\u23c3\u22cf\u2307\u22d4\u27df\u2307\u2307\u27df\u235c\u22cf \u2390.\u27d2\u2330\u27d2\u2390\u27d2\u22cf.\u2300\r\n\r\n\u201c\u22d4\u27df\u2307\u2307\u27df\u235c\u22cf \u2291\u238d\u23da \u2385\u27d2\u233f\u2330\u235c\u22ac\u22d4\u27d2\u22cf\u23c1\u201d: \r\n\r\n\u22d4\u27df\u2307\u2307\u27df\u235c\u22cf \u2291\u238d\u23da: \u23c1\u2291\u27d2 \u260a\u27d2\u22cf\u23c1\u2340\u23c3\u2330\u27df\u22c9\u27df\u22cf\u260c \u2330\u27df\u22cf\u260d \u23c1\u235c \u22d4\u27df\u2307\u2307\u27df\u235c\u22cf \u260a\u235c\u22cf\u23c1\u2340\u235c\u2330 \u238e\u235c\u2340 \u23c1\u2340\u27df\u23da\u238d\u23c1\u27d2, \u2340\u27d2\u23da\u238d\u27df\u2330\u2385, \u23c3\u22cf\u2385 \u23c1\u2340\u238d\u23c1\u2291.\r\n\r\n*********************************/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary Address {\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            \r\n            if (returndata.length > 0) {\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    uint256 private _lockTime;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }   \r\n    \r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract MissionHub is Context, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n    \r\n    address payable public tributeWallet;\r\n    address payable public rebuildWallet;\r\n    address payable public truthWallet;\r\n    address payable public controlroomWallet;\r\n\r\n    uint256 public tributePercent = 35;\r\n    uint256 public rebuildPercent = 55;\r\n    uint256 public truthPercent = 15;\r\n    uint256 public controlroomPercent = 5;\r\n \r\n    constructor (address payable _truthWallet, address payable _tributeWallet, address payable _rebuildWallet, address payable _controlroomWallet) {\r\n        tributeWallet = _tributeWallet;\r\n        truthWallet = _truthWallet;\r\n        rebuildWallet = _rebuildWallet;\r\n        controlroomWallet = _controlroomWallet;\r\n    }\r\n\r\n    function updateRatios(uint256 _tributePercent,uint256 _rebuildPercent, uint256 _truthPercent, uint256 _controlroomPercent) external onlyOwner {\r\n        require(_tributePercent.add(_rebuildPercent).add(_truthPercent).add(_controlroomPercent) == 100, \"Percentages don't add up to 100%\");\r\n        tributePercent = _tributePercent;\r\n        rebuildPercent = _rebuildPercent;\r\n        truthPercent = _truthPercent;\r\n        controlroomPercent = _controlroomPercent;\r\n    }\r\n\r\n    function setWallets(address _truthWallet,address _rebuildWallet, address _tributeWallet, address _controlroomWallet) external onlyOwner() {\r\n        truthWallet = payable(_truthWallet);\r\n        rebuildWallet = payable(_rebuildWallet);\r\n        tributeWallet = payable(_tributeWallet);\r\n        controlroomWallet = payable(_controlroomWallet);\r\n    }\r\n\r\n    function recoverStuckETH(address payable receipient) public onlyOwner {\r\n        receipient.transfer(address(this).balance);\r\n    }\r\n\r\n     receive() payable external {\r\n         uint256 contractETHBalance = address(this).balance;\r\n         uint256 amountETHTruth = contractETHBalance.mul(truthPercent).div(100);\r\n         uint256 amountETHRebuild = contractETHBalance.mul(rebuildPercent).div(100);\r\n         uint256 amountETHTribute = contractETHBalance.mul(tributePercent).div(100);\r\n         uint256 amountETHControlroom = contractETHBalance.mul(controlroomPercent).div(100);\r\n         truthWallet.transfer(amountETHTruth);\r\n         rebuildWallet.transfer(amountETHRebuild);\r\n         tributeWallet.transfer(amountETHTribute);\r\n         controlroomWallet.transfer(amountETHControlroom);\r\n     }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_truthWallet\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_tributeWallet\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_rebuildWallet\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_controlroomWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"controlroomPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controlroomWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebuildPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebuildWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receipient\",\"type\":\"address\"}],\"name\":\"recoverStuckETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_truthWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebuildWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tributeWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_controlroomWallet\",\"type\":\"address\"}],\"name\":\"setWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tributePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tributeWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"truthPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"truthWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tributePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rebuildPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_truthPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_controlroomPercent\",\"type\":\"uint256\"}],\"name\":\"updateRatios\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MissionHub", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000a2c3bfece31f8a8613afdd1f864c4d1e69034d15000000000000000000000000430cd4fe9338939f81f702110fa7e6dfe6eecd79000000000000000000000000c6f171c79fb7c6c808d457d7e9cab20777488f7b000000000000000000000000cf243c3a730beb18d03adfceb617b013b9e69c6f", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0b7394900c12e0168fe432a6849c454f69bd8e434d6629aca81650d9b69f8029"}]}