{"status": "1", "message": "OK", "result": [{"SourceCode": "// File: contracts\\interface\\IAdapter.sol\r\n\r\npragma solidity ^0.8.2;\r\n\r\ninterface IAdapter {\r\n\r\n    function getByteCodeERC20(address nftContract, string memory method, address airDropContract, address account, uint256 tokenId) external returns(bytes memory);\r\n\r\n    function getByteCodeERC721(address nftContract, string memory method, address airDropContract, address account, uint256 tokenId) external returns(bytes memory);\r\n\r\n    function getByteCodeERC1155(address nftContract, string memory method, address airDropContract, address account, uint256 tokenId) external returns(bytes memory);\r\n\r\n}\r\n\r\n// File: contracts\\airdropAdapter\\Adapter.sol\r\n\r\npragma solidity ^0.8.2;\r\n\r\n\r\ncontract APEAdapter is IAdapter{\r\n\r\n    address constant public Azuki = address(0xED5AF388653567Af2F388E6224dC7C4b3241C544);\r\n    address constant public Doodles = address(0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e);\r\n\r\n    function getByteCodeERC20(address nftContract, string memory method, address airDropContract, address account, uint256 tokenId) external pure override returns(bytes memory bytecode){\r\n        bytecode = abi.encodeWithSignature(method);\r\n        return bytecode;\r\n    }\r\n\r\n    function getByteCodeERC721(address nftContract, string memory method, address airDropContract, address account, uint256 tokenId) external pure override returns(bytes memory bytecode){\r\n        if(nftContract == Azuki){\r\n            uint256[] memory azukiTokenIds = new uint256[](1);\r\n            azukiTokenIds[0] = tokenId;\r\n            bytecode = abi.encodeWithSignature(method, azukiTokenIds);\r\n        }else{\r\n            bytecode = abi.encodeWithSignature(method);\r\n        }\r\n        return bytecode;\r\n    }\r\n\r\n    function getByteCodeERC1155(address nftContract, string memory method, address airDropContract, address account, uint256 tokenId) external pure override returns(bytes memory bytecode){\r\n        return bytecode;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"Azuki\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Doodles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"airDropContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getByteCodeERC1155\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"airDropContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getByteCodeERC20\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"airDropContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getByteCodeERC721\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "APEAdapter", "CompilerVersion": "v0.8.2+commit.661d1103", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1311d0c00817eeb0bb8322ff32c2df9527b09e995944ef459bd50560c6fffe8b"}]}