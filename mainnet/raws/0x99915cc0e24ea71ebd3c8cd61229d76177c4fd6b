{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/STLIFE.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Still Life\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                                                                                                //\\n//                                                                                                                                                                                                                //\\n//                                                                                          ~?:!:.:. .^.! ..^7.!!:                                                                                                //\\n//                                                                                  ^.:~...!. .^^^.^?Y::?.J:J!Y^^!7^~~:!7!^                                                                                       //\\n//                                                                          : .   .. : .~....^::.:~.:~!Y~!?7^!?!!7!?57PPYY^P~!PJ57G                                                                               //\\n//                                                                     ^.^..  :.^...:^! :..:.~...:??P:7!!!~??^55?~YJJ7Y?J555P75GB#B5P!^                                                                           //\\n//                                                                  ~ . .  ..:.....^::.~7:~J?7J^.?~~?7P5J!J^J?5!?YPJBP#BBB#G#J5PBBYGPY!G755?                                                                      //\\n//                                                             ..   ... ~:.:~.^.:~:^~:.^^:7~~~5??~?J?YJ5J5J75?JPJJPJPGP@5P5#PBPB##&#YGJG555##B#G                                                                  //\\n//                                                             ..:::.  :. ..:~.^^:^:^5J~.^^!~!?PYP5#GG&BB##BJYP5G555#GBB#!YJJ7G5BGG#&##BPGB@&&&&&@@#                                                              //\\n//                                                        :  ..^........^~^^...^.7^:~.~7^~P!!!G5GGJPBB####P&##G##BP@#BBPPG5P5##P#BB5#@&#5GB&#@@&#@@@@B@                                                           //\\n//                                                    :.. ..::  . ..:.::.:.^:.^~!~^:7Y:!:^~!^^!?P5PPBGG@&@#&##&&@#@###BP&G5P!PBGBY&B&##Y#BBG&G55G5#@@@@@B@                                                        //\\n//                                                     :  ... ^....^::^:~^^::^7^7.7~7:.:^?^.:^?!~7?GYB&B@&B###B&@#PPGPPBB#Y#&B#&G@B@&@@&&5##YGB&@@@&&@&@@@@&                                                      //\\n//                                                :. . :. ..^....! :.^:~~!!~~~.77:.^.~!!~J!^7:~7~7!?&G@#####&@&G#G##GBB&#@JP5&B#&&@&&@@&&@@@@##G&&@@@@@&@@@@@&@                                                   //\\n//                                               . .^:..: ..... :!.~~!::7^:.~~7~7.:.^^^!J7~!7^Y!!!?JJ5BB&&GG##&#&#&G5B&B&@&PG#&B@&B##@&&B&&&@@###@@@@@@@@&@@@@@@@                                                 //\\n//                                             .. ...... :.::.::^~..^::^^^^:~!:~^:~^!!J77??~?~!~7~~!7PG#B#G5B#GB#BGBYB#P5##&@##GBBBGBB@B#&&@@@@@@@&@&@@@@@@#&@@@@@                                                //\\n//                                            !. . :.^::.~.^.?:.^~!?^.^!^7.^J:^^!J!~~~.::^Y7^.:~^~575PP#&&##&##B&@GYP#PB5G&#P#GP@B5@PP5##&@@@@@@@@@@@@&@@@@@@&&@@@@@                                              //\\n//                                           ..... . .:...^^~~::!^:J7.!:.^G:7PG5^5!~^:Y!?^75??J~5JPJP5#PBB#B&&PBBBPPJBJPBB@@BG!P&GBB&#BB#&@@@@@@@@&&@&@#@B@&#@#@&&@@@                                             //\\n//                                          ^...:.:.! ~^!^:^.^: .?!^7^:?~!J5YP^YG^5P!~^PJ^J?7~P?J5YGYPGG#&PB#&BG@BYBJ?5Y5&&@&G5P&7PP#YPP#@@@@@@@@@@&@@&@@@@@&@@@@&&&@@                                            //\\n//                                         ^:::.:^:::.:::.:~^^^!^~:!~?^7~!7?J!J!~PYYJGYPJ??J5?G^YJ~55#G#B##B&@#GGG5BYBPP?&&&#B~##PBB#P#B@@@@@@@@@@@@@@&@@@@@@@&@@@@@@@@@                                          //\\n//                                        ^::..:::^~~:~:.!!7^!^^^!7?^~?J7!!!.7~^7JP?BGY5GPYB5BGGBG#&GGP?B#&B#BBG##GGGG5YG@@&?7PBGB##B&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@                                         //\\n//                                       .^:~:..?:^:^.!:!:Y::!:^777?!7~!:?:~~~5?BGP&BPPJY#PG5Y555&@@&@@@&#B#&&B#PB#&5PGGB@#GBGBB##&#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@                                        //\\n//                                      ^7^.^?7~7!7JJ:J!:P77~~7~7^~YJJ::~^!:P#J5PBB&#BGGYBP5JBGG5Y&&@@@@@@&##@BBGBG#5PG#5&B:PB#&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@&@@@@@@@@P                                        //\\n//                                      ~7:~~^!:?^~5^^~^:^7Y7~~?~J!JGY:.~.:^J:PBYBG&#&YBPJJ???7B5YYY55#@@@&#G#B##BPBBPP?P#G5BY&#G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@                                       //\\n//                                      ::~^7Y7^:^!?7^77~77~5G7?J?7PP7. :^Y?:~PY75JGB#5G5Y?7~^^^^^?7JY#B&YBBG#B&GB#GG&#B###P5G#&B&#&#@@&##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                      //\\n//                                     ^~~^~^^77^^^.^:^:!~!^^!?5JYJG?~JJ?7?G@&BGYP?YY!^~75YYJ57~:!:.Y:~^~J?7YG5G&&##&@@@@G~P&G&#BB&&&##&@#&@@@@@@@#@@@@@&@@@@@@@@@@@@@@@@@@@B                                     //\\n//                                     !~~.:^~~J:~^~..^... ..:^7?!:^^^7G!!B@5GY^~~PGP?J&@@@@#&&##Y!Y!^?.!~ .:J~^^!J!JG&@@#@PBYBG@#B@&@#B&#@@@@@@@@@@@&@@@&@@@@@@@@@&@@@@@@@@@                                     //\\n//                                     ::.:^.7^?7?7^^5~B??^^^.^7~^::^5?@&@@#P7?!:.^5@@@@@@@@@@@@@@@@@@@@@@@PG7^^~~ .J^^P?J&#&5&&&#@@@@@PP&@@@@@@@@@@&@@&@@@@@@@@@@@@@@@@@@&@@@                                    //\\n//                                     7^.:..^^~.:~!~Y#J5YPJ7.^~7^J~BB@G@@&JJ::.~?#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&G@&P?G&PB#@@&@@@@@#B@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@&                                   //\\n//                                     7.~^.^.:.~^7Y:JPP7@@J:..Y~Y.^#G&&@@#?^7!J&@@@@@@#&&&@&@@@@@&@@@@@@@@@@@@@@@@@@@@@@@#P5JP@&@@@@@@&&#@@@@@@@@@@@@@@@@&@@@@@&@#@@@@@@@@@B@@                                   //\\n//                                     7.....:.^~J.~7~JJY^ :5~..:.^.???@@@@57?!~Y?@@@&&&&##&@&@&#&@#@@@@@@@@@@@@@@@@@@@@@@@G^.B@G&@&@@@#@&#&&@@@@@@@@@#@@@&&@@@@@&@@@@@@@@@@@@@                                   //\\n//                                     :  ..:7:~~5:: ~G&#PY^?Y~!..7!75GB@@@?Y. .^Y&@J5P#&&B&&&##&&B&@@#&@@@@@@@@@@@@@@@@@@@&555#&&#@@@@@@@@G&@@@@@@@@&@@@@&@@@@@@@#@&@@@@@@@@&@@                                  //\\n//                                    ^   ~PP~^PB@@@@@@@@&@@@BY::77Y7!G&@@#5^.:~^B#GY?P#@#&&&&&&@#B#&&@@&@@@@@@@@@@@@@@@@@@@@&?7&#&&@@@@@@@&&@@@@@@@@&&@&@@@@@#@&@@@B@@@@@@@@@@@                                  //\\n//                                    .::7::7&@@@@@&&@&#@&&&&#G?7JY&@@@&PPPJ?^^!7~JJ~GP&B#G@@&@@&@&&&B&&@&@@@@@@@@@@@@@@@@@@@!.!^B@&@@@@@@@@&&&@#@&&@&@#@@@@@@@&&&&@&@&@@@@@@@@@                                  //\\n//                                   5J^P:7@@@@@@&&&&&@#&#&&7.?!~  ^&@@@@GY?^GP!.::?P5&@&&#B&&&#@&@&&&@&&@&@@@@@@@@@@@@@@@@@@Y.:Y&&#&@#&@@@@#&@@@&@&@@@&@@@@@@B&&#@@#@@@&@@@@@@#                                  //\\n//                                  #^ ^5@@@&@@&#@@&&#@@&G:JPJ.^:  :7GG@@5Y?!77. ^:YP5G#&#BB##&#&&&B&@&@&&@@@@@@@@@@@@@@@@@@@@^~YB#@@@##&@@@#@&@&&&@@@&@&@@@@@@&#&@&@@@@@@@@@@@@                                  //\\n//                                  :.~#@@@@@@&@&&&&@&@B#P~ @&~77::JB5BB@&PYP~^^!^#@&&@B##&##@&@@@&&&&@@@@@@@@@@@@@@@@@@@@@@@Y:55P#@@&J&@@@@@@&@@&&&&@@@@@@@@@@@&&@@@@@@@@@@@@@@P                                 //\\n//                                 !~~7@@@&@&@&@&#&&@@#&P^ ~@B@@JG:~G?!#@5?G757.:J#&&&@&@@@@@@&@@&@@@@@@@@@@@@@@@@@@@@@@@@@@#5:YY5P&@@@@@@@@@@@@@@@@@@@@@@@&@&@@@B&@@@&&&@@@@@@@@                                 //\\n//                                 !^^5@@@&&#&#B&B&&#&&G5. @@##@@@@P&7G&BGB#G#P.?G@#B@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B .!^!!JB5B@@@@@@@@@@@@@@&@@@@@@@&@&&@@@@@@@@#@@@@@@@@                                 //\\n//                                 ?:.B@@&@@&B&@@&#B&&B5~7@@@@@@@@@B!P@BGBP&@@@YYJ?~&B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B^.J5^::Y@B^!@@@@@@@@@@@@@@@@@@@@@&&&@@@@#@@@@@@@@@@@@@                                 //\\n//                                 .^.Y#@&&&&##&#&&&&&#G7Y@@@@@&@@@&7~PP#&#G#GPG#BJ!~?J7G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# ^?!~^..#BB5J@@@@@@@@@@@@@@@@@@@@@&@&&@@@#@@&@@@@@@@@@@                                 //\\n//                                  ~^.&@@#B@&B@&&##B&#B^&@@@@@##@@@J~~B&#&##GG@#@B!!J~??7:~?@@@@@@@@@@@@@@@@@@@@@@@@@@@Y.55P~7:^5B##5?##@@@@@@@@@@@@@@@@@@@@#@@@@@@#@@@@@@@@@@@@                                 //\\n//                                   ~:.G@&#@@&#&#&@&BB.!@@@@@@@&@@@@.P~75YB&#Y#@#@B5J57!~^:...?PY##@@@@@@@@@@@@@@@@@@&!7Y!P!!~.:JGPY5PG&#&@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@                                 //\\n//                                    !^7@@&G&#&&&##@&#:^@@@@@@@B@&@@&:7!~J&~5^PB##PPPGYB&P!~^~J?5G77.~7 ?^~5!?7Y?!?G@BPGYPJ7!:.^BP&5&PGYYYBGPBPBJGP~?JYPP#G@@@@@@#&&&@@&@@@@@@@                                  //\\n//                                     ^.YBB&&@@5&@#&&B?&@@@@@@@&&@&@Y^.~!^PBG!7B@@BJJY^5#@@@&#B#G&P&G&GPB@@B#@@@@#BPG#B5@GY~^.^7J~Y5GJ5PY?#5BGP!55YJG7PB5JBB@P&&&&&BB#@@@&@@@&@                                  //\\n//                                     :^5@&#@&#&BBG@&G7!@@@@@@@B#@&&@#~.^~7?BBG@@@&55P#?G@@@@#J#B&BPYJGB?5@@##@@B##P55PG5^?:^:~~7?7#5P5G&Y5GBB5GPBP5??GP#P&@@@G#@&@&##@@@&@@@&                                   //\\n//                                     ..G@B&&&###@&&&Y.B@@@@@@#5B@&@@@@@~ .JG&G@@&&Y&YPGB@@@@&@&PYGB5?YP5@@B:J^7Y!77~7PJ^^.:^:.:^~!YPYBGY5G#Y#@@@##5YGBPBB#@@@@B#&@#@@@@@@@@@@                                   //\\n//                                     ~~&@@@&&&&&&&&&G~~@@@@@&J&@@@&@@@@&..^PGB@@PGY5PB#Y5P&BB#BBPGY?!~57Y@JP7!~!~77?:~^  . .~:^!5JY?PGPPB@@@G#&@@@&#P#&@@@@@@@@@@&@&&&@@@@&&                                    //\\n//                                    ?^J@@&&@&@&@@&##&YJ@@@@GJ##@@@@@@@@@~~.7J&@@#&&&BBBPPP55&PG5JJ:~~^:7JB&Y577^!!^^^!:: ..::^~JYPJJBG#G#@@@&B&&@&G&@@@@@@@@@B@@@@@@@@@@@@@                                     //\\n//                                    ^ G@@@@@&&@&@@&#@@?@@G@@#@&:~@@@@@@B~::?BB@@#&&@BG&JBG5?GG5?^^7!?J^PJJB#?^??J775B!~~!^^:~~YG5YPBBB&&@@#&&&#@B@@@@@@@@@@@@@@@@@#@@@&@@@                                      //\\n//                                    !~:#@@@@@@&&&J?B&@&J@@&^@@&B@#!@@B7Y^^:?7##B#57P&@5YYPB5B?!7!!JBGBPYJJY@7#~Y!?5P&@@@PGYPPGGJBYPB@@@@@@@@@&@@@@@@@@@@@@@@@@@&@@#@@@@@@^                                      //\\n//                                   ~~:?:?@@@#@J^GPB&B&& @@57G@@~5@55~P^!!?!BY&B&5BJ5#&@5#YBG5#?BB7Y~!J?5##BG5#5??7JJB@&G&PGB##GGPG&@@@@&@#@@@@@@@@@@@@@@@@@@@@G#&&&@@@@@@                                       //\\n//                                   :.Y:GP??G5#PP5Y?GY?7J!G@Y~5@@@@@#G!~JJJYYB###PGYJBG&B5PBB!Y5#G5YPG#Y?&#&@@@@@@&&&@@&@@B5B&#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@#@@@@@@                                        //\\n//                                   ^ ..YJBB#75#5GP?~::^!JP57J.5#7#@&5?^^:^~P&&&&BPYYBBP&YY@?7P5BP&#&&@PPG@#G##?GG&@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B@@@@@@@@@@                                         //\\n//                                    :  ::~Y7J!!?!~?~~^..?YJ?~? 5Y:5PJJ~~.:^5YJPYJY&5G@@@B#G5&5#5G&@&BB&B@&@@&&@@&@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&                                          //\\n//                                    ^ ....^...~!?^.^:~.^!~.!?!.:J:^77?7!.^.~?PGP5J!!~~@@@:YYB@&#GBG&PG@B#@&&@@@&&@@@@         G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@                                            //\\n//                                     .  .  . ^.:!.  : .^7Y?^Y^.~JJ.^:J~!:...^P5!?~::::~B:&?B#PPB@GPGG@#G@@BB@&@@&@@@@            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                             //\\n//                                     ^~.....!!&&Y55: :^?~7^75#^:P .  ~??~  .:PGJYY:~:^~#BG75BJ5#@#G?#&P&@GPB@@@@@@&@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                              //\\n//                                      !7Y~7@@&PP&@Y  ~7~5~::~&~5!  ~~~~!^. :#Y:~P#J:..:?&PB7?5&YJ#JG&@5@@&BJ&@&B&#@@                 @@@@@@@@@@@@@@@@@@@@@@@@@@                                                 //\\n//                                        ?PP#        :.:.7~.:^Y!P:77@@@@!::^&G#&&5YP!Y!?5&P!###@PB&&#@&B##&#@&&@@@&&&                     @@@@@@@@@@@@@@@@@@&&                                                   //\\n//                                                    ^..:.:::P&7Y 5@@@@@@@#P?.JG#G?@&55@@@@&##55&&@&J#@&#&B#5G#G#GP@&&                         7                                                                 //\\n//                                                       YG^.P@@@@B~:J&@@&#@@:.~75G#G         Y^:P#G#!5B#GYJ##YJGGP@&&                                                                                            //\\n//                                                     ^7~@@J7@@BG          #. ^7J5&B#        #^~BGG@~~YPP#7B&YJJB                                                                                                //\\n//                                                       G~&#               B!..:?PB@@        B7:~#&GP^~J#&?Y                                                                                                     //\\n//                                                                            #?J5G@          @G?!YGB?#P&Y                                                                                                        //\\n//                                                                                                                                                                                                                //\\n//                                                                                                                                                                                                                //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract STLIFE is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Still Life\\\", \\\"STLIFE\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "STLIFE", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}