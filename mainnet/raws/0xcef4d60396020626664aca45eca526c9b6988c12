{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract EqualSplitPayment {\r\n\r\n  function splitPayment(address[] memory payees) public payable {\r\n\r\n    uint256 payout = msg.value / payees.length;\r\n\r\n    for (uint i=0; i<payees.length; i++) {\r\n        payable(payees[i]).transfer(payout);\r\n    }\r\n\r\n    uint256 remainder = msg.value - (payout * payees.length);\r\n\r\n    if( remainder != 0 ){\r\n        payable(msg.sender).transfer( remainder );\r\n    }\r\n\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"payees\",\"type\":\"address[]\"}],\"name\":\"splitPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "EqualSplitPayment", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4a82315b4656c6c2bf67528168162088855f5665cf920b15fa67645018865fa6"}]}