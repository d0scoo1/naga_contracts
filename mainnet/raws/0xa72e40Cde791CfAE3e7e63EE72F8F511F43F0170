{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.11;\r\n\r\ninterface FeedInterface {\r\n    function transmitters() external view returns (address[] memory);\r\n\r\n    function transferPayeeship(address _transmitter, address _proposed) external;\r\n\r\n    function acceptPayeeship(address _transmitter) external;\r\n}\r\n\r\ncontract PayeeshipTransferer {\r\n    error DelegateCallFail(bytes data);\r\n\r\n    /// @notice Check if the payee can change the payeeship of the target feeds.\r\n    /// @param targets Target price feeds\r\n    /// @param payee The payee requesting change of payeeship\r\n    /// @return canRequest Boolean value indiciating whether the sender can change the payeeship of given targets\r\n    /// @return wrongPermissions Array of targets that the sender does not have permission to request a change\r\n    function canRequestChangeOfPayeeship(FeedInterface[] memory targets, address payee)\r\n        external\r\n        view\r\n        returns (bool canRequest, FeedInterface[] memory wrongPermissions)\r\n    {\r\n        wrongPermissions = new FeedInterface[](targets.length);\r\n        uint256 wrongPermissionsCounter = 0;\r\n        for (uint256 i = 0; i < targets.length; i++) {\r\n            FeedInterface targetContract = targets[i];\r\n            address[] memory transmitters = targetContract.transmitters();\r\n\r\n            for (uint256 j = 0; j < transmitters.length; j++) {\r\n                if (transmitters[j] == payee) {\r\n                    break;\r\n                }\r\n                if (j == transmitters.length - 1) {\r\n                    wrongPermissions[wrongPermissionsCounter] = targetContract;\r\n                    wrongPermissionsCounter++;\r\n                }\r\n            }\r\n\r\n            if (transmitters.length == 0) {\r\n                wrongPermissions[wrongPermissionsCounter] = targetContract;\r\n                wrongPermissionsCounter++;\r\n            }\r\n        }\r\n\r\n        if (wrongPermissionsCounter == 0) {\r\n            canRequest = true;\r\n        }\r\n        // Set the length of wrongPermissions to the correct length\r\n        assembly {\r\n            mstore(wrongPermissions, wrongPermissionsCounter)\r\n        }\r\n    }\r\n\r\n    /// @notice Request to change the payeeship of the target contracts from the message sender, to the newPayee\r\n    /// @dev Call canRequestChangeOfPayeeship() first to esnure that the sender CAN call this without reverts\r\n    /// @param targets Array of target contracts to change the payee\r\n    /// @param newPayee Address of the new Payee\r\n    function requestChangeOfPayeeship(address[] memory targets, address newPayee) external {\r\n        for (uint256 i = 0; i < targets.length; i++) {\r\n            (bool success, bytes memory data) = targets[i].delegatecall(abi.encodeWithSelector(FeedInterface.transferPayeeship.selector, msg.sender, newPayee));\r\n            if (!success) revert DelegateCallFail(data);\r\n        }\r\n    }\r\n\r\n    /// @notice Accepts payeeship change for msg.sender on each of the targets. The oldPayee must request change before this step\r\n    /// @dev Must be called by the account accepting the payeeship\r\n    /// @param targets Array of target contracts to change the payee\r\n    /// @param oldPayee The original payee that requested the change\r\n    function acceptChangeOfPayeeship(address[] memory targets, address oldPayee) external {\r\n        for (uint256 i = 0; i < targets.length; i++) {\r\n            (bool success, bytes memory data) = targets[i].delegatecall(abi.encodeWithSelector(FeedInterface.acceptPayeeship.selector, msg.sender, oldPayee));\r\n            if (!success) revert DelegateCallFail(data);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DelegateCallFail\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"oldPayee\",\"type\":\"address\"}],\"name\":\"acceptChangeOfPayeeship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract FeedInterface[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"canRequestChangeOfPayeeship\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canRequest\",\"type\":\"bool\"},{\"internalType\":\"contract FeedInterface[]\",\"name\":\"wrongPermissions\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"newPayee\",\"type\":\"address\"}],\"name\":\"requestChangeOfPayeeship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PayeeshipTransferer", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "100000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6d43cc72e29d9b496e0f3ef716eb069935626e965fa7eb8fa3c5ac8fa807b47f"}]}