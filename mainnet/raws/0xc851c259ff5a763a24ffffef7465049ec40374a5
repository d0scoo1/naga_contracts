{"status": "1", "message": "OK", "result": [{"SourceCode": "// File: PaymentSplitter.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract PaymentSplitter {\r\n    receive() external payable {\r\n        address[2] memory addresses = [\r\n            0xA99308B317259B7627DE0AB553E54A7E1702bb03,\r\n            0x00889fc62F0b701e6393A99495F9d0b24C8858E8\r\n        ];\r\n\r\n        uint32[2] memory shares = [\r\n            uint32(8800),\r\n            uint32(1200)\r\n        ];\r\n\r\n        uint256 balance = address(this).balance;\r\n\r\n        for (uint32 i = 0; i < addresses.length; i++) {\r\n            uint256 amount = i == addresses.length - 1\r\n                ? address(this).balance\r\n                : (balance * shares[i]) / 10000;\r\n\r\n            (bool success, ) = addresses[i].call{value: amount}(\"\");\r\n            require(success, \"Failed to send payment\");\r\n        }\r\n    }\r\n}", "ABI": "[{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PaymentSplitter", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://620d2211c6b690555983a32abd04b1a42d76f70dd896fd209fae5ed3b3aea7aa"}]}