{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2022-03-24\r\n*/\r\n\r\n//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// On-Chain Directory (Solana) by 0xInuarashi.eth\r\n// Discord: 0xInuarashi#1234 | Twitter: https://twitter.com/0xInuarashi\r\n// For use with Martian Market, and any other open interfaces built by anyone.\r\n\r\ncontract onChainSolanaDirectory {\r\n\r\n    // On Chain Solana Directory\r\n    mapping(address => string) public addressToSolana;\r\n    function setSolanaIdentity(string calldata solana_) external {\r\n        addressToSolana[msg.sender] = solana_;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToSolana\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"solana_\",\"type\":\"string\"}],\"name\":\"setSolanaIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "onChainSolanaDirectory", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7a3b364bae7aa0e857764c5a41135bf05620d4ede6542a0359675fa4c98c33f8"}]}