{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// Directory Reader for Martian Market using On-Chain Directory by 0xInuarashi.eth\r\n// Discord: 0xInuarashi#1234 | Twitter: https://twitter.com/0xInuarashi\r\n// For use with Martian Market, and any other open interfaces built by anyone.\r\n\r\ninterface iOnChainDirectory {\r\n    function addressToDiscord(address wallet_) external view returns (string memory);\r\n    function addressToTwitter(address wallet_) external view returns (string memory);\r\n}\r\n\r\ninterface iMartianMarketWL {\r\n    function getWLPurchasersOf(address contract_, uint256 index_) external view \r\n    returns (address[] memory);\r\n}\r\n\r\nabstract contract Ownable {\r\n    address public owner; \r\n    constructor() { owner = msg.sender; }\r\n    modifier onlyOwner { require(owner == msg.sender, \"Not Owner!\"); _; }\r\n    function transferOwnership(address new_) external onlyOwner { owner = new_; }\r\n}\r\n\r\ncontract MartianMarketDirectory is Ownable {\r\n\r\n    iOnChainDirectory public OCD = \r\n        iOnChainDirectory(0xaD48C81ac9CdcD4fE3e25B8493b2798eA5104e6f);\r\n    iMartianMarketWL public MM = \r\n        iMartianMarketWL(0x8F239Cbf8fCeb87a20A4D1933f2f048fCA2Eb6Df);\r\n\r\n    function setOCD(address ocd_) external onlyOwner {\r\n        OCD = iOnChainDirectory(ocd_);\r\n    }\r\n    function setMM(address mm_) external onlyOwner {\r\n        MM = iMartianMarketWL(mm_);\r\n    }\r\n\r\n    function _getAddressToDiscord(address wallet_) internal view returns (string memory) {\r\n        string memory _discord = OCD.addressToDiscord(wallet_);\r\n        return bytes(_discord).length > 0 ? OCD.addressToDiscord(wallet_) : \"Unknown\";\r\n    }  \r\n    function _getAddressToTwitter(address wallet_) internal view returns (string memory) {\r\n        string memory _twitter = OCD.addressToTwitter(wallet_);\r\n        return bytes(_twitter).length > 0 ? OCD.addressToTwitter(wallet_) : \"Unknown\";\r\n    }\r\n\r\n    function getDiscordWLPurchasersOf(address contract_, uint256 index_) external view\r\n    returns (string[] memory) {\r\n        address[] memory _purchasers = MM.getWLPurchasersOf(contract_, index_);\r\n        uint256 _length = _purchasers.length;\r\n\r\n        string[] memory _discordPurchasers = new string[] (_length);\r\n        uint256 _index;\r\n\r\n        for (uint256 i = 0; i < _length; i++) {\r\n            _discordPurchasers[_index++] = _getAddressToDiscord(_purchasers[i]);\r\n        }\r\n\r\n        return _discordPurchasers;\r\n    }\r\n    function getTwitterWLPurchasersOf(address contract_, uint256 index_) external view\r\n    returns (string[] memory) {\r\n        address[] memory _purchasers = MM.getWLPurchasersOf(contract_, index_);\r\n        uint256 _length = _purchasers.length;\r\n\r\n        string[] memory _twitterPurchasers = new string[] (_length);\r\n        uint256 _index;\r\n\r\n        for (uint256 i = 0; i < _length; i++) {\r\n            _twitterPurchasers[_index++] = _getAddressToTwitter(_purchasers[i]);\r\n        }\r\n\r\n        return _twitterPurchasers;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"MM\",\"outputs\":[{\"internalType\":\"contract iMartianMarketWL\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OCD\",\"outputs\":[{\"internalType\":\"contract iOnChainDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"getDiscordWLPurchasersOf\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"getTwitterWLPurchasersOf\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mm_\",\"type\":\"address\"}],\"name\":\"setMM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ocd_\",\"type\":\"address\"}],\"name\":\"setOCD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MartianMarketDirectory", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://803a0a57ee1ac4b09554f7c799a954204046296797bc110b760ad2188112ab05"}]}