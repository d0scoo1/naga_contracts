{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/ArcUpdateProposalPayload.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity 0.8.10;\\n\\nimport { IArcTimelock } from  \\\"./interfaces/IArcTimelock.sol\\\";\\nimport { IEcosystemReserveController } from \\\"./interfaces/IEcosystemReserveController.sol\\\";\\nimport { ILendingPoolConfigurator } from \\\"./interfaces/ILendingPoolConfigurator.sol\\\";\\n\\n/// @title ArcUpdateProposalPayload\\n/// @author Governance House\\n/// @notice Aave ARC parameter update proposal\\ncontract ArcUpdateProposalPayload {\\n\\n    /// @notice AAVE ARC LendingPoolConfigurator\\n    ILendingPoolConfigurator constant configurator = ILendingPoolConfigurator(0x4e1c7865e7BE78A7748724Fa0409e88dc14E67aA);\\n\\n    /// @notice AAVE ARC timelock\\n    IArcTimelock constant arcTimelock = IArcTimelock(0xAce1d11d836cb3F51Ef658FD4D353fFb3c301218);\\n\\n    /// @notice AAVE Ecosystem Reserve Controller\\n    IEcosystemReserveController constant reserveController = IEcosystemReserveController(0x3d569673dAa0575c936c7c67c4E6AedA69CC630C);\\n\\n    /// @notice AAVE Ecosystem Reserve\\n    address constant reserve = 0x25F2226B597E8F9514B3F68F00f494cF4f286491;\\n\\n    /// @notice Governance House Multisig\\n    address constant govHouse = 0x82cD339Fa7d6f22242B31d5f7ea37c1B721dB9C3;\\n\\n    /// @notice usdc token\\n    address constant usdc = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\\n\\n    /// @notice weth token\\n    address constant weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n\\n    /// @notice wbtc token\\n    address constant wbtc = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;\\n\\n    /// @notice aave token\\n    address constant aave = 0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9;\\n\\n    /// @notice address of current contract\\n    address immutable self;\\n\\n    constructor() {\\n        self = address(this);\\n    }\\n    \\n    /// @notice The AAVE governance contract calls this to queue up an\\n    /// @notice action to the AAVE ARC timelock\\n    function executeQueueTimelock() external {\\n        address[] memory targets = new address[](1);\\n        uint256[] memory values = new uint256[](1);\\n        string[] memory signatures = new string[](1);\\n        bytes[] memory calldatas = new bytes[](1);\\n        bool[] memory withDelegatecalls = new bool[](1);\\n\\n        targets[0] = self;\\n        signatures[0] = \\\"execute()\\\";\\n        withDelegatecalls[0] = true;\\n\\n        arcTimelock.queue(targets, values, signatures, calldatas, withDelegatecalls);\\n\\n        // reimburse gas costs from ecosystem reserve\\n        reserveController.transfer(reserve, aave, govHouse, 15 ether);\\n    }\\n\\n    /// @notice The AAVE ARC timelock delegateCalls this\\n    function execute() external {\\n        // address, ltv, liqthresh, bonus\\n        configurator.configureReserveAsCollateral(usdc, 8550, 8800, 10450);\\n        configurator.configureReserveAsCollateral(weth, 8250, 8500, 10500);\\n        configurator.configureReserveAsCollateral(wbtc, 7000, 7500, 10650);\\n        configurator.configureReserveAsCollateral(aave, 6250, 7000, 10750);\\n    }\\n}\\n\"\r\n    },\r\n    \"src/interfaces/IArcTimelock.sol\": {\r\n      \"content\": \"pragma solidity 0.8.10;\\n\\ninterface IArcTimelock {\\n    function queue(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        bool[] memory withDelegatecalls\\n    ) external;\\n\\n    function getActionsSetCount() external returns (uint256);\\n    \\n    function execute(uint256) external payable;\\n}\\n\"\r\n    },\r\n    \"src/interfaces/IEcosystemReserveController.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.4.22 <0.9.0;\\n\\ninterface IEcosystemReserveController {\\n    function transfer(address collector, address token, address guy, uint256 wad) external;\\n}\\n\"\r\n    },\r\n    \"src/interfaces/ILendingPoolConfigurator.sol\": {\r\n      \"content\": \"pragma solidity 0.8.10;\\npragma experimental ABIEncoderV2;\\n\\ninterface ILendingPoolConfigurator {\\n\\n    function configureReserveAsCollateral(\\n        address asset,\\n        uint256 ltv,\\n        uint256 liquidationThreshold,\\n        uint256 liquidationBonus\\n    ) external;\\n\\n    function setReserveFactor(address asset, uint256 reserveFactor) external;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"src/=src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\"\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeQueueTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ArcUpdateProposalPayload", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}