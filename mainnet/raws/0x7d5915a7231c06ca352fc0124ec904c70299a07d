{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ninterface IAirdrop {\r\n    function transfer(address recipient, uint256 amount) external;\r\n    function claim() external;\r\n}\r\n\r\ncontract multiCall {\r\n    function call(uint256 times) public {\r\n        for(uint i=0;i<times;++i){\r\n            new claimer();\r\n        }\r\n    }\r\n}\r\ncontract claimer{\r\n    constructor(){\r\n        IAirdrop airdrop = IAirdrop(0x1c7E83f8C581a967940DBfa7984744646AE46b29);\r\n        airdrop.claim();\r\n        airdrop.transfer(address(tx.origin), 151200000000000000000000000);\r\n        selfdestruct(payable(address(msg.sender)));\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"times\",\"type\":\"uint256\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "multiCall", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://03db28fd17c6431382492846595910863a123ce0134bf25c7e4db0b3a5433baa"}]}