{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\n\r\n\r\ncontract ERC20Basic {\r\n\r\n  function totalSupply() public view returns (uint256);  // totalSupply - \u603b\u53d1\u884c\u91cf\r\n\r\n  function balanceOf(address who) public view returns (uint256);  // \u4f59\u989d\r\n\r\n  function transfer(address to, uint256 value) public returns (bool);  // \u4ea4\u6613\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);  // \u4ea4\u6613\u4e8b\u4ef6\r\n\r\n}\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n    if (a == 0) {\r\n\r\n      return 0;\r\n\r\n    }\r\n\r\n    uint256 c = a * b;\r\n\r\n    assert(c / a == b);\r\n\r\n    return c;\r\n\r\n  }\r\n\r\n  /**\r\n\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n\r\n  */\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\r\n    uint256 c = a / b;\r\n\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n\r\n  }\r\n\r\n \r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n    assert(b <= a);\r\n\r\n    return a - b;\r\n\r\n  }\r\n\r\n \r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n    uint256 c = a + b;\r\n\r\n    assert(c >= a);\r\n\r\n    return c;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\r\n  function allowance(address owner, address spender) public view returns (uint256);  // \u83b7\u53d6\u88ab\u6388\u6743\u4ee4\u724c\u4f59\u989d,\u83b7\u53d6 _owner \u5730\u5740\u6388\u6743\u7ed9 _spender \u5730\u5740\u53ef\u4ee5\u8f6c\u79fb\u7684\u4ee4\u724c\u7684\u4f59\u989d\r\n\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);  // A\u8d26\u6237-\u300bB\u8d26\u6237\u7684\u8f6c\u8d26\r\n\r\n  function approve(address spender, uint256 value) public returns (bool);  // \u6388\u6743\uff0c\u5141\u8bb8 _spender \u5730\u5740\u4ece\u4f60\u7684\u8d26\u6237\u4e2d\u8f6c\u79fb _value \u4e2a\u4ee4\u724c\u5230\u4efb\u4f55\u5730\u65b9\r\n\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);  // \u6388\u6743\u4e8b\u4ef6\r\n\r\n}\r\n\r\n/**\r\n\r\n* @title Basic token\r\n\r\n* @dev Basic version of StandardToken, with no allowances.\r\n\r\n*/\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances; \r\n\r\n  uint256 totalSupply_;  \r\n\r\n\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n\r\n    return totalSupply_;\r\n\r\n  }\r\n\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n\r\n    require(_to != address(0));  // \u65e0\u6548\u5730\u5740\r\n\r\n    require(_value <= balances[msg.sender]);  // \u8f6c\u8d26\u8d26\u6237\u4f59\u989d\u5927\u4e8e\u8f6c\u8d26\u6570\u76ee\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);  // \u8f6c\u8d26\u8d26\u6237\u4f59\u989d=\u8d26\u6237\u4f59\u989d-\u8f6c\u8d26\u91d1\u989d\r\n\r\n    balances[_to] = balances[_to].add(_value); // \u63a5\u6536\u8d26\u6237\u7684\u4f59\u989d=\u539f\u5148\u8d26\u6237\u4f59\u989d+\u8d26\u91d1\u989d\r\n\r\n    emit Transfer(msg.sender, _to, _value);  // \u8f6c\u8d26\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n\r\n    return balances[_owner];  // \u67e5\u8be2\u5408\u7ea6\u8c03\u7528\u8005\u7684\u4f59\u989d\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\r\n    require(_to != address(0)); // \u5230\u8fbeB\u8d26\u6237\u7684\u5730\u5740\u4e0d\u80fd\u4e3a\u65e0\u6548\u5730\u5740\r\n\r\n    require(_value <= balances[_from]);  // \u8f6c\u8d26\u8d26\u6237\u4f59\u989d\u5927\u4e8e\u8f6c\u8d26\u91d1\u989d\r\n\r\n    require(_value <= allowed[_from][msg.sender]);  // \u5141\u8bb8_from\u5730\u5740\u8f6c\u8d26\u7ed9 _to\u5730\u5740\r\n\r\n    balances[_from] = balances[_from].sub(_value); \r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);  // \u5141\u8bb8\u8f6c\u8d26\u7684\u4f59\u989d\r\n\r\n    emit Transfer(_from, _to, _value);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n\r\n    emit Approval(msg.sender, _spender, _value);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n\r\n    return allowed[_owner][_spender];\r\n\r\n  }\r\n\r\n  \r\n\r\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n \r\n\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n\r\n    uint oldValue = allowed[msg.sender][_spender];\r\n\r\n    if (_subtractedValue > oldValue) {\r\n\r\n      allowed[msg.sender][_spender] = 0;\r\n\r\n    } else {\r\n\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n\r\n    }\r\n\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ncontract EchoToken is StandardToken {\r\n\r\n    string public constant name = \"EchoToken\";\r\n\r\n    string public constant symbol = \"Echo\";\r\n\r\n    uint8 public constant decimals = 18;\r\n\r\n    uint256 public constant INITIAL_SUPPLY = (10 ** 9) * (10 ** uint256(decimals));\r\n\r\n    /**\r\n\r\n    * @dev Constructor that gives msg.sender all of existing tokens.\r\n\r\n    */\r\n\r\n    constructor() public {\r\n\r\n        totalSupply_ = INITIAL_SUPPLY;\r\n\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n\r\n        emit Transfer(0x0, msg.sender, INITIAL_SUPPLY);\r\n\r\n    }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "EchoToken", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://51f3786d8c1f347e61baa6b53537f5d83748a3b27d0df628f509a621c25b34f0"}]}