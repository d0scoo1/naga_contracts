{"status": "1", "message": "OK", "result": [{"SourceCode": "// File contracts/SwapAndPay.sol\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IRouter {\r\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        returns (uint[] memory amounts);\r\n}\r\n/// @title Swap And Pay contract\r\n/// @author 0xMarty\r\n/// @notice Swaps from ERC20 to ETH and pays specified address\r\ncontract SwapAndPay {\r\n\r\n    ///STATE VARIABLES///\r\n\r\n    /// @notice amount of eth payed\r\n    uint public ethPayed;\r\n\r\n    /// @notice payer of contract\r\n    address immutable public owner;\r\n\r\n    /// @notice addresses amount of WETH\r\n    address immutable public WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\r\n    /// @notice Amount of eth address has recieved\r\n    mapping(address => uint) public addressToPaid;\r\n\r\n    /// @notice amount of tokens swapped\r\n    mapping(address => uint) public tokensSwaped;\r\n\r\n    /// CONSTRUCTOR ///\r\n    \r\n    /// @param _owner  Address that pays eth\r\n    constructor (address _owner) {\r\n        owner = _owner;\r\n    }\r\n\r\n    /// OWNER FUNCTION ///\r\n\r\n    /// @notice         Owner pays specific address\r\n    /// @param _payee   Address of who is being paid\r\n    /// @param _router  Address of the router\r\n    /// @param _token   Address of the token being used\r\n    /// @param _amount  Amount of  being transfered\r\n    /// @param _minETH  Min amount of ETH \r\n    function swapAndPay(\r\n        address payable _payee,\r\n        address _router,\r\n        address _token,\r\n        uint _amount,\r\n        uint _minETH\r\n    ) external {\r\n        require(msg.sender == owner, \"not owner\");\r\n\r\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = _token;\r\n        path[1] = WETH;\r\n\r\n        IERC20(_token).approve(_router, _amount);\r\n\r\n        IRouter(_router).swapExactTokensForETH(_amount, _minETH, path, address(this), block.timestamp + 10);\r\n        \r\n        ethPayed += address(this).balance;\r\n        addressToPaid[_payee] += address(this).balance;\r\n        tokensSwaped[_token] += _amount;\r\n\r\n        _payee.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethPayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minETH\",\"type\":\"uint256\"}],\"name\":\"swapAndPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensSwaped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SwapAndPay", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000b1b0ed79f4422553694e7fb16d5e7dcd6a2f3587", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://42ef50ac8d2a24ce6fb21e6de98faaac4b357ead5f563cc3819e003f0163c425"}]}