{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ncontract Authority {\r\n    event Rely(address indexed usr);\r\n    event Deny(address indexed usr);\r\n    event Allow(bytes4 indexed usr);\r\n    event Forbid(bytes4 indexed usr);\r\n    event SetRoot(address indexed newRoot);\r\n\r\n    address public root;\r\n    mapping (address => uint) public wards;\r\n    mapping (bytes4 => uint)  public sigs;\r\n\r\n    modifier sudo { require(msg.sender == root); _; }\r\n    function setRoot(address usr) public sudo { root = usr; emit SetRoot(usr); }\r\n    function rely(address usr)    public sudo { wards[usr] = 1; emit Rely(usr); }\r\n    function deny(address usr)    public sudo { wards[usr] = 0; emit Deny(usr); }\r\n    function allow(bytes4 sig)    public sudo { sigs[sig] = 1; emit Allow(sig); }\r\n    function forbid(bytes4 sig)   public sudo { sigs[sig] = 0; emit Forbid(sig); }\r\n\r\n    constructor(address[] _wards, bytes4[] _sigs) public {\r\n        root = msg.sender;\r\n        emit SetRoot(root);\r\n        for (uint i = 0; i < _wards.length; i++) { rely(_wards[i]); }\r\n        for (uint j = 0; j < _sigs.length; j++) { allow(_sigs[j]); }\r\n    }\r\n\r\n    function canCall(\r\n        address _src, address, bytes4 _sig\r\n    ) public view returns (bool) {\r\n        return wards[_src] == 1 && sigs[_sig] == 1;\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"setRoot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"allow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_src\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"_sig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"sigs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"forbid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wards\",\"type\":\"address[]\"},{\"name\":\"_sigs\",\"type\":\"bytes4[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"usr\",\"type\":\"bytes4\"}],\"name\":\"Allow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"usr\",\"type\":\"bytes4\"}],\"name\":\"Forbid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newRoot\",\"type\":\"address\"}],\"name\":\"SetRoot\",\"type\":\"event\"}]", "ContractName": "Authority", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f5e775bbdca4388269676ebe4166b1462352a02b00000000000000000000000000000000000000000000000000000000000000011eec4c2800000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://d48261245f453e58055360a133730ffddcf22b850144764620163cbdcc8a4372"}]}