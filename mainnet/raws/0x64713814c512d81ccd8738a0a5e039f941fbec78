{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.8.11;\r\n\r\ninterface AggregatorV3Interface {\r\n  //\r\n  // V3 Interface:\r\n  //\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  // latestRoundData should both raise \"No data present\"\r\n  // if they do not have data to report, instead of returning unset values\r\n  // which could be misinterpreted as actual reported values.\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n}\r\n\r\ncontract ChainlinkPriceFetcher {\r\n  function getChainlinkPrice(AggregatorV3Interface chainlinkFeed) external view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound,\r\n      uint256 blockTimestamp\r\n    )\r\n  {\r\n    (roundId, answer, startedAt, updatedAt, answeredInRound) = chainlinkFeed.latestRoundData();\r\n    blockTimestamp = block.timestamp;\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"chainlinkFeed\",\"type\":\"address\"}],\"name\":\"getChainlinkPrice\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ChainlinkPriceFetcher", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "3000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d6b99e9fc5f8aea3fbf3ae17bbe0e7d1d3fa98914f2c42f001c71aee595dc072"}]}