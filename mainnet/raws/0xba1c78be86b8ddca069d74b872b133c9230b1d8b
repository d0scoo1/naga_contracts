{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.8;\r\n\r\nlibrary BobbySafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a==0) {\r\n            return 0;\r\n        }\r\n        uint c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract BobbyERC20Base {\r\n\r\n  //\u53ef\u4ee5\u6267\u884c\u6682\u505c\u64cd\u4f5c\u7684\u6743\u9650\r\n  address public ceoAddress;\r\n\r\n  //\u662f\u5426\u6682\u505c\u667a\u80fd\u5408\u7ea6\u7684\u8fd0\u884c\r\n  bool public paused = false;\r\n\r\n  constructor()  {\r\n    ceoAddress = msg.sender;\r\n  }\r\n\r\n  modifier onlyCEO() {\r\n     require(msg.sender == ceoAddress);\r\n    _;\r\n  }\r\n\r\n function setCEO(address _newCEO) public onlyCEO {\r\n      require(_newCEO != address(0));\r\n      ceoAddress = _newCEO;\r\n  }\r\n\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier whenPaused {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  function pause() external onlyCEO whenNotPaused {\r\n    paused = true;\r\n  }\r\n\r\n  function unpause() public onlyCEO whenPaused {\r\n    paused = false;\r\n  }\r\n}\r\n\r\ncontract ERC20Interface {\r\n\r\n  //ERC20\u6307\u5b9a\u63a5\u53e3\r\n  event Approval(address indexed src, address indexed guy, uint wad);\r\n  event Transfer(address indexed src, address indexed dst, uint wad);\r\n\r\n  function name() public view returns (string name);\r\n  function symbol() public view returns (string symbol);\r\n  function decimals() public view returns (uint8 decimals);\r\n  function totalSupply() public view returns (uint256 totalSupply);\r\n  function balanceOf(address _owner) public view returns (uint256 balance);\r\n  function transfer(address _to, uint256 _value) public returns (bool success);\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n  function approve(address _spender, uint256 _value) public returns (bool success);\r\n  function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n  //\u6269\u5c55\u63a5\u53e3\r\n  function getBalanceAddr(uint256 _index) public view returns(address addr);\r\n  function getBalance(uint256 _index) public view returns(uint256 tokens);\r\n  function getBalanceSize() public view returns(uint256 size);\r\n}\r\n\r\n//Erc\u667a\u80fd\u5408\u7ea6\r\ncontract ERC20 is ERC20Interface, BobbyERC20Base {\r\n\r\n  using BobbySafeMath for uint256;\r\n\r\n  //\u5e38\u91cf\u5b9a\u4e49\r\n  uint private  _Wei = 1;\r\n  uint private  _Kwei = 1000 * _Wei;\r\n  uint private  _Mwei = 1000 * _Kwei;\r\n  uint private  _Gwei = 1000 * _Mwei;\r\n  uint private  _Bobby = 1000 * 1000 * 1000 * _Gwei;\r\n  uint private  _CurrentBob = 165442393 * _Mwei;\r\n\r\n  uint private _Hundred = 100;\r\n  uint private _Thousand = 1000;\r\n  uint private _Billion = _Thousand * _Thousand * _Thousand;\r\n\r\n  //\u4ee3\u5e01\u57fa\u672c\u4fe1\u606f\r\n  string private _name = \"BOBBY\";     //\u4ee3\u5e01\u540d\u79f0\r\n  string private _symbol = \"BOBBY\";   //\u4ee3\u5e01\u6807\u8bc6\r\n  uint8 private _decimals = 9;        //\u5c0f\u6570\u70b9\u540e\u4f4d\u6570\r\n  uint256 private _totalSupply = 10 * _Billion * (10 ** uint256(_decimals));\r\n\r\n  //\u89e3\u5c01\u7528\u6237\u4ee3\u5e01\u7ed3\u6784\r\n  struct userToken {\r\n    uint _index;             //\u653e\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\r\n    address _addr;          //\u7528\u6237\u8d26\u53f7\r\n    uint256 _tokens;        //\u901a\u8bc1\u6570\u91cf\r\n  }\r\n  mapping(address=>userToken) private _balancesMap;           //\u7528\u6237\u53ef\u7528\u4ee3\u5e01\u6620\u5c04\r\n  address[] _balancesArray;                                   //\u7528\u6237\u7981\u5c01\u4ee3\u5e01\u6570\u7ec4,from 1\r\n\r\n  struct logEntry {\r\n    uint time;\r\n    address from;\r\n    address to;\r\n    uint256 value;\r\n  }\r\n  logEntry[] _logs;\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);       //\u4ee3\u5e01\u8f6c\u79fb\u4e8b\u4ef6\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value); //\u914d\u989d\u8bb8\u53ef\u4e8b\u4ef6\r\n\r\n  //\u6784\u9020\u65b9\u6cd5\uff0c\u5c06\u4ee3\u5e01\u7684\u521d\u59cb\u603b\u4f9b\u7ed9\u90fd\u5206\u914d\u7ed9\u5408\u7ea6\u7684\u90e8\u7f72\u8d26\u6237\u3002\u5408\u7ea6\u7684\u6784\u9020\u65b9\u6cd5\u53ea\u5728\u5408\u7ea6\u90e8\u7f72\u65f6\u6267\u884c\u4e00\u6b21\r\n  constructor() {\r\n    _balancesArray.push(address(0));\r\n\r\n    //\u6b64\u5904\u9700\u8981\u6ce8\u610f\uff0c\u8bf7\u4f7f\u7528CEO\u7684\u5730\u5740,\u56e0\u4e3a\u521d\u59cb\u5316\u540e\uff0c\u5c06\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u5730\u5740\u4f5c\u4e3aCEO\u5730\u5740\r\n    //\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528memory\u7c7b\u578b\uff0c\u5426\u5219\uff0c\u540e\u9762\u7684\u8d4b\u503c\u4f1a\u5f71\u54cd\u5176\u5b83\u6210\u5458\u53d8\u91cf\r\n    userToken memory userCEO;\r\n    userCEO._index = _balancesArray.length;\r\n    userCEO._addr = msg.sender;\r\n    userCEO._tokens = _totalSupply;\r\n    _balancesArray.push(msg.sender);\r\n    _balancesMap[msg.sender] = userCEO;\r\n  }\r\n\r\n  //\u8fd4\u56de\u5408\u7ea6\u540d\u79f0\u3002view\u5173\u952e\u5b50\u8868\u793a\u51fd\u6570\u53ea\u67e5\u8be2\u72b6\u6001\u53d8\u91cf\uff0c\u800c\u4e0d\u5199\u5165\r\n  function name() public view returns (string name){\r\n    name = _name;\r\n  }\r\n\r\n  //\u8fd4\u56de\u5408\u7ea6\u6807\u8bc6\u7b26\r\n  function symbol() public view returns (string symbol){\r\n    symbol = _symbol;\r\n  }\r\n\r\n  //\u8fd4\u56de\u5408\u7ea6\u5c0f\u6570\u4f4d\r\n  function decimals() public view returns (uint8 decimals){\r\n    decimals = _decimals;\r\n  }\r\n\r\n  //\u8fd4\u56de\u5408\u7ea6\u603b\u4f9b\u7ed9\u989d\r\n  function totalSupply() public view returns (uint256 totalSupply){\r\n    totalSupply = _totalSupply;\r\n  }\r\n\r\n  function getBalanceAddr(uint256 _index) public view returns(address addr){\r\n    require(_index < _balancesArray.length);\r\n    require(_index >= 0);\r\n    addr = _balancesArray[_index];\r\n  }\r\n\r\n  function getBalance(uint256 _index) public view returns(uint256 tokens){\r\n    require(_index < _balancesArray.length);\r\n    require(_index >= 0);\r\n    tokens = _balancesMap[_balancesArray[_index]]._tokens;\r\n  }\r\n\r\n  function getBalanceSize() public view returns(uint256 size){\r\n    size = _balancesArray.length;\r\n  }\r\n\r\n  function log(address from, address to, uint256 value) public {\r\n    logEntry memory entry;\r\n    entry.time = now;\r\n    entry.from = from;\r\n    entry.to = to;\r\n    entry.value = value;\r\n    _logs.push(entry);\r\n  }\r\n\r\n  function getLogSize() public view returns(uint256 size){\r\n    size = _logs.length;\r\n  }\r\n\r\n  function getLog(uint256 _index) public view returns(uint time, address from, address to, uint256 value){\r\n    require(_index < _logs.length);\r\n    require(_index >= 0);\r\n    logEntry entry = _logs[_index];\r\n    time = entry.time;\r\n    from = entry.from;\r\n    to = entry.to;\r\n    value = entry.value;\r\n  }\r\n\r\n  //\u67e5\u8be2\u8d26\u6237_owner\u7684\u8d26\u6237\u4f59\u989d\r\n  function balanceOf(address _owner) public view returns (uint256 balance){\r\n    balance = _balancesMap[_owner]._tokens;\r\n  }\r\n\r\n  function addBalance(address _addr, uint256 _value) private{\r\n    _balancesMap[_addr]._tokens = _balancesMap[_addr]._tokens.add(_value);\r\n  }\r\n\r\n  function subBalance(address _addr, uint256 _value) private{\r\n    _balancesMap[_addr]._tokens = _balancesMap[_addr]._tokens.sub(_value);\r\n  }\r\n\r\n  //\u4ece\u4ee3\u5e01\u5408\u7ea6\u7684\u8c03\u7528\u8005\u5730\u5740\u4e0a\u8f6c\u79fb_value\u7684\u6570\u91cftoken\u5230\u7684\u5730\u5740_to\uff0c\u5e76\u4e14\u5fc5\u987b\u89e6\u53d1Transfer\u4e8b\u4ef6\r\n  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool success){\r\n    require(_balancesMap[msg.sender]._tokens >= _value);\r\n    subBalance(msg.sender, _value);\r\n\r\n    uint index = _balancesMap[_to]._index;\r\n    if(index == 0){\r\n      userToken memory user;\r\n      user._index = _balancesArray.length;\r\n      user._addr = _to;\r\n      user._tokens = _value;\r\n      _balancesMap[_to] = user;\r\n      _balancesArray.push(_to);\r\n    }\r\n    else{\r\n      addBalance(_to, _value);\r\n    }\r\n\r\n    Transfer(msg.sender, _to, _value);\r\n    log(msg.sender, _to, _value);\r\n    success = true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool success){\r\n    success = true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool success){\r\n    success = true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view whenNotPaused returns (uint256 remaining){\r\n    remaining = 0;\r\n  }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLogSize\",\"outputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"log\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getLog\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalanceSize\",\"outputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBalanceAddr\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "ERC20", "CompilerVersion": "v0.4.25-nightly.2018.6.22+commit.9b67bdb3", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0159927482624c449042dc48bac628b10717ac2c2f9dfd31466fc1bea78618fc"}]}