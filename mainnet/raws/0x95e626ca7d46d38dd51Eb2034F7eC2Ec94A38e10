{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/BulkPoop.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.7.0 <0.9.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n  function balanceOf(address account) external view returns (uint256);\\r\\n  function allowance(address owner, address spender) external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IERC721 {\\r\\n  function safeTransferFrom(address from, address to, uint256 tokenId) external;\\r\\n}\\r\\ninterface IERC1155 {\\r\\n  function safeTransferFrom( address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\r\\n}\\r\\n\\r\\ncontract BulkPoop {\\r\\n\\r\\n  function bulkPoopERC20(IERC20 _token, address[] calldata _to, uint256[] calldata _value) public {\\r\\n    require(_to.length == _value.length, \\\"Receivers and amounts are different length\\\");\\r\\n    for (uint256 i = 0; i < _to.length; i++) {\\r\\n      require(_token.transferFrom(msg.sender, _to[i], _value[i]));\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function bulkPoopERC721(IERC721 _token, address[] calldata _to, uint256[] calldata _id) public {\\r\\n    require(_to.length == _id.length, \\\"Receivers and IDs are different length\\\");\\r\\n    for (uint256 i = 0; i < _to.length; i++) {\\r\\n      _token.safeTransferFrom(msg.sender, _to[i], _id[i]);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function bulkPoopERC1155(IERC1155 _token, address[] calldata _to, uint256[] calldata _id, uint256[] calldata _amount) public {\\r\\n    require(_to.length == _id.length, \\\"Receivers and IDs are different length\\\");\\r\\n    for (uint256 i = 0; i < _to.length; i++) {\\r\\n      _token.safeTransferFrom(msg.sender, _to[i], _id[i], _amount[i], \\\"\\\");\\r\\n    }\\r\\n  }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_id\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"bulkPoopERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"bulkPoopERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_id\",\"type\":\"uint256[]\"}],\"name\":\"bulkPoopERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BulkPoop", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}