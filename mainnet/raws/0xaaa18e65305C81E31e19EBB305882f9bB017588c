{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/ERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IERC20Metadata.sol\\\";\\n\\ncontract ERC20 is IERC20, IERC20Metadata{\\n    // Token received for 1 Eth payment\\n    uint256 public tokenPerEth;\\n\\n    address payable public manager;\\n    // EIP-20 Standard\\n    string public symbol;\\n    // EIP-20 Standard\\n    uint8 public decimals;\\n    // EIP-20 Standard\\n    string public name;\\n    // EIP-20 Standard\\n    uint256 public totalSupply;\\n    // EIP-20 Standard\\n    mapping(address => uint256) public balanceOf;\\n    // EIP-20 Standard\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _tokenPerEth) public {\\n        manager = address(uint160(msg.sender));\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        tokenPerEth = _tokenPerEth;\\n    }\\n\\n    modifier managerOnly() {\\n        require(msg.sender == manager, \\\"ERC20: Contract manager restricted call\\\");\\n        _;\\n    }\\n\\n    function setTokenPerEth(uint256 _tokenPerEth) public managerOnly returns (bool){\\n        require(_tokenPerEth < tokenPerEth, \\\"ERC20: Cannot set token per eth greater than or equal to the current token per eth\\\");\\n        tokenPerEth = _tokenPerEth;\\n        return true;\\n    }\\n\\n    // EIP-20 Standard\\n    function transfer(address _to, uint256 _value)\\n        public\\n        returns (bool success)\\n    {\\n        require(balanceOf[msg.sender] >= _value, \\\"ERC20: Cannot transfer as balance is low\\\");\\n        require(_to != address(0), \\\"ERC20: Cannot transfer to zero address\\\");\\n\\n        balanceOf[msg.sender] -= _value;\\n        balanceOf[_to] += _value;\\n        emit Transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n\\n    // EIP-20 Standard\\n    function approve(address _spender, uint256 _value)\\n        public\\n        returns (bool success)\\n    {\\n        require(_spender != address(0), \\\"ERC20: Cannot approve a zero address\\\");\\n        allowance[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n\\n    // EIP-20 Standard\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) public returns (bool success) {\\n        require(_to != address(0), \\\"ERC20: Cannot transfer to a zero address\\\");\\n        require(allowance[_from][msg.sender] >= _value, \\\"ERC20: Cannot transfer as allowance is low\\\");\\n        require(balanceOf[_from] >= _value, \\\"ERC20: Cannot transfer as balance is low\\\");\\n        allowance[_from][msg.sender] -= _value;\\n        balanceOf[_from] -= _value;\\n        balanceOf[_to] += _value;\\n        emit Transfer(_from, _to, _value);\\n        return true;\\n    }\\n\\n    function mint(address _to)\\n        public\\n        payable\\n        returns (bool success)\\n    {\\n        require(_to != address(0), \\\"ERC20: Cannot transfer to a zero address\\\");\\n        uint256 _value = msg.value * tokenPerEth;\\n        totalSupply += _value;\\n        balanceOf[_to] += _value;\\n        manager.transfer(msg.value);\\n        emit Transfer(address(0), _to, _value);\\n        return true;\\n    }\\n\\n    function burn(uint256 _value) public returns (bool success) {\\n        require(balanceOf[msg.sender] >= _value, \\\"ERC20: Cannot burn as balance is low\\\");\\n        require(msg.sender != address(0), \\\"ERC20: Cannot burn from zero address\\\");\\n        balanceOf[msg.sender] -= _value;\\n        totalSupply -= _value;\\n        emit Transfer(msg.sender, address(0), _value);\\n        return true;\\n    }\\n}\\n\"\r\n    },\r\n    \"/contracts/interfaces/IERC20Metadata.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Metadata {\\n    function name() external view returns(string memory);\\n    function symbol() external view returns(string memory);\\n    function decimals() external view returns(uint8);\\n}\"\r\n    },\r\n    \"/contracts/interfaces/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns(uint256 balance);\\n    function transfer(address recipient, uint256 amount) external returns(bool success);\\n    function transferFrom(address owner, address recipient, uint256 amount) external returns(bool success);\\n    function allowance(address owner, address spender) external view returns(uint256 remaining);\\n    function approve(address spender, uint256 amount) external returns(bool success);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPerEth\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenPerEth\",\"type\":\"uint256\"}],\"name\":\"setTokenPerEth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20", "CompilerVersion": "v0.5.16+commit.9c3226ce", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000d546f6f425a2d5346546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000754425a2d53465400000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}