{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.10;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\t\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner call this function\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Pausable is Ownable {\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n  \r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused, \"Contract is paused right now\");\r\n\t\t_;\r\n\t}\r\n  \r\n\tmodifier whenPaused() {\r\n\t\trequire(paused, \"Contract is not paused right now\");\r\n\t\t_;\r\n\t}\r\n  \r\n\tfunction pause() onlyOwner whenNotPaused public {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\t\r\n\tfunction unpause() onlyOwner whenPaused public {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\t\r\n\tevent AddToWhiteList(address _address);\r\n    event RemovedFromWhiteList(address _address);\r\n\tevent OwnershipTransfer(address _address);\r\n}\r\n\r\ncontract KOKU is IERC20, Pausable {\r\n   string public constant name = \"KOKU\";\r\n   string public constant symbol = \"KOKU\";\r\n   uint256 public constant decimals = 18;\r\n   uint256 public constant supply = 1000000000 * (10**18);\r\n  \r\n   mapping (address => uint256) balances;\r\n   mapping (address => mapping (address => uint256)) allowed;\r\n   mapping (address => bool) public isWhiteListed;\r\n   \r\n   constructor(address _owner){\r\n\t   owner = _owner;\r\n\t   balances[owner] = supply;\r\n       emit Transfer(address(0), owner, supply);\r\n   }\r\n\r\n   function totalSupply() public override pure returns (uint256) {\r\n       return supply;\r\n   }\r\n   \r\n   function balanceOf(address tokenOwner) public override view returns (uint256) {\r\n        return balances[tokenOwner];\r\n   }\r\n   \r\n   function transfer(address receiver, uint256 numTokens) public override returns (bool) {\r\n\t\trequire(\r\n\t\t    receiver != address(0), \r\n\t\t\t\"transfer to the zero-address\"\r\n\t\t);\r\n        require(\r\n\t\t\tnumTokens <= balances[msg.sender], \r\n\t\t\t\"transfer amount exceeds balance\"\r\n\t\t);\r\n\t\tif(paused)\r\n\t\t{\r\n\t\t   require(\r\n\t\t\t  isWhiteListed[msg.sender], \r\n\t\t\t  \"sender not whitelist to transfer\"\r\n\t\t   );\r\n\t\t}\r\n\t\tbalances[msg.sender] = balances[msg.sender] - numTokens;\r\n\t\tbalances[receiver] = balances[receiver] + numTokens;\r\n\t\temit Transfer(msg.sender, receiver, numTokens);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction transferFrom(address sender, address receiver, uint256 numTokens) public override returns (bool) {\r\n\t\trequire(\r\n\t\t    receiver != address(0), \r\n\t\t\t\"transfer to the zero-address\"\r\n\t\t);\r\n\t\trequire(\r\n\t\t\tnumTokens <= balances[sender],\r\n\t\t\t\"transfer amount exceeds balance\"\r\n\t\t);\r\n        require(\r\n\t\t\tnumTokens <= allowed[sender][msg.sender],\r\n\t\t\t\"transfer amount exceeds allowed amount\"\r\n\t\t);\r\n\t\tif(paused)\r\n\t\t{\r\n\t\t   require(\r\n\t\t\t  isWhiteListed[sender], \r\n\t\t\t  \"sender not whitelist to transfer\"\r\n\t\t   );\r\n\t\t}\r\n        \r\n\t\tbalances[sender] = balances[sender] - numTokens;\r\n        allowed[sender][msg.sender] = allowed[sender][msg.sender] - numTokens;\r\n\t\tbalances[receiver] = balances[receiver] + numTokens;\r\n\t\t\r\n\t\temit Transfer(sender, receiver, numTokens);\r\n\t\treturn true;\r\n    }\r\n\r\n    function approve(address spender, uint256 numTokens) public override returns (bool) {\r\n\t    require(\r\n\t\t    spender != address(0), \r\n\t\t\t\"spender is the zero address\"\r\n\t\t);\r\n        allowed[msg.sender][spender] = numTokens;\r\n        emit Approval(msg.sender, spender, numTokens);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public override view returns (uint) {\r\n        return allowed[owner][spender];\r\n    }\r\n\t\r\n\tfunction getWhiteListStatus(address _address) external view returns (bool) {\r\n        return isWhiteListed[_address];\r\n\t}\r\n\t\r\n\tfunction whiteListAddress(address _address) external onlyOwner{\r\n\t   isWhiteListed[_address] = true;\r\n\t   emit AddToWhiteList(_address);\r\n    }\r\n\t\r\n\tfunction removeWhiteListAddress (address _address) external onlyOwner{\r\n\t   isWhiteListed[_address] = false;\r\n\t   emit RemovedFromWhiteList(_address);\r\n\t}\r\n\t\r\n\tfunction transferTokens(address tokenAddress, address to, uint256 amount) external onlyOwner {\r\n        IERC20(tokenAddress).transfer(to, amount);\r\n    }\r\n\t\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner can't be zero-address\");\r\n        owner = newOwner;\r\n\t\temit OwnershipTransfer(newOwner);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AddToWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"RemovedFromWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getWhiteListStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeWhiteListAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"whiteListAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "KOKU", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000daf6a6ac1b3ba5252570b99ab16d05a9a768139d", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7386bfadbf8b9aac572179ec1681a2a52f076d913754f59a961784bbc463a71b"}]}