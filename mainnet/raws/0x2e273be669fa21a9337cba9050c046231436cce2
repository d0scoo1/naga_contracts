{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC721 {\r\n    function balanceOf(address address_) external view returns (uint256);\r\n    function ownerOf(uint256 tokenId_) external view returns (address);\r\n}\r\n\r\ncontract globalWalletOfOwner {\r\n    function walletOfOwner(address contractAddress_, address wallet_, uint256 start_) \r\n    external view returns (uint256[] memory) {\r\n        uint256[] memory _balance = new uint256[] (\r\n            IERC721(contractAddress_).balanceOf(wallet_));\r\n        uint256 _index;\r\n        uint256 _iterateId = start_;\r\n        bool _isOwnerOfZeroAtLastIndex;\r\n\r\n        if (_balance.length > 0) {\r\n            while (_balance[_balance.length - 1] == 0 \r\n                && !_isOwnerOfZeroAtLastIndex \r\n                && _iterateId < 65536 // A limit of iterations to prevent out of gas error\r\n                ){\r\n                if (wallet_ == IERC721(contractAddress_).ownerOf(_iterateId)) {\r\n                    \r\n                    // Check if 0 is owned and at last index\r\n                    if (_iterateId == 0 && _index == _balance.length - 1) {\r\n                        _isOwnerOfZeroAtLastIndex = true;\r\n                    }\r\n\r\n                    _balance[_index] = _iterateId;\r\n                    _index++;\r\n                }\r\n                _iterateId++;\r\n            }\r\n        }\r\n        return _balance;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wallet_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_\",\"type\":\"uint256\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "globalWalletOfOwner", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://740fddc114efc0b4c81debd874a148848ac3a9ad98d3bea112bed920c4d5f409"}]}