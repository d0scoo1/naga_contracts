{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.6.6;\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address owner) external view returns (uint);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n\r\n    function transfer(address to, uint value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\ncontract BatchTransfer{\r\n    function batchTransferEth(address payable[] memory to,uint256[] memory values) payable public{//\u6dfb\u52a0payable,\u652f\u6301\u5728\u8c03\u7528\u65b9\u6cd5\u7684\u65f6\u5019\uff0cvalue\u5f80\u5408\u7ea6\u91cc\u9762\u4f20eth\uff0c\u6ce8\u610f\u8be5value\u6700\u7ec8\u5e73\u5206\u53d1\u7ed9\u6240\u6709\u8d26\u6237\r\n        //require(to.length == values.length);\r\n        uint256 remainValue = msg.value;\r\n        for(uint32 i=0;i<to.length;i++){\r\n            require(remainValue >= values[i]);\r\n            remainValue -= values[i];\r\n            to[i].transfer(values[i]);\r\n        }\r\n        if(remainValue>0){\r\n            msg.sender.transfer(remainValue);\r\n        }\r\n    }\r\n    // function batchTransferErc20V0(address erc20Address,address payable[] memory to,uint256[] memory values) public{\r\n    //\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u597d\uff0c\u56e0\u4e3atransferFrom\u64cd\u4f5c\u6bd4\u8f83\u6d88\u8017GAS,\u6240\u4ee5\u5e94\u8be5\u5148\u628atoken\u5212\u8f6c\u5230\u5408\u7ea6\uff0c\u518d\u8f6c\u8d26\u51fa\u53bb\uff0c\u6279\u91cf\u8f6c\u8d263\u6b21\u5185\u672c\u65b9\u6cd5\u8f83\u9ad8\uff0c3\u6b21\u4ee5\u4e0a\u5148\u5212\u8f6c\u7684\u65b9\u6cd5\u6548\u7387\u9ad8\r\n    //     //require(to.length == values.length);\r\n    //     IERC20 erc20Token = IERC20(erc20Address);\r\n    //     for(uint32 i=0;i<to.length;i++){\r\n    //         erc20Token.transferFrom(msg.sender,to[i],values[i]);\r\n    //     }\r\n    // }\r\n    function batchTransferErc20(address erc20Address,address payable[] memory to,uint256[] memory values) public{\r\n        //require(to.length == values.length);\r\n        uint256 totalValue = 0;\r\n        for(uint32 i=0;i<to.length;i++){\r\n            totalValue += values[i];\r\n        }\r\n        \r\n        IERC20 erc20Token = IERC20(erc20Address);\r\n        erc20Token.transferFrom(msg.sender,address(this),totalValue);\r\n        for(uint32 i=0;i<to.length;i++){\r\n            erc20Token.transfer(to[i],values[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "BatchTransfer", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1ead3b051971b9ec9e96b00b848e4318bb92ad075404ef8b24b92a8f3ce76dc9"}]}