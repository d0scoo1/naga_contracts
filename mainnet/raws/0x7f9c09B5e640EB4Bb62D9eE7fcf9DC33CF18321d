{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/NounbitsSeeder.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\n/// @title The NounsToken pseudo-random seed generator\\r\\n\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\nimport { INounsSeeder } from './interfaces/INounsSeeder.sol';\\r\\nimport { INounsDescriptor } from './interfaces/INounsDescriptor.sol';\\r\\n\\r\\ncontract NounbitsSeeder is INounsSeeder {\\r\\n    /**\\r\\n     * @notice Generate a pseudo-random Noun seed using a pseudorandom blockhash and noun ID.\\r\\n     */\\r\\n    // prettier-ignore\\r\\n    function generateSeed(uint256 nounId, INounsDescriptor descriptor, bytes32 pseudorandomHash) external view override returns (Seed memory) {\\r\\n        if (pseudorandomHash == 0) {\\r\\n            return Seed({background: 0, body: 0, accessory: 0, head: 0, glasses: 0, pants: 0, shoes: 0});\\r\\n        }\\r\\n\\r\\n        uint256 pseudorandomness = uint256(\\r\\n            keccak256(abi.encodePacked(pseudorandomHash, nounId))\\r\\n        );\\r\\n\\r\\n        uint256 backgroundCount = descriptor.backgroundCount();\\r\\n        uint256 bodyCount = descriptor.bodyCount();\\r\\n        uint256 accessoryCount = descriptor.accessoryCount();\\r\\n        uint256 headCount = descriptor.headCount();\\r\\n        uint256 glassesCount = descriptor.glassesCount();\\r\\n        uint256 pantsCount = descriptor.pantCount();\\r\\n        uint256 shoesCount = descriptor.shoeCount();\\r\\n\\r\\n        return Seed({\\r\\n            background: uint48(\\r\\n                uint48(pseudorandomness) % backgroundCount\\r\\n            ),\\r\\n            body: uint48(\\r\\n                uint48(pseudorandomness >> 32) % bodyCount\\r\\n            ),\\r\\n            accessory: uint48(\\r\\n                uint48(pseudorandomness >> 64) % accessoryCount\\r\\n            ),\\r\\n            head: uint48(\\r\\n                uint48(pseudorandomness >> 96) % headCount\\r\\n            ),\\r\\n            glasses: uint48(\\r\\n                uint48(pseudorandomness >> 128) % glassesCount\\r\\n            ),\\r\\n            pants: uint48(\\r\\n                uint48(pseudorandomness >> 160) % pantsCount\\r\\n            ),\\r\\n            shoes: uint48(\\r\\n                uint48(pseudorandomness >> 192) % shoesCount\\r\\n            )\\r\\n        });\\r\\n    }\\r\\n}\"\r\n    },\r\n    \"contracts/interfaces/INounsSeeder.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\nimport { INounsDescriptor } from './INounsDescriptor.sol';\\r\\n\\r\\ninterface INounsSeeder {\\r\\n    struct Seed {\\r\\n        uint48 background;\\r\\n        uint48 body;\\r\\n        uint48 accessory;\\r\\n        uint48 head;\\r\\n        uint48 glasses;\\r\\n        uint48 pants;\\r\\n        uint48 shoes;\\r\\n    }\\r\\n\\r\\n    function generateSeed(uint256 nounId, INounsDescriptor descriptor, bytes32 pseudorandomHash) external view returns (Seed memory);\\r\\n}\"\r\n    },\r\n    \"contracts/interfaces/INounsDescriptor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\nimport { INounsSeeder } from './INounsSeeder.sol';\\r\\n\\r\\ninterface INounsDescriptor {\\r\\n    event PartsLocked();\\r\\n\\r\\n    function arePartsLocked() external returns (bool);\\r\\n\\r\\n    function palettes(uint8 paletteIndex, uint256 colorIndex) external view returns (string memory);\\r\\n\\r\\n    function backgrounds(uint256 index) external view returns (string memory);\\r\\n\\r\\n    function bodies(uint256 index) external view returns (bytes memory);\\r\\n\\r\\n    function accessories(uint256 index) external view returns (bytes memory);\\r\\n\\r\\n    function heads(uint256 index) external view returns (bytes memory);\\r\\n\\r\\n    function glasses(uint256 index) external view returns (bytes memory);\\r\\n\\r\\n    function pants(uint256 index) external view returns (bytes memory);\\r\\n\\r\\n    function shoes(uint256 index) external view returns (bytes memory);\\r\\n\\r\\n    function backgroundCount() external view returns (uint256);\\r\\n\\r\\n    function bodyCount() external view returns (uint256);\\r\\n\\r\\n    function accessoryCount() external view returns (uint256);\\r\\n\\r\\n    function headCount() external view returns (uint256);\\r\\n\\r\\n    function glassesCount() external view returns (uint256);\\r\\n\\r\\n    function pantCount() external view returns (uint256);\\r\\n\\r\\n    function shoeCount() external view returns (uint256);\\r\\n\\r\\n    function addManyColorsToPalette(uint8 paletteIndex, string[] calldata newColors) external;\\r\\n\\r\\n    function addManyBackgrounds(string[] calldata backgrounds) external;\\r\\n\\r\\n    function addManyBodies(bytes[] calldata bodies) external;\\r\\n\\r\\n    function addManyAccessories(bytes[] calldata accessories) external;\\r\\n\\r\\n    function addManyHeads(bytes[] calldata heads) external;\\r\\n\\r\\n    function addManyGlasses(bytes[] calldata glasses) external;\\r\\n\\r\\n    function addManyPants(bytes[] calldata pants) external;\\r\\n\\r\\n    function addManyShoes(bytes[] calldata shoes) external;\\r\\n\\r\\n    function addColorToPalette(uint8 paletteIndex, string calldata color) external;\\r\\n\\r\\n    function addBackground(string calldata background) external;\\r\\n\\r\\n    function addBody(bytes calldata body) external;\\r\\n\\r\\n    function addAccessory(bytes calldata accessory) external;\\r\\n\\r\\n    function addHead(bytes calldata head) external;\\r\\n\\r\\n    function addGlasses(bytes calldata glasses) external;\\r\\n\\r\\n    function addPant(bytes calldata pant) external;\\r\\n\\r\\n    function addShoe(bytes calldata shoe) external;\\r\\n\\r\\n    function lockParts() external;\\r\\n\\r\\n    function dataURI(uint256 tokenId, INounsSeeder.Seed memory seed) external view returns (string memory);\\r\\n\\r\\n    function genericDataURI(\\r\\n        string calldata name,\\r\\n        string calldata description,\\r\\n        INounsSeeder.Seed memory seed\\r\\n    ) external view returns (string memory);\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nounId\",\"type\":\"uint256\"},{\"internalType\":\"contract INounsDescriptor\",\"name\":\"descriptor\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"pseudorandomHash\",\"type\":\"bytes32\"}],\"name\":\"generateSeed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"background\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"body\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"accessory\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"head\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"glasses\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"pants\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"shoes\",\"type\":\"uint48\"}],\"internalType\":\"struct INounsSeeder.Seed\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NounbitsSeeder", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}