{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"Address.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\n/**\\r\\n * Address\u5e93\u5b9a\u4e49isContract\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u6307\u5b9a\u5730\u5740\u662f\u5426\u4e3a\u5408\u7ea6\u5730\u5740\\r\\n */\\r\\nlibrary Address {\\r\\n\\r\\n    /**\\r\\n     * \u5224\u65ad\u662f\u5426\u662f\u5408\u7ea6\u5730\u5740\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { codehash := extcodehash(account) }\\r\\n        return (codehash != 0x0 \\u0026\\u0026 codehash != accountHash);\\r\\n    }\\r\\n}\"},\"Code Token.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\nimport \\u0027./Address.sol\\u0027;\\r\\nimport \\u0027./SafeMath.sol\\u0027;\\r\\nimport \\u0027./SafeERC20.sol\\u0027;\\r\\nimport \\u0027./ERC20Detailed.sol\\u0027;\\r\\nimport \\u0027./ERC20.sol\\u0027;\\r\\n\\r\\n/**\\r\\n * \u53d1\u5e03\u7684token\\r\\n */\\r\\ncontract CodeToken is ERC20, ERC20Detailed {\\r\\n\\r\\n    // \u5f15\u5165SafeERC20\u5e93\uff0c\u5176\u5185\u90e8\u51fd\u6570\u7528\u4e8e\u5b89\u5168\u5916\u90e8ERC20\u5408\u7ea6\u8f6c\u8d26\u76f8\u5173\u64cd\u4f5c\\r\\n    using SafeERC20 for IERC20;\\r\\n    // \u4f7f\u7528Address\u5e93\u4e2d\u51fd\u6570\u68c0\u67e5\u6307\u5b9a\u5730\u5740\u662f\u5426\u4e3a\u5408\u7ea6\u5730\u5740\\r\\n    using Address for address;\\r\\n    // \u5f15\u5165SafeMath\u5b89\u5168\u6570\u5b66\u8fd0\u7b97\u5e93\uff0c\u907f\u514d\u6570\u5b66\u8fd0\u7b97\u6574\u578b\u6ea2\u51fa\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    // \u5b58\u50a8\u6cbb\u7406\u7ba1\u7406\u5458\u5730\u5740\\r\\n    address public governance;\\r\\n\\r\\n    // \u5b58\u50a8\u6307\u5b9a\u5730\u5740\u7684\u94f8\u5e01\u6743\u9650\\r\\n    mapping (address =\\u003e bool) public minters;\\r\\n\\r\\n\\r\\n    // \u6784\u9020\u51fd\u6570\uff0c\u8bbe\u7f6e\u4ee3\u5e01\u540d\u79f0\u3001\u7b80\u79f0\u3001\u7cbe\u5ea6\uff1b\u5c06\u53d1\u5e03\u5408\u7ea6\u7684\u8d26\u53f7\u8bbe\u7f6e\u4e3a\u6cbb\u7406\u8d26\u53f7\\r\\n    constructor () public ERC20Detailed(\\\"magicbox88.com\\\", \\\"MBC\\\", 18) {\\r\\n        governance = tx.origin;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u94f8\u5e01\\r\\n     *   \u62e5\u6709\u94f8\u5e01\u6743\u9650\u5730\u5740\u5411\u6307\u5b9a\u5730\u5740\u94f8\u5e01\\r\\n     */\\r\\n    function mint(address account, uint256 amount) public {\\r\\n        require(minters[msg.sender], \\\"!minter\\\");\\r\\n        _mint(account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u8bbe\u7f6e\u6cbb\u7406\u7ba1\u7406\u5458\u5730\u5740\\r\\n     */\\r\\n    function setGovernance(address _governance) public {\\r\\n        // \u8981\u6c42\u8c03\u7528\u8005\u5fc5\u987b\u4e3a\u5f53\u524d\u6cbb\u7406\u7ba1\u7406\u5458\u5730\u5740\\r\\n        require(msg.sender == governance, \\\"!governance\\\");\\r\\n        // \u66f4\u65b0governance\\r\\n        governance = _governance;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u6dfb\u52a0\u94f8\u5e01\u6743\u9650\u51fd\u6570\\r\\n     */\\r\\n    function addMinter(address _minter) public {\\r\\n        // \u8981\u6c42\u8c03\u7528\u8005\u5fc5\u987b\u4e3a\u5f53\u524d\u6cbb\u7406\u7ba1\u7406\u5458\u5730\u5740\\r\\n        require(msg.sender == governance, \\\"!governance\\\");\\r\\n        // \u53d8\u66f4\u6307\u5b9a\u5730\u5740_minter\u7684\u94f8\u5e01\u6743\u9650\u4e3atrue\\r\\n        minters[_minter] = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u79fb\u9664\u94f8\u5e01\u6743\u9650\u51fd\u6570\\r\\n     */\\r\\n    function removeMinter(address _minter) public {\\r\\n        // \u8981\u6c42\u8c03\u7528\u8005\u5fc5\u987b\u4e3a\u5f53\u524d\u6cbb\u7406\u7ba1\u7406\u5458\u5730\u5740\\r\\n        require(msg.sender == governance, \\\"!governance\\\");\\r\\n        // \u53d8\u66f4\u6307\u5b9a\u5730\u5740_minter\u7684\u94f8\u5e01\u6743\u9650\u4e3afalse\\r\\n        minters[_minter] = false;\\r\\n    }\\r\\n}\"},\"Context.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\ncontract Context {\\r\\n    constructor () internal { }\\r\\n\\r\\n    /**\\r\\n     * \u5185\u90e8\u51fd\u6570_msgSender\uff0c\u83b7\u53d6\u51fd\u6570\u8c03\u7528\u8005\u5730\u5740\\r\\n     */\\r\\n    function _msgSender() internal view returns (address payable) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\"},\"ERC20.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\nimport \\u0027./SafeMath.sol\\u0027;\\r\\nimport \\u0027./Context.sol\\u0027;\\r\\nimport \\u0027./IERC20.sol\\u0027;\\r\\n\\r\\ncontract ERC20 is Context, IERC20 {\\r\\n\\r\\n    // \u5f15\u5165SafeMath\u5b89\u5168\u6570\u5b66\u8fd0\u7b97\u5e93\uff0c\u907f\u514d\u6570\u5b66\u8fd0\u7b97\u6574\u578b\u6ea2\u51fa\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    // \u7528mapping\u4fdd\u5b58\u6bcf\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u4f59\u989d\\r\\n    mapping (address =\\u003e uint) private _balances;\\r\\n\\r\\n    // \u5b58\u50a8\u5bf9\u8d26\u53f7\u7684\u63a7\u5236 \\r\\n    mapping (address =\\u003e mapping (address =\\u003e uint)) private _allowances;\\r\\n\\r\\n    // \u603b\u4f9b\u5e94\u91cf\\r\\n    uint private _totalSupply;\\r\\n\\r\\n    /**\\r\\n     * \u83b7\u53d6\u603b\u4f9b\u5e94\u91cf\\r\\n     */\\r\\n    function totalSupply() public view returns (uint) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u83b7\u53d6\u67d0\u4e2a\u5730\u5740\u7684\u4f59\u989d\\r\\n     */\\r\\n    function balanceOf(address account) public view returns (uint) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u8f6c\u8d26\\r\\n     */\\r\\n    function transfer(address recipient, uint amount) public returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  \u83b7\u53d6\u88ab\u6388\u6743\u4ee4\u724c\u4f59\u989d,\u83b7\u53d6 _owner \u5730\u5740\u6388\u6743\u7ed9 _spender \u5730\u5740\u53ef\u4ee5\u8f6c\u79fb\u7684\u4ee4\u724c\u7684\u4f59\u989d\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view returns (uint) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u6388\u6743\uff0c\u5141\u8bb8 spender \u5730\u5740\u4ece\u4f60\u7684\u8d26\u6237\u4e2d\u8f6c\u79fb amount \u4e2a\u4ee4\u724c\u5230\u4efb\u4f55\u5730\u65b9\\r\\n     */\\r\\n    function approve(address spender, uint amount) public returns (bool) {\\r\\n        // \u8c03\u7528\u5185\u90e8\u51fd\u6570_approve\u8bbe\u7f6e\u8c03\u7528\u8005\u5bf9spender\u7684\u6388\u6743\u503c\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u4ee3\u7406\u8f6c\u8d26\u51fd\u6570\uff0c\u8c03\u7528\u8005\u4ee3\u7406\u4ee3\u5e01\u6301\u6709\u8005sender\u5411\u6307\u5b9a\u5730\u5740recipient\u8f6c\u8d26\u4e00\u5b9a\u6570\u91cfamount\u4ee3\u5e01\\r\\n     */\\r\\n    function transferFrom(address sender, address recipient, uint amount) public returns (bool) {\\r\\n        // \u8c03\u7528\u5185\u90e8\u51fd\u6570_transfer\u8fdb\u884c\u4ee3\u5e01\u8f6c\u8d26\\r\\n        _transfer(sender, recipient, amount);\\r\\n        // \u8c03\u7528\u5185\u90e8\u51fd\u6570_approve\u66f4\u65b0\u8f6c\u8d26\u6e90\u5730\u5740sender\u5bf9\u8c03\u7528\u8005\u7684\u6388\u6743\u503c\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u589e\u52a0\u6388\u6743\u503c\u51fd\u6570\uff0c\u8c03\u7528\u8005\u589e\u52a0\u5bf9spender\u7684\u6388\u6743\u503c\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u51cf\u5c11\u6388\u6743\u503c\u51fd\u6570\uff0c\u8c03\u7528\u8005\u51cf\u5c11\u5bf9spender\u7684\u6388\u6743\u503c\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u8f6c\u8d26\\r\\n     */\\r\\n    function _transfer(address sender, address recipient, uint amount) internal {\\r\\n        // \u975e\u96f6\u5730\u5740\u68c0\u67e5\\r\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        // \u975e\u96f6\u5730\u5740\u68c0\u67e5\uff0c\u907f\u514d\u8f6c\u8d26\u4ee3\u5e01\u4e22\u5931\\r\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        // \u4fee\u6539\u8f6c\u8d26\u53cc\u65b9\u5730\u5740\u7684\u4ee3\u5e01\u4f59\u989d\\r\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n        _balances[recipient] = _balances[recipient].add(amount);\\r\\n        // \u89e6\u53d1Transfer\u4e8b\u4ef6\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u94f8\u5e01\\r\\n     */\\r\\n    function _mint(address account, uint amount) internal {\\r\\n        // \u975e\u96f6\u5730\u5740\u68c0\u67e5\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n        // \u66f4\u65b0\u4ee3\u5e01\u603b\u91cf\\r\\n        _totalSupply = _totalSupply.add(amount);\\r\\n        // \u4fee\u6539\u4ee3\u5e01\u9500\u6bc1\u5730\u5740account\u7684\u4ee3\u5e01\u4f59\u989d\\r\\n        _balances[account] = _balances[account].add(amount);\\r\\n        emit Transfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u4ee3\u5e01\u9500\u6bc1\\r\\n     */\\r\\n    function _burn(address account, uint amount) internal {\\r\\n        // \u975e\u96f6\u5730\u5740\u68c0\u67e5\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n        // \u4fee\u6539\u4ee3\u5e01\u9500\u6bc1\u5730\u5740account\u7684\u4ee3\u5e01\u4f59\u989d\\r\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        // \u66f4\u65b0\u4ee3\u5e01\u603b\u91cf\\r\\n        _totalSupply = _totalSupply.sub(amount);\\r\\n        // \u89e6\u53d1Transfer\u4e8b\u4ef6\\r\\n        emit Transfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * \u6279\u51c6_spender\u80fd\u4ece\u5408\u7ea6\u8c03\u7528\u8d26\u6237\u4e2d\u8f6c\u51fa\u6570\u91cf\u4e3aamount\u7684token\\r\\n     */\\r\\n    function _approve(address owner, address spender, uint amount) internal {\\r\\n        // \u975e\u96f6\u5730\u5740\u68c0\u67e5\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        // \u975e\u96f6\u5730\u5740\u68c0\u67e5\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        // \u8bbe\u7f6eowner\u5bf9spender\u7684\u6388\u6743\u503c\u4e3aamount\\r\\n        _allowances[owner][spender] = amount;\\r\\n        // \u89e6\u53d1Approval\u4e8b\u4ef6\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n}\"},\"ERC20Detailed.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\nimport \\u0027./IERC20.sol\\u0027;\\r\\n\\r\\ncontract ERC20Detailed is IERC20 {\\r\\n\\r\\n    string private _name;  // \u4ee3\u5e01\u7684\u540d\u5b57\\r\\n    string private _symbol; // \u4ee3\u5e01\u7684\u7b80\u79f0\\r\\n    uint8 private _decimals; // \u4ee3\u5e01\u7684\u7cbe\u5ea6\uff0c\u4f8b\u5982\uff1a\u4e3a2\u7684\u8bdd\uff0c\u5219\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e\u9762\u4e24\u4f4d\\r\\n\\r\\n    /**\\r\\n     * \u6784\u9020\u51fd\u6570\\r\\n     */\\r\\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\\r\\n        _name = name;\\r\\n        _symbol = symbol;\\r\\n        _decimals = decimals;\\r\\n    }\\r\\n    \\r\\n    /** \\r\\n     * \u83b7\u53d6\u4ee3\u5e01\u7684\u540d\u79f0\\r\\n     */\\r\\n    function name() public view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /** \\r\\n     * \u83b7\u53d6\u4ee3\u5e01\u7684\u7b80\u79f0\\r\\n     */\\r\\n    function symbol() public view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /** \\r\\n     * \u83b7\u53d6\u4ee3\u5e01\u7684\u7cbe\u5ea6\\r\\n     */\\r\\n    function decimals() public view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n}\"},\"IERC20.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\n/**\\r\\n * \u5b9a\u4e49ERC20 Token\u6807\u51c6\u8981\u6c42\u7684\u63a5\u53e3\u51fd\u6570\\r\\n */\\r\\ninterface IERC20 {\\r\\n\\r\\n    /**\\r\\n     * token\u603b\u91cf\\r\\n     */\\r\\n    function totalSupply() external view returns (uint);\\r\\n\\r\\n    /**\\r\\n     * \u67d0\u4e2a\u5730\u5740\u7684\u4f59\u989d\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint);\\r\\n\\r\\n    /**\\r\\n     * \u8f6c\u8d26\\r\\n     * @param recipient \u63a5\u6536\u8005\\r\\n     * @param amount    \u8f6c\u8d26\u91d1\u989d\\r\\n     */\\r\\n    function transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * \u83b7\u53d6_spender\u53ef\u4ee5\u4ece\u8d26\u6237_owner\u4e2d\u8f6c\u51fatoken\u7684\u5269\u4f59\u6570\u91cf\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    /**\\r\\n     * \u6279\u51c6_spender\u80fd\u4ece\u5408\u7ea6\u8c03\u7528\u8d26\u6237\u4e2d\u8f6c\u51fa\u6570\u91cf\u4e3a_value\u7684token\\r\\n     * @param spender \u6388\u6743\u7ed9\u7684\u5730\u5740\\r\\n     * @param amount  \u91d1\u989d\\r\\n     */\\r\\n    function approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * \u4ee3\u7406\u8f6c\u8d26\u51fd\u6570\uff0c\u8c03\u7528\u8005\u4ee3\u7406\u4ee3\u5e01\u6301\u6709\u8005sender\u5411\u6307\u5b9a\u5730\u5740recipient\u8f6c\u8d26\u4e00\u5b9a\u6570\u91cfamount\u4ee3\u5e01\\r\\n        \uff08\u7528\u4e8e\u5141\u8bb8\u5408\u7ea6\u4ee3\u7406\u67d0\u4eba\u8f6c\u79fbtoken\u3002\u6761\u4ef6\u662fsender\u8d26\u6237\u5fc5\u987b\u7ecf\u8fc7\u4e86approve\uff09\\r\\n     * @param sender    \u8f6c\u8d26\u4eba\\r\\n     * @param recipient \u63a5\u6536\u8005\\r\\n     * @param amount    \u8f6c\u8d26\u91d1\u989d\\r\\n     */\\r\\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * \u53d1\u751f\u8f6c\u8d26\u65f6\u5fc5\u987b\u8981\u89e6\u53d1\u7684\u4e8b\u4ef6\uff0ctransfer \u548c transferFrom \u6210\u529f\u6267\u884c\u65f6\u5fc5\u987b\u89e6\u53d1\u7684\u4e8b\u4ef6\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    /**\\r\\n     * \u5f53\u51fd\u6570approve \u6210\u529f\u6267\u884c\u65f6\u5fc5\u987b\u89e6\u53d1\u7684\u4e8b\u4ef6\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\"},\"SafeERC20.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\nimport \\u0027./SafeMath.sol\\u0027;\\r\\nimport \\u0027./Address.sol\\u0027;\\r\\nimport \\u0027./IERC20.sol\\u0027;\\r\\n\\r\\n/**\\r\\n * SafeERC20\u5e93\uff0c\u5176\u5185\u90e8\u51fd\u6570\u7528\u4e8e\u5b89\u5168\u5916\u90e8ERC20\u5408\u7ea6\u8f6c\u8d26\u76f8\u5173\u64cd\u4f5c\\r\\n */\\r\\nlibrary SafeERC20 {\\r\\n\\r\\n    // \u5f15\u5165SafeMath\u5b89\u5168\u6570\u5b66\u8fd0\u7b97\u5e93\uff0c\u907f\u514d\u6570\u5b66\u8fd0\u7b97\u6574\u578b\u6ea2\u51fa\\r\\n    using SafeMath for uint;\\r\\n    // \u4f7f\u7528Address\u5e93\u4e2d\u51fd\u6570\u68c0\u67e5\u6307\u5b9a\u5730\u5740\u662f\u5426\u4e3a\u5408\u7ea6\u5730\u5740\\r\\n    using Address for address;\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint value) internal {\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint value) internal {\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\r\\n    }\\r\\n\\r\\n    function safeApprove(IERC20 token, address spender, uint value) internal {\\r\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = address(token).call(data);\\r\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\r\\n\\r\\n        if (returndata.length \\u003e 0) { // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\n/**\\r\\n * SafeMath\u5e93\u5b9a\u4e49\u5982\u4e0b\u51fd\u6570\u7528\u4e8e\u5b89\u5168\u6570\u5b66\u8fd0\u7b97\\r\\n */\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint a, uint b) internal pure returns (uint) {\\r\\n        uint c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n    function sub(uint a, uint b) internal pure returns (uint) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n        require(b \\u003c= a, errorMessage);\\r\\n        uint c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint a, uint b) internal pure returns (uint) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n    function div(uint a, uint b) internal pure returns (uint) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n    function div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b \\u003e 0, errorMessage);\\r\\n        uint c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\"}}", "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CodeToken", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://637a32cffd4952e8ae4fd3458933e06dc70e7f14a77967b3c3e3f930c9b16961"}]}