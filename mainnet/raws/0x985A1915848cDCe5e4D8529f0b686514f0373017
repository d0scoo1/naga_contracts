{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\ncontract MultiTransfer {\r\n\tevent OwnershipRenounced(address indexed previousOwner);\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\taddress public owner;\r\n\tmapping(address=>bool) public admins;\r\n\r\n\tconstructor(address _admin) {\r\n\t\towner = msg.sender;\r\n\t\tadmins[_admin] = true;\r\n\t}\r\n\r\n\tmodifier onlyAdmin() {\r\n\t\trequire(admins[msg.sender] || msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\treceive() external payable {}\r\n\r\n\tfunction setAdmin(address _address, bool _isAdmin) public onlyOwner {\r\n\t\tif (_isAdmin) {\r\n\t\t\tadmins[_address] = true;\r\n\t\t} else {\r\n\t\t\tadmins[_address] = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyAdmin {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public onlyOwner {\r\n\t\temit OwnershipRenounced(owner);\r\n\t\towner = address(0);\r\n\t}\r\n \tfunction safeTransfer(address token, address to, uint value) internal {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\r\n    }\r\n\r\n    function transfer(uint[][] memory params) external payable onlyAdmin {\r\n\t\tfor(uint i=0; i<params.length; i++) {\r\n\t\t\taddress _token \t\t= address(uint160(params[i][0]));\r\n\t\t\taddress _to\t\t\t= address(uint160(params[i][1]));\r\n\t\t\tuint _amount \t\t= params[i][2];\r\n\t\t\tif (_token==address(0)) {\r\n\t\t\t\tpayable(_to).transfer(_amount);\r\n\t\t\t} else {\r\n\t\t\t\tsafeTransfer(_token, _to, _amount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"params\",\"type\":\"uint256[][]\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MultiTransfer", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000c5c0879e41d46911b5e06b9833f7470efdd2ac4", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5a5c61473787921aa2815165bcb91bc088b00c7fd638e95c751b0d19c0ad9cc1"}]}