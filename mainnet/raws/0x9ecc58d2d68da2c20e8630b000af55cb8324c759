{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"GovernorBravoDelegator.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"./GovernorBravoInterfaces.sol\\\";\\r\\n\\r\\ncontract GovernorBravoDelegator is GovernorBravoDelegatorStorage, GovernorBravoEvents {\\r\\n\\tconstructor(\\r\\n\\t\\t\\taddress timelock_,\\r\\n\\t\\t\\taddress rgt_,\\r\\n\\t\\t\\taddress admin_,\\r\\n\\t        address implementation_,\\r\\n\\t        uint votingPeriod_,\\r\\n\\t        uint votingDelay_,\\r\\n            uint proposalThreshold_) public {\\r\\n\\r\\n        // Admin set to msg.sender for initialization\\r\\n        admin = msg.sender;\\r\\n\\r\\n        delegateTo(implementation_, abi.encodeWithSignature(\\\"initialize(address,address,uint256,uint256,uint256)\\\",\\r\\n                                                            timelock_,\\r\\n                                                            rgt_,\\r\\n                                                            votingPeriod_,\\r\\n                                                            votingDelay_,\\r\\n                                                            proposalThreshold_));\\r\\n\\r\\n        _setImplementation(implementation_);\\r\\n\\r\\n\\t\\tadmin = admin_;\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t/**\\r\\n     * @notice Called by the admin to update the implementation of the delegator\\r\\n     * @param implementation_ The address of the new implementation for delegation\\r\\n     */\\r\\n    function _setImplementation(address implementation_) public {\\r\\n        require(msg.sender == admin, \\\"GovernorBravoDelegator::_setImplementation: admin only\\\");\\r\\n        require(implementation_ != address(0), \\\"GovernorBravoDelegator::_setImplementation: invalid implementation address\\\");\\r\\n\\r\\n        address oldImplementation = implementation;\\r\\n        implementation = implementation_;\\r\\n\\r\\n        emit NewImplementation(oldImplementation, implementation);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Internal method to delegate execution to another contract\\r\\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\r\\n     * @param callee The contract to delegatecall\\r\\n     * @param data The raw data to delegatecall\\r\\n     */\\r\\n    function delegateTo(address callee, bytes memory data) internal {\\r\\n        (bool success, bytes memory returnData) = callee.delegatecall(data);\\r\\n        assembly {\\r\\n            if eq(success, 0) {\\r\\n                revert(add(returnData, 0x20), returndatasize)\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\t/**\\r\\n     * @dev Delegates execution to an implementation contract.\\r\\n     * It returns to the external caller whatever the implementation returns\\r\\n     * or forwards reverts.\\r\\n     */\\r\\n    function () external payable {\\r\\n        // delegate all other functions to current implementation\\r\\n        (bool success, ) = implementation.delegatecall(msg.data);\\r\\n\\r\\n        assembly {\\r\\n              let free_mem_ptr := mload(0x40)\\r\\n              returndatacopy(free_mem_ptr, 0, returndatasize)\\r\\n\\r\\n              switch success\\r\\n              case 0 { revert(free_mem_ptr, returndatasize) }\\r\\n              default { return(free_mem_ptr, returndatasize) }\\r\\n        }\\r\\n    }\\r\\n}\"},\"GovernorBravoInterfaces.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n\\r\\ncontract GovernorBravoEvents {\\r\\n    /// @notice An event emitted when a new proposal is created\\r\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\r\\n\\r\\n    /// @notice An event emitted when a vote has been cast on a proposal\\r\\n    /// @param voter The address which casted a vote\\r\\n    /// @param proposalId The proposal id which was voted on\\r\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\r\\n    /// @param votes Number of votes which were cast by the voter\\r\\n    /// @param reason The reason given for the vote by the voter\\r\\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\\r\\n\\r\\n    /// @notice An event emitted when a proposal has been canceled\\r\\n    event ProposalCanceled(uint id);\\r\\n\\r\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\r\\n    event ProposalQueued(uint id, uint eta);\\r\\n\\r\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\r\\n    event ProposalExecuted(uint id);\\r\\n\\r\\n    /// @notice An event emitted when the voting delay is set\\r\\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\\r\\n\\r\\n    /// @notice An event emitted when the voting period is set\\r\\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\\r\\n\\r\\n    /// @notice Emitted when implementation is changed\\r\\n    event NewImplementation(address oldImplementation, address newImplementation);\\r\\n\\r\\n    /// @notice Emitted when proposal threshold is set\\r\\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\\r\\n\\r\\n    /// @notice Emitted when pendingAdmin is changed\\r\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\r\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\r\\n    event NewAdmin(address oldAdmin, address newAdmin);\\r\\n}\\r\\n\\r\\ncontract GovernorBravoDelegatorStorage {\\r\\n    /// @notice Administrator for this contract\\r\\n    address public admin;\\r\\n\\r\\n    /// @notice Pending administrator for this contract\\r\\n    address public pendingAdmin;\\r\\n\\r\\n    /// @notice Active brains of Governor\\r\\n    address public implementation;\\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * @title Storage for Governor Bravo Delegate\\r\\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\r\\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\\r\\n * GovernorBravoDelegateStorageVX.\\r\\n */\\r\\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\\r\\n\\r\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\r\\n    uint public votingDelay;\\r\\n\\r\\n    /// @notice The duration of voting on a proposal, in blocks\\r\\n    uint public votingPeriod;\\r\\n\\r\\n    /// @notice The number of votes required in order for a voter to become a proposer\\r\\n    uint public proposalThreshold;\\r\\n\\r\\n    /// @notice Initial proposal id set at become\\r\\n    uint public initialProposalId;\\r\\n\\r\\n    /// @notice The total number of proposals\\r\\n    uint public proposalCount;\\r\\n\\r\\n    /// @notice The address of the Rari Protocol Timelock\\r\\n    TimelockInterface public timelock;\\r\\n\\r\\n    /// @notice The address of the Rari Governance Token (RGT)\\r\\n    RgtInterface public rgt;\\r\\n\\r\\n    /// @notice The official record of all proposals ever proposed\\r\\n    mapping (uint =\\u003e Proposal) public proposals;\\r\\n\\r\\n    /// @notice The latest proposal for each proposer\\r\\n    mapping (address =\\u003e uint) public latestProposalIds;\\r\\n\\r\\n\\r\\n    struct Proposal {\\r\\n        /// @notice Unique id for looking up a proposal\\r\\n        uint id;\\r\\n\\r\\n        /// @notice Creator of the proposal\\r\\n        address proposer;\\r\\n\\r\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\r\\n        uint eta;\\r\\n\\r\\n        /// @notice the ordered list of target addresses for calls to be made\\r\\n        address[] targets;\\r\\n\\r\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\r\\n        uint[] values;\\r\\n\\r\\n        /// @notice The ordered list of function signatures to be called\\r\\n        string[] signatures;\\r\\n\\r\\n        /// @notice The ordered list of calldata to be passed to each call\\r\\n        bytes[] calldatas;\\r\\n\\r\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\r\\n        uint startBlock;\\r\\n\\r\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\r\\n        uint endBlock;\\r\\n\\r\\n        /// @notice Current number of votes in favor of this proposal\\r\\n        uint forVotes;\\r\\n\\r\\n        /// @notice Current number of votes in opposition to this proposal\\r\\n        uint againstVotes;\\r\\n\\r\\n        /// @notice Current number of votes for abstaining for this proposal\\r\\n        uint abstainVotes;\\r\\n\\r\\n        /// @notice Flag marking whether the proposal has been canceled\\r\\n        bool canceled;\\r\\n\\r\\n        /// @notice Flag marking whether the proposal has been executed\\r\\n        bool executed;\\r\\n\\r\\n        /// @notice Receipts of ballots for the entire set of voters\\r\\n        mapping (address =\\u003e Receipt) receipts;\\r\\n    }\\r\\n\\r\\n    /// @notice Ballot receipt record for a voter\\r\\n    struct Receipt {\\r\\n        /// @notice Whether or not a vote has been cast\\r\\n        bool hasVoted;\\r\\n\\r\\n        /// @notice Whether or not the voter supports the proposal or abstains\\r\\n        uint8 support;\\r\\n\\r\\n        /// @notice The number of votes the voter had, which were cast\\r\\n        uint96 votes;\\r\\n    }\\r\\n\\r\\n    /// @notice Possible states that a proposal may be in\\r\\n    enum ProposalState {\\r\\n        Pending,\\r\\n        Active,\\r\\n        Canceled,\\r\\n        Defeated,\\r\\n        Succeeded,\\r\\n        Queued,\\r\\n        Expired,\\r\\n        Executed\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface TimelockInterface {\\r\\n    function delay() external view returns (uint);\\r\\n    function GRACE_PERIOD() external view returns (uint);\\r\\n    function acceptAdmin() external;\\r\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\r\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\r\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\r\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\r\\n}\\r\\n\\r\\ninterface RgtInterface {\\r\\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\\r\\n}\\r\\n\\r\\ninterface GovernorAlpha {\\r\\n    /// @notice The total number of proposals\\r\\n    function proposalCount() external returns (uint);\\r\\n}\"}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rgt_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"name\":\"_setImplementation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "GovernorBravoDelegator", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000003a4498d6555b28631062edcae2f406efe0e2d1c8000000000000000000000000d291e7a03283640fdc51b121ac401383a46cc6230000000000000000000000005ea4a9a7592683bf0bc187d6da706c6c4770976f000000000000000000000000663e01a820d650833bb1140a2a645b2bc1e422e60000000000000000000000000000000000000000000000000000000000004cfe0000000000000000000000000000000000000000000000000000000000003354000000000000000000000000000000000000000000000dc3a8351f3d86a00000", "EVMVersion": "Default", "Library": "", "LicenseType": "BSD-3-Clause", "Proxy": "1", "Implementation": "0x4f60585a80cec402fffa1d85f152b522e7358b39", "SwarmSource": "bzzr://8717afbfb9a7fd5a90dc89d177c7de9bfc29db6a3203a689e37d5081be266625"}]}