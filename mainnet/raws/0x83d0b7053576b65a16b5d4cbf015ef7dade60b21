{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ninterface IERC20Token {\r\n    function balanceOf(address owner) public returns (uint256);\r\n    function transfer(address to, uint256 amount) public returns (bool);\r\n    function decimals() public returns (uint256);\r\n}\r\n\r\n\r\n\r\ncontract NTokenSale {\r\n    IERC20Token public tokenContract = IERC20Token(0x155cd154b4c3Afc2719601b617e52526a520d301);  // the token being sold\r\n    uint256 public price ;              // the price, in wei, per token\r\n    address owner;\r\n\r\n    uint256 public tokensSold;\r\n\r\n    event Sold(address buyer, uint256 amount);\r\n\r\n    function tokensale(IERC20Token _tokenContract, uint256 _price) public {\r\n        owner = msg.sender;\r\n        tokenContract = _tokenContract;\r\n        price = _price;\r\n    }\r\n\r\n    // Guards against integer overflows\r\n    function safeMultiply(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        } else {\r\n            uint256 c = a * b;\r\n            assert(c / a == b);\r\n            return c;\r\n        }\r\n    }\r\n\r\n    function buyTokens(uint256 numberOfTokens) public payable {\r\n        require(msg.value == safeMultiply(numberOfTokens, price));\r\n\r\n        uint256 scaledAmount = safeMultiply(numberOfTokens,\r\n            uint256(10) ** tokenContract.decimals());\r\n\r\n        require(tokenContract.balanceOf(this) >= scaledAmount);\r\n\r\n        emit Sold(msg.sender, numberOfTokens);\r\n        tokensSold += numberOfTokens;\r\n\r\n        require(tokenContract.transfer(msg.sender, scaledAmount));\r\n    }\r\n\r\n    function endSale() public {\r\n        require(msg.sender == owner);\r\n\r\n        // Send unsold tokens to the owner.\r\n        require(tokenContract.transfer(owner, tokenContract.balanceOf(this)));\r\n\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"tokensale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"}]", "ContractName": "NTokenSale", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://aef699071d8e241a3f208bf1dbfd787dae09e58fc8aa25e7fb43bfb1570b10a3"}]}