{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n //SPDX-License-Identifier: UNLICENSED\r\n*/\r\npragma solidity ^0.8.4;\r\ncontract PaymentSplitter {\r\n    address payable private _address1;\r\n    address payable private _address2;\r\n    address payable private _address3;\r\n    address payable private _address4;\r\n    address payable private _address5;\r\n    address payable private _address6;\r\n    address payable private _address7;\r\n\r\n    receive() external payable {}\r\n\r\n    constructor() {\r\n        _address1 = payable(0x6468CAaE75D16d577EE877132415f765f7952dff); // J 30\r\n        _address2 = payable(0xFAde74492c3034BaC770889BdC600024fA13C4Ce); // C 15\r\n        _address3 = payable(0xb00351DF61074FE11Caf5E0F9bD1EB4aEC71E9EC); // R 15\r\n        _address4 = payable(0x10e5037372E3F848e656474C8e81820c3113Cd1e); // E 10\r\n        _address5 = payable(0xD2013f23B901893b33109b3321c42Ea9f84B5e04); // L 10\r\n        _address6 = payable(0x466F1B96cE8535d118B14Ba86c961682640E6Ca5); // T 10\r\n        _address7 = payable(0xDB534d987B49F5e349e16a911046c0AA0E29E1b7); // K 10\r\n    }\r\n\r\n    function withdraw() external {\r\n        require(\r\n            msg.sender == _address1 ||\r\n            msg.sender == _address2 ||\r\n            msg.sender == _address3 ||\r\n            msg.sender == _address4 ||\r\n            msg.sender == _address5 ||\r\n            msg.sender == _address6 ||\r\n            msg.sender == _address7\r\n        , \"Invalid admin address\");\r\n\r\n        uint256 onePercent =  address(this).balance / 100;\r\n        _address1.transfer(onePercent * 30);\r\n        _address2.transfer(onePercent * 15);\r\n        _address3.transfer(onePercent * 15);\r\n        _address4.transfer(onePercent * 10);\r\n        _address5.transfer(onePercent * 10);\r\n        _address6.transfer(onePercent * 10);\r\n        _address7.transfer(onePercent * 10);\r\n    }\r\n\r\n    function sendEth(address _address, uint256 _amount) external {\r\n        require(\r\n            msg.sender == _address1 ||\r\n            msg.sender == _address2 ||\r\n            msg.sender == _address3 ||\r\n            msg.sender == _address4 ||\r\n            msg.sender == _address5 ||\r\n            msg.sender == _address6 ||\r\n            msg.sender == _address7\r\n        , \"Invalid admin address\");\r\n        address payable to = payable(_address);\r\n        to.transfer(_amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PaymentSplitter", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://53d5ec5f45b4a02c1a2e79762b2ff1aaf49211b770d90965a2429ad35b03c145"}]}