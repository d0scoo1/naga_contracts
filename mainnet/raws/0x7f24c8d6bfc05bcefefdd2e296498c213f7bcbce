{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity 0.8.15;\r\n\r\ninterface IL1Helper {\r\n    function wrapAndRelayTokens(address _receiver, bytes calldata _data) external payable;\r\n}\r\n\r\ninterface IWETH {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function deposit() external payable;\r\n\r\n    function withdraw(uint256 _value) external;\r\n\r\n    function approve(address _to, uint256 _value) external;\r\n}\r\n\r\n/// @notice Tornado (Nova) tasker for SushiSwap Furo.\r\ncontract TornadoTasker {\r\n    IL1Helper private immutable l1Helper;\r\n    IWETH private immutable weth;\r\n\r\n    constructor(IL1Helper _l1Helper, IWETH _weth) payable {\r\n        l1Helper = _l1Helper;\r\n        weth = _weth;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function onTaskReceived(bytes calldata data) external payable {\r\n        // decode data for task\r\n        (address _receiver, bytes memory _data) = abi.decode(data, (address, bytes));\r\n        // fetch wETH balance and convert to ETH\r\n        weth.withdraw(weth.balanceOf(address(this)));\r\n        // task ETH to Tornado relayer with data\r\n        l1Helper.wrapAndRelayTokens{value: address(this).balance}(_receiver, _data);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IL1Helper\",\"name\":\"_l1Helper\",\"type\":\"address\"},{\"internalType\":\"contract IWETH\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTaskReceived\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TornadoTasker", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "000000000000000000000000ca0840578f57fe71599d29375e16783424023357000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://53be2e7fd1c99f91e10745ee26f1b360f4c9492c79c726d2bf8222bfc59e34bf"}]}