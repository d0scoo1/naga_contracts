{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.5.15;\r\n\r\ncontract Lock {\r\n    // address owner; slot #0\r\n    // address unlockTime; slot #1\r\n    constructor (address owner, uint256 unlockTime) public payable {\r\n        assembly {\r\n            sstore(0x00, owner)\r\n            sstore(0x01, unlockTime)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev        Withdraw function once timestamp has passed unlock time\r\n    */\r\n    function () external payable {\r\n        assembly {\r\n            switch gt(timestamp, sload(0x01))\r\n            case 0 { revert(0, 0) }\r\n            case 1 {\r\n                switch call(gas, sload(0x00), balance(address), 0, 0, 0, 0)\r\n                case 0 { revert(0, 0) }\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Lock", "CompilerVersion": "v0.5.15+commit.6a57276f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000001ff4a2970e4b90a2783daa0596875cbc31568006000000000000000000000000000000000000000000000000000000000000000a", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://48b7d607f2884a00a6c288cb392fcdad56ec3eb51c5cdc818771a42beb259bc8"}]}