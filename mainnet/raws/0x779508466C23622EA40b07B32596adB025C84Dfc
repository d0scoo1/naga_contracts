{"status": "1", "message": "OK", "result": [{"SourceCode": "// Sources flattened with hardhat v2.2.1 https://hardhat.org\r\n\r\n// File hardhat/console.sol@v2.2.1\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nlibrary console {\r\n    address constant CONSOLE_ADDRESS =\r\n        address(0x000000000000000000636F6e736F6c652e6c6f67);\r\n\r\n    function _sendLogPayload(bytes memory payload) private view {\r\n        uint256 payloadLength = payload.length;\r\n        address consoleAddress = CONSOLE_ADDRESS;\r\n        assembly {\r\n            let payloadStart := add(payload, 32)\r\n            let r := staticcall(\r\n                gas(),\r\n                consoleAddress,\r\n                payloadStart,\r\n                payloadLength,\r\n                0,\r\n                0\r\n            )\r\n        }\r\n    }\r\n\r\n    function log() internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log()\"));\r\n    }\r\n\r\n    function logInt(int256 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(int)\", p0));\r\n    }\r\n\r\n    function logUint(uint256 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(uint)\", p0));\r\n    }\r\n\r\n    function logString(string memory p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(string)\", p0));\r\n    }\r\n\r\n    function logBool(bool p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bool)\", p0));\r\n    }\r\n\r\n    function logAddress(address p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(address)\", p0));\r\n    }\r\n\r\n    function logBytes(bytes memory p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes)\", p0));\r\n    }\r\n\r\n    function logBytes1(bytes1 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes1)\", p0));\r\n    }\r\n\r\n    function logBytes2(bytes2 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes2)\", p0));\r\n    }\r\n\r\n    function logBytes3(bytes3 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes3)\", p0));\r\n    }\r\n\r\n    function logBytes4(bytes4 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes4)\", p0));\r\n    }\r\n\r\n    function logBytes5(bytes5 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes5)\", p0));\r\n    }\r\n\r\n    function logBytes6(bytes6 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes6)\", p0));\r\n    }\r\n\r\n    function logBytes7(bytes7 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes7)\", p0));\r\n    }\r\n\r\n    function logBytes8(bytes8 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes8)\", p0));\r\n    }\r\n\r\n    function logBytes9(bytes9 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes9)\", p0));\r\n    }\r\n\r\n    function logBytes10(bytes10 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes10)\", p0));\r\n    }\r\n\r\n    function logBytes11(bytes11 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes11)\", p0));\r\n    }\r\n\r\n    function logBytes12(bytes12 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes12)\", p0));\r\n    }\r\n\r\n    function logBytes13(bytes13 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes13)\", p0));\r\n    }\r\n\r\n    function logBytes14(bytes14 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes14)\", p0));\r\n    }\r\n\r\n    function logBytes15(bytes15 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes15)\", p0));\r\n    }\r\n\r\n    function logBytes16(bytes16 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes16)\", p0));\r\n    }\r\n\r\n    function logBytes17(bytes17 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes17)\", p0));\r\n    }\r\n\r\n    function logBytes18(bytes18 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes18)\", p0));\r\n    }\r\n\r\n    function logBytes19(bytes19 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes19)\", p0));\r\n    }\r\n\r\n    function logBytes20(bytes20 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes20)\", p0));\r\n    }\r\n\r\n    function logBytes21(bytes21 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes21)\", p0));\r\n    }\r\n\r\n    function logBytes22(bytes22 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes22)\", p0));\r\n    }\r\n\r\n    function logBytes23(bytes23 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes23)\", p0));\r\n    }\r\n\r\n    function logBytes24(bytes24 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes24)\", p0));\r\n    }\r\n\r\n    function logBytes25(bytes25 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes25)\", p0));\r\n    }\r\n\r\n    function logBytes26(bytes26 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes26)\", p0));\r\n    }\r\n\r\n    function logBytes27(bytes27 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes27)\", p0));\r\n    }\r\n\r\n    function logBytes28(bytes28 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes28)\", p0));\r\n    }\r\n\r\n    function logBytes29(bytes29 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes29)\", p0));\r\n    }\r\n\r\n    function logBytes30(bytes30 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes30)\", p0));\r\n    }\r\n\r\n    function logBytes31(bytes31 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes31)\", p0));\r\n    }\r\n\r\n    function logBytes32(bytes32 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bytes32)\", p0));\r\n    }\r\n\r\n    function log(uint256 p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(uint)\", p0));\r\n    }\r\n\r\n    function log(string memory p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(string)\", p0));\r\n    }\r\n\r\n    function log(bool p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bool)\", p0));\r\n    }\r\n\r\n    function log(address p0) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(address)\", p0));\r\n    }\r\n\r\n    function log(uint256 p0, uint256 p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(uint,uint)\", p0, p1));\r\n    }\r\n\r\n    function log(uint256 p0, string memory p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(uint,string)\", p0, p1));\r\n    }\r\n\r\n    function log(uint256 p0, bool p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(uint,bool)\", p0, p1));\r\n    }\r\n\r\n    function log(uint256 p0, address p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(uint,address)\", p0, p1));\r\n    }\r\n\r\n    function log(string memory p0, uint256 p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(string,uint)\", p0, p1));\r\n    }\r\n\r\n    function log(string memory p0, string memory p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(string,string)\", p0, p1));\r\n    }\r\n\r\n    function log(string memory p0, bool p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(string,bool)\", p0, p1));\r\n    }\r\n\r\n    function log(string memory p0, address p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(string,address)\", p0, p1));\r\n    }\r\n\r\n    function log(bool p0, uint256 p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bool,uint)\", p0, p1));\r\n    }\r\n\r\n    function log(bool p0, string memory p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bool,string)\", p0, p1));\r\n    }\r\n\r\n    function log(bool p0, bool p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bool,bool)\", p0, p1));\r\n    }\r\n\r\n    function log(bool p0, address p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(bool,address)\", p0, p1));\r\n    }\r\n\r\n    function log(address p0, uint256 p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(address,uint)\", p0, p1));\r\n    }\r\n\r\n    function log(address p0, string memory p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(address,string)\", p0, p1));\r\n    }\r\n\r\n    function log(address p0, bool p1) internal view {\r\n        _sendLogPayload(abi.encodeWithSignature(\"log(address,bool)\", p0, p1));\r\n    }\r\n\r\n    function log(address p0, address p1) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,address)\", p0, p1)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,string,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,string,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,string,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,string,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,address,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,address,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,address,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,address,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,uint,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,uint,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,uint,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,uint,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,string,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,string,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,string,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,string,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,bool,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,bool,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,bool,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,bool,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,address,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,address,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,address,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(string,address,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,string,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,string,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,string,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,string,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,address,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,address,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,address,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,address,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,uint,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,uint,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,uint,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,uint,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,string,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,string,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,string,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,string,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,bool,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,bool,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,bool,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,bool,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        uint256 p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,address,uint)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        string memory p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,address,string)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        bool p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,address,bool)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        address p2\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(address,address,address)\", p0, p1, p2)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,uint,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,uint,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,bool,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,uint,bool,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        uint256 p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,uint,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        string memory p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,string,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,uint,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,uint,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,bool,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(uint,bool,bool,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        bool p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,bool,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        uint256 p0,\r\n        address p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(uint,address,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        uint256 p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,uint,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        string memory p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,string,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        bool p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,bool,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        string memory p0,\r\n        address p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(string,address,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,uint,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,uint,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,bool,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,uint,bool,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        uint256 p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,uint,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        string memory p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,string,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,uint,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,uint,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,bool,uint)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\"log(bool,bool,bool,bool)\", p0, p1, p2, p3)\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        bool p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,bool,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        bool p0,\r\n        address p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(bool,address,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        uint256 p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,uint,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        string memory p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,string,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        bool p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,bool,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        uint256 p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,uint,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        uint256 p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,uint,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        uint256 p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,uint,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        uint256 p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,uint,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        string memory p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,string,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        string memory p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,string,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        string memory p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,string,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        string memory p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,string,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        bool p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,bool,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        bool p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,bool,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        bool p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,bool,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        bool p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,bool,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        address p2,\r\n        uint256 p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,address,uint)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        address p2,\r\n        string memory p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,address,string)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        address p2,\r\n        bool p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,address,bool)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n\r\n    function log(\r\n        address p0,\r\n        address p1,\r\n        address p2,\r\n        address p3\r\n    ) internal view {\r\n        _sendLogPayload(\r\n            abi.encodeWithSignature(\r\n                \"log(address,address,address,address)\",\r\n                p0,\r\n                p1,\r\n                p2,\r\n                p3\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.1.0\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.1.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File @openzeppelin/contracts/utils/Context.sol@v4.1.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.1.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The defaut value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: transfer amount exceeds allowance\"\r\n        );\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender] + addedValue\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(\r\n            senderBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[sender] = senderBalance - amount;\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        _balances[account] = accountBalance - amount;\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n// File @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol@v4.1.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\r\n * tokens and those that they have an allowance for, in a way that can be\r\n * recognized off-chain (via event analysis).\r\n */\r\nabstract contract ERC20Burnable is Context, ERC20 {\r\n    /**\r\n     * @dev Destroys `amount` tokens from the caller.\r\n     *\r\n     * See {ERC20-_burn}.\r\n     */\r\n    function burn(uint256 amount) public virtual {\r\n        _burn(_msgSender(), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\r\n     * allowance.\r\n     *\r\n     * See {ERC20-_burn} and {ERC20-allowance}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have allowance for ``accounts``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function burnFrom(address account, uint256 amount) public virtual {\r\n        uint256 currentAllowance = allowance(account, _msgSender());\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: burn amount exceeds allowance\"\r\n        );\r\n        _approve(account, _msgSender(), currentAllowance - amount);\r\n        _burn(account, amount);\r\n    }\r\n}\r\n\r\n// File contracts/PurrCoin.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract PurrCoin is ERC20, ERC20Burnable {\r\n    constructor() ERC20(\"PurrCoin\", \"PURR\") {\r\n        _mint(msg.sender, 1000000000000000 * 10**decimals());\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PurrCoin", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://61943f862aeb593bd67bb9a959506375a75a5cd5d7d8f614b4241b5510a39124"}]}