{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n    function burn(uint256 _value) external returns (bool);\r\n    function balanceOf(address _address) external returns (uint256);\r\n}\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract Distribute is owned {\r\n\r\n    token public tokenReward;\r\n\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    constructor() public {\r\n        tokenReward = token(0x5fA34CE3D7D05e858b50bB38afa91C8b1a045688); //Token address. Modify by the current token address\r\n    }\r\n\r\n    function changeTokenAddress(address newAddress) onlyOwner public{\r\n        tokenReward = token(newAddress);\r\n    }\r\n\r\n\r\n    function airdrop(address[] participants, uint totalAmount) onlyOwner public{ //amount with decimals\r\n        require(totalAmount<=tokenReward.balanceOf(this));\r\n        uint amount;\r\n        for(uint i=0;i<participants.length;i++){\r\n            amount = totalAmount/participants.length;\r\n            tokenReward.transfer(participants[i], amount);\r\n        }\r\n    }\r\n\r\n    function bounty(address[] participants, uint[] amounts) onlyOwner public{ //Array of amounts with decimals\r\n        require(participants.length==amounts.length);\r\n        for(uint i=0; i<participants.length; i++){\r\n            tokenReward.transfer(participants[i], amounts[i]);\r\n        }\r\n\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"participants\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bounty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participants\",\"type\":\"address[]\"},{\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"changeTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "Distribute", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://6bd55d0c77e4f9eddb1761ee8f290007df8f85bb4dd3b81cfdf1db5f84a85515"}]}