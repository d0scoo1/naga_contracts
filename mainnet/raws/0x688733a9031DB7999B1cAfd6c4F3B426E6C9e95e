{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface IERC20Token {\r\n    function transferFrom(address from, address to, uint value) external;\r\n}\r\n\r\ninterface IERC721 {\r\n    function mint(address to, uint32 _assetType, uint256 _value, uint32 _customDetails) external returns (bool success);\r\n}\r\ncontract Ownable {\r\n\r\n    address private owner;\r\n    \r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor\r\n        emit OwnerSet(address(0), owner);\r\n    }\r\n\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    }\r\n}\r\n\r\ncontract MinerSeller is Ownable {\r\n\r\n    address public nftAddress;\r\n    address public USDTToken;\r\n    address public sellingWallet;\r\n    bool public paused;\r\n    uint256 public thsPrice;\r\n\r\n    \r\n    constructor() {\r\n        sellingWallet = 0xAD334543437EF71642Ee59285bAf2F4DAcBA613F;\r\n        nftAddress = 0xB20217bf3d89667Fa15907971866acD6CcD570C8;\r\n        USDTToken = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\r\n        thsPrice = 100;\r\n        paused = true;\r\n    }\r\n    \r\n    function buyAsset(uint256 _ths) public {\r\n        require(!paused, \"Contract is paused\");\r\n        uint256 _bPrice = _ths * thsPrice;\r\n        uint256 _cPrice = _bPrice * 1000000;\r\n        IERC20Token token = IERC20Token(USDTToken);\r\n        token.transferFrom(msg.sender, sellingWallet, _cPrice);\r\n        IERC721 nft = IERC721(nftAddress);\r\n        require(nft.mint(msg.sender, uint32(100), _bPrice, uint32(_ths)), \"Not possible to mint this type of asset\");\r\n    }\r\n\r\n    function pauseContract(bool _paused) public onlyOwner {\r\n        paused = _paused;\r\n    }\r\n\r\n    function setPrice(uint256 _newPrice) public onlyOwner {\r\n        thsPrice = _newPrice;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDTToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ths\",\"type\":\"uint256\"}],\"name\":\"buyAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thsPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MinerSeller", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b4cb9772b0be9383a1e691533e1ea8ecfa9cc8ff7be0208eda7fd4fab65bfe45"}]}