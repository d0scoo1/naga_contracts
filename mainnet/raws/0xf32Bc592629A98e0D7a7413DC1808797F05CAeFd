{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/erc20.sol\": {\r\n      \"content\": \"pragma solidity^0.8.0;\\n\\ninterface IERC20 {\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address who) external view returns (uint256);\\n\\n  function allowance(address owner, address spender)\\n    external view returns (uint256);\\n\\n  function transfer(address to, uint256 value) external returns (bool);\\n\\n  function approve(address spender, uint256 value)\\n    external returns (bool);\\n\\n  function transferFrom(address from, address to, uint256 value)\\n    external returns (bool);\\n\\n  function claim() external;\\n}\\n\\ncontract Mao {\\n    function mao(address stupid) external {\\n        IERC20 s = IERC20(stupid);\\n        s.claim();\\n        s.transfer(msg.sender, s.balanceOf(address(this)));\\n        selfdestruct(payable(msg.sender));\\n    }\\n}\\n\\ncontract MaoFactory {\\n    address public owner;\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    function batchMao(uint256 cycle) public {\\n        while(cycle != 0) {\\n            Mao m = new Mao();\\n            m.mao(0x1c7E83f8C581a967940DBfa7984744646AE46b29);\\n            cycle = cycle - 1;\\n        }\\n    }\\n\\n    function WDAll() public {\\n        require(msg.sender == owner);\\n        IERC20 s = IERC20(0x1c7E83f8C581a967940DBfa7984744646AE46b29);\\n        s.transfer(msg.sender, s.balanceOf(address(this)));\\n        selfdestruct(payable(msg.sender));\\n    }\\n}\\n\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WDAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cycle\",\"type\":\"uint256\"}],\"name\":\"batchMao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MaoFactory", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}