{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\n\r\n\r\n// Tool to send funds to a contract that does not have a payable method.\r\n// \r\n//  ______________________________ \r\n// < This may be a horrible idea. >\r\n//  ------------------------------ \r\n//         \\   ^__^\r\n//          \\  (oo)\\_______\r\n//             (__)\\       )\\/\\\r\n//                 ||----w |\r\n//                 ||     ||\r\n// \r\n// Call fund(to) on this contract, and all eth passed in it should go\r\n// to the destination contract, skipping all payable checks.\r\n// \r\n// By\r\n// Daniel Von Fange | Origin Protocol\r\n// @DanielVF \r\n\r\ncontract ForceFund {\r\n\tfunction fund(address to) external payable {\r\n\t\tnew Boom{value: msg.value}(to);\r\n\t}\r\n}\r\n\r\ncontract Boom {\r\n\tconstructor(address to) payable {\r\n\t\tselfdestruct(payable(to));\r\n\t}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "ForceFund", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d75c9418cc85f4ae3e25199fc5ef226cadc8451ad393c72ffd9efacab7e95ede"}]}