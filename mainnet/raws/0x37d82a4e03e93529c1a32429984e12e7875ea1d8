{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\n// ---------------------------\r\n// OMGCat coin contract\r\n//\r\n// Deployed to \t: 0x921beCA00339c458342cF09b4B0f4adb3942e332\r\n// symbol\t\t: OMGCAT\r\n// name \t\t: OMGCatCoin\r\n// Total supply : 100,000,000,000.000000000000000000\r\n// Decimals \t: 18\r\n// ------------\r\n// Safe maths\r\n// ------------\r\ncontract SafeMath {\r\n    function safeAdd(uint a, uint b) public pure returns (uint c){\r\n    \tc = a + b;\r\n    \trequire(c >= a);\r\n    }\r\n\r\n    function safeSub(uint a, uint b) public pure returns (uint c) {\r\n    \trequire(b <= a);\r\n    \tc = a - b;\r\n    }\r\n\r\n    function safeMul(uint a, uint b) public pure returns (uint c) {\r\n    \tc = a * b;\r\n    \trequire(a == 0 || c / a == b);\r\n    }\r\n\r\n    function safeDiv(uint a, uint b) public pure returns (uint c) {\r\n    \trequire(b > 0);\r\n    \tc = a / b;\r\n    }\r\n}\r\n\r\n// ------------------------------------------------\r\n// OMGCatCoin Standard #20 Interface\r\n// ------------------------------------------------\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public constant returns (uint);\r\n\tfunction balanceOf(address tokenOwner) public constant returns (uint balance);\r\n\tfunction allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n\tfunction transfer(address to, uint tokens) public returns (bool success);\r\n\tfunction approve(address spender, uint tokens) public returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// -------------\r\n// Contract function to receive approval and execute function in one call\r\n// -------------\r\ncontract ApproveAndCallFallBack {\r\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n// -------------\r\n// Owned contract\r\n// -------------\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress public newOwner;\r\n\r\n\tevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\tfunction Owned() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() public {\r\n\t\trequire(msg.sender == newOwner);\r\n\t\tOwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t\tnewOwner = address(0);\r\n\t}\r\n}\r\n\r\n// ---------\r\n// -- ERC20 Token, with the additional of symbol, name, decimals and assisted\r\n// ---------\r\ncontract OMGCatCoin is ERC20Interface, Owned, SafeMath {\r\n\tstring public symbol;\r\n\tstring public  name;\r\n\tuint8 public decimals;\r\n\tuint public _totalSupply;\r\n\r\n\tmapping(address => uint) balances;\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\t// -----------\r\n\t// Constructor \r\n\t// -----------\r\n\tfunction OMGCatCoin() public {\r\n\t\tsymbol = 'OMGCAT';\r\n\t\tname = 'OMGCatCoin';\r\n\t\tdecimals = 18;\r\n\t\t_totalSupply = 100000000000 * 10**uint(decimals);\r\n\t\tbalances[0x921beCA00339c458342cF09b4B0f4adb3942e332] = _totalSupply;\r\n\t\tTransfer(address(0), 0x921beCA00339c458342cF09b4B0f4adb3942e332, _totalSupply);\r\n\t}\r\n\r\n\t// ------------\r\n\t// Total supply\r\n\t// ------------\r\n\tfunction totalSupply() public constant returns (uint) {\r\n\t\treturn _totalSupply - balances[address(0)];\r\n\t}\r\n\r\n\t// ----\r\n\t// Get the coin balance for account coinOwner\r\n\t// ----\r\n\tfunction balanceOf(address tokenOwner) public constant returns (uint balance) {\r\n\t\treturn balances[tokenOwner];\r\n\t}\r\n\r\n\t// ------\r\n\t// transfer the balance from token owner account to 'to' account\r\n\t// - Owner's account must have sufficient balance to transfer\r\n\t// - 0 value transfers are allowed\r\n\t// -------\r\n\tfunction transfer(address to, uint tokens) public returns (bool success) {\r\n\t\tbalances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n\t\tbalances[to] = safeAdd(balances[to], tokens);\r\n\t\tTransfer(msg.sender, to, tokens);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// -----\r\n\t// Token owner can approve for spender to transferFrom(...) tokens\r\n    // Token owner can approve for spender to transferFrom(...) tokens\r\n    // from the token owner's account\r\n    //\r\n    // recommends that there are no checks for the approval double-spend attack\r\n    // as this should be implemented in user interfaces \t\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n    \tallowed[msg.sender][spender] = tokens;\r\n    \tApproval(msg.sender, spender, tokens);\r\n    \treturn true;\r\n    }\r\n\r\n    // ---------------\r\n    //\r\n    // callin accoutn must already have sufficient tokens to approve(...)\r\n    // for spending from the form account and\r\n    // - From account must have sufficient balance to transfer\r\n    // - Spender must have sufficient allownace to transfer\r\n    // - 0 value transfers are allowed\r\n    // --------------\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n    \tbalances[from] = safeSub(balances[from], tokens);\r\n    \tallowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\r\n    \tbalances[to] = safeAdd(balances[to], tokens);\r\n    \tTransfer(from, to, tokens);\r\n    \treturn true;\r\n    }\r\n\r\n    // -----------\r\n    // Returns the amount of tokens approved by the owner that can be\r\n    // transferred to the spender's account\r\n    // -----------\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\r\n    \treturn allowed[tokenOwner][spender];\r\n    }\r\n\r\n    // ------------\r\n    // Token owner can approve for spender to transferFrom(...) tokens\r\n    // from the token owner's account. The spender contract function\r\n    // receiveApproval(...) is then executed\r\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\r\n    \tallowed[msg.sender][spender] = tokens;\r\n    \tApproval(msg.sender, spender, tokens);\r\n    \tApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n    \treturn true;\r\n    }\r\n\r\n    // ---------\r\n    // Dont accept ETH;\r\n    // ---------\r\n    function () public payable { \r\n    \trevert();\r\n    }\r\n\r\n    // -----------\r\n    // Owner can transfer out any accidentally sent ERC20 tokens\r\n    // ------------\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n    \treturn ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "OMGCatCoin", "CompilerVersion": "v0.4.22+commit.4cb486ee", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://4da9690d54a116d06d71f71a237f7ac82053b8d459d28425d6b023f8c8e63c8a"}]}