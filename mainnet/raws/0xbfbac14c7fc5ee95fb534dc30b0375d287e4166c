{"status": "1", "message": "OK", "result": [{"SourceCode": "/** 2021 gregcoin & gregcoin.org  \r\n\r\n\r\n              e@@@@@@@@@@@@@@@        __ _                    __ _                     _            \r\n                @@@\"\"\"\"\"\"\"\"\"\"       / _` |    _ _    ___    / _` |   __      ___     (_)    _ _    \r\n               @\" ___ ___________  \\__, |   | '_|  / -_)   \\__, |  / _|    / _ \\    | |   | ' \\  \r\n              II__[4] | [2] [0] |  |___/   _|_|_   \\___|   |___/   \\__|_   \\___/   _|_|_  |_||_| \r\n             {======|_|~~~~~~~~~|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"|_|\"\"\"\"\"| \r\n            /oO--690'\"`-00---00'\"`-0-0-'\"`-0-0-'\"`-0-0-'\"`-0-0-'\"`-0-0-'\"`-0-0-'\"`-0-0-'\"`-0-0-'    \r\n..........................................................................................................................................\r\n.......................................................................................,.........................................................\r\n................................................................................................................................................\r\n............................................................,::::IIIIIIIIIIIIIIII?::,............................................................\r\n.................................................  ...,:+IIIIIII77777I777Z$Z$$$$Z77I??I::.......................................................\r\n.................................................,,??IIIIII$$ZZZ$$$$$7II7$7IIIIIIII$$$$Z7IIII?:..................................................\r\n............................................,+?III7$$ZZ$$$IIIIIIIIIIIIIIIIIIIIIIIIIII77I$$$IIII?~...............................................\r\n.........................................+IIIIII$$Z$IIIIIIIIII7IIIIZ8DNNNNNDDD88OIIIII77II7$Z7IIII+..............................................\r\n.......................................=IIIII7$Z$7IIIIIII7IIIZ8DNNNNMMMMMNNNNDDDDDDDDO$II77I777$$7III?,..........................................\r\n....................................+IIIII$Z7IIIIIII78NMMMNNNNNDDDNNNNNNNNNNDDDDDNNNNNNDND7I7IIII$$ZII7I+........................................\r\n..................................?IIII7Z$IIIIIII7ODNNNMMMMNMMNNNNNNNNDNNDDDNDDDDDDNNNNNNNNNZII77III$$7III?:.....................................\r\n...............................,?III7$Z7IIIIIIIZD8DNNNNNNMMMMNNNDNNNNNNNNNNNNDDNNNDDDDNNMMNNNN8II7II$7$Z7IIII:...................................\r\n..............................,III7$Z7IIIIIII78DDNNNDNNNMMMMMMMNNNNNNMMMMMMMMMNNNNDDNDDNNNNMMMMMDII77II7$$IIII~..................................\r\n.............................?II7$Z7IIIIIIIIO88DDNNNDDNMMMMMMNNMMMMMMMNNNMMMMMMMMMMMM8DNNMMMMMMMMNIII7II7$$IIII?.................................\r\n........................+??II7$$7IIIIIIIII7O8D8DDD88DNNMMMMMMMNNMMMNNNNMMMMMNMMMMMMMMMMMMMMMNNNMMMM$III7III7$IIII................................\r\n......................~IIIIIZZ$7IIIIIIIII$8D8O888DDNNMMMMMMNNMMMMMMMMMMMMNNNNNNNNNMMMMMMMMMMMMMMMMMN8IIIIIII7$III~...............................\r\n.....................:IIIII$$7IIIIIIIIII7DDOOO8DNNNNMMMMMMMNNMMMNNNMMMMNMNNDNNNNNNNMMMMMNMMMMMMMMMMMNDIIIIIII77III:..............................\r\n....................=IIIII$$IIIIIIIIIIIIDNDOO88NNNMMMMMMMMMNMNNNNNDNNNMNNNNDDNNNNMNMMMMMNNNMMMMMMMMMMNZIIIIIII$IIII,.............................\r\n...................+IIII7Z7IIIIIIIIIIII7DDD88ODNNMMMMMMMMMMMMMMNNNMNNNNMMMNNNNMNNMMMMMMMMNNMMMMMMMMMMMNI7IIIIIIZIII+:............................\r\n..................?IIIII$IIIIIIIIIIIIIIZDDN888DNNNMNMMMMMMMMMNNNNNNNNNNMNNNNNNMNNNNNNNNNNMMMMMMMMMMNNMMIIIIIIIII$III+~...........................\r\n.................~IIIII$7IIIII7IIIIIII7DNDD888DDDNNNMMMMMMNNNNNNNNNDNDMNNNNNNNNMNNNNNNDDNNNNMMMMMMMNNNNDIIIIIIIIZ7II?=?..........................\r\n................?IIIII7IIIIIIIIIIIIIIIINDD8OOO8DDNNNNNMMMNNNNDDNDDDDDDNNNNNNNDDNNNNNNDD88DDNNNNMMMMMDDDN7IIIIIIIIZIII?=?.........................\r\n..............~IIIIII7IIIIIIIIIIIIIII78DND8OOOO88NNNNNMNNNNNDDDDDDNDNNNNNDDNDDDDDDDDDD8OO8DNNNNNMMMMNDNN7IIIIIIII7ZIII==+........................\r\n.............=IIIII7$IIIIIIIIIIIIIIII8N88888OOOO8DNNNNNNDD88OOOOO8DDDDDDDD88OOOOOOD8888ZOO88DDDNMMMMMNNN7IIIIIIIII7$III===.......................\r\n............,IIIIII7IIIIIIIIIIIIIIIIOND8D888OZOOZ8DDDDNDOOOZ$7777$OOO8888OZZOZ$$ZZOOO88OOOO8D8DNMMMMMMNNDIIIIIIIIII$$III==+......................\r\n............?IIII7$IIIIIIIIIIIIIIII$NNNMNNDOZOZZZ8OOO888OZZ77I???I7$$ZOOZZZ$Z$ZZZ$ZZOO8DO8O888DDNNMMMMMMDIIIIIIIIIII$$II?==~.. ..................\r\n...........:IIII77IIIIIIIIIIIIIIIIIDDNMNNNDZOZOZ7OOZZZZ$Z$I??++===+??I7$$Z$$$ZZZ8OZZOO8DD8OO8DDNDDNNNMNMDIIIIIIIIIII7ZI7I=+I.....................\r\n...........IIII77IIIIIIIIIIIIIIIIII8NNMMNDDZZZO$$ZZ$77II???+=~~~:~~~==+I77$$7$OOOOZZZZZO8DNNNDNDDDDDNNNNOIIIIIIIIIIII7$III==?....................\r\n......... =IIII$IIIIIIIIIIIIIIIIII$8DNNNNN8$7ZZ$7$Z$7I?+==~~:~~~:::::~:~=?7$$$$O8OZZZ7I?7$ODDDOODDNDDDDNZIIIIIIIIIIIII7Z7I?=I?...................\r\n..........IIII$7IIIIIIIIIIIIIIIIII$DDDNN8O$I?IIIIZ77??+==~~::~::::::::::~~~~=+????I???+++++?I7$ZODNNNDD8IIIIIIIIIIIIIII7Z7IIII?..................\r\n.........:IIII7IIIIIIIIIIIIIIIIIII$8ND8ZII7?+++??77?=====~~::::::::::~:::~~~~~=====+++++++++?I7$O8DNNNDOIIIIIIIIIIIIIIIIZ7IIIII,.................\r\n.........=III$$IIIIIIIIIIIIIIIIIII$DDZ$7II?++++++++==+===~~::~~~::::::::::::~~~~=====+=+++++??$$Z8DNNDDZIIIIIIIIIIIIIIII7$IIIII?.................\r\n.........IIII7IIIIIIIIIIIIIIIIIIIIZDO$I?+?++========~~~~~::::~~:::::::::::::~~~~~~=====+++++?I$ZO8DNNDNZIIIIIIIIIIIIIIIIII7IIIII:................\r\n........~IIII7IIIIIIIIIIIIIIIIIIIIZ8O$I?++++======++=~~~~::~::::::::::::::::~~~~~~=====+++????7ZO8DNDDN$IIIIIIIIIIIIIIIIIII7IIII+................\r\n........IIIII7IIIIIIIIIIIIIIIIIIII$8O$I??++++=====++=~~~~::::::::~~::~~~~~~~~==~=====+++++???I$Z88DD8DDIIIIIIIIIIIIIIIIIIII$7IIII~...............\r\n........IIII7IIIIIIIIIIIIIIIIIIII7?D8$I?????+++++++????=~=~:~~~~:~+====+====~~~==++++++??++??I$8DDDDNDDIIIIIIIIIIIIIIIIIIIII$IIII?...............\r\n.......+IIII7IIIIIIIIIIIIIIIIIIIII$DD$7III?7$7I7$ZZ$$$7II?+~~~====+++?IIII77I?+???IIII??III?II$8DNNDDDDZ$$$IIIIIIIIIIIIIIIII7IIIII...............\r\n.......+IIII$7IIIIIIIIIIIIIIII77$ZDD8$77$ZZ$Z$ZOOOOOOZZ$$7?======+?I7$ZO888888O$7II7$$I7Z$7III7ODNDD8Z7?+???I7IIIIIIIIIIIIIII$IIII,..............\r\n.......+III777IIIIIIIIIIIIIII7I??7DDD$7ZOOZZ$Z$Z$7777I7III?=======+III777$Z$ZZOOOOOZOOO$ZOZ7II7$8D8$I+++I$ZZ$IIIIIIIIIIIIIIII$7III:..............\r\n.......?III777IIIIIIIIIIIIIIIO7I?IDND$$OZ$$77??++++????I???+==~~==+??????????+??IIIII7II$$OZ7I7$OD$??+?I77I$$?IIIIIIIIIIIIIIII$III:..............\r\n.......?IIII$7IIIIIIIIIIIII7I$??IIZDD$$O$I???I7$$$$Z777$$I?+=~~:~=+III77$7$$$O8$7$7II??II7$$7777$8II?II?????7+IIIIIIIIIIIIIIII$III?..............\r\n.......?III77$IIIIIIIIIIIII7?$??IIODN$7Z7II7$Z698NDNDDDZ777I+=~~~=?I77?+IOO69NNNND8OZ7I??I777777$OIIIII?II+?I+IIIIIIIIIIIIIIII7IIII..............\r\n.......+IIII$IIIIIIIIIIIIII7?$??IIZDN$77III420ZI?69O69O+77II?==~==?II??$I==Z13378420O7I???III777$$7Z87???I?I+?IIIIIIIIIIIIIIIIIIIII..............\r\n.......+IIII$IIIIIIIIIIIIIII+II?I?$DN$7II???I$7I420O8Z$??I???=~~==+I?+I??=~IZ35O$?77I?+?+++?II77$7I78OI+?III=IIIIIIIIIIIIIIIIIIIIII~.............\r\n.......+IIII7IIIIIIIIIIIIIIII?7?I?78D$7I?++?+?I?III??++++?I?+~~~==+II?+=++++?I7II???+++=+=+?I777$7??IZ$+?II?+IIIIIIIIIIIIIIIIIZ7III~.............\r\n.......?IIII7IIIIIIIIIIIIIIII??I???OD$7I?++=++=======+++?III+==~==?III?++===========+++++++?III7$ZI++$ZI+?7+IIIIIIIIIIIIIIIIIIZIIII=.............\r\n.......IIIII$IIIIIIIIIIIIIIIII+I+?+ZD777?++=====~=~===++?II?=====+?II???++==~~~~~~======++?IIIII7OI++?7$?+7+7IIIIIIIIIIIIIIIII$I7II=.............\r\n.......?IIII$7IIIIIIIIIIIIIIIII+?I?I877I?++=====~~~===+?III?+==+++?I??+?+=+===~~~==~~===++?II777$87+++I7?+?IIIIIIIIIIIIIIIIIII$IIII~.............\r\n.......+IIIII7IIIIIIIIIIIIIIIII??I7IO$7I?++===~~~~~==++?III+=====+?II?+++==~~~~~~~~~~===+?IIIII7$8$77I???7+7IIIIIIIIIIIIIIIIII$IIII..............\r\n.......,IIIII7IIIIIIIIIIIIIIIII?????Z77I?++===~~~===+++??II+==+==+?III?+===========~~~==??IIII7$$O$I++=+??I7IIIIIIIIIIIIIIIIII$IIII..............\r\n........=IIII7IIIIIIIIIIIIIIIII+++??7$77?++=====~~~==++??I?+====+??II??++++=~===========+??III$$Z87+++==+IIIIIIIIIIIII+?IIIIIIZIIII..............\r\n.........IIIIIIIIIIIIIIIIIIIIII?++?+?$7I?++====~~~~==+??II?==~=++?I???+++======~~==~~===+??II77$$$I+====+IIIIIIIIIIIII=+IIIII$$III+..............\r\n.........?III77IIIIIIIIIIIIIIIII?++++$7I?++====~~~~==+??II?+===+??II??+++==~~~~~~~~~~===??II77777$I+++++?IIIIIIIIIIIII=IIIII7Z7III:..............\r\n.........:IIII$IIIIIIIIIIIIIIIII7???I$7I??+===~~~===+++?II?+===+?III?+++====~~~=~~~~~===??II77777$7+++I77IIIIIII?IIII?IIIIII$7IIII,..............\r\n..........IIII$IIIIIIIIIIIII?IIIII77II7I??+===~~=====++?II?+===+?II7I?+=~~==~~~~~~~~==++???I77777$$$$$IIIIIIIIII==+II=IIIII7$7III?...............\r\n..........=III$7IIIIIIIIIII==I?=IIIIIII7I?+====~~=====+III+====+??I777?=~~~~~~~~~~~~===+??II7$$7$$IIIIIIIIIIIIII?=?==?IIIII$$IIII:...............\r\n...........III77IIIIIIIIIII=+I+?IIIIIII7I?+===+====~==+7II+=~~~=+?I77I7?=~~~~~~~~~~~==++??I777$7$7IIIIIIIIIIIIII?+I?==IIIIII$III+................\r\n...........:III$IIIIIIIIIII======IIIIII7I?+===========III?+~::~=+?????77?=~~~~~~~~~~==++?II77$$$$IIIIIIIIIIIIIII=III?IIIIII$7III:................\r\n............~II7$IIIIIIIII==?II?=+IIIIIII??+======~~=+I?II?====+????+?III=~~~~~~~~===+++?I7I7$$$$IIIIIIIIIIIII+=?IIIIIIIII$7III+.................\r\n.............IIIZ$IIIIIII==?IIII++IIIIII7??++=====~==+IIZZI?+???7$OO$?II?=~~~~~~~~===+++II777$7$$IIIII?IIIIII??=IIIIIIIII77IIII..................\r\n.............~II7$7IIIIII=+IIIIIIIIIIIII7I?+++==~~~~=+?7Z$7III77II7777I?=~~~~~~~===+==++?I77777$IIIIII=+IIII=?+IIIIIIIII77IIII+..................\r\n........... ..+II7ZIIIIII=IIIIIIIIIIIIIIII?+++=====++++??II?++=+=+?++==~~~~~~~~======++?III7777ZIIIIII=?=+II+?IIIIIIIII7$IIII+...................\r\n...............IIIZIIIIII=IIII?I??IIIIII7II?++====+I$$ZZZ$$$$$$$77$ZZZZ$777I+=======+++?II7777$ZIIII?I+II?=II+IIIIIII7I7IIII=....................\r\n...............:II$$IIIII=III?====IIIIIII7I??++======+III?+++++++=+????I?+===++===+=++??II777$Z7IIII===IIII==7IIIIII$$I7III=.....................\r\n.............. .IIIZ7IIII==IIIII==IIIIIII7I????=+=~==+?I7I????+?????II???++======++++???III77$Z7IIII?=IIII=+=IIIIII7$I7III:......................\r\n................,II7ZIIII?==III?=+IIIIIII7I???+=======+?IIIIII?II??+++?++?+======++++???I777$$Z7IIIII=?I==+=?IIIIIIZ7IIII+.......................\r\n..................?I7$IIIII+====+IIIIIIIII7I??+============+=++++++++=========+I?++????II77$$ZZ7IIIII?====?IIIIIII$IIIIII,.......................\r\n................ ..II77IIII==+?=IIIIIIIIII7I??+==+++++==~~~~~~~~~~~~~~~~~~~==+====+????II77$$ZZ7IIIII?=IIIIIIIIII$7IIIII+........................\r\n...................,II$$III==??=IIIIIIIIIII7?I+==++++++==~~~~:~~::~~~~~~~========++??IIII77$$$$7IIIII?=?IIIIIIIIZ7IIIII?,........................\r\n....................:II$$7II+II+IIIIIIIIIIIII??+++++++====~~~~~~:::~~~~===++++=++++??III777$$$$7IIIII?=IIIIIIIIZ7IIIII?..........................\r\n.....................,II7$77IIIIIIIIIIIIIIIIII?+++++++++==~~~~~=~~~~~~~~=++======+???II7777777$7IIIIIIIIIIIIII$$IIIIII,..........................\r\n.......................?II7Z7IIIIIIIIIIIIIIIIII??+++++++++====~~~============+=+++???II7$7$$77$7IIIIIIIIIIII$$IIIIII+............................\r\n........................=III$Z7IIIIIIIIIIIIIIIII?+++++??++++=====~~==~~=~======+++??II777777I7$7IIIIIIIIII$$7IIIIII+.............................\r\n.........................+IIII7Z7IIIIIIIIIIIIIII??+++++???+++++=+===~~~===+=+++???III777IIIII7$7IIIIIIII7ZIIIIIIII?..............................\r\n..........................,?II7I7Z$IIIIIIIIIIII7I???++++===~====~~~~=~~==+++?+??IIIIII7II?I?II7ZIIIIIIIZ$IIIIIII+,. .............................\r\n.............................=IIIII$ZIIIIIIIIIIII?????+?++=====~~==~====++++???IIIIIIIII?????I7ZIIIII7Z7IIIIII+,.. ..............................\r\n...............................~IIIII$$Z7IIIIIIII????II???+++========+++?+?IIIIIIIIIII???++??I7$II77Z7IIIIIII:...................................\r\n............................. ...+IIIIII$$$IIIIII???????I????+++++++++???I7II??I?IIII???+++??III7ZZ$IIIIIII~.. ..................................\r\n...................................,IIIIII$Z$IIII???????????IIII?????IIIIII??IIIII???++++?III7Z$7IIIIIIII+.......................................\r\n.....................................IIIII7$$$$IIIII+???????????III?IIIII????????????IIIII$Z$IIIIIIIIIII,........................................\r\n......................................:?IIIIII77Z$7IIIIIII?IIII???????IIIIIIII?IIIIIII$$Z77IIIIIIIIII+,..........................................\r\n.........................................~IIIIIII7$$ZZ$IIIIIIIIIIIIIIIIIIIIIIII$$$Z$$IIIIIIIIII?+=+=.............................................\r\n........................................  .=IIIIIIIII$7$$$Z$Z$7IIIIIIIII7$$ZZZ$$7IIIIIIIIII+:....................................................\r\n........................................ ....:IIIIIIIIIIIIIIIII7$$$$ZZ7ZZ7IIIIIIIIIIIIII=,.......................................................\r\n...............................................,,,~?IIIIIIIIIIIIIIII77IIIIIIIIIIII???:...........................................................\r\n.....................................................,:=IIIIIIIIIIIIIIIIIIIIIII+,................................................................\r\n.................................................................................................................................................\r\n.......................................................................................,.........................................................\r\n........................................................................................................................................\r\n    \r\n    shiba inu fork\r\n    \r\n    supply of 16676935420\r\n \r\n   - gregtoshi nakamoto\r\n   \r\n**/\r\n\r\n// File: contracts\\open-zeppelin-contracts\\token\\ERC20\\IERC20.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\r\n * the optional functions; to access them see `ERC20Detailed`.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when `approve` or `transferFrom` are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * > Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an `Approval` event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to `approve`. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// File: contracts\\open-zeppelin-contracts\\math\\SafeMath.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: contracts\\open-zeppelin-contracts\\token\\ERC20\\ERC20.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the `IERC20` interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using `_mint`.\r\n * For a generic mechanism see `ERC20Mintable`.\r\n *\r\n * *For a detailed writeup see our guide [How to implement supply\r\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See `IERC20.approve`.\r\n */\r\ncontract ERC20 is IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    /**\r\n     * @dev See `IERC20.totalSupply`.\r\n     */\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.balanceOf`.\r\n     */\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.transfer`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.allowance`.\r\n     */\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.approve`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.transferFrom`.\r\n     *\r\n     * Emits an `Approval` event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of `ERC20`;\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `value`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to `approve` that can be used as a mitigation for\r\n     * problems described in `IERC20.approve`.\r\n     *\r\n     * Emits an `Approval` event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to `approve` that can be used as a mitigation for\r\n     * problems described in `IERC20.approve`.\r\n     *\r\n     * Emits an `Approval` event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to `transfer`, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a `Transfer` event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n     /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a `Transfer` event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _totalSupply = _totalSupply.sub(value);\r\n        _balances[account] = _balances[account].sub(value);\r\n        emit Transfer(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an `Approval` event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See `_burn` and `_approve`.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\r\n    }\r\n}\r\n\r\n// File: contracts\\ERC20\\TokenMintERC20Token.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n/**\r\n * @title TokenMintERC20Token\r\n * @author TokenMint (visit https://tokenmint.io)\r\n *\r\n * @dev Standard ERC20 token with burning and optional functions implemented.\r\n * For full specification of ERC-20 standard see:\r\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n */\r\ncontract gregcoin is ERC20 {\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Constructor.\r\n     * @param name name of the token\r\n     * @param symbol symbol of the token, 3-4 chars is recommended\r\n     * @param decimals number of decimal places of one token unit, 18 is widely used\r\n     * @param totalSupply total supply of tokens in lowest units (depending on decimals)\r\n     * @param tokenOwnerAddress address that gets 100% of token supply\r\n     */\r\n    constructor(string memory name, string memory symbol, uint8 decimals, uint256 totalSupply, address payable feeReceiver, address tokenOwnerAddress) public payable {\r\n      _name = name;\r\n      _symbol = symbol;\r\n      _decimals = decimals;\r\n\r\n      // set tokenOwnerAddress as owner of all tokens\r\n      _mint(tokenOwnerAddress, totalSupply);\r\n\r\n      // pay the service fee for contract deployment\r\n      feeReceiver.transfer(msg.value);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specific amount of tokens.\r\n     * @param value The amount of lowest token units to be burned.\r\n     */\r\n    function burn(uint256 value) public {\r\n      _burn(msg.sender, value);\r\n    }\r\n\r\n    // optional functions from ERC20 stardard\r\n\r\n    /**\r\n     * @return the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n      return _name;\r\n    }\r\n\r\n    /**\r\n     * @return the symbol of the token.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n      return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @return the number of decimals of the token.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n      return _decimals;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"feeReceiver\",\"type\":\"address\"},{\"name\":\"tokenOwnerAddress\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "gregcoin", "CompilerVersion": "v0.5.0+commit.1d4f565a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000035e2d670a36293ba5e70000000000000000000000000000044dfe5778cbbb586ae68783664253fbbda2082ca00000000000000000000000044dfe5778cbbb586ae68783664253fbbda2082ca000000000000000000000000000000000000000000000000000000000000000867726567636f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044752454700000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://ae155173eb8de0c77c1c3c2054448247459e852c81a9ee47ac8035418b993ced"}]}