{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.5.16;\r\n\r\ncontract StandardBearERC20 {\r\n    // \u5408\u7ea6\u540d\u79f0\r\n    string public constant name = \"BEAR\";\r\n    // \u4ee3\u5e01\u7b26\u53f7\r\n    string public constant symbol = \"BEAR\";\r\n    // \u4ee3\u5e01\u7cbe\u5ea6\r\n    uint8 public constant decimals = 6;\r\n    // \u4ee3\u5e01\u603b\u4f9b\u5e94\u91cf\uff1a 100 million ERC\r\n    uint private _totalSupply = 100000000e6; \r\n    \r\n    // \u6388\u6743\u6570\u91cf \r\n    mapping (address => mapping (address => uint256)) internal allowances;\r\n    // \u8d26\u6237\u4f59\u989d\r\n    mapping (address => uint256) internal balances;\r\n\r\n    address public owner;\r\n    address public burner;\r\n    \r\n    /**\r\n     * \u6784\u9020\u4e00\u4e2a\u4ee3\u5e01\u5408\u7ea6\u5b9e\u4f8b\r\n     * @param account \u4f7f\u7528account\u4f5c\u4e3aowner\r\n     */\r\n    constructor(address account) public {\r\n        owner = account;\r\n        balances[owner] = uint256(_totalSupply);\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n    /**\r\n     * \u67e5\u8be2\u4ee3\u5e01\u603b\u4f9b\u5e94\u91cf\r\n     * @return \u4ee3\u5e01\u603b\u4f9b\u5e94\u91cf\r\n     */\r\n    function totalSupply() external view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * \u67e5\u8be2\u6307\u5b9a\u5730\u5740\u7684\u4ee3\u5e01\u6570\u91cf\r\n     * @param \u8d26\u6237\u5730\u5740\r\n     * @return \u4ee3\u5e01\u6570\u91cf\r\n     */\r\n    function balanceOf(address account) external view returns (uint) {\r\n        return balances[account];\r\n    }\r\n    \r\n    /**\r\n     * \u67e5\u8be2\u8d26\u6237\u6388\u6743\u7ed9\u6307\u5b9a\u5408\u7ea6\u7684\u53ef\u4ea4\u6613\u4ee3\u5e01\u6570\u91cf\r\n     * @param account \u6307\u5b9a\u7528\u6237\r\n     * @param spender \u6307\u5b9a\u5408\u7ea6\u8d26\u6237\r\n     * @return \u6388\u6743\u6570\u91cf\r\n     */\r\n    function allowance(address account, address spender) external view returns (uint) {\r\n        return allowances[account][spender];\r\n    }\r\n\r\n    /**\r\n     * \u6388\u6743\u7ed9\u5408\u7ea6\u4ece\u81ea\u8eab\u53d1\u9001\u4e00\u5b9a\u6570\u91cf\u7684\u4ea4\u6613\r\n     * @param spender \u6388\u6743\u76ee\u6807\u5408\u7ea6\r\n     * @param amount \u4ea4\u6613\u4ee3\u5e01\u6570\u91cf\r\n     * @return \u4ea4\u6613\u662f\u5426\u6210\u529f\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \u666e\u901a\u8f6c\u8d26\r\n     * @param dst \u76ee\u6807\u5730\u5740\r\n     * @param \u8f6c\u8d26\u6570\u91cf\r\n     * @return \u8f6c\u8d26\u662f\u5426\u6210\u529f\r\n     */\r\n    function transfer(address dst, uint256 amount) external returns (bool) {\r\n        _transferTokens(msg.sender, dst, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice \u8c03\u7528\u5408\u7ea6\u8f6c\u8d26\uff0c\u4ecesrc\u5230dst\uff0c\u9700\u8981\u5148\u5bf9\u4ee3\u5e01\u8fdb\u884c\u6388\u6743\r\n     * @param src \u6e90\u5934\u5730\u5740\r\n     * @param dst \u76ee\u6807\u5730\u5740\r\n     * @param \u8f6c\u8d26\u6570\u91cf\r\n     * @return \u8f6c\u8d26\u662f\u5426\u6210\u529f\r\n     */\r\n    function transferFrom(address src, address dst, uint256 amount) external returns (bool) {\r\n        address spender = msg.sender;\r\n        uint256 spenderAllowance = allowances[src][spender];\r\n\r\n        if (spender != src && spenderAllowance != uint256(-1)) {\r\n            uint256 newAllowance = sub(spenderAllowance, amount, \"StandERC20::transferFrom: transfer amount exceeds spender allowance\");\r\n            allowances[src][spender] = newAllowance;\r\n\r\n            emit Approval(src, spender, newAllowance);\r\n        }\r\n\r\n        _transferTokens(src, dst, amount);\r\n        return true;\r\n    }\r\n\r\n    function _transferTokens(address src, address dst, uint256 amount) internal {\r\n        require(src != address(0), \"StandERC20::_transferTokens: cannot transfer from the zero address\");\r\n        require(dst != address(0), \"StandERC20::_transferTokens: cannot transfer to the zero address\");\r\n\r\n        balances[src] = sub(balances[src], amount, \"StandERC20::_transferTokens: transfer amount exceeds balance\");\r\n        balances[dst] = add(balances[dst], amount, \"StandERC20::_transferTokens: transfer amount overflows\");\r\n        emit Transfer(src, dst, amount);\r\n    }\r\n    \r\n    // \u8bbe\u7f6e\u9500\u6bc1\u4eba\u5458 \r\n    function setBurner(address newBurner) external returns (bool) {\r\n        require(msg.sender == owner, \"StandERC20Expend::setBurner: onlyOwner method called by non-owner\");\r\n        burner = newBurner;\r\n        return true;\r\n    }\r\n    \r\n    // \u4ee3\u5e01\u9500\u6bc1 \r\n    function burn(uint256 amount) external returns (bool) {\r\n        require(msg.sender == burner, \"StandERC20Expend::burn: onlyBurner methods called by non-burner\");\r\n\r\n        balances[burner] = sub(balances[burner], amount, \"StandERC20Expend::burn: transfer amount exceeds balance\");\r\n        _totalSupply = sub(_totalSupply, amount, \"StandERC20Expend::burn: transfer amount exceeds balance\");\r\n        emit Burn(burner, amount);\r\n        return true;\r\n    }\r\n\r\n    // \u8f6c\u8d26\u4e8b\u4ef6\uff0c\u4f9b\u9700\u8981\u76d1\u542c\u7684\u5408\u7ea6\u4f7f\u7528\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    // \u6388\u6743\u4e8b\u4ef6\uff0c\u4f9b\u9700\u8981\u76d1\u542c\u7684\u5408\u7ea6\u4f7f\u7528\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    // \u9500\u6bc1\u4e8b\u4ef6\uff0c\u4f9b\u9700\u8981\u76d1\u542c\u7684\u5408\u7ea6\u4f7f\u7528\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, errorMessage);\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBurner\",\"type\":\"address\"}],\"name\":\"setBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StandardBearERC20", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000cec40bf48ed24c3907a57dc6d823d64869101f8d", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://f50736b36f1011efc912d35f4a06f5a816b4255861842929533f2f3dbe35c859"}]}