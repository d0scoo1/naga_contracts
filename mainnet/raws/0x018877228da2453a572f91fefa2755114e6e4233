{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"MetaFly.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"./Pausable.sol\\\";\\n\\ncontract MetaFly is Ownable, Pausable {\\n\\n    string  public name = \\\"MetaFly\\\";\\n    string  public symbol = \\\"MTF\\\";\\n    string  public standard = \\\"MetaFly TOKEN CREATE BY META TEC\\\";\\n    uint256 public totalSupply = 1000000000000; \\n    uint8   public decimals = 3;\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n    event Mint(address indexed minter, address indexed account, uint256 amount);\\n    event Burn(address indexed burner, address indexed account, uint256 amount);\\n\\n    mapping(address =\\u003e uint256) internal _balances;\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) internal _allowed;\\n    \\n\\n    constructor() {\\n        // balanceOf[msg.sender] = totalSupply;\\n        _balances[msg.sender] = totalSupply;\\n    }\\n\\n    function transfer(address _to, uint256 _value)\\n        public\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        require(_to != address(0), \\\"MetaFly: to address is not valid\\\");\\n        require(\\n            _value \\u003c= _balances[msg.sender],\\n            \\\"MetaFly: insufficient balance\\\"\\n        );\\n        \\n        _balances[msg.sender] -= _value;\\n        _balances[_to] += _value;\\n\\n        emit Transfer(msg.sender, _to, _value);\\n\\n        return true;\\n    }\\n\\n    function balanceOf(address _owner)\\n        public\\n        view\\n        returns (uint256 balance)\\n    {\\n        return _balances[_owner];\\n    }\\n\\n    function approve(address _spender, uint256 _value)\\n        public\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        _allowed[msg.sender][_spender] = _value;\\n\\n        emit Approval(msg.sender, _spender, _value);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) public whenNotPaused returns (bool) {\\n        require(_from != address(0), \\\"MetaFly: from address is not valid\\\");\\n        require(_to != address(0), \\\"MetaFly: to address is not valid\\\");\\n        require(_value \\u003c= _balances[_from], \\\"MetaFly: insufficient balance\\\");\\n        require(\\n            _value \\u003c= _allowed[_from][msg.sender],\\n            \\\"MetaFly: from not allowed\\\"\\n        );\\n\\n        _balances[_from] -= _value;\\n        _balances[_to] += _value;\\n        _allowed[_from][msg.sender] -= _value;\\n\\n        emit Transfer(_from, _to, _value);\\n\\n        return true;\\n    }\\n\\n    function allowance(address _owner, address _spender)\\n        public\\n        view\\n        whenNotPaused\\n        returns (uint256)\\n    {\\n        return _allowed[_owner][_spender];\\n    }\\n\\n    function increaseApproval(address _spender, uint256 _addedValue)\\n        public\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        _allowed[msg.sender][_spender] += _addedValue;\\n\\n        emit Approval(msg.sender, _spender, _allowed[msg.sender][_spender]);\\n\\n        return true;\\n    }\\n\\n    function decreaseApproval(address _spender, uint256 _subtractedValue)\\n        public\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        uint256 oldValue = _allowed[msg.sender][_spender];\\n\\n        if (_subtractedValue \\u003e oldValue) {\\n            _allowed[msg.sender][_spender] = 0;\\n        } else {\\n            _allowed[msg.sender][_spender] = oldValue - _subtractedValue;\\n        }\\n\\n        emit Approval(msg.sender, _spender, _allowed[msg.sender][_spender]);\\n\\n        return true;\\n    }\\n\\n    function mintTo(address _to, uint256 _amount)\\n        public\\n        whenNotPaused\\n        onlyOwner\\n    {\\n        require(_to != address(0), \\\"MetaFly: to address is not valid\\\");\\n        require(_amount \\u003e 0, \\\"MetaFly: amount is not valid\\\");\\n\\n        totalSupply += _amount;\\n        _balances[_to] += _amount;\\n\\n        emit Mint(msg.sender, _to, _amount);\\n    }\\n\\n    function burnFrom(address _from, uint256 _amount)\\n        public\\n        whenNotPaused\\n        onlyOwner\\n    {\\n        require(_from != address(0), \\\"MetaFly: from address is not valid\\\");\\n        require(_balances[_from] \\u003e= _amount, \\\"MetaFly: insufficient balance\\\");\\n\\n        _balances[_from] -= _amount;\\n        totalSupply -= _amount;\\n\\n        emit Burn(msg.sender, _from, _amount);\\n    }\\n\\n    \\n\\n\\n}\"},\"Ownable.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ncontract Ownable {\\n  address private _owner;\\n\\n  constructor() {\\n    _owner = msg.sender;\\n  }\\n\\n  modifier onlyOwner() {\\n    require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n    _;\\n  }\\n\\n  function owner(\\n  ) public view returns (address) {\\n    return _owner;\\n  }\\n\\n  function isOwner(\\n  ) public view returns (bool) {\\n    return msg.sender == _owner;\\n  }\\n}\"},\"Pausable.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\ncontract Pausable is Ownable {\\n\\n    event Paused(address account);\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    modifier whenNotPaused() \\n    {\\n        require(!_paused, \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    modifier whenPaused() {\\n        require(_paused, \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    constructor() {}\\n\\n    function paused(\\n    ) public view returns (bool) \\n    {\\n        return _paused;\\n    }\\n\\n    function pause(\\n    ) public \\n        onlyOwner \\n        whenNotPaused \\n    {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    function unpause(\\n    ) public \\n        onlyOwner \\n        whenPaused \\n    {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n}\"}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MetaFly", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ffc182fa05babaeef8f1acedeb2cf5a694d499fe94872ac794ce06d4ec613f21"}]}