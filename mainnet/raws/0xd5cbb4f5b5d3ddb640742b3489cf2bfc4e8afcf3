{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.8.11;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\ncontract DharmaTradeReserveFinalImplementation {\r\n    address public constant recipient = 0x67e1b186e6dA49917922C040FD07bE1827978CE7;\r\n\r\n    function sendAll(address token) public {\r\n        if (token == address(0)) {\r\n            recipient.call{value: address(this).balance}(\"\");\r\n        } else {\r\n            IERC20(token).transfer(recipient, IERC20(token).balanceOf(address(this)));\r\n        }\r\n    }\r\n\r\n    function batchSendAll(address[] calldata tokens) external {\r\n        for (uint256 i = 0; i < tokens.length; ++i) {\r\n            sendAll(tokens[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"batchSendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"sendAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DharmaTradeReserveFinalImplementation", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://16713e6a3579d2f9cce96540d2945ad1d285491fe9684728f897e7287136652e"}]}