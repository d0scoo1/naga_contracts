{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface migrator {\r\n    function migrateRewardsFor(address address_) external;\r\n}\r\n\r\ncontract migratorHelper {\r\n    constructor(){}\r\n    \r\n    migrator public Plasma = migrator(0xC3aF7Bb38999e8A1db7849e30706Efbf8FFd57Fa);\r\n\r\n    function migrateMany(address[] calldata addresses_) external {\r\n        for (uint256 i = 0; i < addresses_.length; i++) {\r\n            Plasma.migrateRewardsFor(addresses_[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Plasma\",\"outputs\":[{\"internalType\":\"contract migrator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses_\",\"type\":\"address[]\"}],\"name\":\"migrateMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "migratorHelper", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4197c6c13fa047f2810d3fe8b1cbbb01b2eb5c4459e2547f8fcf0ae7be35db05"}]}