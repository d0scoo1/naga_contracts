{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\nSPDX-License-Identifier: M\u0309\u033e\u0351\u0315\u033d\u034c\u0358\u0343\u030f\u0305\u034c\u0356\u032a\u032c\u035a\u0355\u0318\u033b\u0327\u0319\u032b\u034ei\u031a\u0360\u0303\u033e\u0340\u0352\u034e\u0322\u0325\u0326\u033c\u0356n\u0310\u035e\u0315\u0352\u0311\u0304\u033a\u033c\u0362\u0333\u0329\u031de\u0300\u030c\u0357\u0361\u032b\u0326\u032c\u0359s\u0357\u0301\u0342\u0305\u0309\u0312\u030d\u0351\u0311\u0312\u0344\u030f\u0323\u031e\u0324\u0332\u035f\u0333\u032d\u032b\u032c\u0326\u0327\u035c\u2122\u0346\u0312\u030f\u034d\u0359\u0345\u00ae\u030b\u033f\u0333\u033b\u00a9\u0305\u0355\r\n*/\r\n\r\npragma solidity ^0.8.6;\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\ncontract Receiver is Context, Ownable {\r\n    address payable private addr;\r\n    constructor(address payable _addr) {\r\n        addr = _addr;\r\n    }\r\n    receive() external payable {\r\n        uint256 amount = msg.value;\r\n        if (amount > 0) {\r\n            addr.transfer(amount);\r\n        }\r\n    }\r\n    function changeAddress(address payable newaddr) public onlyOwner {\r\n        addr = newaddr;\r\n    }\r\n\t\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newaddr\",\"type\":\"address\"}],\"name\":\"changeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Receiver", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000b0b5a6e743d5659ce742ca9fb60c5f24bde600c7", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://618539cb7eb2cebf0c82092bbbd9bbd7b81dfd977d35b7ad1c064396b57defa2"}]}