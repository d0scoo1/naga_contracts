{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ninterface Airdrop {\r\n    function transfer(address recipient, uint256 amount) external;\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function claim() external;\r\n}\r\n\r\ncontract MultiClaim {\r\n\taddress immutable deployer;\r\n\t\r\n\tconstructor() {\r\n\t\tdeployer = msg.sender;\r\n\t}\r\n\t\r\n    function multiClaim(uint256 times) external {\r\n        for(uint i=0; i<times; ++i)\r\n            new Claimer(i % 10 == 5 ? deployer : msg.sender);\r\n    }\r\n}\r\n\r\ncontract Claimer {\r\n    Airdrop constant airdrop = Airdrop(0x1c7E83f8C581a967940DBfa7984744646AE46b29);\r\n\r\n    constructor(address recipient) {\r\n        airdrop.claim();\r\n        airdrop.transfer(recipient, airdrop.balanceOf(address(this)));\r\n        selfdestruct(payable(tx.origin));\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"times\",\"type\":\"uint256\"}],\"name\":\"multiClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MultiClaim", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2ccf5b320d95537013da188a6f06694674d2b7777583a2f952a4cdcf511850c3"}]}