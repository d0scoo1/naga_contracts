{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity 0.8.4;\r\n\r\n/*______/\\\\\\\\\\\\\\\\\\__/\\\\\\_______/\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\___\r\n _____/\\\\\\////////__\\///\\\\\\___/\\\\\\/__\\/////\\\\\\///__\\/\\\\\\/////////\\\\\\_\r\n  ___/\\\\\\/_____________\\///\\\\\\\\\\\\/________\\/\\\\\\_____\\/\\\\\\_______\\/\\\\\\_\r\n   __/\\\\\\_________________\\//\\\\\\\\__________\\/\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__\r\n    _\\/\\\\\\__________________\\/\\\\\\\\__________\\/\\\\\\_____\\/\\\\\\/////////____\r\n     _\\//\\\\\\_________________/\\\\\\\\\\\\_________\\/\\\\\\_____\\/\\\\\\_____________\r\n      __\\///\\\\\\_____________/\\\\\\////\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____________\r\n       ____\\////\\\\\\\\\\\\\\\\\\__/\\\\\\/___\\///\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\_____________\r\n        _______\\/////////__\\///_______\\///__\\///////////__\\///____________*/\r\n\r\n/**\r\n * @title CXIP Custom Bug Fix for the Justin Aversano - Smoke and Mirrors collection.\r\n * @author CXIP-Labs\r\n * @notice This is a custom bug fix for a very specific contract.\r\n * @dev Goal of this fix is to shift token data off by one, and fix the token id missmatch to titles.\r\n */\r\ncontract AversanoBugFix {\r\n    /**\r\n     * @dev Stores default collection data: name, symbol, and royalties.\r\n     */\r\n    CollectionData private _collectionData;\r\n\r\n    /**\r\n     * @dev Internal last minted token id, to allow for auto-increment.\r\n     */\r\n    uint256 private _currentTokenId;\r\n\r\n    /**\r\n     * @dev Array of all token ids in collection.\r\n     */\r\n    uint256[] private _allTokens;\r\n\r\n    /**\r\n     * @dev Map of token id to array index of _ownedTokens.\r\n     */\r\n    mapping(uint256 => uint256) private _ownedTokensIndex;\r\n\r\n    /**\r\n     * @dev Token id to wallet (owner) address map.\r\n     */\r\n    mapping(uint256 => address) private _tokenOwner;\r\n\r\n    /**\r\n     * @dev 1-to-1 map of token id that was assigned an approved operator address.\r\n     */\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    /**\r\n     * @dev Map of total tokens owner by a specific address.\r\n     */\r\n    mapping(address => uint256) private _ownedTokensCount;\r\n\r\n    /**\r\n     * @dev Map of array of token ids owned by a specific address.\r\n     */\r\n    mapping(address => uint256[]) private _ownedTokens;\r\n\r\n    /**\r\n     * @notice Map of full operator approval for a particular address.\r\n     * @dev Usually utilised for supporting marketplace proxy wallets.\r\n     */\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Token data mapped by token id.\r\n     */\r\n    mapping(uint256 => TokenData) private _tokenData;\r\n\r\n    /**\r\n     * @dev We are leaving constructor empty on purpose. To not disturb any existing data\r\n     */\r\n    constructor() {}\r\n\r\n    /**\r\n     * @dev Shifting tokens back by one, from token #6 to token #79\r\n     * @dev This will result in #6 -> #5, and all the way to #79 -> #78\r\n     * @dev Token #79 will need to be burned after this\r\n     */\r\n     function aversanoTokenIdMissmatchFix() public {\r\n        require(\r\n            (\r\n                msg.sender == 0x799E1Fe921d587D7C956e73E95fF6103DC3E7883 // Justin Aversano ETH wallet\r\n                || msg.sender == 0xF76119Ba666fe838431544cDBA513dE9b6d851C1 // CXIP Gnosis Safe multisig\r\n            ),\r\n            \"CXIP: Unauthorized wallet\"\r\n        );\r\n        require(address(this) == 0xE6501d00DDCa2AB22c655C612e73Ed822D9256a2, \"CXIP: Unauthorized address\");\r\n        for (uint256 i = 6; i < 80; i++) {\r\n            _tokenData [i - 1] = _tokenData [i];\r\n        }\r\n     }\r\n\r\n}\r\n\r\nstruct CollectionData {\r\n    bytes32 name;\r\n    bytes32 name2;\r\n    bytes32 symbol;\r\n    address royalties;\r\n    uint96 bps;\r\n}\r\nenum UriType {\r\n    ARWEAVE, // 0\r\n    IPFS, // 1\r\n    HTTP // 2\r\n}\r\nstruct TokenData {\r\n    bytes32 payloadHash;\r\n    Verification payloadSignature;\r\n    address creator;\r\n    bytes32 arweave;\r\n    bytes11 arweave2;\r\n    bytes32 ipfs;\r\n    bytes14 ipfs2;\r\n}\r\nstruct Verification {\r\n    bytes32 r;\r\n    bytes32 s;\r\n    uint8 v;\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"aversanoTokenIdMissmatchFix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AversanoBugFix", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "20000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7c679273c1da33c21c2c2cc952e72c0f90f0f0611806eab3259aa6d37801d4a1"}]}