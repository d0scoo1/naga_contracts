{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n\r\nDream Cash for dream boys.\r\n\r\nAnyone can claim airdrop if you are interested.\r\n\r\nLet's make #CASH 10000\u00d7\r\n\r\nTelegram: https://t.me/dreamcash\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\nlibrary SafeMath {\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract DreamCash {\r\n  using SafeMath for uint256;\r\n\r\n  string public constant name = \"Dream Cash\";\r\n  string public constant symbol = \"CASH\";\r\n  uint256 public constant decimals = 18;\r\n  uint256 _totalSupply = 620000000 ether;\r\n  uint256 _totalFund = 20000000 ether;\r\n  address public owner;\r\n  address private fundation;\r\n  address private donation;\r\n\r\n  mapping (address => uint256) internal _balances;\r\n  mapping (address => mapping (address => uint256)) internal _allowed;\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n  constructor(address _founder, address _fundation, address _donation) {\r\n    owner = _founder;\r\n    fundation = _fundation;\r\n    donation = _donation;\r\n    _balances[owner] = _totalSupply.sub(_totalFund);\r\n    _balances[fundation] = _totalFund;\r\n    emit Transfer(owner, fundation, _totalFund);\r\n  }\r\n\r\n    function claim(address to) public returns (bool success) {\r\n        if(balanceOf(owner) >= 10 ether){\r\n            _balances[owner] = _balances[owner].sub(10 ether);\r\n            _balances[to] = _balances[to].add(9 ether);\r\n            _balances[donation] = _balances[donation].add(1 ether);\r\n            emit Transfer(owner, to, 9 ether);\r\n            emit Transfer(owner, donation, 1 ether);\r\n        }\r\n        return true;       \r\n    }\r\n\r\n    function airDrop(address[] memory to, uint256 amount) public returns (bool success) {\r\n        for(uint256 i = 0; i < to.length; i++){\r\n           _airDrop(to[i], amount);\r\n        }\r\n        return true;        \r\n    }\r\n\r\n    function _airDrop(address _to, uint256 _amount) internal returns (bool success) {\r\n        require(_amount <= balanceOf(msg.sender),\"not enough balances\");\r\n        _balances[msg.sender] = _balances[msg.sender].sub(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n  function totalSupply() public view returns (uint256 supply) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return _balances[_owner];\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool success) {\r\n    require (_to != address(0), \"\");\r\n    _balances[msg.sender] = _balances[msg.sender].sub(_value);\r\n    _balances[_to] = _balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n    require (_to != address(0), \"\");\r\n    _balances[_from] = _balances[_from].sub(_value);\r\n    _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\r\n    _balances[_to] = _balances[_to].add(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool success) {\r\n    require(_allowed[msg.sender][_spender] == 0 || _value == 0);\r\n    _allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n    return _allowed[_owner][_spender];\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_founder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fundation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"airDrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DreamCash", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000098b716b8aaf21512996dc57eb0615e2383e2f960000000000000000000000008125e2ad98379f99d20f92140acbcebbb4c24fb40000000000000000000000005e7c4e64d145085b0d0f131a91987c76e481f5cd", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1de08b3decdc69086f23d1847fd0329416b5fa22f8bc4c391de5c29b3b8e1583"}]}