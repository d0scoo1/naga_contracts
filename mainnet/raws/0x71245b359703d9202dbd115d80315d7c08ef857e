{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: Apache2\r\n// Ethertone \u2014 \"The Official Register of Color Names\"\u2122, on the Blockchain\u2122\r\n// https://github.com/ctrlcctrlv/ethertone\r\npragma solidity ^0.8.0;\r\ncontract RGB {\r\n    mapping(address => mapping(bytes4 => uint256)) public customers;\r\n    mapping(address => mapping(bytes4 => bytes32)) public names;\r\n    mapping(bytes4 => address) public owners;\r\n    bytes3[] public named_colors;\r\n    address payable public owner = payable(address(0xFffFfffFf8Ca986cDfA7A4189AB6f56621E51362));\r\n\r\n    function get_color_name(bytes3 color_in) public view returns (bytes32) {\r\n        bytes4 color = bytes3_to_color(color_in);\r\n        return names[owners[color]][color];  \r\n    }\r\n\r\n    function set_owner(address new_owner) public {\r\n        require(msg.sender==owner, \"Only owner can change their address\");\r\n        owner = payable(new_owner);\r\n    }\r\n          \r\n    function receive_eth(string calldata colorname, bytes3 color_in) external payable returns (uint256) {\r\n        require(msg.value > 0, \"Must pay\");\r\n        bytes4 color = bytes3_to_color(color_in);\r\n        uint namelength = bytes(colorname).length;\r\n        require(namelength != 0, \"Name must be > 1 long\");\r\n        customers[msg.sender][color] += msg.value;\r\n        names[msg.sender][color] = bytes32(bytes(colorname));\r\n        uint cur_cost = customers[owners[color]][color];\r\n        uint new_cost = customers[msg.sender][color];\r\n        bool updated = new_cost > cur_cost;\r\n        if (updated) {\r\n            owners[color] = msg.sender;\r\n            named_colors.push(color_in);\r\n            return 0;\r\n        } else {\r\n            return cur_cost - new_cost;\r\n        }\r\n    }\r\n\r\n    function cashout() public payable {\r\n        require(msg.sender==owner, \"Only owner can trigger cashouts\");\r\n        owner.transfer(msg.value+address(this).balance);\r\n    }\r\n    \r\n    function bytes3_to_color(bytes3 color_in) private pure returns (bytes4) {\r\n        bytes memory color_t = '\\x00\\x00\\x00\\xFF';\r\n        color_t[0] = color_in[0];\r\n        color_t[1] = color_in[1];\r\n        color_t[2] = color_in[2];\r\n        bytes4 color = bytes4(color_t);\r\n        return color;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"cashout\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"customers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes3\",\"name\":\"color_in\",\"type\":\"bytes3\"}],\"name\":\"get_color_name\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"named_colors\",\"outputs\":[{\"internalType\":\"bytes3\",\"name\":\"\",\"type\":\"bytes3\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"names\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"colorname\",\"type\":\"string\"},{\"internalType\":\"bytes3\",\"name\":\"color_in\",\"type\":\"bytes3\"}],\"name\":\"receive_eth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"set_owner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RGB", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Apache-2.0", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://03a8b73af94f260ceed704ca7ea67633fdd958caeabb927cec76f18fa2b76fda"}]}