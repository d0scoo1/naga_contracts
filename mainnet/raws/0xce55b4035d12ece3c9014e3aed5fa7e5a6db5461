{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.12;\r\ninterface ERC20 {\r\n  function transfer(address _to, uint256 _value) external;\r\n  function approve(address _spender, uint256 _value) external;\r\n  function balanceOf(address _owner) external view returns (uint256);\r\n}\r\ninterface IWETH {\r\n  function withdraw(uint256 _value) external;\r\n}\r\ninterface IUniswapV2Pair {\r\n  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n}\r\ninterface IUniswapV2Factory {\r\n  function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\ninterface IUniswapV2Router {\r\n  function getAmountsOut(uint amountIn, address[] memory path) external view returns (uint[] memory amounts);\r\n}\r\n\r\ninterface VM {\r\n    function prank(address) external;\r\n    function expectRevert(bytes calldata) external;\r\n}\r\n\r\nstruct Trade {\r\n  address token;\r\n  uint96 amount;\r\n  address pair;\r\n  uint96 wethAmount;\r\n}\r\n\r\ncontract DumperUtils {\r\n  uint256 public constant MAX_SLIPPAGE = 100000;\r\n  address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n  IUniswapV2Factory public constant UNI_FACTORY = IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\r\n  IUniswapV2Router public constant UNI_ROUTER = IUniswapV2Router(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n  IUniswapV2Factory public constant SUSHI_FACTORY = IUniswapV2Factory(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\r\n  IUniswapV2Router public constant SUSHI_ROUTER = IUniswapV2Router(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);\r\n\r\n  // @notice send ERC20 to this contract before calling dump to sell them on uniswap v2 for ETH\r\n  // @param _tokens array of tokens to sell\r\n  // @param _dumper address of the dumper contract\r\n  // @param _slippage the slippage to use for each token (in %, from 0 to 100000)\r\n  function getDumpParams(\r\n    address[] calldata _tokens, \r\n    address _dumper,\r\n    uint256 _slippage\r\n  ) external view returns (Trade[] memory _trades) {\r\n    _trades = new Trade[](_tokens.length);\r\n    address[] memory _path = new address[](2);\r\n    uint256[] memory _uniRes = new uint256[](2);\r\n    uint256[] memory _sushiRes = new uint256[](2);\r\n    _path[1] = WETH;\r\n\r\n    uint256 _bal;\r\n    uint256 _bestRes;\r\n    address _token;\r\n    bool _isUniBest;\r\n\r\n    for (uint256 i = 0; i < _tokens.length; i++) {\r\n      _token = _tokens[i];\r\n      _path[0] = address(_token);\r\n      _bal = ERC20(_token).balanceOf(_dumper);\r\n      _uniRes = UNI_ROUTER.getAmountsOut(_bal, _path);\r\n      _sushiRes = SUSHI_ROUTER.getAmountsOut(_bal, _path);\r\n      _isUniBest = _uniRes[1] > _sushiRes[1];\r\n      _bestRes = _isUniBest ? _uniRes[1] : _sushiRes[1];\r\n      _bestRes -= _bestRes * _slippage / MAX_SLIPPAGE;\r\n      _trades[i] = Trade(\r\n        _token,\r\n        uint96(_bal),\r\n        (_isUniBest ? UNI_FACTORY : SUSHI_FACTORY).getPair(_token, WETH),\r\n        uint96(_bestRes)\r\n      );\r\n    }\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"MAX_SLIPPAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSHI_FACTORY\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSHI_ROUTER\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNI_FACTORY\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNI_ROUTER\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_dumper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slippage\",\"type\":\"uint256\"}],\"name\":\"getDumpParams\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"wethAmount\",\"type\":\"uint96\"}],\"internalType\":\"struct Trade[]\",\"name\":\"_trades\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DumperUtils", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://43eccdb311238789edde17e11e585b8040adaa767f42a8c2bb6611e4372646a9"}]}