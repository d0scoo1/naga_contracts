{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity >0.5.0 <0.9.0;\r\n\r\n\r\ninterface IERC20\r\n{\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address ower, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address repipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IUSDTERC20\r\n{\r\n    function transferFrom(address sender, address repipient, uint256 amount) external;\r\n}\r\n\r\ncontract MyVeriable\r\n{\r\n    bool public paused = false;\r\n    address public ownerAddress;\r\n\r\n    mapping(address => bool) private mWhiteAccountMap;\r\n\r\n    constructor()\r\n    {\r\n        ownerAddress = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender == ownerAddress, \"Invalid invoker!\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwnerOrWhiteAccount()\r\n    {\r\n        require(msg.sender == ownerAddress || mWhiteAccountMap[msg.sender] == true, \"Invalid invoker!\");\r\n        _;\r\n    }\r\n\r\n    function addWhiteAccount(address account) onlyOwner public returns(bool)\r\n    {\r\n        require(account != address(0), \"invalid address!\");\r\n        require(ownerAddress != account, \"Forbidden add owner!\");\r\n        mWhiteAccountMap[account] = true;\r\n        return true;\r\n    }\r\n\r\n    function removeWhiteAccount(address account) onlyOwner public returns(bool)\r\n    {\r\n        require(account != address(0), \"invalid address!\");\r\n        delete mWhiteAccountMap[account];\r\n        return true;\r\n    }\r\n\r\n    function existsWhiteAccount(address account) view public returns(bool)\r\n    {\r\n        return mWhiteAccountMap[account];\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    function doPause() onlyOwner whenNotPaused public returns(bool) {\r\n        paused = true;\r\n        return true;\r\n    }\r\n\r\n    function doUnpause() onlyOwner whenPaused public returns(bool) {\r\n        paused = false;\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract BasicUSDTTokenProcessor is MyVeriable{\r\n\r\n    mapping(string => address) public mToken20Maps;\r\n\r\n    constructor(string memory _symbol, address _tokenAddress)\r\n    {\r\n        mToken20Maps[_symbol] = _tokenAddress;\r\n    }\r\n\r\n    function addTokenSupport(string memory _symbol, address _tokenAddress) onlyOwner public returns(bool)\r\n    {\r\n        require(bytes(_symbol).length > 0, \"invalid symbol!\");\r\n        mToken20Maps[_symbol] = _tokenAddress;\r\n        return true;\r\n    }\r\n\r\n    function removeTokenSupport(string memory _symbol) onlyOwner public returns(bool)\r\n    {\r\n        require(bytes(_symbol).length > 0, \"invalid symbol!\");\r\n        delete mToken20Maps[_symbol];\r\n        return true;\r\n    }\r\n\r\n    function getTokenAddress(string memory _symbol) public view returns(address)\r\n    {\r\n        address erc20 = mToken20Maps[_symbol];\r\n        return erc20;\r\n    }\r\n\r\n    function transferFrom(string memory _symbol, address _fromAddress, address _toAddress, uint256 _amount) onlyOwnerOrWhiteAccount whenNotPaused public returns(bool)\r\n    {\r\n        // self not transfer self\r\n        require(_fromAddress != _toAddress, \"Invalid account addr!\");\r\n        require(_fromAddress != address(0), \"Invalid fromAddress!\");\r\n        require(_toAddress != address(0), \"Invalid toAddress!\");\r\n        require(_amount > 0, \"Invalid amount\");\r\n\r\n        address tokenAddress = mToken20Maps[_symbol];\r\n\r\n        bytes memory bytesSymbol = bytes(_symbol);\r\n\r\n        if(bytesSymbol.length == 4 && bytesSymbol[0] == 'U' && bytesSymbol[1] == 'S' && bytesSymbol[2] == 'D'&& bytesSymbol[3] == 'T'){\r\n            IUSDTERC20 tokenImpl = IUSDTERC20(tokenAddress);\r\n            tokenImpl.transferFrom(_fromAddress, _toAddress, _amount);\r\n        }\r\n        else{\r\n            IERC20 tokenImpl = IERC20(tokenAddress);\r\n            tokenImpl.transferFrom(_fromAddress, _toAddress, _amount);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(string memory _symbol, address _fromAddress,\r\n        address _toAddress1, uint256 _amount1,\r\n        address _toAddress2, uint256 _amount2) public returns(bool)\r\n    {\r\n        transferFrom(_symbol, _fromAddress, _toAddress1, _amount1);\r\n        if(_amount2 > 0 && _toAddress2 != address(0) && _fromAddress != _toAddress2)\r\n        {\r\n            transferFrom(_symbol, _fromAddress, _toAddress2, _amount2);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(string memory _symbol, address _fromAddress,\r\n        address _toAddress1, uint256 _amount1,\r\n        address _toAddress2, uint256 _amount2,\r\n        address _toAddress3, uint256 _amount3) public returns(bool)\r\n    {\r\n        transferFrom(_symbol, _fromAddress, _toAddress1, _amount1, _toAddress2, _amount2);\r\n        if(_amount3 > 0 && _toAddress3 != address(0) && _fromAddress != _toAddress3)\r\n        {\r\n            transferFrom(_symbol, _fromAddress, _toAddress3, _amount3);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(string memory _symbol, address _fromAddress,\r\n        address _toAddress1, uint256 _amount1,\r\n        address _toAddress2, uint256 _amount2,\r\n        address _toAddress3, uint256 _amount3,\r\n        address _toAddress4, uint256 _amount4) public returns(bool)\r\n    {\r\n        transferFrom(_symbol, _fromAddress, _toAddress1, _amount1, _toAddress2, _amount2, _toAddress3, _amount3);\r\n        if(_amount4 > 0 && _toAddress4 != address(0) && _fromAddress != _toAddress4)\r\n        {\r\n            transferFrom(_symbol, _fromAddress, _toAddress4, _amount4);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(string memory _symbol, address _account) public view returns(uint256)\r\n    {\r\n        require(_account != address(0), \"Invalid account addr!\");\r\n\r\n        IERC20 tokenImpl = IERC20(mToken20Maps[_symbol]);\r\n        return tokenImpl.balanceOf(_account);\r\n    }\r\n\r\n    function allowance(string memory _symbol, address _account) public view returns(uint256)\r\n    {\r\n        require(_account != address(0), \"Invalid account addr!\");\r\n\r\n        IERC20 tokenImpl = IERC20(mToken20Maps[_symbol]);\r\n        address selfContractAddress = address(this);\r\n        return tokenImpl.allowance(_account, selfContractAddress);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"addTokenSupport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhiteAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doUnpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"existsWhiteAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mToken20Maps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"removeTokenSupport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhiteAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAddress1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount2\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress3\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount3\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAddress1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount2\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress3\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount3\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress4\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount4\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAddress1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_toAddress2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount2\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BasicUSDTTokenProcessor", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000000000045553445400000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://848e4f65d4cfcb61b5f34b97b6adadfc403e14454a79f9045387d3ab48b0d41a"}]}