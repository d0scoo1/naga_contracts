{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\npragma abicoder v2;\r\n\r\n\r\n\r\ninterface IERC165 {\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\ncontract ERC165 is IERC165 {\r\n\r\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    constructor () {\r\n        _registerInterface(_INTERFACE_ID_ERC165);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\r\n        return _supportedInterfaces[interfaceId];\r\n    }\r\n\r\n    function _registerInterface(bytes4 interfaceId) internal virtual {\r\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\r\n        _supportedInterfaces[interfaceId] = true;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function burn(uint256 burnQuantity) external returns (bool);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n    function approve(address to, uint256 tokenId) external;\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n}\r\n\r\ninterface IERC721Enumerable is IERC721 {\r\n    function totalSupply() external view returns (uint256);\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}\r\n\r\ninterface IERC721Metadata is IERC721 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n}\r\n\r\ninterface IERC721Receiver {\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\r\n}\r\n\r\nlibrary Address {\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            if (returndata.length > 0) {\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nlibrary EnumerableMap {\r\n    struct MapEntry {\r\n        bytes32 _key;\r\n        bytes32 _value;\r\n    }\r\n\r\n    struct Map {\r\n        MapEntry[] _entries;\r\n        mapping (bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    function _set(Map storage map, bytes32 key, bytes32 value) private returns (bool) {\r\n        uint256 keyIndex = map._indexes[key];\r\n\r\n        if (keyIndex == 0) {\r\n            map._entries.push(MapEntry({ _key: key, _value: value }));\r\n            map._indexes[key] = map._entries.length;\r\n            return true;\r\n        } else {\r\n            map._entries[keyIndex - 1]._value = value;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\r\n        uint256 keyIndex = map._indexes[key];\r\n\r\n        if (keyIndex != 0) {\r\n            uint256 toDeleteIndex = keyIndex - 1;\r\n            uint256 lastIndex = map._entries.length - 1;\r\n\r\n            MapEntry storage lastEntry = map._entries[lastIndex];\r\n            map._entries[toDeleteIndex] = lastEntry;\r\n            map._indexes[lastEntry._key] = toDeleteIndex + 1;\r\n            map._entries.pop();\r\n            delete map._indexes[key];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\r\n        return map._indexes[key] != 0;\r\n    }\r\n\r\n    function _length(Map storage map) private view returns (uint256) {\r\n        return map._entries.length;\r\n    }\r\n\r\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\r\n        require(map._entries.length > index, \"EnumerableMap: index out of bounds\");\r\n\r\n        MapEntry storage entry = map._entries[index];\r\n        return (entry._key, entry._value);\r\n    }\r\n\r\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\r\n        return _get(map, key, \"EnumerableMap: nonexistent key\");\r\n    }\r\n\r\n    function _get(Map storage map, bytes32 key, string memory errorMessage) private view returns (bytes32) {\r\n        uint256 keyIndex = map._indexes[key];\r\n        require(keyIndex != 0, errorMessage); // Equivalent to contains(map, key)\r\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\r\n    }\r\n\r\n    struct UintToAddressMap {\r\n        Map _inner;\r\n    }\r\n\r\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\r\n        return _set(map._inner, bytes32(key), bytes32(uint256(value)));\r\n    }\r\n\r\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\r\n        return _remove(map._inner, bytes32(key));\r\n    }\r\n\r\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\r\n        return _contains(map._inner, bytes32(key));\r\n    }\r\n\r\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\r\n        return _length(map._inner);\r\n    }\r\n\r\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\r\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\r\n        return (uint256(key), address(uint256(value)));\r\n    }\r\n\r\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\r\n        return address(uint256(_get(map._inner, bytes32(key))));\r\n    }\r\n\r\n    function get(UintToAddressMap storage map, uint256 key, string memory errorMessage) internal view returns (address) {\r\n        return address(uint256(_get(map._inner, bytes32(key), errorMessage)));\r\n    }\r\n}\r\n\r\nlibrary EnumerableSet {\r\n    struct Set {\r\n        bytes32[] _values;\r\n        mapping (bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n            bytes32 lastvalue = set._values[lastIndex];\r\n            set._values[toDeleteIndex] = lastvalue;\r\n            set._indexes[lastvalue] = toDeleteIndex + 1;\r\n            set._values.pop();\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\r\n        return set._values[index];\r\n    }\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(value)));\r\n    }\r\n\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(value)));\r\n    }\r\n\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(value)));\r\n    }\r\n\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint256(_at(set._inner, index)));\r\n    }\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary Strings {\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        uint256 index = digits - 1;\r\n        temp = value;\r\n        while (temp != 0) {\r\n            buffer[index--] = byte(uint8(48 + temp % 10));\r\n            temp /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n}\r\n\r\ncontract TheHedgehog is Context, Ownable, ERC165, IERC721Metadata {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n    using EnumerableSet for EnumerableSet.UintSet;\r\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\r\n    using Strings for uint256;\r\n    \r\n\r\n    uint256 public constant MAX_NFT_SUPPLY = 10000;\r\n\r\n    uint256 public presaleStartTimestamp = 1643551200;\r\n    uint256 public saleStartTimestamp = 1643638500;\r\n\r\n    string public baseURI = \"https://gateway.pinata.cloud/ipfs/QmdbPUUBpDrH5JgiBSaQmxzyLwp99xYHp2X52s82jHtCiY/\";\r\n\r\n    mapping (address => uint256) private rewards;\r\n\r\n    uint256 private _state = 1;\r\n\r\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\r\n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\r\n\r\n    EnumerableMap.UintToAddressMap private _tokenOwners;\r\n    mapping (uint256 => address) private _tokenApprovals;\r\n\r\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n\r\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\r\n\r\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x93254542;\r\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\r\n\r\n    constructor () {\r\n        _registerInterface(_INTERFACE_ID_ERC721);\r\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\r\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\r\n    }\r\n\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\r\n\r\n        return _holderTokens[owner].length();\r\n    }\r\n\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return _tokenOwners.get(tokenId, \"ERC721: owner query for nonexistent token\");\r\n    }\r\n\r\n    function name() public pure override returns (string memory) {\r\n        return \"The Hedgehog\";\r\n    }\r\n\r\n    function symbol() public pure override returns (string memory) {\r\n        return \"TH\";\r\n    }\r\n\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256) {\r\n        return _holderTokens[owner].at(index);\r\n    }\r\n\r\n   \r\n    function totalSupply() public view returns (uint256) {\r\n        return _tokenOwners.length();\r\n    }\r\n\r\n    function tokenByIndex(uint256 index) public view returns (uint256) {\r\n        (uint256 tokenId, ) = _tokenOwners.at(index);\r\n        return tokenId;\r\n    }\r\n\r\n    function getReward(address customer) public view returns (uint256) {\r\n        return rewards[customer];\r\n    }\r\n\r\n    function getNFTPricePreSale() public pure returns (uint256) {\r\n        return 0.02 ether;\r\n    }\r\n\r\n    function getNFTPrice() public pure returns (uint256) {\r\n        return 0.03 ether;\r\n    }\r\n\r\n    function _getRandomNumber() private returns (uint256) {\r\n        return uint256(blockhash(block.number - 1));\r\n    }\r\n\r\n    function _draw(uint256 tikets, uint256 start) private {\r\n        uint256 seed = _getRandomNumber();\r\n        uint256 budget = 10 ether;\r\n\r\n        for (uint256 i = 0; i < tikets; i++) {\r\n            uint256 winning_tiket = start + (seed >> i) % 2000;\r\n            rewards[ownerOf(winning_tiket)] += budget / tikets;\r\n        }\r\n    }\r\n\r\n    function draw1() public {\r\n        require(totalSupply() >= 2000, \"20% not closed yet\");\r\n        require(_state == 1, \"First draw has been\");\r\n        _draw(15, 0);\r\n        _state <<= 1;\r\n    }\r\n\r\n    function draw2() public {\r\n        require(totalSupply() >= 4000, \"40% not closed yet\");\r\n        require(_state == 2, \"Second draw has been\");\r\n        _draw(12, 2000);\r\n        _state <<= 1;\r\n    }\r\n\r\n    function draw3() public {\r\n        require(totalSupply() >= 6000, \"60% not closed yet\");\r\n        require(_state == 4, \"Third draw has been\");\r\n        _draw(9, 4000);\r\n        _state <<= 1;\r\n    }\r\n\r\n    function draw4() public {\r\n        require(totalSupply() >= 8000, \"80% not closed yet\");\r\n        require(_state == 8, \"Fourth draw has been\");\r\n        _draw(6, 6000);\r\n        _state <<= 1;\r\n    }\r\n    \r\n    function draw5() public {\r\n        require(totalSupply() == 10000, \"100% not closed yet\");\r\n        require(_state == 16, \"Fifth draw has been\");\r\n        _draw(3, 8000);\r\n        _state <<= 1;\r\n    }\r\n\r\n    modifier preSale() {\r\n        require(block.timestamp >= presaleStartTimestamp, \"Presale has not started\");\r\n        require(block.timestamp < saleStartTimestamp && (\r\n                // dev\r\n                msg.sender == 0x77AB2F647C440fC0340bbE2f0bf9C1E981A61935 ||\r\n                // white list\r\n                msg.sender == 0x1596c68cf5b99a737a84De1B2FFda09D9F715eDB ||\r\n                msg.sender == 0x31D0821B51852BA9575B99415Df0D7Efd73a63bD ||\r\n                msg.sender == 0x53975AD2e4B8FD521cc30312C422336fF25B0D7B ||\r\n                msg.sender == 0xE07eBB6271b72bD35eF24F7DB344EeD973EB2943 ||\r\n                msg.sender == 0xdcE9cf3B1166791dB055C560D6Cce91b81c3F377 ||\r\n                msg.sender == 0x7017F6ddf8F17Cb2cdC2cfd902775eaBBD09Efaf ||\r\n                msg.sender == 0x211f5248EdD9e1468856Ded559496301Dd40a3dE ||\r\n                msg.sender == 0x7eACCFB20F01678d3c31c9b30e92303D6fD1eCDc ||\r\n                msg.sender == 0x1774a783f994f8D442109033a51590c5Ad5D32d0 ||\r\n                msg.sender == 0xfD8DF86C3bb3fEc04f1FA22F89d12308dC069a07 ||\r\n                msg.sender == 0x75107e31bFDD4cB0B8C4327B4fb3D681449FD026 ||\r\n                msg.sender == 0xCa2bFb57b8191C23229cD430FaED3b38d0BA4F77 ||\r\n                msg.sender == 0xf62F5cdbF1a778Fe9148CC958Fb48cc7BD50B706 ||\r\n                msg.sender == 0xF908BE78a5E904B1D601187B0c0B4F1B40db2FA5 ||\r\n                msg.sender == 0xf78971c9a143c09b60a5C843872156d7964f57D1 ||\r\n                msg.sender == 0x69D6a50a1147864e7a1ae00fa67d3a73102F693a ||\r\n                msg.sender == 0x90Ca7965BDD24b2ef6A7d08E6DfBD4eA67F54e71 ||\r\n                msg.sender == 0xc89843375A24533f2302562babdeBF5860431A44 ||\r\n                msg.sender == 0x4c7B019F4B268381d3Bd946068B8815F2edAd087 ||\r\n                msg.sender == 0x9915C3881f2c03897c2fB4733e01ba3Cae2C5363 ||\r\n                msg.sender == 0xf8AfE53045DE4A62Ee93021457298FDB6956f0e7 ||\r\n                msg.sender == 0x93929CdA1F479745879C35180eCa54561fbA467a ||\r\n                msg.sender == 0x31CaD254D6dFAF50ca2e4A36aDba568319970CB0 ||\r\n                msg.sender == 0x38791c6c0DEb39a56cd4C1C54F52eF2336DB1587 ||\r\n                msg.sender == 0xe995425373A5C10ECb425baDa14a3F5cBaB9Dda5 ||\r\n                msg.sender == 0xf75f39c7A31A13B34e728C41E34b9fA8f5766e62 ||\r\n                msg.sender == 0x4F7350cAE2d6279DaC4c461d5b3eE73b0cc2093D ||\r\n                msg.sender == 0xEfE512a8c8e9564B9a072F84A40AF7a327eB2ab1 ||\r\n                msg.sender == 0xe7E7E92fB4B3C2D302b8Baea5EA61d730f1c8C7E ||\r\n                msg.sender == 0xD8e1F5432191573e5C2cD96bc4d1B9c8E0CdD0A7 ||\r\n                msg.sender == 0xdcA5dA7B9fCF5ACaADE99223cc8A55a5687d593a ||\r\n                msg.sender == 0x92Dc57dEA003Ed646Cbd9a14b5ffD53B49F65b55 ||\r\n                msg.sender == 0x5f4BA42CBFC4F3D31F7E8Fc347CE2B88d7964B6F ||\r\n                msg.sender == 0x98cB984516df1156595458A78922809d270b8BcA ||\r\n                msg.sender == 0xD18034Bd03284a63395812fE619F3aF01fE6958c ||\r\n                msg.sender == 0xbcA402De5174F693C27A97bE902A8C59a5C957CB ||\r\n                msg.sender == 0x50175Ef09250b6eDeA1e6E423e8BC90ACfE760eB ||\r\n                msg.sender == 0xa598DF54293765eC89fF478A505dC979918b8A92 ||\r\n                msg.sender == 0xCA5A9D7EBF2e6aD0b560D27E5Df5282Cc40B5b35 ||\r\n                msg.sender == 0x45188171B78Ae87DF16ac439f91CcE18dAA1Fe32 ||\r\n                msg.sender == 0x389ddCf9C25eC990ebB8f9fE3D23f6579891aaFa ||\r\n                msg.sender == 0x1c4E165cFacebB554D9ACb98AED158ef14D55c9d ||\r\n                msg.sender == 0x976f5a8946E0c3E2cFb549124E5e9eCc58a1Adc6 ||\r\n                msg.sender == 0x59812AFE80b553eb15C3f2cbC9F7c19157df5a9A ||\r\n                msg.sender == 0x7A64a2AED8DF225A39Df523583D245E4b5a359E0 ||\r\n                msg.sender == 0x1B6734C59fFA02f4EAfB5e33238E477e686360Fb ||\r\n                msg.sender == 0x4d893d8F4B16840182e7b5A22da3C91Ddf6b70A4 ||\r\n                msg.sender == 0x5d98B844735961A424d2755abc557645A2054EE0 ||\r\n                msg.sender == 0x74b7e56795E2AB5BEcD491f3Fd55011741E798c0 ||\r\n                msg.sender == 0x6bB7808FBce6bDa5308ee6F264B8a1fF864014Ad ||\r\n                msg.sender == 0x9c4A144ABD14a958FdeB2481489577107D90918C ||\r\n                msg.sender == 0x78a58Fbe5F911949aB58307e7Dbd1ACB7516FF18 ||\r\n                msg.sender == 0x97dE5FE390D9264A80874712139Ea3779F19Bb36 ||\r\n                msg.sender == 0x97AD288ACFFE2Ded55bB3923E64e25EB5Fb35Dd8 ||\r\n                msg.sender == 0xeE4Ae91C1a0FF150Dbd5b3d070720c22019a487c ||\r\n                msg.sender == 0x24eF767366225472CD36331fB2574424FF69e745 ||\r\n                msg.sender == 0x32a2a344a6e048B880f53eb2175D2eb09d17bfDF ||\r\n                msg.sender == 0x1ba8788217e311f939Dbbc62eF93Bacedb0b354D ||\r\n                msg.sender == 0x32F890b0d0fa5D3A31EC7cC60310BBdeDAff68be ||\r\n                msg.sender == 0x6cB4ea0889e70cE5398c2a160b75E0a710b4fF65 ||\r\n                msg.sender == 0x6364697953dA98D6083ee219A83fb207c2885065 ||\r\n                msg.sender == 0xe3921277177E0B9ACd49f90D6D02A155d6B3a894 ||\r\n                msg.sender == 0x7ff21FF83E66FbAc8AA288e090EEF5b74eD04da2 ||\r\n                msg.sender == 0x62946d28693a89aE35ECba5C3eea85d1f7b24eC7 ||\r\n                msg.sender == 0xd0f64694b4e8c9216d2f88e2E96618aDCc1E70E2 ||\r\n                msg.sender == 0x57fDcfd7362db8288D12069353eef65298c65542 ||\r\n                msg.sender == 0x37ACc00ABCB61CCb056dbC707195485e896271a3 ||\r\n                msg.sender == 0x77ed44042620115E0bC782136C17F333470e1a4f ||\r\n                msg.sender == 0x86436476dFFb92eBfDcCFc9494D5BCCec48b0F51 ||\r\n                msg.sender == 0xDcfBfD73Ed975468987E15B2B09D0A7175d72626 ||\r\n                msg.sender == 0xfFbAD2C3E2BFaa1c72e19C316449Ce465cDbA18F ||\r\n                msg.sender == 0x8F646f8cCA324C83007ad431736262F1b0820f10 ||\r\n                msg.sender == 0x10a3A2AaE03481d0AE32B103aE5a73F01e615a97 ||\r\n                msg.sender == 0x4aD81D17a1CcC7A94b7E4Cb5374aB5721F42f6C2 ||\r\n                msg.sender == 0xCE23EDAE7AdB677c24c52cD2B811bb25412a1F85 ||\r\n                msg.sender == 0xD0E9C355537BDeb350640B461Ed5f84494316BF2 ||\r\n                msg.sender == 0x8c04CA0923A44B75E59917b6361A8846582094f9 ||\r\n                msg.sender == 0x698238DF87FaF0e0b128cF3a481D0D89B27B6981 ||\r\n                msg.sender == 0xfbb5655376fd638991FfbFD27778193C00b88CBd ||\r\n                msg.sender == 0x7f448F0F3a57Eab22096128BD0931831fEa768d0 ||\r\n                msg.sender == 0x1EAB2Ce231260e67B4101CA8849cf245ce8DBA0F ||\r\n                msg.sender == 0xDA97F751f33a111BD70bbA141e89406206EE8097 ||\r\n                msg.sender == 0x56403dc8291a5BD7c7A63a49EdC5c1bAAc5c7D9C ||\r\n                msg.sender == 0x032581D58772cC0edB0FFfAB7385790d8dda3506 ||\r\n                msg.sender == 0x25FC4dFCeDC57574f9979Dfa83dcB5447cD2f14B ||\r\n                msg.sender == 0x1ef2949FB66A4d4CeE189182820D0ff29925f4b0 ||\r\n                msg.sender == 0x9e0d16F137B958aEd5B3cCB4F502807B0Df9f92B ||\r\n                msg.sender == 0xD413e889723648F459dabF692D0Afd3707883c45 ||\r\n                msg.sender == 0xda715D7D5FdeB3e76A5910109d79A336b31677ec ||\r\n                msg.sender == 0x9A7b485238Fea44e8e3b76EB75E6cE3C9331554c ||\r\n                msg.sender == 0xDf23aa927831a228fd5c86Aa23421948EAbD3B56 ||\r\n                msg.sender == 0x3b969EfB9Dd35F25926859CEC036b7ABCa4ac17d ||\r\n                msg.sender == 0x6620d8Afa51Fd4db75Ea2dC7c6532Af6880221D2 ||\r\n                msg.sender == 0xd076F0d91DA3b5285Fd11F07e53484E177D57EdF ||\r\n                msg.sender == 0x87c51fb1747D29d807129dbBe90B0DE73b71694b ||\r\n                msg.sender == 0x825aA4D728725f34dEe76dA39eF5EC9497a45067 ||\r\n                msg.sender == 0xA65D2102dbc9eA22279D26d1B17A024cfaF55538 ||\r\n                msg.sender == 0x0432ec9d8A4b568f9F5d63C3D79f63a6019d9516 ||\r\n                msg.sender == 0x3B5972a5b0eEa5196032E0d3b072b2ED32e983e0 ||\r\n                msg.sender == 0xA23032ee52a38f2DDf8fE6e718af80AdCc255401 ||\r\n                msg.sender == 0x64B6e162dE7e5B98450C490d89563F25e547E5Df ||\r\n                msg.sender == 0xa06baF4C87E2cf58597f8c1F02Ce95Fa08C30aF9 ||\r\n                msg.sender == 0x7CD31906fba447E4825A9C026b14D7e7573Ce200 ||\r\n                msg.sender == 0x26f81020AC8fe650a5a690E48BbE18465C4B8f6B ||\r\n                msg.sender == 0xA109E2376fff8E21260e23871C785aBaBA018de7 ||\r\n                msg.sender == 0x3baC36658160a35318CE9064612B50a4b033Dc95 ||\r\n                msg.sender == 0x7f60F5Ad1E65eBbe97A06eC8d81450D28da760D5 ||\r\n                msg.sender == 0x3043f870eF6B5d1C5ED43a3Ea0b6aFcb268e233f ||\r\n                msg.sender == 0xAc082ca986aae1cCAB3b4ab9f7362E4599F04E23 ||\r\n                msg.sender == 0x20ec1c7DBa32f02d75b9395d912fFde9b52eCe2d ||\r\n                msg.sender == 0x7B7F94d716EF5D7F5a92123EE872fD3524710Fe5 ||\r\n                msg.sender == 0x24bc315bb43D93303086754Da764f812F4800e62 ||\r\n                msg.sender == 0x52566Edc6e7e9F72dbF3b2668B193D277f255976 ||\r\n                msg.sender == 0xC85A9092478Ebcf525cb984f375FdbcF2387f1Bc ||\r\n                msg.sender == 0xda22BE20cb55e6445240FEBa4F99931fccC4a086 ||\r\n                msg.sender == 0xBC07D1B04470c003CDdB4C3FbE1cF7D54d836Fd5 ||\r\n                msg.sender == 0xD1852d19032Bf9448A0Cf317930e256F33aE14A1 ||\r\n                msg.sender == 0xB938953bd611df71f8F16caaeebc0092C306C577 ||\r\n                msg.sender == 0xf611C77Ff10CDF9825b9a670F7064E1Ad1e09C2D ||\r\n                msg.sender == 0x16fF48b8e58BFD2904cB43c74D4222EdB8daEa69 ||\r\n                msg.sender == 0xEaBb59255271e3350EEf1930CbD1c08d316E16f4 ||\r\n                msg.sender == 0x7E69373a53121eFD18A3ec376fd7224D70D6a9bC ||\r\n                msg.sender == 0x0A53DB4f62863ED8eC55A424a5Cc72287a55C29F ||\r\n                msg.sender == 0x6aFa682427ED30C956947DE66e9176F568ee5ae7 ||\r\n                msg.sender == 0x2765ffF2d9614B711E70Dda4ffee9798BcAf1144 ||\r\n                msg.sender == 0xb1D385f44f49fAf655ae58c3d1C27749DcE485E6 ||\r\n                msg.sender == 0x144239F68878Dc14e012be0f9ADc743a798B812c ||\r\n                msg.sender == 0x151e696a2f61206AA4c776E8bD0601f29Ce7eb53 ||\r\n                msg.sender == 0x7C12cD172370cDc6C003ba95913Cf656035B365d ||\r\n                msg.sender == 0xd5beda9285D4bBeAA8eE5f2dd6afac15Cf0CbD30 ||\r\n                msg.sender == 0xbFcAAB8DCF077EfcBec154d61D3BB9c93a46c564 ||\r\n                msg.sender == 0xEC50203c8F951dB3007b0f72FB723D6eAD2dC77d ||\r\n                msg.sender == 0x309caF2E106f08988aE8FDDBA8df1fA8d8EAAC03 ||\r\n                msg.sender == 0x8FD113408804Dc59bb2d711cDcD32b1A1F5347E3 ||\r\n                msg.sender == 0xAD8Ac63c1C85DfAB85276456167B909532f26651 ||\r\n                msg.sender == 0xc9cf8Dd788F7150B58cD3312dD44cEE3D74Be77d ||\r\n                msg.sender == 0x439393eA6e6792C0B3bAFa0c7aaad16674e4e2c0 ||\r\n                msg.sender == 0x9dD32333Dc54E48ECB11BBEc9B031001F6E99745 ||\r\n                msg.sender == 0xE5F0b78ce111a7Ff2443dA9670A9A9374F69eEB0 ||\r\n                msg.sender == 0x01B8d45a9Bbdd924EB2621C114df51691777dFa2 ||\r\n                msg.sender == 0x38e1f093C7D146D2a80C1Be8027b370141763016 ||\r\n                msg.sender == 0x24b281964Dc35942f954246D534678A539ab3252 ||\r\n                msg.sender == 0x3b24fe5621159f6A13742baB05446150B3E96eDD ||\r\n                msg.sender == 0x38929e1D718f6F728385f2A1D4e38a7a62617d0f ||\r\n                msg.sender == 0xc7cc856D6d8bd4Aa594695d64E9D5b9710c1EACC ||\r\n                msg.sender == 0x2EF26B40991ab18bD8DdE57B680633c4040BBa89 ||\r\n                msg.sender == 0x0afeffE4263F14e545a91E67507D206d32C9744C ||\r\n                msg.sender == 0xA92e7D605f789F5FFC5496ae44047CE10F794de8 ||\r\n                msg.sender == 0xFAb426eDd32A7A813ea68d7052e417b9699119Df ||\r\n                msg.sender == 0x46c8A1F08F7FA22eF0481ce044e51c9402e912B0 ||\r\n                msg.sender == 0x5EA5600E51B18a1AF0d759f78F16dA24eFF688f1 ||\r\n                msg.sender == 0xb3BBfeA5afd13D1B4a7463cB0D2D5f4Df32b08c3 ||\r\n                msg.sender == 0x143e59D6BF5cCeEce9a3Bad76Bf0b75fE33ffaf0 ||\r\n                msg.sender == 0xa49f28EB0D6D2A6Ef6b2c158ba25D6d6aeF88d18 ||\r\n                msg.sender == 0xD49caEeA213197d2EB54aAaFa3AABf00C926018D ||\r\n                msg.sender == 0x804A90740F923106213752B28a55C0f3F5b770f1 ||\r\n                msg.sender == 0x7E9edf87C6C7abc84C9ea43035e21E2416A81Ac0 ||\r\n                msg.sender == 0xCeFD6C563d52b904972f526E41A9668902156Cc2 ||\r\n                msg.sender == 0xec83820e8DA36c253A044cdB5BeC11658Dbb1549 ||\r\n                msg.sender == 0x7a134F76Ae6C0B07D5992c112AaC8AeCCbC13b4D ||\r\n                msg.sender == 0x8F34acA944E3eB991e2C4455F2Ca8C50E3C23703 ||\r\n                msg.sender == 0xAC34C4c9995d3e10A3de907FEF7E0d8668AD6B98 ||\r\n                msg.sender == 0x6A310FeA932eA3D20D01cF5d52E63d6f810F8b67 ||\r\n                msg.sender == 0xcc8C2E2DA1278cf8669d52a55090430Fbeca8146 ||\r\n                msg.sender == 0xBD8210008afc30fa0CE7962e885415c8A1b4a420 ||\r\n                msg.sender == 0xE6CA0aEC58DAaCe3A95979a765AacCbbE480E826 ||\r\n                msg.sender == 0x065ac48046E4cA6F0c242b3f5d8683dB273c949D ||\r\n                msg.sender == 0xE8d0537aE84CB059Dd10cc85468F9aa9944CFD8e ||\r\n                msg.sender == 0x3eA03319BC491565A584e30a847334992A4dffB2 ||\r\n                msg.sender == 0xB899Cb6a524B389c497E6ba8200DEBd45a75468C ||\r\n                msg.sender == 0x1a68a2D36Acf76a192C0aAE46e70852B0cc229e7 ||\r\n                msg.sender == 0x92832E2261649889be93D29D04725225c6454514 ||\r\n                msg.sender == 0x4dC7dC5D90ca87AE50E568cc6a673353374cd3Be ||\r\n                msg.sender == 0xEb482A3d4Eb89198066ae0625c75bd64F4c88434 ||\r\n                msg.sender == 0xC25c87c1999CfDAD82A151F96F9d3d97649dbCED ||\r\n                msg.sender == 0x18F4a6606b4f298F3502bF6B70b1f09be0D6c20f ||\r\n                msg.sender == 0xbbb4C0d02Eb47F61045332674ebCF24e32c458C0 ||\r\n                msg.sender == 0x64f7dDeE8efe4d537602493D330184439D13B39B ||\r\n                msg.sender == 0x730650415bDE8a44aFF84BfF9c4407676c2d5d99 ||\r\n                msg.sender == 0xe751E8aF6c4bf76971891C74e721Ea9136E55098 ||\r\n                msg.sender == 0x09c135E618804eF836C0E84A0031e8Add01ab4C5 ||\r\n                msg.sender == 0xaEE5937278D4ECCF0288570C6CD8549E6BdbCbbb ||\r\n                msg.sender == 0x00cD0EDD6599e60B528e95f6FeA447764E7b8a27 ||\r\n                msg.sender == 0xb6adC4a84A5454D95baaB6cE3424B48Ac41D64d8 ||\r\n                msg.sender == 0x8c743962A4f582dDFccCB9eA4042af888d063D28 ||\r\n                msg.sender == 0x5ffcC1e387194c0956C7b3f1aaE5676003C2D407 ||\r\n                msg.sender == 0xcB42443c5e382585638BD1baA453ad4F9078dc9b ||\r\n                msg.sender == 0xAafFCe6Fc88B23d8A72F1BCabEE17614D291183A ||\r\n                msg.sender == 0xf561267ae5bbD2B240eE64B36501257a29E5a07b ||\r\n                msg.sender == 0xD109360CeED8afbaB2BaFb2AB407ef1B56Bf0549 ||\r\n                msg.sender == 0x28F64b43ac50366BF5430c514A70C7Ac8F9087bc ||\r\n                msg.sender == 0xa20F66baF81929388ee056B042167B40a532Ab91 ||\r\n                msg.sender == 0xB4AdAeA9CC333c8e6B27DfB45EFcBeBEf4CE06b2 ||\r\n                msg.sender == 0xFd26837F7081ee67940d47f3773c9C3667d17380 ||\r\n                msg.sender == 0xA300713dbFC85AEbdDA76d54408f17e7D03C4f86 ||\r\n                msg.sender == 0x6d771A66Df06D84a7eE7e473456ABa10932a622B ||\r\n                msg.sender == 0x5936DA81F3AaB9295daFF829708Be6aCC762F0a1 ||\r\n                msg.sender == 0x1328550968A45fbF5c8eD1e4c2f552D17077a2C8 ||\r\n                msg.sender == 0x3AB4B00a88011544a359E9A16ACcCa8b82a5f67B ||\r\n                msg.sender == 0x1e0B10d1ed6E0501fdE4a77bd82A202B12B99655 ||\r\n                msg.sender == 0x254874E9D98Cdb553d4AdDD5388C9057FEA78B79 ||\r\n                msg.sender == 0x7206Ab245c023A7d7DD45F8F65E4Ec8cFd7a3C04 ||\r\n                msg.sender == 0x7b15CA7F877B0866Ab97CBe9E38dc2BE47B2FCb3 ||\r\n                msg.sender == 0x76804ff29196DF542aAA70d2013486b49Ff30901 ||\r\n                msg.sender == 0xc7dc9c3a04aA068aAa32AE1e4dA294A86330DC4a ||\r\n                msg.sender == 0xE42478C00846a2EB7eB332e2C9164fAe93e707b6 ||\r\n                msg.sender == 0xFBa07CAE87B2D6c5f9F48240e1dA7F9947Ac91b4 ||\r\n                msg.sender == 0x6e239E75718a205BB28cd0941627B509d619fE4f ||\r\n                msg.sender == 0x2B1B76A2e3c536C03f140Ec13DD4FA1EAb02Ac05 ||\r\n                msg.sender == 0x6579DF753AF0427eF32F63664F1794e0c2D3FCe3 ||\r\n                msg.sender == 0x76827F491980c679ABA486B774de4723E8FC1a47 ||\r\n                msg.sender == 0xDF0089a6c816C1ed6dF6c9EdF43eD511D960FFCa ||\r\n                msg.sender == 0xCa38d828984D54044741C68553fBaa6653e42A24 ||\r\n                msg.sender == 0x9AfBF9E45B7E64372764740CECD1Fe2f0E0718d3 ||\r\n                msg.sender == 0x60a176d31Ea8504b51b26A1d416Ff9D4cb4A417a ||\r\n                msg.sender == 0x78dC4B540808b1bfFb7FCd04a767f2A51c37B822 ||\r\n                msg.sender == 0x6b491AF263BB4f6A6734997f0A90F7a57F042788 ||\r\n                msg.sender == 0x4b8b0F5DB94C31892A8A5D8CD568aCAab8A80D15 ||\r\n                msg.sender == 0x76381876bCd562536Fe6de59918C27c08Bb43D59 ||\r\n                msg.sender == 0xf69139C36a93b445aFBDf7a26B5B086B2D5E4946 ||\r\n                msg.sender == 0xc41755902C175507d0239D499A5A09DB5c431438 ||\r\n                msg.sender == 0x040d879Ab2dC696a149cE9DBD8Df00c204f138EE ||\r\n                msg.sender == 0x26b7A3f67A6ee886a7DA139407b87b4C872C8CE4 ||\r\n                msg.sender == 0x6a8df845feb820425B08B934d7F60671E7BD3DC0 ||\r\n                msg.sender == 0xA07d461E852cA9190AA9c0830A56A7f9325D1329 ||\r\n                msg.sender == 0x57c77355f367577318D0eb29b6757a4C38809b0A ||\r\n                msg.sender == 0xd87B4c402E200aFC29F4E5e946466c1DCC62fA07 ||\r\n                msg.sender == 0x082C9d19269f117845A6C227D98d863a2b4623D6 ||\r\n                msg.sender == 0xE019ae52e3c82d7D03B708b4a3f8e10b08bcf09f ||\r\n                msg.sender == 0x68505B6a8B3ac6a65ba83f558c642389062f6e2d ||\r\n                msg.sender == 0x8D6D2b6d1D83d542370A7a58dD9e730609981579 ||\r\n                msg.sender == 0xf68cFA021d2c275B362Fbe628328abFE02b0e223 ||\r\n                msg.sender == 0x7cD6d7E75b5eF12fe80c900dA3FdF29c77FD6360 ||\r\n                msg.sender == 0x40EB0731F94bD6e9517034f55EaE5dC9a3A0e7A3 ||\r\n                msg.sender == 0xc7F59ee4BBBD66C28ae21FB738C0AC0f6D401665 ||\r\n                msg.sender == 0xB023047bFC6aB973bA34b5E02598aF569445f4A7 ||\r\n                msg.sender == 0x8517ac8BFecb47a78De5D7A49222A3D60d495239 ||\r\n                msg.sender == 0x0b4373ff9d1f19c80D897Ec7B9C4Dc2280Fa29Af ||\r\n                msg.sender == 0x0bEbD149aB428050E3709D8dC976d40a658FFAa6 ||\r\n                msg.sender == 0x08cd0a7185d5933fE5d2e006306606890bc7C819 ||\r\n                msg.sender == 0x3618CE85fadE95e213DA1e09fb1C5d71332D336C ||\r\n                msg.sender == 0xEB8337B997D1E0a4FC4e093d8fE13220C5C6aCe4 ||\r\n                msg.sender == 0x0052F52b8F7955a488286327c28e423981C9A166 ||\r\n                msg.sender == 0xD39f1D14De2945E3bF19F59d78233422338Fc7D7 ||\r\n                msg.sender == 0xbECfe44266E9a1a4Ec7Dc6Cc75EeCA774660c736 ||\r\n                msg.sender == 0xEE0be75542602dcFabc89fEb3788856A61cdFD5b ||\r\n                msg.sender == 0x1C8Fb32A871B908C3924F4fe33beba6B7d9a4231 ||\r\n                msg.sender == 0xdD595B00dF7157922D17DF1DdA6b41aA5f6B375D ||\r\n                msg.sender == 0x1a236FB6378C277f3EaD5D74A49dFeB0B12AdC48 ||\r\n                msg.sender == 0xDA2Ad2C4B29D4e2a7A1201047b085Cb1EC06d590 ||\r\n                msg.sender == 0x9F8C4086f11B32243595EAC4b5F86Ae5a51B6b81 ||\r\n                msg.sender == 0x8f16F49495F646c123683A21305bb6274C922312 ||\r\n                msg.sender == 0x2fd1c06152864D0d83da2736Aa299Efbc10D5bd6 ||\r\n                msg.sender == 0x2c22c9Aa815eC5EB84d61b41885C1BCfe5B70e77 ||\r\n                msg.sender == 0xe7f51517B6fD110e3dfD4Eb3a127ADf973E194Fd ||\r\n                msg.sender == 0xD202eD1f2bbF64e745f6609853876995CFFE41Ed ||\r\n                msg.sender == 0xF7d2a425C7432ca5f5cCa8d1B50b368e5c525D92 ||\r\n                msg.sender == 0x7427d95c0c1F70a78344c3A1e957099a3241DCb7 ||\r\n                msg.sender == 0xdAc3f7AB32434D483E06109d3109E034f995671C ||\r\n                msg.sender == 0x4448F5FAE9ff415082Ba2ccbbe427d9dF5270497 ||\r\n                msg.sender == 0xa6e35F64D10281ff168ab926A4af2a50bc53409B ||\r\n                msg.sender == 0x3dA9D4cB5f57bBA97fC58415023d03528E985443 ||\r\n                msg.sender == 0x191bBB1DfE2848dDD3D487267Cd227A15940E238 ||\r\n                msg.sender == 0x0De101f8f676F0880833Ea2a0F15f9e0f48b1245 ||\r\n                msg.sender == 0xca4607c60b2Ee8F574d036E2f06a69356a4bfFcF ||\r\n                msg.sender == 0x4c8A67Cb778bB15207dB4032F3BA7dA12D7BAbAB ||\r\n                msg.sender == 0xCA2f0FBec70defF14cc89c5162731b924f1e8A80 ||\r\n                msg.sender == 0x630Eacd0912C5A47Bc07B0564b758DC0fF4530d3 ||\r\n                msg.sender == 0x2E1B061C5704FbA204afd6b4E05860b2C8842494 ||\r\n                msg.sender == 0xC0A4f64c2c0F9B1a6d51DF038415748E8Bdf04e8 ||\r\n                msg.sender == 0xcEB60072Cf13A5262B9b7F47CD67b0A8Fba44dDB ||\r\n                msg.sender == 0x6db020b9a2a386DBcC315CBe8B3F7d2FFbb67F82 ||\r\n                msg.sender == 0x1963FfEBB29BC01c8fF20c29e8BDAfd7069D52Db ||\r\n                msg.sender == 0xFF9f6A7A6F7602bf8bC623C913426f31F7AA9386 ||\r\n                msg.sender == 0x61C37868f23585a4A096Cf4c73e228ECC1d1cf7f ||\r\n                msg.sender == 0xFaf87e583bA50E1330A1672401C541149F01e099 ||\r\n                msg.sender == 0x860dF885c283c3c48315F99C535d98d57dE27558 ||\r\n                msg.sender == 0xEA0ed82894b4693548D446EC908858e157B610Ea ||\r\n                msg.sender == 0x1e320cA3379bF5E1D75c672B901c2037cD4214B1 ||\r\n                msg.sender == 0xC842Bc1f8fBE0979b448F0600263A093Fb30A3E7 ||\r\n                msg.sender == 0x66ecB5cEab1BC4BD6E31B26c40145578d6D77f24 ||\r\n                msg.sender == 0x18cCd2d3e268f73A9147a678551536676a7AD735 ||\r\n                msg.sender == 0x42ECBC771BffD3393E90A199Dc0BeFDF7A280CcA ||\r\n                msg.sender == 0x64BBf592bc4b2bD18Cf4Af289da5B90D7Df02d3B ||\r\n                msg.sender == 0xfFAcb03A5f51E42136277a91c6F42151d5Ad2a7f ||\r\n                msg.sender == 0xB1C437fe14120a853Ddc35dd3aa3B0BC73808E44 ||\r\n                msg.sender == 0x6dE778bEd197470694Fc3ff56511632083f1Af61 ||\r\n                msg.sender == 0x84D79d9c2dc3d85Be0DA435AeB38F53bd1B26CE2 ||\r\n                msg.sender == 0x0aABFE143dC5EFE108d7022e8719A81095AB0243 ||\r\n                msg.sender == 0x1530108f90ddD8d0C0358c80B8f0569B70B15995 ||\r\n                msg.sender == 0x0cCAacDEa04cBF0F8d3aCBF8A4Ec9468776073da ||\r\n                msg.sender == 0x8d44762746D7b6aedF821940b30d3033cB8f25e4 ||\r\n                msg.sender == 0x126E6aB995b149c4E81Fc2212d912083f6BC7C66 ||\r\n                msg.sender == 0x320B152edE4B36c077621D1C5dC1403702743fcC ||\r\n                msg.sender == 0xcC7dc3Cc61d4a8D7E9Fe52ef8C64EBa990Ad0425 ||\r\n                msg.sender == 0x4422DA4993f08a39833A0B4d9d8a6088Ec8f5190 ||\r\n                msg.sender == 0x42606e577354eD8d4272549b3e90734d06f84315 ||\r\n                msg.sender == 0x327511cAc4e5b600b5C1356AAc9B673e229d83d4 ||\r\n                msg.sender == 0x55cC88bbF278C4d12cc7Bfe8D44c59BAaAF3c35d ||\r\n                msg.sender == 0xf39b795cecC29d150438d945857C22d56DE77BFc ||\r\n                msg.sender == 0x678B35B384AB00e1d15e8935C0f2858770284fDA ||\r\n                msg.sender == 0x64E2e5D0590dD6f9E1bdAd78161C7426c3930184 ||\r\n                msg.sender == 0x16A3A51b9035e409e92e16C4bA7C75D022a1Bca6 ||\r\n                msg.sender == 0x51E36a84acE800DA9cc7F955BCE295F0A6D6ff5B ||\r\n                msg.sender == 0x8B87aaFe84d9C71a7eBa749830987F00295a44dD ||\r\n                msg.sender == 0x49251124Bd997f0d8b0C31427093e230a223792e ||\r\n                msg.sender == 0xd185927EE0fF63cf5b49C2A83658AfAD58cE4670 ||\r\n                msg.sender == 0x63fC10a532B03Aa96796739D2eFC204F3ca5BDcE ||\r\n                msg.sender == 0x9217a2064Bd8ED0e143E87c304B25cE5e496c8D5 ||\r\n                msg.sender == 0x7B584094340AB76993A8e0F9a217d4E3AdE7A3A5 ||\r\n                msg.sender == 0xd542372b8A48a1766E4fD4a5348d8b4D3C8B9b0a ||\r\n                msg.sender == 0xed91C233a35De29B79F6b4103d3999ffa55c54f9 ||\r\n                msg.sender == 0xdE73863eFA7A65B5756506fdF50935Eb734E9220 ||\r\n                msg.sender == 0x6a6c3290799DbA92947Fefb13e4059bf22f2e789 ||\r\n                msg.sender == 0xE44c7Df674089d6665f1eF2f6b0a839A3A335ECA ||\r\n                msg.sender == 0x0e007F0EAE9A86311927e95a10523C475c9b26FD ||\r\n                msg.sender == 0xe2Ac54F20f9b4E3B1034d4Df673a836d0B8E6FBb ||\r\n                msg.sender == 0xa7090ed6B495F386D3D9a1026Ff07ddC8195f34a ||\r\n                msg.sender == 0xE6FB849B7a2EAB08F7DA68568562Cda68afdA99d ||\r\n                msg.sender == 0x9C8458AAA816f84567e077F1AaFD45c9A0564975 ||\r\n                msg.sender == 0x97B438D356586D598227A9a1b36e6AEF3f59F6fc ||\r\n                msg.sender == 0xa0eF5C353e0FfAF16482722b57BD40e756a7Ae04 ||\r\n                msg.sender == 0xA9da2A5c2a85FB2A44f7623d7BB1D3b502B598D3 ||\r\n                msg.sender == 0xBE85FE1586b2b57Bc6a68E69d6Bb030B62717E2E ||\r\n                msg.sender == 0xBA8Ad3653BC839F9aDA37eBC45D9193fcf50f234 ||\r\n                msg.sender == 0xB7Bb32F6328c81533fbf77Feaf99D8D884cD9601 ||\r\n                msg.sender == 0x85f5D32FCC73aa9Ab4d9fD3A52ee43b2e260749f ||\r\n                msg.sender == 0x9988e4f4008c4918Be3B0F8C521781AF2dcBB2Eb ||\r\n                msg.sender == 0x8ecde4430c2973F09e0ED73701E8420977E33847 ||\r\n                msg.sender == 0x1Cfdde6132B09422a1d5574235e0E6c74c8A4657 ||\r\n                msg.sender == 0x9Bfb5956aa6801698b10187Bc9e7625D065e56F0 ||\r\n                msg.sender == 0xe0bADDc5abC3563eCcd7F197fA38cD135218c8ee ||\r\n                msg.sender == 0x912cc2aD6bB37CB17AfAf631a35ecFA03ab2Cd8e ||\r\n                msg.sender == 0xc8656eF56C942aBA8fd7F2a5e0C15f53031106AB ||\r\n                msg.sender == 0x47132E7Aa2149b7D308FaF3785eD972f8d370d4F ||\r\n                msg.sender == 0x3CB6565A094825979f727A2a98C9D66bec0Bd93F ||\r\n                msg.sender == 0xE02aE6a555119f4E1Fdf09907D4951098b771441 ||\r\n                msg.sender == 0x2265eE8efFE423a21Ff35f84845887D32f0F9dd3 ||\r\n                msg.sender == 0xa46d685BE3F5bd12068e058FD027651C9D2dBf23 ||\r\n                msg.sender == 0x9941B82654AeC3A6b54F6B8Fc3ebDe1Af7783c61 ||\r\n                msg.sender == 0x0f664367773f0A2b4DfF96a78d5E7F8807A8750b ||\r\n                msg.sender == 0x865aA163d544F9E27e34aaFDcF06AA80d0bCC180 ||\r\n                msg.sender == 0x3095a6fF7B4a53e369EF218bBA3b7FAc71fa5c5D ||\r\n                msg.sender == 0xC3fC437a48c64B1AaA71749C9b7526Df5978523e ||\r\n                msg.sender == 0x5F62f5dda2C52F216B5e628AC27dfc80c0feE072 ||\r\n                msg.sender == 0x36673848Dfb59eeca8b054F505CE952FDd56ac84 ||\r\n                msg.sender == 0x5992CB1e393175665De25d0F13765C21D3De7f85 ||\r\n                msg.sender == 0x9DE4562706f8Af7a0e611b1e030aAFA8446544d0 ||\r\n                msg.sender == 0x553329778f55469bCE7259a72f32a79B4B0155D2 ||\r\n                msg.sender == 0x5A6BCb6d56cB3EeD880FA514BD56367Df9a35D5C ||\r\n                msg.sender == 0xA6338F2746188b3bA0B0EE113852FA5A3ab29586 ||\r\n                msg.sender == 0x96A540dd88868904ADf3AA8174293c56C317bfD3 ||\r\n                msg.sender == 0x49397a2361c11C23B95A0ed33e0bb219E974E0d7 ||\r\n                msg.sender == 0xEC1Fd0C476AD2DFCB4010d51039ac5A4f85b2D4b ||\r\n                msg.sender == 0x0033cD590d1C0462A641FA12392F4A4A15Fd348D ||\r\n                msg.sender == 0x2F2D8c0E48B15c11e38D5d43376Eee512EFe1eD2 ||\r\n                msg.sender == 0xB337de43321924A70a6fa0fe83f999F50F4FcAD9 ||\r\n                msg.sender == 0x88801c17d9a25CeB493F5861AC005DE333DE6f41 ||\r\n                msg.sender == 0xDad863572502Bdd771037767E9FCCD4e6DFB4bdc ||\r\n                msg.sender == 0xdB6DFff715D4D1b62d66B3f7da4988ff5aCA09C4 ||\r\n                msg.sender == 0x5D838fD6634E348378BCE7f9C5F8a2b725324f8B ||\r\n                msg.sender == 0x622c6904061c5C1b9CD647ec0d7e4c64e4dE28B8 ||\r\n                msg.sender == 0x2e300C9f3423c1cb2eBC18A39447731AD8E30618 ||\r\n                msg.sender == 0x26F97A899569A009F924C32C49Ad3B3784DBC6e7 ||\r\n                msg.sender == 0xe1E778c4D4B6b24d06A82f6A5b6e3348F4D62DD4 ||\r\n                msg.sender == 0xbC83998221297A707A6bda05F4b9e96981DC2A9a ||\r\n                msg.sender == 0x7a4888143A5EEF5051374a5eE79BD313A77e20D0 ||\r\n                msg.sender == 0xBAfcc6d5d1Be9caBEd01c27B9EB7Eb8b1579fFC9 ||\r\n                msg.sender == 0x140f456F938276AF64E401648D4f2707214EaE2d ||\r\n                msg.sender == 0xF7437eDdBd414649E681D186325Cf77Ee41414D5 ||\r\n                msg.sender == 0x0Ee429a521FBc47F3485018E44B64E57114ec02f ||\r\n                msg.sender == 0x1B25b8E4d0131406c7A550A509EF8212e1EaEed3 ||\r\n                msg.sender == 0x1b78dd5f75A403240cd99a5b80B559af534c3E39 ||\r\n                msg.sender == 0x1Fd8A8EBAE857976243dCC38c37A143494d493E5 ||\r\n                msg.sender == 0xfAd447C70db84D3d0D1c6b1571B78f2783E5a1ef ||\r\n                msg.sender == 0x59c31aA5511F359603E1289880d849638189EB66 ||\r\n                msg.sender == 0x28E010aC105078a82c0F72E5164c846EF26fDD82 ||\r\n                msg.sender == 0xa6f23C14399f805dC5f047c1d008415521c788a6 ||\r\n                msg.sender == 0xB4FEEDbA6d88010fac432259916b26Fc4B42b520 ||\r\n                msg.sender == 0xfd0A8e5802467cA6B1880688De5AF3087C3200A0 ||\r\n                msg.sender == 0x41643adA6759940f3902F501b028C3983A063dCd ||\r\n                msg.sender == 0x1CCF8D30D9F11C69b033590364a8587828786C2E ||\r\n                msg.sender == 0x8AAfd15081E92F04E3A3d8f32772bbEd950b1c16 ||\r\n                msg.sender == 0xf0D53d71E2DE9500663325860b9c0E17A2d0449A ||\r\n                msg.sender == 0x9A34cAFE6b1EC63E29c69F897794AF33d16f2cC6 ||\r\n                msg.sender == 0x324037F6038F28Be3d512d4434F67170d9272EA2 ||\r\n                msg.sender == 0x5D0461a8811AC2e48d2A645b9e8A3F3CB02aB6f7 ||\r\n                msg.sender == 0x6806d7f412023C45023BbE618F8Af2C7D4094806 ||\r\n                msg.sender == 0x760aFb2DDa29f41B87885653b1c439b02F17E405 ||\r\n                msg.sender == 0x25C314CAdA97a12A4B8891E050237DC2aab1F88e ||\r\n                msg.sender == 0x77bf1b69872eb50b0f87D2346d8047FbE1EcFE41 ||\r\n                msg.sender == 0x8929dB07015a0cd7F23CDB11C650EF283faE8B57 ||\r\n                msg.sender == 0xa8022Ace348c792530F50D3b94b1D8dac581ddEC ||\r\n                msg.sender == 0xdbCE75dc01C454Dd444C1Ae3c60F450a1d235AaF ||\r\n                msg.sender == 0x24356541E3659aE3E3a41e43fd74CCd5A41f6032 ||\r\n                msg.sender == 0x38FCEf3d801Ac4163cCbCd2fcc182AE7FF6500A0 ||\r\n                msg.sender == 0x842B33D8Def67C243cCFa68a214285dD442BBee7 ||\r\n                msg.sender == 0x0c5d6cD6E268531fc1Ee775F6742DDEE95663703 ||\r\n                msg.sender == 0xef8eB7b986f00Cbf26c8Ca50b178860F8C86b267 ||\r\n                msg.sender == 0xA0C8eA0912333Cb722CEaF8d5A7565fD43C11D36 ||\r\n                msg.sender == 0x73D601DC9B8133Fb3813815624853BEC226ff658 ||\r\n                msg.sender == 0xd702f78B8108eaC614105c3C6B9c2a505D345985 ||\r\n                msg.sender == 0x0e67f997c0965C6F6CA1E79CB46c9CED0751a6E0 ||\r\n                msg.sender == 0x1f6b35B7B142f965fFB5A5b9AC1ffEB7B79A2fE9 ||\r\n                msg.sender == 0x32AEc4Ea9f088590A06e3c0e49A11580cD284Ed0 ||\r\n                msg.sender == 0x34c287139Fa380A7f20005835d124489E1336880 ||\r\n                msg.sender == 0x0713665Aa43d5147A699b8210F3326736BeC5147 ||\r\n                msg.sender == 0x7fBDdF009F20125E001775aD272dc6C6289cF266 ||\r\n                msg.sender == 0x820Af22BCfca12D9CF63972e9a5C2E0831ea258E ||\r\n                msg.sender == 0x35cdd015780460460B0687ff23938d1d63f88234 ||\r\n                msg.sender == 0x9f547600CD628648d07e228eEd010f3972b2674c ||\r\n                msg.sender == 0x229Cd94bFB75De4C989C502037426D8a8a16f8eD ||\r\n                msg.sender == 0xDB906E83001887B3ed8ACB0fA915014E49b4A032 ||\r\n                msg.sender == 0x4D2f53DB7833C22aD63D2Cd6781D76F91dCF31aa ||\r\n                msg.sender == 0xf92C7669Ad8711EC631890241c07821B39FbFb46 ||\r\n                msg.sender == 0xa0A5E0C6038D2957593fe16A1635E6a956D353A4 ||\r\n                msg.sender == 0x8955811546Cb547BF606c005749a2683e704832A ||\r\n                msg.sender == 0xC81500B5bd35b6D722C0766A438dB13b30e9a65E ||\r\n                msg.sender == 0xdE93Bbd8A337Bf781C719e1aFbB05A48Cf95B355 ||\r\n                msg.sender == 0x90C52d09e2b5a8ffa4F0cFe905b5858C914d53c7 ||\r\n                msg.sender == 0x106966F17E41C7945145403eBDdf35F77B1e1D19 ||\r\n                msg.sender == 0xE9A8751e48E38bE277eB216F7C68f15C0F4c20c0 ||\r\n                msg.sender == 0x62D0b10e7D7e92c0C3e87Bd48Fd4EcD9E0275E24 ||\r\n                msg.sender == 0x8b0dCf8aAFC4FD7aF232CAb4446f2946a25640C2 ||\r\n                msg.sender == 0x4c5910cC34d53cE90C0b5c8bfe77509f344Ac697 ||\r\n                msg.sender == 0x213abbAc890D6f18584B04A47A4bA63550B4A714 ||\r\n                msg.sender == 0x2387A19E34A5694BA5972A9B6Ec68d3CC536CD83 ||\r\n                msg.sender == 0xcAabB30CADF0Fd956d6843831c010d1012556756 ||\r\n                msg.sender == 0x09E5dbb792A615C95f16823da8516149cbfb050c ||\r\n                msg.sender == 0x8594BE2FDc996163D8427f5F97C74cB16Cc54bDC ||\r\n                msg.sender == 0x042276489F26ce13ABE72d0f947821D4D1034201 ||\r\n                msg.sender == 0x4Ae164039DC5cc03c6553497B0aa3FF7fB1D4615\r\n        ) || block.timestamp >= saleStartTimestamp, \"You are not in whitelist\");\r\n        _;\r\n    }\r\n\r\n    function mintTheHedgehog(uint256 numberOfNfts) public payable preSale {\r\n        require(totalSupply() < MAX_NFT_SUPPLY, \"Sale has already ended\");\r\n        require(numberOfNfts > 0, \"numberOfNfts cannot be 0\");\r\n        require(numberOfNfts <= 20, \"numberOfNfts cannot be greater then 20\");\r\n        require(totalSupply().add(numberOfNfts) <= MAX_NFT_SUPPLY, \"Exceeds MAX_NFT_SUPPLY\");\r\n        require(presaleStartTimestamp <= block.timestamp && block.timestamp < saleStartTimestamp &&\r\n                getNFTPricePreSale().mul(numberOfNfts) == msg.value ||\r\n                block.timestamp >= saleStartTimestamp &&\r\n                getNFTPrice().mul(numberOfNfts) == msg.value\r\n        , \"Ether value sent is not correct\");\r\n\r\n        for (uint i = 0; i < numberOfNfts; i++) {\r\n            uint mintIndex = totalSupply();\r\n            _safeMint(_msgSender(), mintIndex);\r\n        }\r\n    }\r\n\r\n    function setSaleStartTimestamp(uint256 newSaleStartTimestamp) public onlyOwner returns(bool) {\r\n        saleStartTimestamp = newSaleStartTimestamp;\r\n        return true;\r\n    }\r\n\r\n    function setPresaleStartTimestamp(uint256 newPresaleStartTimestamp) public onlyOwner returns(bool) {\r\n        presaleStartTimestamp = newPresaleStartTimestamp;\r\n        return true;\r\n    }\r\n\r\n  \r\n    function setBaseURI(string memory newBaseURI) public onlyOwner returns(bool) {\r\n        baseURI = newBaseURI;\r\n        return true;\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == 0x77AB2F647C440fC0340bbE2f0bf9C1E981A61935 ||\r\n                msg.sender == 0x5498dd0fe272d1FD68f8Ad461483fA882e602D93, \"You are not creator\");\r\n        uint256 balance = address(this).balance / 2;\r\n        payable(0x77AB2F647C440fC0340bbE2f0bf9C1E981A61935).transfer(balance);\r\n        payable(0x5498dd0fe272d1FD68f8Ad461483fA882e602D93).transfer(balance);\r\n    }\r\n\r\n    function withdrawReward() public {\r\n        require(rewards[msg.sender] > 0);\r\n        uint256 balance = rewards[msg.sender];\r\n        msg.sender.transfer(balance);\r\n        rewards[msg.sender] = 0;\r\n    }\r\n\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    function isApprovedForAll(address owner, address operator) public view override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n        _safeTransfer(from, to, tokenId, _data);\r\n    }\r\n\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _tokenOwners.contains(tokenId);\r\n    }\r\n\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\r\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\r\n        address owner = ownerOf(tokenId);\r\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\r\n    }\r\n\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId);\r\n\r\n        _holderTokens[to].add(tokenId);\r\n\r\n        _tokenOwners.set(tokenId, to);\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n    }\r\n\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId);\r\n\r\n        // Clear approvals\r\n        _approve(address(0), tokenId);\r\n\r\n        _holderTokens[owner].remove(tokenId);\r\n\r\n        _tokenOwners.remove(tokenId);\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\r\n        require(ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId);\r\n        _approve(address(0), tokenId);\r\n\r\n        _holderTokens[from].remove(tokenId);\r\n        _holderTokens[to].add(tokenId);\r\n\r\n        _tokenOwners.set(tokenId, to);\r\n\r\n        emit Transfer(from, to, tokenId);\r\n    }\r\n\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\r\n        private returns (bool)\r\n    {\r\n        if (!to.isContract()) {\r\n            return true;\r\n        }\r\n        bytes memory returndata = to.functionCall(abi.encodeWithSelector(\r\n            IERC721Receiver(to).onERC721Received.selector,\r\n            _msgSender(),\r\n            from,\r\n            tokenId,\r\n            _data\r\n        ), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n        bytes4 retval = abi.decode(returndata, (bytes4));\r\n        return (retval == _ERC721_RECEIVED);\r\n    }\r\n\r\n    function _approve(address to, uint256 tokenId) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\r\n\r\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\r\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\r\n\r\n        return string(abi.encodePacked(baseURI, (tokenId).toString()));\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_NFT_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"draw1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"draw2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"draw3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"draw4\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"draw5\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNFTPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNFTPricePreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberOfNfts\",\"type\":\"uint256\"}],\"name\":\"mintTheHedgehog\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStartTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPresaleStartTimestamp\",\"type\":\"uint256\"}],\"name\":\"setPresaleStartTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSaleStartTimestamp\",\"type\":\"uint256\"}],\"name\":\"setSaleStartTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TheHedgehog", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://92aafb4de43850c4bd098c99eb4763b54731f3865653a89c5dea464e3a78d917"}]}