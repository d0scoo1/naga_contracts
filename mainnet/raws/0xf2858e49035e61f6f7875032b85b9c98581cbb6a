{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: None\r\npragma solidity ^0.8.11;\r\n\r\ninterface Checker {\r\n    function totalSupply() external view returns (uint256);\r\n}\r\ncontract Web3PO {\r\n    uint256 m_Base = 10**17;\r\n    uint256 m_Price = 5;\r\n    uint256 m_Funds = 0;\r\n    address m_WebThree = 0x1011f61Df0E2Ad67e269f4108098c79e71868E00;\r\n    mapping (address => bool) m_Contract;\r\n    mapping (address => uint256) m_Progress;\r\n    mapping (address => mapping (address => uint256)) m_Contribution;\r\n    \r\n    constructor() {}\r\n\r\n    receive() external payable{\r\n        m_Funds += msg.value;\r\n    }\r\n    \r\n    function purchaseLicense(address _contract) external payable{\r\n        require(!m_Contract[_contract],\"This token has already been enhanced\");\r\n        require(Checker(_contract).totalSupply() > 0,\"This address is not a token\");\r\n\r\n        uint256 _current =  m_Progress[_contract];\r\n        uint256 _remaining = (m_Base * m_Price) - _current;\r\n\r\n        if(msg.value > _remaining){ \r\n            uint256 _refund = msg.value - _remaining;\r\n            m_Progress[_contract] += msg.value - _refund;\r\n            m_Contribution[_contract][msg.sender] += msg.value - _refund; \r\n            payable(msg.sender).transfer(_refund);\r\n        }\r\n        else{\r\n            m_Progress[_contract] += msg.value;\r\n            m_Contribution[_contract][msg.sender] += msg.value;\r\n        }\r\n\r\n        if(m_Progress[_contract] >= (m_Base * m_Price)-10**15){\r\n            m_Contract[_contract] = true;\r\n            m_Funds += m_Progress[_contract];\r\n        }\r\n    }\r\n    function removeContribution(address _contract) external{\r\n        require(m_Contribution[_contract][msg.sender] > 0);\r\n        require(!m_Contract[_contract]);\r\n        uint256 _amount = m_Contribution[_contract][msg.sender];\r\n        m_Progress[_contract] -= _amount;\r\n        m_Contribution[_contract][msg.sender] = 0;\r\n        payable(msg.sender).transfer(_amount);\r\n    }  \r\n    function checkContract(address _contract) external view returns (bool){\r\n        if(m_Contract[_contract])\r\n            return true;\r\n        return false;\r\n    }\r\n    function checkProgress(address _contract) external view returns (uint256 Funded, uint256 Goal){\r\n        return (m_Progress[_contract], (m_Base * m_Price));\r\n    }\r\n    function getContribution(address _contract) external view returns (uint256){\r\n        return m_Contribution[_contract][msg.sender];\r\n    }\r\n    function updateCost(uint256 _integer) external{\r\n        require(msg.sender == m_WebThree);\r\n        m_Price = _integer;\r\n    }\r\n    function withdraw() external {\r\n        require(msg.sender == m_WebThree);\r\n        payable(m_WebThree).transfer(m_Funds);\r\n        m_Funds = 0;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"checkContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"checkProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Funded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Goal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"purchaseLicense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"removeContribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_integer\",\"type\":\"uint256\"}],\"name\":\"updateCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Web3PO", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://bd4e7656a87d940484369d977e7b5998c50ac00347333266144ba9c2721f78a0"}]}