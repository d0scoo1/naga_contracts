{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\n/**\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNK0kxxkk0KXNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0d:'..     ...,lkKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKo;.                .:xXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0l.                      ,dKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXkc.                          'o0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOkOOOOKNWWMMMMMMMMMMMMMMMMMMMMMMMWNOl'.                              .:xKNMMMMMMMMMMMMMMMMMMMMMMMWNX0OkkkOOOKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOo:'.      .',;lx0XNWMMMMMMMMMMMMMWN0xl,.                                    .;okKNWMMMMMMMMMMMMWNNKko:,..       .':d0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd,.                ..,:lodxO000Oxddl:'.                                            .':lodxO0Okxddoc,..                 .;xXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk,                            ...                                                            .                              ;OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKc.                                          ..',,,,,;:cclllcllllccclllc::cc:;,,,'...                                          .dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:                                 ...,;;:cllccllllllcclccclllccccccccccccccllcclllllccllc:;;,...                                .lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:                           ..';ccllllllccccccloodxxkkOO00KKKKKXXXXKKXXKK0000Okkxddolllcccccllllolcc:,..                          .oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXc                      .',:ccllcccccllodxO0KXNNWWWMMWWWWWWNNNXXXXXXXXXXXXXNNNNWMMMMWWWWNNXK0Oxdollcccllllclc,..                     .dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKc.                 .';cllllccccodkOKXNWWWMMWNNX0Okkdolc:;;;,,''............''';kWMXxlodxkO0KXNWWWWNXKOkdlcccccllll:'.                 .lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk,              .';clllc:ccoxOKXNWMMMMMMMMMXd:,'..                              .xWMk.      ...,;:ldkKWMMWWNXKOdoccccllol;'.              :0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKo.           .,:cllc::cox0XNWMMMWWWNNNWWMMMMX:                          .;:;;;;,,c0WWd.              .xWMMWWWMMMMWNX0kolccclll:,.           .dXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKo'         .,clllc:clxOXNWMWWNX0kdlc;;,,;cd0WMWx'.';:clod;              ..oNWWWWWWNNWMXc               ,KMMMMWNXK000KXNWWWX0xoc:clllc,.         ,dKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXkc.        .;lllc::lx0NWWMWNXOdc;'.           .dNMNKKNWWWMWWx.             ..oNWMMMMMMMMMK;              .dNMMMXo,.......';cox0XNNKkoc:clol:'.       .ckKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKkd:'       .'cllc::lx0XWMMWNKxl;.                  .xWMMMMMMMMMMO'             ..oNWMMMMMMWWMO'              ;KMMMK:              .':okXNNKxl::cooc,.       .;ok0XNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXKOkkkkkkxdoc;'.        .,colc:cdOXWMMWN0xc,.     ...              .oWMMMMMMMMMMX:             ..oNWMMMMMMWWWx.             .dWMMWx.                   .;oONWXOdc::lol;.        ..,;:looxxxxxkO0XNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNKxl;'..                   .,cll::cx0NWMWWKkl,.       .o0KKx.           .c0WMMMMMMMMMWWo.             .oNMMMMMMMWWNl              ;KMWWWO'             .,;'.    .,lONWNKxl::llc,.                    ..,cd0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKd;.                      .'col:;cxKNWMWN0d:.           .oNMMNc        ..;oOXWMMMMMMMMMWWk.             .oNMMMMMMMWMX:             .dWMMMWNO;           .oNWNO,      .,dKWWWKxl::loc,.                      .,oKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd'                       .;loc:cdKWWMMWWKc.               .o0kc.         .....c0WMMMMMMMMMK,             .lNMMMMMMMWW0,             ;KMMMMWWWXx;.         ;OWWO'         'oKWMWWKxc::lo:.                       'dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:                      .,coc;:d0NWMMMMMMMNd.                 .                  ;KMMMMMMMMMNl             .lNMMMMMMMWWk.            .xWWWWK0XNWMNOl.        .:kkl'.         ,kWMWMWN0d::col,.                     .cKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXc                     .;ol:;lkXWWWMMMMMMMMMWk,                  ':l:.            .dNMMMMMMWWWx.            .lNMMMMMMMMWo.            ;KMMWO'..,cox0XKd;.       .;x0Od:.       ,0MMMWNNWNOl;:ooc.                     cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo.                   'ldl::o0NMMMWWMMMMMMMMWWWKc                .xWMWk'            ,0WMMMMMWWWO'           .'oNMMMMMMMMXc            .xWMMNl       .':odo;.        ;kNWKxc.    ;KMMNk;;dKWWKd:;loc'                   .xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK,                  'loc;cxXWMMWKdokKWMMMMMMMMWWXo.               'OWMWx.           .oNMMMMMMMMNxllodxxkkOO000XWMMMMMMWWNklc:;,...    :XMMMNo           .lKOc.       .;OWMWXkc';OWWXl.   .ckNWXkc;col'                  cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO.                ,loc;ckNWMMNOl.   .:dKWMMMMMMMMNx'               ,0WMNo.        ..'dXWWMMMMMWMMWWMWWWMMMMMMMWWWWMMMWWWMMWWWWNXK0OxooOWMMMMKc.         'OWMNd.        .lKWMMWNNWMWXd,.    .,dKWNOl;cdl,                ,KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMk.              ,oo:;lONMMMNk:.        .;d0NMMMMMMW0;               ;0MMXc   .,:oxOKNWWMWWWNNXK0OkkkxooollccllllcloddddxkOOKXNNNWWMMMMMMMMMMMNOc.       ;ONWNd.          ;0WMMMMMWMMWNkc.     'oKWN0o;:ol,              'OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMk.            'loc;lONMMWXx;.             .;d0NMMMMWKl.              :KMMKddOXNWWWWNX0kdol:;''..                          ..',;;codk0KNWMMMMMMWNKx:.     .,:;.            :KMMMMWWMMMMMW0o'     .l0NW0o;coc.            .xMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWo.          .cdc;lONWWWXx,                   .;dKWMWWNd.           .'lKWMMWWWNKOxl:,'.             ..................               ..,codOKNWWWWWWXkl,.                  ,KMMMMWWMMMMWMWXl.      .c0WW0l;:lc.           oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX:         .:dl;cONWWWNx,                        .:xXWMWO,       .:dOXWWWNKOdc,..        ....,::;;;ccc::::;:::;;;;;:::::::;;::,'..         ..,cox0XWWWWN0xl,.             .dNMMMWWMMMMWWNk,          .l0WNOc,coc.         lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO'        ,do;:xNWWMNO;.      ..                    .lONWK:. .,oOXWWWXOdc,..       ..';:::c:;;;;'.',,,,;;;;;;;;;;;;;;,,,'''',;;;::;;;;''.        .,cdOXWMMWNKko:'.      .,kNMMWMMMMMMMNO:.             .oKWNk:;ld;.       'OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXc       .ld:;oKWMWW0c.        .cdc.                   .,dXXkx0NWWN0dc'.      ..,;::::,''',;;:ldxxO0KXXNNNNWWWWWWWWWNNXXKK0Okxdl:;,'''',::::;,'.      .'cd0XWWMMWNKOxolloOXWMMMWMMMMMW0l.                 'dXWXd;:ol'       cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo.     .:dl,c0WMMWXo.           .oXXkc.                 .:0WMMNKko,.      .,;;:;;''',:cdk0XNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNK0kdl:,''';:::;,..     .'ckKNWMMMMMMMMMMMWWWWWMMWXo.                     ;ONW0l,cd:.     .oNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl.     .lo:;xXWMMMXc              .lXMWKl.            .,o0NWWKxc.      .,;::;'.';cdk0XWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOdl;''';:::,.      .:dKNWMMMMMMMMWWMMMMXx,                        .lKWNk:;oo'     .oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKc.    .;dl,c0WMMMMMWk,               :0Ko'           .:kXWWXkc'     .';c:;'.':okKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOdc,.';:c:'.     .:xKWMMMMMWWMMWNO;.                   .,,.    'xNWKl,cd:.    .:OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo'     .ld:;dXMMMMMMMMW0:               ..    .lo:.  'o0WWN0l'.    .':c;,'':oOXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo::dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOd:'.';cc,.     .lOXWWWWWWWKc.                   .cONNx,    .cKWNx;;dl.     .lKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKo'      'do;:OWMMMMMMMMMMWXo.                 .lKWMW0dxXWWKx:.    .':c;'.,lkKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNo.  .dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKkl,.';c:,.    .;dKWWWMMKl.                 'oKWMMWWKl.    ,kNW0c,od,      .lONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKx:.       ;dl,lKWMMMMMMMMMMMMMWk,                .xNMMMMWWN0o'     .:c;'.,lkXWMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMWWWNKo.    .dXNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOo,.':c:'     'l0NWWMW0l.            .:xXWMMWWMMMNk,  .:kNMWXo,cd:.      .,oONWMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMNXOo;.        .:d:,dXMMMMMMMMMMMMMMMMWKc.               .lXMMWNOc.    .,::,.'ckXWMMMMMMMMMMMMMMMMMMNkd0WMMMMMMMMMMNOolc:,.       .',::coONMMMMMMMMMMNOdONMMMMMMMMMMMMMMMMMMWNOl,.':c;.    .cONWWMW0l.        .l0WMMMMWMMMMMMWKdd0WMMMMWNx;;dl.        .'cdOXWMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMWXkl;.           .cd:;kNMMMMMMMMMMMMMMMMMMMXd.              'xNWNOc.    .:c;..;dKWWWMMMMMMMMMMMMMMMMMMMK: .l0XKOOOKWMMNk;.                .;kNMMW0xkOKKOc. :KMMMMMMMMMMMMMMMMMMMMMWXx:..;c:.    .:kNWMMW0c.   .;dKWMMMMMMMMMMMMMMMMMMMMMMMMMWO:;do.            .:dONMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMNkc.              .ld;:OWMMMMMMMMMMMMMMMMMMMMMW0:           .oKWNOc.    .:c;.'cONWMMMMMMMMMMMMMMMMMMMMMMWO,   .'...,xNMMMWXx;.            .;kNWMMMNx' ....   'OWMMMMMMMMMMMMMMMMMMMMMMWN0l'.,::'    .:ONWWMNO:'cONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c;oo'              .,xXWMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMNx,                .oo;c0WMMMMMMMMMMMMMMMMMMMMMMMMXd.       .:OWWKl.    .:c;.'l0WMMMMMMMMMMMMMMMMMMMMMWNKkl,        .dNWMMMMMWXl.          .oXWWMMMMMNx.        'ckKNWMMMMMMMMMMMMMMMMMMMMMWKd,.,cc'    .c0NWMWNXWMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMWKl,od,                'dXWMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMW0c.                .dd;c0WMMMMMMMMMMMMMMMMMMMMMMMMMMW0:.    'xNWXd'    .:l;.,dKWMMMMMMMMMMMMMMMMMMMMMMMNk;.          ;0WMMMMMMMXl           .oNMMMMMMMW0,          .;kNMMMMMMMMMMMMMMMMMMMMMMMWXx,.,cc'    .oKWMMMWMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl,od'                 ,OWMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMM0;                 .od;c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx' .:0WWO:.   .;l;.'oKWMMMMMMMMMMMMMMMWWWMMMWWWMWN0xl,.        :0WMMMMMW0;   .;::;.   ,0MWMMWMWO;         ,lk0XWMWWWWMMWNWMMMMMMMMMMMMMMMWXd,.,c:.    ;kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl,od'                 'OWMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMXc                 .oo;c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKdxNWKo.    ,c:..l0WMMMMMMMMMMMMMMMMWOclkOxclKWMMMMWK:   .,;;,,oXMMMMMW0:,lkKNWWNKko;:0WMMMMMXo,,;:;.   :KWMMMMW0ccdkxl:kNMMMMMMMMMMMMMMMMWKo'.;l;.   .lKWMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXl,od'                 :XMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMK,                .od;:0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;    .cc'.:ONWMMMMMMMMMMMMMMMMMWk.  .  ;0MMMMMMNo..:kNWWNXXWMMMMMMWNNWMMMMMMMMWNNWMMMMMMWNXNWWNOl..dWMMMMMWK:     .xWMMMMMMMMMMMMMMMMMMW0c.'cc.    ,kNMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKl,do.                .kMMMMMMMMMMMMM\r\nMMMMMMMMMMMMM0'               .cd;:OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd'    ,l:.'dXMMMMMMMMMMMMMMMMMMMNO:.     .oKWMMMMWKxkNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOkKWMMMMW0o.     .:kNMMMMMMMMMMMMMMMMMMMNx,.,l;.   .oXWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKc,ol.               .xWMMMMMMMMMMMM\r\nMMMMMMMMMMMMMK,               :x:;kWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKl.   .:c'.:0WMMMMMMMMMMMMMMMMMMMW0c'.    ..,oXMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd;'.    .,l0WMMMMMMMMMMMMMMMMMMMWKl..cc.   .c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;;dc.              ,0MMMMMMMMMMMMM\r\nMMMMMMMMMMMMMNl              ,dc,dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0:    .l:..oXWMMMMMMMMMMMMMMMMMMMMMWNX0d. ,xKXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXO; .oKNNWMMMMMMMMMMMMMMMMMMMMMMNx'.:l'    ;OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk;:d;              lNMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMM0'            .do,lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;    'l;.,kNMMMMMMMMMMMMMMMMMMMMMMMMMMMNkd0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKdkNMMMMMMMMMMMMMMMMMMMMMMMMMMMW0:.,l;.   'kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd,lx,            'OMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMNd.          .lx;:0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,    ;l,.:0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKl.'l:.   'xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXl,dd.          .dWMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMXc          :xc;kWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk,   .:l'.cKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo.'c:.   .xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0::xc          cXMMMMMMMMMMMMMMM\r\nNNNNNNNNNNWWNNNN0l::::::::lk0dxXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXkl::cdOxldKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXxlxOxccclkXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXOk0Ooc:c:cccco0NWWNNNNNNNNNNNNN\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXKK0kxddooooddxkO0KKXXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKXXXKKKKKKKKKKKKKKKKKKKKKKKXXXXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKXKKKKKKKKKKKKKKKKKKXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKXXKKKKKKKKKKKKKKKKKXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKXXXXKKKKKKKKKKKKKKKKKKKKKKKXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXX0koc:::ccccllllccccc::cldOKXXXXXXXKx::::::::::::::::::::::::::;ckKkc::::::::::::::::::::::ccclodk0KXXXXKx::::::::::::::::::::::::::::::::::;;coc;:::::::::::::::ckXKd::::::::::::::::::::::::::::oo:::::::::::::::::o0XOl:::::::::::::::::::::::::::dK0o:::::::::::::::::::::::ccllodk0KXXXXXXXXXX\r\nXXXXXXXKxc;:cdk0XNWWWMMMWWWWWNKOxoc;:oOKXXXX0:'o000000000000000000000000l.l0l.l0000000000000000OOOOOkkxdoc:;:dOXX0:'d00000000000000000000000000000000l'...lO0000000000000l.lKO;'x000000000000000000000000x'..'x0000000000000k,'kKd.:O00000000000000000000000x',Ox';k000000000000000OOOOOkkxdolc:::lkKXXXXXXX\r\nXXXXXKx:,lkXWMMMMMMMMMMMMMMMMMMMMMWKx:,ckKXX0:,OMMMMMMMMMMMMMMMMMMMMMMMWx'c0c'xWMMMMMMMMMMMMMMMMMMMMMMMMMWN0o;;o00;,OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx;. .xWMMMMMMMMMMMMWx'cKO;;0MMMMMMMMMMMMMMMMMMMMMMMMK;..;KMMMMMMMMMMMMMX:'xXo'oWMMMMMMMMMMMMMMMMMMMMMMMK;,Ox'cNMMMMMMMMMMMMMMMMMMMMMMMMMMWNKxc,:xKXXXXX\r\nXXXX0l'c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;,xKX0:,OMMMMMMMMMMMMMMMMMMMMMMMWx'c0c'xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo':x;,OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx;. .xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMMMMMMMMMMMM0;..;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMMMMMMMMMMMK;,Ox'cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c'l0XXXX\r\nXXX0c'oNMMMMMMMMMMMMWXOk0XWMMMMMMMMMMMW0;,kX0:,OMMMMMMMMMMMMMMMMMMMMMMMWx'c0c'xWMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMNd';,,OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx;. .xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMMMMMMMMMMMM0;..;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMMMMMMMMMMMK;,Ox'cNMMMMMMMMMMMMMMWWWMMMMMMMMMMMMMMMXl'oKXXX\r\nXXXd'cXMMMMMMMMMMMMMO;,;'lXMMMMMMMMMMMMWx'c00:,OMMMMMMMMMMMMMMNXXXXXXXXKo.l0c'xWMMMMMMMMMMMMW0lcoONMMMMMMMMMMMMK:..'xXXXXXXXXWMMMMMMMMMMMMMWNXXXXXXXKo,. .xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMWNXXXXXXXXXk,..;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMWXXXXXXXXXk,,Ox'cNMMMMMMMMMMMMMXdcldKWMMMMMMMMMMMMMO,;OXXX\r\nXXKl'dWMMMMMMMMMMMMWo.oO;,0MMMMMMMMMMMMM0;,O0:,OMMMMMMMMMMMMMWx,,:::::::;;x0c'xWMMMMMMMMMMMMWd.',,kWMMMMMMMMMMMWo.';;:::::;';OWMMMMMMMMMMMMWx,,::::::;,;'.xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNo';:::::::;;:';KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMM0:';::::::;;o0x'cNMMMMMMMMMMMMMK;.;.:XMMMMMMMMMMMMMK:'kXXX\r\nXX0:'kMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMXc'x0:,OMMMMMMMMMMMMMNl.lO0000000KXKc'xWMMMMMMMMMMMMWd'cl.dWMMMMMMMMMMMWd'l0000000k;.kWMMMMMMMMMMMMNl.lO00000000c'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc.o000000000k,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMO';k00000000KXx'cNMMMMMMMMMMMMMK;;d;,0MMMMMMMMMMMMMX:'xXXX\r\nXX0:,OMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNl.dXXXXXXXXXXKc'xWMMMMMMMMMMMMWd'cl'dWMMMMMMMMMMMWd'lKXXXXXX0:'kMMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMO':0XXXXXXXXXXx'cNMMMMMMMMMMMMMK;;d;,0MMMMMMMMMMMMMXc.dXXX\r\nXX0;,0MMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNo.cxxxxxxxOKXKc'xWMMMMMMMMMMMMWd.,,'kWMMMMMMMMMMMNl'dKXXXXXX0:'kMMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc.cxxxxxxkOKk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMO',dxxxxxxk0KXx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMWkc:cccccc:,c0Kc'xWMMMMMMMMMMMMWO::cxNMMMMMMMMMMMM0;,kXXXXXXX0:'kMMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNx::cccccc;,ok,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMKo:ccccccc,;kXx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'd0:'o0000000000000O:.d0:,OMMMMMMMMMMMMMMWWWWWWWWW0;,OKc'xWMMMMMMMMMMMMMWWWWMMMMMMMMMMMMW0:'dKXXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMMWWWWWWWWWk':x,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMMWWWWWWWWNl.oKx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'dKxc::::::::::::::::lO0:,OMMMMMMMMMMMMMMMMMMMMMMMK;,OKc'xWMMMMMMMMMMMMMMMMMMMMMMMMWX0xl;,:xKXXXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMMMMMMMMMMMk':x,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMMMMMMMMMMWo.oKx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'dXXKKKKKKKKKKKKKKKKKXX0:,OMMMMMMMMMMMMMMMMMMMMMMMK;,OKc'xWMMMMMMMMMMMMMMMMMMMMMMMMWX0xc,'cOKXXXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMMMMMMMMMMWk':x,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMMMMMMMMMMWo.oKx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'dXK00OOOOOOOOOOOOOO0KX0:,OMMMMMMMMMMMMMMMMWMMWWWMK;,OKc'xWMMMMMMMMMMMMMXkk0XWMMMMMMMMMWXx;,dKXXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMMMMWWMWWWWk':x,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMMMWWWMWMMNo.oKx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'dKd;;::::::::::::::;cO0:,OMMMMMMMMMMMMMWOlcllllll:'c0Kc'xWMMMMMMMMMMMMWx..'cKMMMMMMMMMMMW0;,kXXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNklcllllll;.lk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMXdcclllllc,,xXx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXXO;,0MMMMMMMMMMMMMNl'd0:'xXXXXXXXXXXXXXKc'd0:,OMMMMMMMMMMMMMNo.;ooooooox0XKc'xWMMMMMMMMMMMMWd.c:'xWMMMMMMMMMMMNo'dXXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc.:oooooodx0k,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMO''loooooodkKXx'cNMMMMMMMMMMMMMK;;d;,OMMMMMMMMMMMMMXc.dXXX\r\nXX0;,OMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNl.d0:,OMMMMMMMMMMMMMNl'dKXXXXXXXXXKc'xWMMMMMMMMMMMMWd.cl'dWMMMMMMMMMMMWd'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMO':0XXXXXXXXXXx'cNMMMMMMMMMMMMMK;;d;,0MMMMMMMMMMMMMXc.dXXX\r\nXX0:'OMMMMMMMMMMMMMNl'd0:,OMMMMMMMMMMMMMNc'd0:,OMMMMMMMMMMMMMNo'dKXXXXXXXXXKc'xWMMMMMMMMMMMMWd'cl'dWMMMMMMMMMMMWd'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMO':0XXXXXXXXXXx'cNMMMMMMMMMMMMMK;;d;,0MMMMMMMMMMMMMNc.dXXX\r\nXXKc'xWMMMMMMMMMMMMNl'd0:,0MMMMMMMMMMMMMX:'k0:,OMMMMMMMMMMMMMNo.lOOOOOOOOOK0c'xWMMMMMMMMMMMMWd.cl'dWMMMMMMMMMMMWx'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKd'oNMMMMMMMMMMMMMO';kOOOOOOOO0Kx'cNMMMMMMMMMMMMMK;;d,;KMMMMMMMMMMMMMXc.dXXX\r\nXXXo.lNMMMMMMMMMMMMWo.ok,;KMMMMMMMMMMMMM0,;O0:,OMMMMMMMMMMMMMWx;;::::::::;;dc'xWMMMMMMMMMMMMWd.cl'dWMMMMMMMMMMMWx'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMM0c,:::::::::;lo'cNMMMMMMMMMMMMM0;.,'lNMMMMMMMMMMMMMX:'xXXX\r\nXXXk,;KMMMMMMMMMMMMWO;,;,oNMMMMMMMMMMMMWd'lK0:,OMMMMMMMMMMMMMMWNNNNNNNNNXd.::'xWMMMMMMMMMMMMWd.cl'dWMMMMMMMMMMMWx'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKo'oNMMMMMMMMMMMMMWNNNNNNNXNNO;,c'cNMMMMMMMMMMMMMXxcokXMMMMMMMMMMMMMMK;,kXXX\r\nXXXKo'lNMMMMMMMMMMMMWX00KNMMMMMMMMMMMMWO,;kX0:,OMMMMMMMMMMMMMMMMMMMMMMMMWx'::'xWMMMMMMMMMMMMWd.cl'dWMMMMMMMMMMMWx'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;0MMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xKd'oNMMMMMMMMMMMMMMMMMMMMMMMMK;,c'cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk'c0XXX\r\nXXXX0l'lKWMMMMMMMMMMMMMMMMMMMMMMMMMMWXd,;kKX0:,OMMMMMMMMMMMMMMMMMMMMMMMMWx'::'xWMMMMMMMMMMMMWd'cl'dWMMMMMMMMMMMWx'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXO,;KMMMMMMMMMMMMMX:'xKd'oWMMMMMMMMMMMMMMMMMMMMMMMMK;,c'cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO;,xXXXX\r\nXXXXXKd;,lOXWMMMMMMMMMMMMMMMMMMMMWXOl;;o0XXX0:,OMMMMMMMMMMMMMMMMMMMMMMMMWx'::'xWMMMMMMMMMMMMWd'cl'dWMMMMMMMMMMMWx'lKXXXXXX0:'kWMMMMMMMMMMMMNl.oKXXXXXXXKl'xWMMMMMMMMMMMMWx'cKO,;KMMMMMMMMMMMMMNc'xXXXXXXXXXk,;KMMMMMMMMMMMMMX:'xXd'oWMMMMMMMMMMMMMMMMMMMMMMMMK;,c'cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOl,;xKXXXX\r\nXXXXXXX0xc;:cok0KXNWWWWWWWWNNK0koc:;cx0XXXXX0:.oOOOOOOOOOOOOOOOOOOOOOOOOOl.cc.lOOOOOOOOOOOOOOc.ll.:kOOOOOOOOOOOOc.lKXXXXXX0c.lOOOOOOOOOOOOOk:.dKXXXXXXXKl.cOOOOOOOOOOOOOOc.lKO;'dOOOOOOOOOOOOOx;'xXXXXXXXXXO,'dOOOOOOOOOOOOOx,'kXd.:kOOOOOOOOOOOOOOOOOOOOOOOOd,,l';xOOOOOOOOOOOOOOOOOOOOOOkkxdolc:;cx0XXXXXX\r\nXXXXXXXXXK0kdlc:::ccccccccccc:::lok0KXXXXXXXKkc:::::::::::::::::::::::::::lOkl:::::::::::c::::lOOl:::::::::::::::lOXXXXXXXKkl:c::::::::::::::oOXXXXXXXXXOl::::::::::::::::lOXKxc::::::::::::::::d0XXXXXXXXXKdc:::::::::::::c:cd0X0o:::::::::::::::::::::::::::cxOdc::::::::::::::::::::::cccclloxO0XXXXXXXXX\r\nXXXXXXXXXXXXXXKK0OkkxxxdxxkkO0KKXXXXXXXXXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKXXXXKKKKKKKKKKKKKKKKXXXXKKKKKKKKKKKKKKKXXXXXXXXXXXXXKKKKKKKKKKKKKKXXXXXXXXXXXXXXKKKKKKKKKKKKKKKXXXXXXXKKKKKKKKKKKKKKKXXXXXXXXXXXXXXXKKKKKKKKKKKKKKKXXXXXXXKKKKKKKKKKKKKKKKKKKKKKKKKKXXXXXKKKKKKKKKKKKKKKKKKKKKKKXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\nkkkkkkkkkkkkkkkkdddxddddxxxkOkxOXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKkxddxO0kxOKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXNX0xxOOxdxxk0XNNN0OKNNNNNNNNNNNNNNNNNNNNNXXXXXXXX0kxOOxddxxddxdxk0000000000000000\r\ndddddooodooooool,.         .l:.;0WWWMMMMMMMMMMMWMMWWWWWNKkxdkKWWMWWWNd.   .lc.'dNWWWMMMMMMMWWMMMMMMMMMMMMMMMMMWMMMMMMMMMMMMMMMMMMMMMWWWMMMMMMMMMMWWWWMMMMMMMMMMMMMMMMMMMMWWMMMMMWWWWMMMMMMMWWWMMMMMMMMMMMMMMWWMMWWWWMMMMMWWNk;.;l,.  .cKWWWKc'oNMMMWMMWWWWWWWMMWWWWWWWWWWWWXl.,l,          'oxdddddddddddddd\r\ndddddddddddddod:.           ,l,.cKWMMMMMMMMMMMMMMMMMMWO:.    .:kNWWWWXd.   .::..oXWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx'.;l'    :0WMWK:  .oNMMMMMMMMMMMMMMMMMMMMMMMMMWx..l:.           ,xxdoooooooooooo\r\noddddoddddddddo'             :l..dNMMMMMMMMMMMMMMMMMM0,        .:OWMMMNx'   .;c,.:0WWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXo..:c.   .cKWMMK:    .oNMMMMMMMMMMMMMMMMMMMMMMMWO,.:c.            .o0xoodddddooddo\r\nxdddoddoodoodx:.             .cc.'kWMMMMMMMMW0dcdXMMMO.          .lKWMMWk,    ,l;.,xNMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWNNNNNWWWNWMMMMWNXXKXXNWMMMMMWWNNNNWWWMWWWNWWWWWWNNNWNNNNWMMWWWNNWMMMWWNNWWMMMMMMMMMMMMMMMMMMMMMMMMMMW0:.'c:.   .lXMMW0;      .dNMMMMMMMMMMMMMMMMMMMMMMK:.;l'              ,kOdodddooddodk\r\nKOkddodddodoxx,               .l:.,OWMMMMMMKl.  .lXMM0'            ,kWMMWO:    .cc..lKWMMMMMMMMMMMMMMMMMMMMMMMKc,,,,,,,,,,,,lKW0o:,.....';lkNMWx;,,,,lxKNd;,,,:kXd,,,,,,,,,cKNd,,,,:OWNo,,,,oXMMMMMMMMMMMMMMMMMMMMMMMWXx'.;c,    'dNMMWk'        .xWMMMMMMMMMMMMMMMMMMMMXc.'l;               .dOdodddooddk0X\r\nXXK0Oxdddddoxd'                'l;.;0WMMMMWo.    .cXMNl             .lXWMWKo.   .,:,.'dXWMMMMMMMMMMMMMMMMMMMMM0:'..      .''cOd.    .:'     cXNc     'lko.    cXX:      .'':0X:     'OK;    ;KMMMMMMMMMMMMMMMMMMMMMMNO:..::.    ;OWMMMO'          .kWMMMMMMMMMMMMMMMMMMXl..c;                .dOdoooddxk0XXX\r\nXXXXXX0kxdoddl.                 ,l,.:KWMMMWo       :KWO'              ;OWMMNk,    .::..:ONWMMMMMMMMMMMMMMMMMMMWNNXo.    .dXNNK;     ;Kd.    .kNl     .;;.    :KMX:     ,ONXNWX:      'd;    ;KMMMMMMMMMMMMMMMMMMMMWKo..;c'    .lKWMMMMNo.          ,0MMMMMMMMMMMMMMMMMNo..c:.                .xOddddk0KXXXXX\r\nXXXXXXNNKOxdoo:.                 ,c'.cKWMMWk.       ;0Nl       .okd'   .xNMMW0l.    ,:,..l0WMMMMMMMMMMMMMMMMMMMMMWd.    .xWMMK;     ;Kx.    .kNl            :KMMX:     .;ccxNX:       ..    ;KMMMMMMMMMMMMMMMMMMWXd,.'c:.    ;kNMMMMMMMNx.          :XMMMMMMMMMMMMMMMNd..cc.                 :0Oddk0XXXXXXXX\r\nXXXXXXXXXXX0kkOl.                 'c'.:0WMMNc        ,OO,      :XMM0,   .lXWMWNk;    .,c;.'o0WMMMMMMMMMMMMMMMMMMMWd.    .xWMMK;     ;Kx.    .kNl            ;KMMX:      ...cXX:             ;KMMMMMMMMMMMMMMMMWXx,.'::.    .oKWMWX00XNWMWO,         .cONMMMMMMMMMMMMNx..c:.                 ,OKO0KXXXXXXXXXX\r\nXXXXXXXXXXXNNXNXo.                 ,c'.:0WMM0,        .do.     .xN0c.     ;0WMMWXo'    .;c,.'o0WMMMMMMMMMMMMMMMMMWd.    .xWMMK;     ;Kx.    .kNl     ...     cXMX:     'kKKXWX:    ',       ;KMMMMMMMMMMMMMMWKx;.'::'    .cONMMNx,...,:ldxo'          .,lOXWMMMMMMMNd..cc.                .:0WWNNXXXXXXXXXXX\r\nXXXXXXXNNNNNNWMMWO:.                'c,.;0WMWO'       .o0c      ,kd.       'kWMWWW0l.    .;:;..cONMMMMMMMMMMMMMMMWd.    .xWMMX:     ,Oo.    .ONl     .cl,     lXX:     .dOOOXK:    :k:      ;KMMMMMMMMMMMMWKo,.'c:.    .;kNWMW0:.         .               'cONMMMMXl..c:.               .;kNMMWNNNNNNNNNNNNN\r\nWWWWWWWMMMMMMMMMMMNOl'               'c;.,OWMWk'    .dXWM0,      ;0O:.      'OWMMWWN0l.    .,:;..;xKWMMMMMMMMMMMMWx.    .xWMMWO;.    ..    'dNNl     'lOk.    .o0:         .o0:    :X0;     ;XMMMMMMMMMWNOl'.'::'    .;xXWMWKl.                            .dNMMWKc..c;.             .'lONMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMWXkl;..           .c;.'xNMWO,   .kWMMWo.      cXNx'      :KMMMWWWN0l.    .,::'.'lONWMMMMMMMMMMKdoooodKMMMMMN0xoc:::cldOXWMW0oooooxOXNOoooookKOoooooooooo0NOooooOWWKdooookNMMMMMMWNKd;..;::.    .;kXWMWKo'                             .xNMMW0:.':,           ..:oONWMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMWXOd:'.        .::..lXWW0:   .l0Kk,       .lNWKl.    ,0MMMMMMWWN0o'     ';:;..;o0NWMMMMMMMMMMMMMMMMMMMMMMMMMMWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKxc'.';;'.    .;kXWWWWXd,..                           ;0WMMNk,.;c'         .;dOXWMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOl'       .;:'.:0WMXo.   ..          .oNMW0:. ,kNWMMMMMMWWMWKd;.    .,:;'..;oOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKxc'.,::;.     'lONWWWKolkXXK0kxdol:;,,''...           .oXMMWXd..:c.       .ckKWMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXx;.      'c,.,xNMWk,               .xWWWNOkXWWWMMWWWWWWMMMWXOc.     .,;;,..,ckKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOo;..';:;.     .,dKWWWNOl.  .:0WMMWMMWWWWNNNXXKOl.       ,kNMMW0:..::.      'oKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;      .::..lKWWXo.              ,0WMMMMWMMNOo:;:cox0XWMWWWKx:.     .,::;'..;okKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXOd:,..,;:;..    .,lONWWWXx;.    .c0WMMMMWWWMMMMMMMMMWKd,.  .lKMMMNk,.;c,      .dXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd.     .;c,.,kNMW0l.            .dWMMMMWXx;.       .':d0NWMWN0d;.     .';:;,'.';cdOXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWX0ko:,..',;;'.      'ckXWWWNOl'     .l0WMMMMMMMWWWMMMMMMMMMMMNOcckWMMWKl..:c.      :0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk'      'c:..lKWMW0l'          'OWMMMNk;              .,lkXWWWN0d:.      .',;;;,'.';cdk0XWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNKOdl:,'',;;;,'.      .,lkKWWWN0d;.     .oKWMMMMMMMMMMMMMMMMMMMMMMMMMWWWMWNx,.,l;.     .lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO'      .,c,.,dXWWWXx:.      ;kNWWNO:.                   'ckXWWWWXkl,.      ..,;:::,''',::ldkO0XNNWWWMMMMMMMMMMMMMMMMMMMMWWWNNXK0kxoc:,...';;::;'.      ..:d0NWWWN0d;.        .oXWWMMWMMMMMMMMMMMMMMMMMMMMMMWWWO:..::.       lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd.       .::..:ONWMMWKkocclkXWMW0c.                 ...    'lONWMWWX0xc,.       .',,:;::,,;,.',;;;:cloddxxxxkkkkxxxddddolc:;,,'.',,,;;;;;,'.       ..;oOXWWMWXOl,.             ;kNMMWWWMMMMMMMMMMMMMMMMMMWWWKo..,c,        ,0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX:         ':;..l0NWMMMMMWMMMMNx'                 .lKX0:     .,dKWWWMMWN0ko:'.        ...,::;:cc:;;;:;;,''''''''...'',;;;;,,;::;,;,'..        ..,cdOKNWMWN0d:'                  .lKWMMWWMMMMMMMMMMMMMMMMMWXx;.,c;.        .dWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx.         .,c;.'oKWMMMMMMMMMO'                 'xNMWK:        'oKWWMMWMMWWX0xoc,..          ....',;;;;,,,,;;;,,,,,,;;,,'....           ..;ldOKXWWWWXXKd'.                       ,xNMMMMMMMMMMMMMMMMMWWNk;.'::.          ,0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO'           .;c,.,dKWMMMMMMM0,                :0WMWO;           ;OWMMMMMMMWMMWWNKOxdl;,'.                                      ..,;codkKXNWMWWX0xl;',xo.   .;oOk,                .c0WMMMMMMMMMMMMMMWNk:.'::'            cNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0,             .:c,.'oKWWWMMMNx.             .oXMMWk'             ;KMMMMMMMMWWWWWWWMMWWNXKOkxdl::;;,'................',;;;:coxkk0XNNWWMWNXKkdl;..     ,kxclkKNWMWK:                 .dXMMMMMMMMMMWWNk:..;c,.             lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK,               ':c,.'oKWWWMMWk'           ,kWMMNd.              '0MMMWXOdlc:::::clodxO0XNNWWWWWWNNXXKKK00000000KKKXXNNWWWWWMMWNNX0kdoc;'.        .'cdKWWWMMMWWMMXl.                 ;OWMMMMMMMWXk:..;c,.               lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX:                 '::,.'l0NWMMWKl.        cKWMWKc.              .oNMMWO;.              ..',:ldk0XWMWWWWWMMWWWNNXXXXXXK0OOOXWMMWx,..           ':ok0NWMMMMWMMMMWWMMNo.                 ;0WMMMMWXx;.'::,.                 oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx.                  .;:;..:kXWMMWOc.     'kWMWO;                cXMMWO'              ...       .':oOXWMMMMW0d:'''....... .dWMMWk.            .oNWMMWX0xd0WMMWWWWWMMNx.             .,o0NMMMW0o'.'::'.                  .OMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0,                    .,:;..,o0WMWN0l'    .coc.                :KMMM0,             .l0KOl.          'dXMMMWkc.            :XMMMK;             'xOxl:'.  ,0WWMMWWWWWMWk'          'lONWMMWXkc'.';;.                     cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk.                     .';;,.'ckXWMWXx:.                     ;0MMMXc              ;KMMWk.           .oNMMWOc.            'OMMMWo.             ..      .,xNWMMWMMMWWMW0;      'ckXWMMWN0o;.';:;.                      ;KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWx'                       .,:;'.,lOXWWWKxc'                 ,0MMMNo.             .xWMMNl             ,KMMMOl'            .dWMMMO'                .';lx0XWMMWWMMMMMMWMWK:..'lkXWMMWNKx:..,::'.                       :0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0:.                       .'::,..;o0NWWWXOo:'.           ;0WMMWk.              ;KMMMXo'...         ,KMMMOl'             cNMMMNc               c0XWWMMMMWN00NMMMMMMMWMXkONWMMMWKxc'.':c;.                        'dXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOl'                        .';;'..;oOXWMMWX0xoc;,''',:dKWMMMX:              .dWMMMWNNX00OkxxdoollkNMMM0l'             ,0WMMWk.              ;KMWWNKko:'..oNMMMMMMWWMMMMWWKkc'..,;;.                        .;xXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOdc;'.                     .';:,..,lkXWWWWWWWNNNNWWWMMMMMK,              ,0MMMW0OO0KXNNWWWWWWMMMMMMOl'             .xWMMMK;               :xo:,.      .xWMMMMMMMMWN0d:'.',;;'.                 ....,;:okKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXK0OOOOOOkxoc:;..         .,;;,'.':d0XWMMMMMMMWMMMMMMNo.            .oWMMM0,  ...',,;:ccloOWMMM0o'             .oNMMMWo.                      ..;okKWMMMMWNKOo;'.,,;,.         ..,:ldkOO00000KXWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0kl;.        .';;;'..,lkKNWMMWWMMMMMMMNk;.          .xWMMWd.              oWMMM0o'              :KMMMMO'                 .';lx0XWMMMWWWXOo:'..,;:,.        .':d0XNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNKd;.         .,,;;,'',cx0XWWWMMMMWWMN0o;.        .cooc.              .kMMMM0o'              'OWMMMNc           .';cok0XWWWWWWWNKko:'..,;;,'.         .cONWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOc.          .';::;,..,:okKXWWWMMMWWWKOdc,..                     'dNMMMM0o'              .xWWMMWx.  ..';coxOKXWMMMMMMWNKOxc;'..',;;'.           'oKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0:.            ..,,;;,'.',:ok0XNWWMMMMWNX0kdoc:,'.........';:lkXWMMMMM0o'             ..dNWMMMXkxO0KNWMMMMMMMWWNKOdl:'..',;;,'.             .lKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx'                .';::;,,''';coxOKNNWWWMMMMWWNXXKKKKKXXNWWMMMMMMMMMX0dccclloodddxkO0KNWWMMMMMMWWWMMWWNX0kdl:,'.',;;:;,..                ,OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,                    .';:;:;,,'.',;codk0KXNWWWMMWWWWWWMMWWMMMMMMMMMMMWWWMMMMMMWWMMMMMMMWWWWNXK0Okdl:;,'.'';:;;;,..                    ;0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0,                        ..';:;:;'''..',',:clodxkOOO0XXNNNWWWWWWMWWWWWWWWWWNNXXXKK0Okxollc;'','.,;;;:;,;,...                        :KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO,                              ...,',::;;::;'',,,'..',,;;::::ccccc:ccc:::::;,,'''',,'.,;:,';::,,,'..                              ;0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO'                                     ..',,',:::;,'',::cc:;;;:;;;;;::::::::;,,;;:::,'','..                                      ,0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0;                                                   .........''...''.......                                                  .cKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo.                          ......                                                        .......                          ;kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKo'.                .,:ldxk0KKKK0Oxdo:,.                                           .,cdxk0KKXXXKOkxoc,..               .;xXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOo:,........,:ldOXNWMMMMMMMMMMMMMMWNKko,.                                   .,oOXNWMMMMMMMMMMMMMMWNX0xl:;'.......;cd0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNX00KK0KXNWMMMMMMMMMMMMMMMMMMMMMMMMMN0o,                              .;o0NMMMMMMMMMMMMMMMMMMMMMMMMMMWNXKKKKKXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXkc.                         .:ONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0l.                     .cONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKd;.               .;dKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0xl;'.......';lxKNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNX0000KKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\n*/\r\n\r\npragma solidity ^0.8.0;\r\npragma solidity ^0.8.0;\r\ninterface IERC165 {\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\npragma solidity ^0.8.0;\r\ninterface IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\npragma solidity ^0.8.0;\r\ninterface IERC721 is IERC165 {\r\n    event Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 indexed tokenId\r\n    );\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed approved,\r\n        uint256 indexed tokenId\r\n    );\r\n    event ApprovalForAll(\r\n        address indexed owner,\r\n        address indexed operator,\r\n        bool approved\r\n    );\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n    \r\n    function approve(address to, uint256 tokenId) external;\r\n    function getApproved(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (address operator);\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n    function isApprovedForAll(address owner, address operator)\r\n        external\r\n        view\r\n        returns (bool);\r\n    \r\n}\r\npragma solidity ^0.8.0;\r\ninterface IERC721Metadata is IERC721 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\npragma solidity ^0.8.0;\r\ninterface IERC721Enumerable is IERC721 {\r\n    function totalSupply() external view returns (uint256);\r\n    function tokenOfOwnerByIndex(address owner, uint256 index)\r\n        external\r\n        view\r\n        returns (uint256);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}\r\npragma solidity ^0.8.1;\r\nlibrary Address {\r\n    function isContract(address account) internal view returns (bool) {\r\n\r\n        return account.code.length > 0;\r\n    }\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(\r\n            address(this).balance >= amount,\r\n            \"Address: insufficient balance\"\r\n        );\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(\r\n            success,\r\n            \"Address: unable to send value, recipient may have reverted\"\r\n        );\r\n    }\r\n    function functionCall(address target, bytes memory data)\r\n        internal\r\n        returns (bytes memory)\r\n    {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return\r\n            functionCallWithValue(\r\n                target,\r\n                data,\r\n                value,\r\n                \"Address: low-level call with value failed\"\r\n            );\r\n    }\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(\r\n            address(this).balance >= value,\r\n            \"Address: insufficient balance for call\"\r\n        );\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(\r\n            data\r\n        );\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n    function functionStaticCall(address target, bytes memory data)\r\n        internal\r\n        view\r\n        returns (bytes memory)\r\n    {\r\n        return\r\n            functionStaticCall(\r\n                target,\r\n                data,\r\n                \"Address: low-level static call failed\"\r\n            );\r\n    }\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n    function functionDelegateCall(address target, bytes memory data)\r\n        internal\r\n        returns (bytes memory)\r\n    {\r\n        return\r\n            functionDelegateCall(\r\n                target,\r\n                data,\r\n                \"Address: low-level delegate call failed\"\r\n            );\r\n    }\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            if (returndata.length > 0) {\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\npragma solidity ^0.8.0;\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\r\npragma solidity ^0.8.0;\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n    function toHexString(uint256 value, uint256 length)\r\n        internal\r\n        pure\r\n        returns (string memory)\r\n    {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n}\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\npragma solidity ^0.8.0;\r\nabstract contract ERC165 is IERC165 {\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract ReentrancyGuard {\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // back. This is the compiler's defense against contract upgrades and\r\n\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n    modifier nonReentrant() {\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\ncontract ERC721A is\r\n    Context,\r\n    ERC165,\r\n    IERC721,\r\n    IERC721Metadata,\r\n    IERC721Enumerable\r\n{\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    struct TokenOwnership {\r\n        address addr;\r\n        uint64 startTimestamp;\r\n    }\r\n\r\n    struct AddressData {\r\n        uint128 balance;\r\n        uint128 numberMinted;\r\n    }\r\n\r\n    uint256 private currentIndex = 0;\r\n\r\n    uint256 internal immutable collectionSize;\r\n    uint256 internal immutable maxBatchSize;\r\n    string private _name;\r\n    string private _symbol;\r\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) private _ownerships;\r\n    mapping(address => AddressData) private _addressData;\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n    constructor(\r\n        string memory name_,\r\n        string memory symbol_,\r\n        uint256 maxBatchSize_,\r\n        uint256 collectionSize_\r\n    ) {\r\n        require(\r\n            collectionSize_ > 0,\r\n            \"ERC721A: collection must have a nonzero supply\"\r\n        );\r\n        require(maxBatchSize_ > 0, \"ERC721A: max batch size must be nonzero\");\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        maxBatchSize = maxBatchSize_;\r\n        collectionSize = collectionSize_;\r\n    }\r\n    function totalSupply() public view override returns (uint256) {\r\n        return currentIndex;\r\n    }\r\n    function tokenByIndex(uint256 index)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        require(index < totalSupply(), \"ERC721A: global index out of bounds\");\r\n        return index;\r\n    }\r\n    function tokenOfOwnerByIndex(address owner, uint256 index)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        require(index < balanceOf(owner), \"ERC721A: owner index out of bounds\");\r\n        uint256 numMintedSoFar = totalSupply();\r\n        uint256 tokenIdsIdx = 0;\r\n        address currOwnershipAddr = address(0);\r\n        for (uint256 i = 0; i < numMintedSoFar; i++) {\r\n            TokenOwnership memory ownership = _ownerships[i];\r\n            if (ownership.addr != address(0)) {\r\n                currOwnershipAddr = ownership.addr;\r\n            }\r\n            if (currOwnershipAddr == owner) {\r\n                if (tokenIdsIdx == index) {\r\n                    return i;\r\n                }\r\n                tokenIdsIdx++;\r\n            }\r\n        }\r\n        revert(\"ERC721A: unable to get token of owner by index\");\r\n    }\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override(ERC165, IERC165)\r\n        returns (bool)\r\n    {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            interfaceId == type(IERC721Enumerable).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        require(\r\n            owner != address(0),\r\n            \"ERC721A: balance query for the zero address\"\r\n        );\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        require(\r\n            owner != address(0),\r\n            \"ERC721A: number minted query for the zero address\"\r\n        );\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    function ownershipOf(uint256 tokenId)\r\n        internal\r\n        view\r\n        returns (TokenOwnership memory)\r\n    {\r\n        require(_exists(tokenId), \"ERC721A: owner query for nonexistent token\");\r\n\r\n        uint256 lowestTokenToCheck;\r\n        if (tokenId >= maxBatchSize) {\r\n            lowestTokenToCheck = tokenId - maxBatchSize + 1;\r\n        }\r\n\r\n        for (uint256 curr = tokenId; curr >= lowestTokenToCheck; curr--) {\r\n            TokenOwnership memory ownership = _ownerships[curr];\r\n            if (ownership.addr != address(0)) {\r\n                return ownership;\r\n            }\r\n        }\r\n\r\n        revert(\"ERC721A: unable to determine the owner of token\");\r\n    }\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return ownershipOf(tokenId).addr;\r\n    }\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (string memory)\r\n    {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721Metadata: URI query for nonexistent token\"\r\n        );\r\n\r\n        string memory baseURI = _baseURI();\r\n        return\r\n            bytes(baseURI).length > 0\r\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\r\n                : \"\";\r\n    }\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721A: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721A: approve caller is not owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n    function getApproved(uint256 tokenId)\r\n        public\r\n        view\r\n        override\r\n        returns (address)\r\n    {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721A: approved query for nonexistent token\"\r\n        );\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n    function setApprovalForAll(address operator, bool approved)\r\n        public\r\n        override\r\n    {\r\n        require(operator != _msgSender(), \"ERC721A: approve to caller\");\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n    function isApprovedForAll(address owner, address operator)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n    \r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return tokenId < currentIndex;\r\n    }\r\n\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, \"\");\r\n    }\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {\r\n        uint256 startTokenId = currentIndex;\r\n        require(to != address(0), \"ERC721A: mint to the zero address\");\r\n        require(!_exists(startTokenId), \"ERC721A: token already minted\");\r\n        require(quantity <= maxBatchSize, \"ERC721A: quantity to mint too high\");\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        AddressData memory addressData = _addressData[to];\r\n        _addressData[to] = AddressData(\r\n            addressData.balance + uint128(quantity),\r\n            addressData.numberMinted + uint128(quantity)\r\n        );\r\n        _ownerships[startTokenId] = TokenOwnership(to, uint64(block.timestamp));\r\n\r\n        uint256 updatedIndex = startTokenId;\r\n\r\n        for (uint256 i = 0; i < quantity; i++) {\r\n            emit Transfer(address(0), to, updatedIndex);\r\n            require(\r\n                _checkOnERC721Received(address(0), to, updatedIndex, _data),\r\n                \"ERC721A: transfer to non ERC721Receiver implementer\"\r\n            );\r\n            updatedIndex++;\r\n        }\r\n\r\n        currentIndex = updatedIndex;\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal {\r\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\r\n\r\n\r\n        require(\r\n            prevOwnership.addr == from,\r\n            \"ERC721A: transfer from incorrect owner\"\r\n        );\r\n        require(to != address(0), \"ERC721A: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n        _approve(address(0), tokenId, prevOwnership.addr);\r\n\r\n        _addressData[from].balance -= 1;\r\n        _addressData[to].balance += 1;\r\n        _ownerships[tokenId] = TokenOwnership(to, uint64(block.timestamp));\r\n        // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n        uint256 nextTokenId = tokenId + 1;\r\n        if (_ownerships[nextTokenId].addr == address(0)) {\r\n            if (_exists(nextTokenId)) {\r\n                _ownerships[nextTokenId] = TokenOwnership(\r\n                    prevOwnership.addr,\r\n                    prevOwnership.startTimestamp\r\n                );\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    uint256 public nextOwnerToExplicitlySet = 0;\r\n    function _setOwnersExplicit(uint256 quantity) internal {\r\n        uint256 oldNextOwnerToSet = nextOwnerToExplicitlySet;\r\n        require(quantity > 0, \"quantity must be nonzero\");\r\n        uint256 endIndex = oldNextOwnerToSet + quantity - 1;\r\n        if (endIndex > collectionSize - 1) {\r\n            endIndex = collectionSize - 1;\r\n        }\r\n        require(_exists(endIndex), \"not enough minted yet for this cleanup\");\r\n        for (uint256 i = oldNextOwnerToSet; i <= endIndex; i++) {\r\n            if (_ownerships[i].addr == address(0)) {\r\n                TokenOwnership memory ownership = ownershipOf(i);\r\n                _ownerships[i] = TokenOwnership(\r\n                    ownership.addr,\r\n                    ownership.startTimestamp\r\n                );\r\n            }\r\n        }\r\n        nextOwnerToExplicitlySet = endIndex + 1;\r\n    }\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try\r\n                IERC721Receiver(to).onERC721Received(\r\n                    _msgSender(),\r\n                    from,\r\n                    tokenId,\r\n                    _data\r\n                )\r\n            returns (bytes4 retval) {\r\n                return retval == IERC721Receiver(to).onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\r\n                        \"ERC721A: transfer to non ERC721Receiver implementer\"\r\n                    );\r\n                } else {\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}\r\n//Membership is not transferable asset but can get revoked if not paid annually\r\n\r\ncontract CATSMembership is Ownable, ERC721A, ReentrancyGuard {\r\n    bool public publicSale = false;\r\n    uint256 public maxPerTx = 1; \r\n    uint256 public maxPerAddress = 1;\r\n    uint256 public maxToken = 10000000000; \r\n    uint256 public price = 0.25 ether;\r\n    uint256 public charterPrice = 0.15 ether;\r\n    uint256 public contractOwns = 0;\r\n    string private _baseTokenURI;\r\n    address private contractAddress = address(this);\r\n    mapping(address=>bool) public Admin;\r\n    mapping(address=>bool) public charterMember;\r\n    \r\n\r\n    constructor() ERC721A(\"CATS Membership\", \"CATSM\", maxPerTx, maxToken){ \r\n        Admin[msg.sender] = true;\r\n    }\r\n\r\n    event charterMemberUpdated(address _charterMember);\r\n    \r\n    event AdminUpdated(address indexed admin);\r\n\r\n    modifier callerIsUser() {\r\n        require(tx.origin == msg.sender, \"The caller is another contract\");\r\n        _;\r\n    }\r\n    modifier isAdmin() {\r\n        require(Admin[msg.sender], \"You are not an Admin\");\r\n        _;\r\n    }\r\n     modifier isCharterMember() {\r\n        require(charterMember[msg.sender], \"You are not a Charter Member\");\r\n        _;\r\n    }\r\n\r\n    function numberMinted(address owner) public view returns (uint256) {\r\n        return _numberMinted(owner);\r\n    }\r\n\r\n    //Contract token owned from revokes. \r\n\r\n    function contractTokenId() public view returns (uint256) {\r\n        return ERC721A.tokenOfOwnerByIndex(contractAddress, 0);\r\n    }\r\n \r\n    //Transfer Functions. If not paid annually, membership can get revoked or if member is involved in suspicious activity.\r\n\r\n    function adminTransfer(address from, uint256 tokenId) external isAdmin{\r\n        contractTransfer( from, tokenId);\r\n    }\r\n\r\n    function transfer( address from, address to, uint256 tokenId) private{\r\n        ERC721A._transfer(from, to, tokenId);\r\n         \r\n    }\r\n    function contractTransfer( address from, uint256 tokenId) private{\r\n        ERC721A._transfer(from, contractAddress, tokenId);\r\n        contractOwns ++;\r\n        \r\n    }\r\n\r\n    function getOwnershipData(uint256 tokenId) external view returns (TokenOwnership memory){\r\n        return ownershipOf(tokenId);\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory){\r\n        require( _exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\r\n        string memory _tokenURI = super.tokenURI(tokenId);\r\n        return\r\n            bytes(_tokenURI).length > 0\r\n                ? string(abi.encodePacked(_tokenURI, \".json\"))\r\n                : \"\";\r\n    }\r\n    \r\n    //Mint Functions Prices may change\r\n\r\n    function mint() external payable callerIsUser{\r\n        require(publicSale, \"SALE_HAS_NOT_STARTED_YET\");\r\n        require(numberMinted(msg.sender) + maxPerTx <= maxPerAddress, \"PER_WALLET_LIMIT_REACHED\");\r\n        require(totalSupply() + maxPerTx <= maxToken, \"NOT_ENOUGH_SUPPLY_TO_MINT_DESIRED_AMOUNT\");\r\n        require(balanceOf(msg.sender) + maxPerTx <= maxPerAddress, \"PER_WALLET_LIMIT_REACHED\");\r\n        require(msg.value == (price), \"INVALID_ETH\");\r\n        if(contractOwns  >= maxPerTx ){\r\n            \r\n            transfer(contractAddress, msg.sender, contractTokenId() );\r\n          contractOwns --;\r\n        }\r\n        else{\r\n            _safeMint(msg.sender, maxPerTx);\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    function chartermint() external payable callerIsUser isCharterMember{\r\n        require(publicSale, \"SALE_HAS_NOT_STARTED_YET\");\r\n        require(numberMinted(msg.sender) + maxPerTx <= maxPerAddress, \"PER_WALLET_LIMIT_REACHED\");\r\n        require(totalSupply() + maxPerTx <= maxToken, \"NOT_ENOUGH_SUPPLY_TO_MINT_DESIRED_AMOUNT\");\r\n        require(balanceOf(msg.sender) + maxPerTx <= maxPerAddress, \"PER_WALLET_LIMIT_REACHED\");\r\n        require(msg.value == (charterPrice), \"INVALID_ETH\");\r\n        if(contractOwns  >= maxPerTx ){\r\n            \r\n            transfer(contractAddress, msg.sender, contractTokenId() );\r\n          contractOwns --;\r\n        }\r\n        else{\r\n            _safeMint(msg.sender, maxPerTx);\r\n            \r\n        }\r\n    }\r\n\r\n    function ownerMint(address _address, uint256 quantity) external onlyOwner {\r\n        _safeMint(_address, quantity);\r\n    }\r\n\r\n    //Base uri will be updated frequently as new members join and leave.\r\n\r\n    function _baseURI() internal view virtual override returns (string memory) {\r\n        return _baseTokenURI;\r\n    }\r\n\r\n    //Members update\r\n  \r\n    function _setAdmin(address admin) private{\r\n    Admin[admin] = !Admin[admin];\r\n    }\r\n\r\n    function updateAdmin(address admin ) public virtual onlyOwner{\r\n    require( admin != address(0), \"Admin: new Admin is the zero address\");\r\n    _setAdmin(admin);\r\n    emit AdminUpdated(admin);\r\n    }\r\n\r\n    function _setCharterMember(address _charterMember) private{\r\n    charterMember[_charterMember] = !charterMember[_charterMember];\r\n    }\r\n\r\n    function updateCharterMember(address _charterMember ) public virtual onlyOwner{\r\n    require( _charterMember != address(0), \"Charter: new Charter is the zero address\");\r\n    _setCharterMember(_charterMember);\r\n    emit charterMemberUpdated(_charterMember);\r\n    }\r\n\r\n    //Price Update\r\n\r\n    function setPrice(uint256 _NewPrice, uint256 _NewCharterPrice) external onlyOwner {\r\n        price = _NewPrice;\r\n        charterPrice = _NewCharterPrice;\r\n    }\r\n\r\n    function flipPublicSaleState() external onlyOwner {\r\n        publicSale = !publicSale;\r\n    }\r\n\r\n    function setBaseURI(string calldata baseURI) external onlyOwner {\r\n        _baseTokenURI = baseURI;\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_charterMember\",\"type\":\"address\"}],\"name\":\"charterMemberUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Admin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"adminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"charterMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charterPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chartermint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flipPublicSaleState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getOwnershipData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"}],\"internalType\":\"struct ERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPerTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOwnerToExplicitlySet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"numberMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"ownerMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_NewPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_NewCharterPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_charterMember\",\"type\":\"address\"}],\"name\":\"updateCharterMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CATSMembership", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://15a8c3a0591ebfc9d97f0278bac95b8c49aa47549c66eb695d3056b1c557f30c"}]}