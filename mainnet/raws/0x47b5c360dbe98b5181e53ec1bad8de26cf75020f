{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/GROOMSMEN.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: The Glorious Wedding of Taylor & Ben\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                            //\\n//                                                                                                            //\\n//                                        :^~!?JJYYY55YYYY55Y5Y??7!~:.                                        //\\n//                                  .^!7JY55YJJJ?77??7!777??7777?JYYYYYJ?~^.                                  //\\n//                              .~?J55J????JYYYYYYJJJ??????JJJYYYYYJJ???JY55J7~:                              //\\n//                          .^7YP5J??JY55JJJ???JJYJYYYJJJJJYYYYJJ????JY55YJ??Y5P57^                           //\\n//                        :?PPY??J5PYJ?7?J55YJJ?!~~^:::::::^^^~!?JY55YJ???Y55Y??J5P57:                        //\\n//                     .!5P5?7JP5J?7J55Y?7^.                       .:^!J555J7?J55J7?5GY!.                     //\\n//                   ^?PGJ7J55J7?5P5?~.                                  .^?5P5??YPPJ?JPP?.                   //\\n//                 .?GP??YP57?5P57:                                          :75G5??5G5??PP7.                 //\\n//                7GP?75GJ?JPP?:                                                ^JPPJ75G57?GP!                //\\n//              ^YBJ!YGY7JGP!.                                                    .!PGJ7JGY!JGY^              //\\n//             7GP!?G5!?GP!                                                         .7PG?7PG7!PG!             //\\n//            ?BY~5GJ~5G?.                                   .:::^^::::::^:::.        .JG5!JGY~YBJ            //\\n//          .YB?~PG!?GP~    7555555555555555555555J.         YGPPPPPPPGGGGGPPP5J!.      ~PG7!G5~JBJ.          //\\n//          JB?~GP~?BY.    ?BBGBGGGPPPPPGGP5PPGGGB5.         YGPPPPGGP5555PPGPPGGP7      :YB?!PP^?BY          //\\n//         JG?^PP^JBJ.    :77!!!!^~5PPPPGG^ ..:^~~.          JGPPP5P5^  ...:YPP5PPG?      .JB?^GP~JB7         //\\n//        !B5:5G~7BJ               YGPPPPY.                  7G55PPP7       ^P55PPP5.       JG!!GP:YG~        //\\n//       :PG^?B7~GP.               YPPPPGY         .:^:.     7GPPPPG~       .PPPPPGP:       .PG~JB?^GP.       //\\n//       ?B?^GP:PG~                JGPPPGY       ~YPYYY7     !GPPPPG^       .5PPP5GP.        ~G5^PG:JB?       //\\n//      .5G^JB!!BY                 !GGPGG7      ~GGP.        ^GPPPPP:       ^PPPPPG?          5B!!B?^GP.      //\\n//      ~GY.PP:5G~                 ?GGPPG7      ?GGP.        ^GPPPP5.    ..^YGPPPG?           !GJ:GP.YP:      //\\n//      7B!^GY.PP.                 7GPPPG?      :GGG^        .5PPPPP.~JY555PPPPP5~            .PP:5G:7B!      //\\n//      7B~~B7^G5.                 !GPPGG!       JGG5.       .PPPPP5JGBGGGGPPP5PJ:            .PP ?G^!B7      //\\n//      ?B~:G?^BJ                  7GGPPG7       !GGGJ  .!~  .PPPPP5~^~~~!7JPPPPGP7.          .PP ?B^~B7      //\\n//      ?B~^GJ.P5                  7GGPPG7     .JGJGGG! 7G^  ^PPPPPP.       7G5PPPGJ           PP.JB^~B7      //\\n//      !B?^G5 5G:                 7GPPPG7    .YGP.7GGP!P?   ^PPPPPP.       .55555PP^         :G5.5P:?B!      //\\n//      ^G5.PG:JB!                 5GPPPGJ    ~GG5. JGGG5.   ^GPPPG5.       .5P55PPG!         ?B?^G5.PP:      //\\n//       5G^7BJ~G5                 JPPPPG5    7GGP. :PGGY    :PP5PPP.       .5P555PG~        .5G^JB7~G5       //\\n//       !BJ^GG^JG~                JGPPPGY    7GGP.  7GGG7   ^PPP5PP:       :PPP55PG!        ?BJ^GP:5G~       //\\n//        YB!7BJ.PG~              .5PPPPGJ    .5BG7.:JPGGG~  ~GP55PP~       ~P555PPP:       ^GP:YB!!BY        //\\n//        ^GP^JB!~GP:             .PPPPPGY     .7Y5YY7.7Y5?  7P555PP7.    .!5PPPPPG?       ^PG^?B?^GP:        //\\n//         !G5:YG7!GP:            .5GPPPGP:       ..         JGP55PPPPYYY55GP5PPGGJ       ^PG!!BY:5G~         //\\n//          7BJ:5B7~GP~           .PGGGGG5.                 .5GGGPGPGGGGGGGGPPP5?~       !PP~?BJ^5B!          //\\n//           !G5~JBJ~YG?.          :^^~^^:                   ^~~!!!!!~~~!!!~^^:        .JBY~JBY^PG7           //\\n//            ~GP~?G5~?G5~                                                            !PG?!PP7!PG~            //\\n//             ^5G?!YG?!YGY^                                                        ^YGY!JG5~JBY:             //\\n//               ?GP!7PP775G5~                                                    !5G5!?GP775G7               //\\n//                ^5B5~7PP?7JG57:                                              ^75GJ!?PP7~5B5^                //\\n//             .~J55YJ!.!PBPY!75G57:                                       .:!5G577YGB5!:~Y5P5?~.             //\\n//           ~YP5J?7JYY5YJ?7?^ .^75G5?~:.                              .:!JPG5?:  ~?7JJY5YY?77J5PJ~           //\\n//         !5GY7?55Y?7?JYYYYYYYYJJ5PPPPPY.                            :YPGGGPYJJYYYJJYYYJ77?5P5?7YG5~         //\\n//       .YBY!?P5?7Y55Y7~::::...::::.....                              ....::...:::..:^~7YPPY?J5PJ7YGJ:       //\\n//      ^PG77PP7?PGY~.                                                                    .~YG57?PP7!GP^      //\\n//     ^GP^?BY~5GJ^          .~7JY5Y?~.     :!?Y5YJ!:      ^!JY5Y?!:     ^!JY5YJ!:           ^YGY~YG7~GP:     //\\n//    .5G~7BJ^PG!           !PGJ!~!!JGP!  .?GP?~!!?5G?   ^5GY7!!!?PG7  :YG57!!~75GY.           !GP^YB!~GY.    //\\n//    ?BJ^GP:5G!           !BB!      ~GG^.5BJ.      JBJ :GBJ      :PG! 5B5      .PB?            7BY:GP^YG!    //\\n//    JG^!B7^G5            :7!       7GG^~GP:       :PB!.77:      ^PB! !?^      :5B?             5G.?B7~GY    //\\n//    5G:~B~!B?                  .^!5GY^ YGP.       .PGY       .!5GP!        .~YGP?              JG:!B!:G5    //\\n//    YG^!B?:GY               .~?PPY?^   ?GP.       .PB7    ^J5P5?^.      ^?YPPJ~.              .5G^?B~~GY    //\\n//    7BJ^GP:YG~            :JPPJ~.      :PG!       !GP: .75PJ~.        !5GY!:                  7BJ:PP:5G!    //\\n//    .5G~7BJ:PG!          ^PBY^::::::::  ^PG?^...:?GP~ :5BP!:::::^:: .YBG7::::::::.           !G5:YB!~G5.    //\\n//     ^GG~7BJ~5GJ:        JPPPPPPPPPPPJ.  .75P555P5!.  7PPP5PPPPPPP5:^PPP5PPPPP5PP~         ^YGY~YB7~GP^     //\\n//      ~PG7!PP7?PPJ~.      ...........        .:..      ............  ......:.....       .~YGP77GP77GP:      //\\n//       :YGY~JGP??YPPY?!~:.........................................................::^~7YP5J??5P?!YGJ:       //\\n//         ~YPJ7?55YJ??JYYY5YYYYYYYYYYYYJYYYYYYYJYYYYJYYJYYYYYJYYYYJYYJYYYYJYYYYYYYYYYYJ????5P5?7JG5~         //\\n//           ~YP5J7?JYYJJJ??JJ????JJJ????JJJ????JJJ????JJ????JJJ????JJJ????JJJ????JJ??JY5YYJ??JPPJ~           //\\n//             .~J55YJ????777!!77777!77777!!77777!!77777!!77777!!7777!!77777!!77777!!7????J55YJ~.             //\\n//                 .^7J5Y5YYYYY55YYYY55YYYYY55YYYY55YYYYYY55YYYY55YYYYY55YYYY55YYYYYY55YYJ7~.                 //\\n//                                                                                                            //\\n//                                                                                                            //\\n//                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract GROOMSMEN is ERC721Creator {\\n    constructor() ERC721Creator(\\\"The Glorious Wedding of Taylor & Ben\\\", \\\"GROOMSMEN\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GROOMSMEN", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}