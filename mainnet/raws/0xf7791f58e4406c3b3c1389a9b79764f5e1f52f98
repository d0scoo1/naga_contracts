{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\n/**** \r\n***** this code and any deployments of this code are strictly provided as-is; no guarantee, representation or warranty is being made, express or implied, as to the safety or correctness of the code \r\n***** or any smart contracts or other software deployed from these files. This code has not been audited and as such there can be no assurance they will work as intended, and \r\n***** users may experience delays, failures, errors, omissions or loss of transmitted information. Any users, developers, or adapters of these files should proceed with caution and use at their own risk.\r\n***** Do not use absent written direction by Varia LLC - any funds, tokens, or other digital assets sent to this contract may be permanently lost.\r\n****/\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/// @title Pay Varia ETH\r\n/// @notice uses Sushiswap router to swap incoming ETH for USDC tokens, then sends to varia.eth\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactETHForTokens(uint256 amountOutMin, address[] calldata path, address to, uint256 deadline) external payable returns (uint256[] memory amounts);\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\ninterface IUSDC  { \r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract PayVariaETH {\r\n\r\n    address constant USDC_TOKEN_ADDR = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; // USDC mainnet token contract address\r\n    address constant SUSHI_ROUTER_ADDR = 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F; // Sushiswap router contract address\r\n    address constant VARIA_ADDR = 0xD4B2747e87e7bE8CA0d68A249b90738b5aB2E85a; // varia.eth EOA address\r\n\r\n    IUniswapV2Router02 public sushiRouter;\r\n    IUSDC public iUSDCToken;\r\n\r\n    error NoETHSent();\r\n    error NoUSDC();\r\n\r\n    constructor() payable {\r\n        sushiRouter = IUniswapV2Router02(SUSHI_ROUTER_ADDR);\r\n        iUSDCToken = IUSDC(USDC_TOKEN_ADDR);\r\n    }\r\n\r\n    /// @notice receives ETH payment and swaps to USDC via Sushiswap router, which is then sent to varia.eth. Intended only as a payment option for clients of Varia LLC.\r\n    function payInETH() public payable {\r\n        if (msg.value == 0) revert NoETHSent();\r\n        sushiRouter.swapExactETHForTokens{ value: msg.value }(0, _getPathForETHtoUSDC(), address(this), block.timestamp+100);\r\n        _sendUSDC();\r\n    }\r\n\r\n    function _sendUSDC() internal {\r\n        if (iUSDCToken.balanceOf(address(this)) == 0) revert NoUSDC();\r\n        iUSDCToken.transfer(VARIA_ADDR, iUSDCToken.balanceOf(address(this)));\r\n    }\r\n    \r\n    /// @return the router path for ETH/USDC swap for the payInETH() function\r\n    function _getPathForETHtoUSDC() internal view returns (address[] memory) {\r\n        address[] memory path = new address[](2);\r\n        path[0] = sushiRouter.WETH(); //0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\r\n        path[1] = USDC_TOKEN_ADDR;\r\n        return path;\r\n    }\r\n\r\n    receive() payable external {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoUSDC\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"iUSDCToken\",\"outputs\":[{\"internalType\":\"contract IUSDC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payInETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PayVariaETH", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9a6a03f9213c903de4402096bcc3bece214758483513c43f406c0f4633925f78"}]}