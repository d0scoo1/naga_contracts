{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: CC-BY-ND-4.0\r\n\r\npragma solidity ^0.8.14;\r\n\r\ncontract protected {\r\n    mapping (address => bool) is_auth;\r\n    function authorized(address addy) public view returns(bool) {\r\n        return is_auth[addy];\r\n    }\r\n    function set_authorized(address addy, bool booly) public onlyAuth {\r\n        is_auth[addy] = booly;\r\n    }\r\n    modifier onlyAuth() {\r\n        require( is_auth[msg.sender] || msg.sender==owner, \"not owner\");\r\n        _;\r\n    }\r\n    address owner;\r\n    modifier onlyOwner() {\r\n        require(msg.sender==owner, \"not owner\");\r\n        _;\r\n    }\r\n    bool locked;\r\n    modifier safe() {\r\n        require(!locked, \"reentrant\");\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n    function change_owner(address new_owner) public onlyAuth {\r\n        owner = new_owner;\r\n    }\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n}\r\n\r\ncontract wallchain is protected {\r\n\r\n    struct USER {\r\n        string[] messages;\r\n        uint last_index;\r\n        mapping(uint => string) address_indexes;\r\n        uint timestamp;\r\n        address[] followed;\r\n    }\r\n\r\n    mapping(address => USER) users;\r\n\r\n    function post(string memory _msg) public safe {\r\n        users[msg.sender].messages.push(_msg);\r\n        users[msg.sender].address_indexes[users[msg.sender].last_index] = _msg;\r\n        users[msg.sender].last_index += 1;\r\n    }\r\n\r\n    function get_posts(address addy) public view returns (string[] memory _msg) {\r\n        return users[addy].messages;\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"change_owner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"}],\"name\":\"get_posts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_msg\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"post\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"booly\",\"type\":\"bool\"}],\"name\":\"set_authorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "wallchain", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://08d5a760716c71a7c34b4bd00ef86ed9096da2034f33f4717d615be4f00a52a9"}]}