{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/vesting.sol\": {\r\n      \"content\": \"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                            //\\n//      NNNNNNNN        NNNNNNNN   ffffffffffffffff           tttt                                               iiii                         //\\n//      N:::::::N       N::::::N  f::::::::::::::::f       ttt:::t                                              i::::i                        //\\n//      N::::::::N      N::::::N f::::::::::::::::::f      t:::::t                                               iiii                         //\\n//      N:::::::::N     N::::::N f::::::fffffff:::::f      t:::::t                                                                            //\\n//      N::::::::::N    N::::::N f:::::f       ffffffttttttt:::::ttttttt      aaaaaaaaaaaaa  nnnn  nnnnnnnn    iiiiiii   aaaaaaaaaaaaa        //\\n//      N:::::::::::N   N::::::N f:::::f             t:::::::::::::::::t      a::::::::::::a n:::nn::::::::nn  i:::::i   a::::::::::::a       //\\n//      N:::::::N::::N  N::::::Nf:::::::ffffff       t:::::::::::::::::t      aaaaaaaaa:::::an::::::::::::::nn  i::::i   aaaaaaaaa:::::a      //\\n//      N::::::N N::::N N::::::Nf::::::::::::f       tttttt:::::::tttttt               a::::ann:::::::::::::::n i::::i            a::::a      //\\n//      N::::::N  N::::N:::::::Nf::::::::::::f             t:::::t              aaaaaaa:::::a  n:::::nnnn:::::n i::::i     aaaaaaa:::::a      //\\n//      N::::::N   N:::::::::::Nf:::::::ffffff             t:::::t            aa::::::::::::a  n::::n    n::::n i::::i   aa::::::::::::a      //\\n//      N::::::N    N::::::::::N f:::::f                   t:::::t           a::::aaaa::::::a  n::::n    n::::n i::::i  a::::aaaa::::::a      //\\n//      N::::::N     N:::::::::N f:::::f                   t:::::t    tttttta::::a    a:::::a  n::::n    n::::n i::::i a::::a    a:::::a      //\\n//      N::::::N      N::::::::Nf:::::::f                  t::::::tttt:::::ta::::a    a:::::a  n::::n    n::::ni::::::ia::::a    a:::::a      //\\n//      N::::::N       N:::::::Nf:::::::f                  tt::::::::::::::ta:::::aaaa::::::a  n::::n    n::::ni::::::ia:::::aaaa::::::a      //\\n//      N::::::N        N::::::Nf:::::::f                    tt:::::::::::tt a::::::::::aa:::a n::::n    n::::ni::::::i a::::::::::aa:::a     //\\n//      NNNNNNNN         NNNNNNNfffffffff                      ttttttttttt    aaaaaaaaaa  aaaa nnnnnn    nnnnnniiiiiiii  aaaaaaaaaa  aaaa     //\\n//                                                                                                                                            //\\n//                                                                                                                                            //\\n//                                                               .:~7JY5PPP5YJ7~:.                                                            //    \\n//                                                        :7P#@@@@@@@@@@@@@@@@@@@#P7:                                                         //    \\n//                                                    .7B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B7.                                                     //    \\n//                                                  !B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B!                                                   //    \\n//                                                J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J                                                 //    \\n//                                              ?@@@@@@@@@@@@@@&GJ!^.......^!JG&@@@@@@@@@@@@@@?                                               //    \\n//                                            :&@@@@@@@@@@@@P~.                 .~P@@@@@@@@@@@@&:                                             //    \\n//                                           7@@@@@@@@@@@#!                         !#@@@@@@@@@@@7                                            //    \\n//                                          ?@@@@@@@@@@&~                             ~&@@@@@@@@@@?                                           //    \\n//                                         !@@@@@@@@@@P                                 P@@@@@@@@@@!                                          //    \\n//                                        .@@@@@@@@@@J                                   J@@@@@@@@@@.                                         //    \\n//                                        5@@@@@@@@@G                                     G@@@@@@@@@5                                         //    \\n//                                        @@@@@@@@@@.                                     .@@@@@@@@@@                                         //    \\n//                                       :@@@@@@@@@#                                       #@@@@@@@@@:                                        //    \\n//                                       ^@@@@@@@@@G                                       G@@@@@@@@@^                                        //    \\n//                                       ^@@@@@@@@@G                                       G@@@@@@@@@^                                        //    \\n//                                       ^@@@@@@@@@G                                       G@@@@@@@@@^                                        //    \\n//                                       ^@@@@@@@@@G                                       G@@@@@@@@@^                                        //    \\n//                                       ^@@@@@@@@@G                                       G@@@@@@@@@^                                        //    \\n//                                       ^@@@@@@@@@G                                       G@@@@@@@@@^                                        //    \\n//                                       :@@@@@@@@@G                                       G@@@@@@@@@:                                        //    \\n//                               .^!JYYYYG@@@@@@@@@&YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY&@@@@@@@@@GYYYYJ7^.                                //    \\n//                            .Y&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&Y.                             //    \\n//                          .G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G.                           //    \\n//                         .&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&.                          //    \\n//                         #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                          //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&GY!^..     ..:^75#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G!.                    :?#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#7.                          .Y&@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@#^                                7&@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@?                  .::::.            P@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@&:       &@&&&&@Y !G&@@@@@@@&5:         !@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@.        @@@@@@@&&@@@@@@@@@@@@@5         !@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@~         @@@@@@@@@@&##&@@@@@@@@@!         Y@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@#          @@@@@@@@B.     P@@@@@@@B         .@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@?          @@@@@@@@       .@@@@@@@#          #@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@7          @@@@@@@&       .@@@@@@@#          G@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@J          @@@@@@@&       .@@@@@@@#          B@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@B          @@@@@@@&       .@@@@@@@#          &@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@^         @@@@@@@&       .@@@@@@@#         J@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@&.        @@@@@@@&       .@@@@@@@#        ~@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@&.       @@@@@@@&       .@@@@@@@#       ~@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@!      ^~~~~~~^        ^^^^^~~:      Y@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@B:                                ~&@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B~                            7&@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&P~.                    .!G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&P?~..        .:~JB&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                         //    \\n//                         &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&                          //    \\n//                         :@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:                          //    \\n//                          .B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B.                           //    \\n//                            :P&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&P^                             //    \\n//                               .~J5PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5J~.                                //    \\n//                                                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n                                                                                                                             \\n// SPDX-License-Identifier: MIT\\n\\n// @title: Nftania NFT2.0\\n// @author: Nftania.com\\n// @custom: security-contact info@nftania.com\\n// @Contract: Nftania \\n\\npragma solidity 0.8.15;\\n\\nimport \\\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract NftaniaVestingLocker {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 private token;\\n    address private owner;\\n    address private immutable beneficiaryWallet;\\n    string private beneficiaryName;\\n    mapping (uint => uint) internal instalmentsTime;\\n    mapping (uint => uint) internal instalmentsAmount;\\n    mapping (uint => bool) internal instalmentsReleased;\\n\\n    constructor(uint256 _amount, address _beneficiaryWallet, string memory _beneficiaryName) {\\n        owner = msg.sender;\\n        require (_beneficiaryWallet != address(0),\\\"VestingLocker: beneficiary Wallet cannot be the address of zero\\\");\\n        require (_amount > 0 ,\\\"VestingLocker: Amount cannot be zero\\\");\\n        beneficiaryWallet = _beneficiaryWallet; \\n        beneficiaryName = _beneficiaryName; \\n        setInstalmentsTimes();\\n        setInstalmentsAmounts(_amount);\\n    }\\n\\n    fallback() external payable {}\\n    receive() external payable {}\\n\\n    function setToken (IERC20 _token) public {\\n        require(owner == msg.sender,\\\"VestingLocker: This function can be called by owner only\\\");\\n        require (address(_token) != address(0),\\\"VestingLocker: token cannot be the address of zero\\\");\\n        token = _token;\\n    }\\n\\n    function setInstalmentsTimes() internal {\\n        uint time = block.timestamp;\\n        uint month = 2629743; \\n        instalmentsTime[1] = time + 0 * month;\\n        instalmentsTime[2] = time + 1 * month;\\n        instalmentsTime[3] = time + 2 * month;\\n        instalmentsTime[4] = time + 3 * month;\\n        instalmentsTime[5] = time + 4 * month;\\n    }\\n\\n    function setInstalmentsAmounts(uint256 _amount) internal {\\n        uint256 instalment = (_amount * 10**18 )/5;\\n        instalmentsAmount[1] = instalment;\\n        instalmentsAmount[2] = instalment;\\n        instalmentsAmount[3] = instalment;\\n        instalmentsAmount[4] = instalment;\\n        instalmentsAmount[5] = instalment;\\n    }\\n\\n    function getLockInfo() public view returns (address _owner, IERC20 _token, address _benefeciaryWallet, string memory _beneficiaryName, uint256 contractBalance) {\\n        require (address(token) != address(0),\\\"VestingLocker:  token is not set yet, token should defined in advance\\\");\\n        contractBalance = token.balanceOf(address(this));\\n        return (owner, token, beneficiaryWallet, beneficiaryName, contractBalance);\\n    }\\n\\n    function getInstallmentInfo(uint instalmentId) public view virtual \\n    returns (uint256 instalmentTime, uint256 instalmentAmount, bool instalmentIsReleased, uint remainingTime) {\\n        instalmentTime = instalmentsTime[instalmentId];\\n        instalmentAmount = instalmentsAmount[instalmentId];\\n        instalmentIsReleased = instalmentsReleased[instalmentId];\\n        if (instalmentTime > block.timestamp)  {\\n            remainingTime = instalmentTime - block.timestamp;\\n        }\\n        else {\\n            remainingTime = 0;\\n        }\\n        return (instalmentTime, instalmentAmount, instalmentIsReleased, remainingTime);\\n    }\\n\\n    function releaseInstalment(uint instalmentId) public virtual {\\n        require(block.timestamp >= instalmentsTime[instalmentId], \\\"VestingLocker: current time is before instalmemt time\\\");\\n        require(instalmentsReleased[instalmentId] == false, \\\"VestingLocker: this instalment is already released\\\");\\n        uint256 amount = instalmentsAmount[instalmentId];\\n        require(token.balanceOf(address(this)) >= amount, \\\"VestingLocker: no more tokens to release\\\");\\n        instalmentsReleased[instalmentId] = true;\\n        token.safeTransfer(beneficiaryWallet, amount);\\n    }\\n\\n\\n}\"\r\n    },\r\n    \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/utils/SafeERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiaryWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_beneficiaryName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"instalmentId\",\"type\":\"uint256\"}],\"name\":\"getInstallmentInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"instalmentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"instalmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"instalmentIsReleased\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"remainingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_benefeciaryWallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_beneficiaryName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"instalmentId\",\"type\":\"uint256\"}],\"name\":\"releaseInstalment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "NftaniaVestingLocker", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000472d6448950985a8c9b16ba00f9cd71c32cc14c4000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000174e6674616e69613a20436f6d70616e792057616c6c6574000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}