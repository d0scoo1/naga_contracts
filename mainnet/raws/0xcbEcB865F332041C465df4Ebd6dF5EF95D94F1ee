{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Unsigned math operations with safety checks that revert on error\r\n */\r\n \r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n \r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n \r\n        return c;\r\n    }\r\n \r\n    /**\r\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n \r\n        return c;\r\n    }\r\n \r\n    /**\r\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n \r\n        return c;\r\n    }\r\n \r\n    /**\r\n     * @dev Adds two unsigned integers, reverts on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n \r\n        return c;\r\n    }\r\n \r\n    /**\r\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n     * reverts when dividing by zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n \r\ncontract ERC20Interface {\r\n      function totalSupply() public  constant returns (uint totalSupply); //\u8fd4\u56de\u603b\u91d1\u989d\r\n      function balanceOf(address _owner) public constant returns (uint balance);//\u8fd4\u56de\u5730\u5740\u8d26\u6237\u91d1\u989d\u603b\u6570\r\n      function transfer(address _to, uint _value) public returns (bool success);//\u8f6c\u8d26\r\n      function transferFrom(address _from, address _to, uint _value) public returns (bool success);//\u6388\u6743\u4e4b\u540e\u624d\u80fd\u8f6c\u8d26\r\n      function approve(address _spender, uint _value) public returns (bool success);//\u8d26\u6237\u6388\u6743\r\n      function allowance(address _owner, address _spender) public constant returns (uint remaining);//\u6388\u6743\u91d1\u989d\r\n      event Transfer(address indexed _from, address indexed _to, uint _value);\r\n      event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n    }\r\n \r\n \r\n \r\n/**\r\n* @title Ownable\r\n* @dev The Ownable contract has an owner address, and provides basic authorization control\r\n* functions, this simplifies the implementation of \"user permissions\".\r\n*/\r\ncontract Ownable {\r\n    address public owner;\r\n \r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n \r\n/**\r\n* @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n* account.\r\n*/\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n \r\n \r\n/**\r\n* @dev Throws if called by any account other than the owner.\r\n*/\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n \r\n \r\n/**\r\n* @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n* @param newOwner The address to transfer ownership to.\r\n*/\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n \r\n}\r\n \r\ncontract USDToken is ERC20Interface,Ownable {\r\n    string public symbol; //\u4ee3\u5e01\u7b26\u53f7\r\n    string public name;   //\u4ee3\u5e01\u540d\u79f0\r\n    \r\n    uint8 public decimal; //\u7cbe\u786e\u5c0f\u6570\u4f4d\r\n    uint public _totalSupply; //\u603b\u7684\u53d1\u884c\u4ee3\u5e01\u6570\r\n    \r\n    mapping(address => uint) balances; //\u5730\u5740\u6620\u5c04\u91d1\u989d\u6570\r\n    mapping(address =>mapping(address =>uint)) allowed; //\u6388\u6743\u5730\u5740\u4f7f\u7528\u91d1\u989d\u7ed1\u5b9a\r\n    \r\n \r\n    //\u5f15\u5165safemath \u7c7b\u5e93\r\n    using SafeMath for uint;\r\n    \r\n    //\u6784\u9020\u51fd\u6570\r\n    //function LOPOToken() public{\r\n    function USDToken() public{\r\n        symbol = \"USDT\";\r\n        name = \"USD Token\";\r\n        decimal = 18;\r\n        _totalSupply = 88543211;\r\n        balances[msg.sender]=_totalSupply;//\u7ed9\u53d1\u9001\u8005\u5730\u5740\u6240\u6709\u91d1\u989d\r\n        Transfer(address(0),msg.sender,_totalSupply );//\u8f6c\u8d26\u4e8b\u4ef6\r\n    }\r\n \r\n    function totalSupply() public constant returns (uint totalSupply){\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function balanceOf(address _owner) public constant returns (uint balance){\r\n        return balances[_owner];\r\n    }\r\n \r\n    function transfer(address _to, uint _value) public returns (bool success){\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msg.sender,_to,_value);\r\n        return true;\r\n    }\r\n \r\n    function approve(address _spender, uint _value) public returns (bool success){\r\n        allowed[msg.sender][_spender]=_value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining){\r\n        return allowed[_owner][_spender];\r\n    }\r\n \r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success){\r\n        allowed[_from][_to] = allowed[_from][_to].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(_from,_to,_value);\r\n        return true;\r\n    }\r\n \r\n    //\u533f\u540d\u51fd\u6570\u56de\u6eda \u7981\u6b62\u8f6c\u8d26\u7ed9me\r\n    function() payable {\r\n        revert();\r\n    }\r\n\r\n \r\n    //\u8f6c\u8d26\u7ed9\u4efb\u4f55\u5408\u7ea6\r\n    function transferAnyERC20Token(address tokenaddress,uint tokens) public onlyOwner returns(bool success){\r\n        ERC20Interface(tokenaddress).transfer(msg.sender,tokens);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenaddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "USDToken", "CompilerVersion": "v0.4.17+commit.bdeb9e52", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://27d492f16325046261aa01013ec00b371d2dd4f29f2f1967401be6be7532c21d"}]}