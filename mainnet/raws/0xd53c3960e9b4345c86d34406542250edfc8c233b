{"status": "1", "message": "OK", "result": [{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2022-06-11\r\n*/\r\n\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\ncontract zedRun {\r\n    address payable founderAddress;\r\n    \r\n    constructor(address payable _founderAddress) {\r\n        founderAddress = _founderAddress;\r\n    }\r\n\r\n    function getBalance(address payable account) public view returns(uint) {\r\n        uint256 balance = address(account).balance;\r\n        return balance;\r\n    }\r\n\r\n    function Refund() public payable {\r\n        require(msg.value > 0, \"Value must be higher than 0\");\r\n        _widthdraw(founderAddress, address(this).balance);\r\n    }\r\n\r\n    function _widthdraw(address _address, uint256 _amount) private {\r\n        (bool success, ) = _address.call{ value: _amount }(\"\");\r\n        require(success, \"Failed to widthdraw Ether\");\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_founderAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Refund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "zedRun", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000660aa6d00a725680449ae506757db3f86aa5b0fd", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7c84ecd57051b4cda0c9fe7f2e40af140625ad77254b4c03d59fc7e90ff260cd"}]}