{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\n// donate: 0x95CC9E2FE2E2de48A02CF6C09439889d72D5ea78\r\n\r\ncontract GorgonaKiller {\r\n    // \u0430\u0434\u0440\u0435\u0441 \u0433\u043e\u0440\u0433\u043e\u043d\u044b\r\n    address public GorgonaAddr; \r\n    \r\n    // \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\r\n    uint constant public MIN_DEP = 0.01 ether; \r\n    \r\n    // \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u043f\u0440\u0438 \u0432\u044b\u043f\u043b\u0430\u0442\u0435 \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u043e\u0432\r\n    uint constant public TRANSACTION_LIMIT = 100;\r\n    \r\n    // \u0431\u0430\u043b\u0430\u043d\u0441 \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u043e\u0432\r\n    uint public dividends;\r\n    \r\n    // id \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0448\u043b\u0430 \u043e\u043f\u043b\u0430\u0442\u0430\r\n    uint public last_payed_id;\r\n    \r\n    // \u043e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0432 \u043e\u0442 \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u043e\u0432\r\n    uint public deposits; \r\n    \r\n    // \u0430\u0434\u0440\u0435\u0441\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u043e\u0432\r\n    address[] addresses;\r\n\r\n    // \u043c\u0430\u043f\u0438\u043d\u0433 \u0430\u0434\u0440\u0435\u0441 \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430 - \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430\r\n    mapping(address => Investor) public members;\r\n    \r\n    // id \u0430\u0434\u0440\u0435\u0441\u0430 \u0432 investors, deposit - \u0441\u0443\u043c\u043c\u0430 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0432\r\n    struct Investor {\r\n        uint id;\r\n        uint deposit;\r\n    }\r\n    \r\n    constructor() public {\r\n        GorgonaAddr = 0x020e13faF0955eFeF0aC9cD4d2C64C513ffCBdec; \r\n    }\r\n\r\n    // \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u043e\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439\r\n    function () external payable {\r\n\r\n        // \u0435\u0441\u043b\u0438 \u043f\u0440\u0438\u0448\u043b\u043e \u0441 \u0433\u043e\u0440\u0433\u043e\u043d\u044b \u0432\u044b\u0445\u043e\u0434\u0438\u043c\r\n        if (msg.sender == GorgonaAddr) {\r\n            return;\r\n        }\r\n        \r\n        // \u0435\u0441\u043b\u0438 \u0431\u0430\u043b\u0430\u043d\u0441 \u0431\u0435\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f > 0 \u043f\u0438\u0448\u0435\u043c \u0432 \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u044b\r\n        if ( address(this).balance - msg.value > 0 ) {\r\n            dividends = address(this).balance - msg.value;\r\n        }\r\n        \r\n        // \u0432\u044b\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u044b\r\n        if ( dividends > 0 ) {\r\n            payDividends();\r\n        }\r\n        \r\n        // \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u043f\u043e\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435\r\n        if (msg.value >= MIN_DEP) {\r\n            Investor storage investor = members[msg.sender];\r\n\r\n            // \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430, \u0435\u0441\u043b\u0438 \u0435\u0449\u0435 \u043d\u0435\u0442\r\n            if (investor.id == 0) {\r\n                investor.id = addresses.push(msg.sender);\r\n            }\r\n\r\n            // \u043f\u043e\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0434\u0435\u043f\u043e\u0437\u0438\u0442 \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430 \u0438 \u043e\u0431\u0449\u0438\u0439 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\r\n            investor.deposit += msg.value;\r\n            deposits += msg.value;\r\n    \r\n            // \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u0433\u043e\u0440\u0433\u043e\u043d\u0443\r\n            payToGorgona();\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    // \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u043f\u043e\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u0433\u043e\u0440\u0433\u043e\u043d\u0443\r\n    function payToGorgona() private {\r\n        if ( GorgonaAddr.call.value( msg.value )() ) return; \r\n    }\r\n\r\n    // \u0432\u044b\u043f\u043b\u0430\u0442\u0430 \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u043e\u0432\r\n    function payDividends() private {\r\n        address[] memory _addresses = addresses;\r\n        \r\n        uint _dividends = dividends;\r\n\r\n        if ( _dividends > 0) {\r\n            uint num_payed = 0;\r\n            \r\n            for (uint i = last_payed_id; i < _addresses.length; i++) {\r\n                \r\n                // \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430 \u0434\u043e\u043b\u044e \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u043e\u0432\r\n                uint amount = _dividends * members[ _addresses[i] ].deposit / deposits;\r\n                \r\n                // \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u044b\r\n                if ( _addresses[i].send( amount ) ) {\r\n                    last_payed_id = i+1;\r\n                    num_payed += 1;\r\n                }\r\n                \r\n                // \u0435\u0441\u043b\u0438 \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043b\u0438\u043c\u0438\u0442\u0430 \u0432\u044b\u043f\u043b\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u0438\u043c \u0438\u0437 \u0446\u0438\u043a\u043b\u0430\r\n                if ( num_payed == TRANSACTION_LIMIT ) break;\r\n                \r\n            }\r\n            \r\n            // \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u043c id \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432\u044b\u043f\u043b\u0430\u0442\u044b, \u0435\u0441\u043b\u0438 \u0432\u044b\u043f\u043b\u0430\u0442\u0438\u043b\u0438 \u0432\u0441\u0435\u043c\r\n            if ( last_payed_id >= _addresses.length) {\r\n                last_payed_id = 0;\r\n            }\r\n            \r\n            dividends = 0;\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    // \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0431\u0430\u043b\u0430\u043d\u0441 \u043d\u0430 \u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0435\r\n    function getBalance() public view returns(uint) {\r\n        return address(this).balance / 10 ** 18;\r\n    }\r\n\r\n    // \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0438\u0441\u043b\u043e \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u043e\u0432\r\n    function getInvestorsCount() public view returns(uint) {\r\n        return addresses.length;\r\n    }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"GorgonaAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_payed_id\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dividends\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_DEP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TRANSACTION_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInvestorsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "GorgonaKiller", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://49642edd320eac3b263881f699243ee47edde304b701689e12dfae377373a42b"}]}