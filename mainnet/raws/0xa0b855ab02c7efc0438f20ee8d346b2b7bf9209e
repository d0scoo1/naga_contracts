{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ncontract ISMtoys {\r\n\r\n    address payable collectionAddress;\r\n    address public owner;\r\n    uint public price;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"You're not the owner of the contract\");\r\n        _;\r\n    }\r\n\r\n    constructor(address payable _collectionAddress, uint _price) {\r\n        collectionAddress = _collectionAddress;\r\n        owner = msg.sender;\r\n        price = _price;\r\n    }\r\n\r\n    function setOwner(address newOwner) onlyOwner external {\r\n        owner = newOwner;\r\n    }\r\n\r\n    function setPrice(uint newPrice) onlyOwner external {\r\n        price = newPrice;\r\n    }\r\n\r\n    function deposit(uint256[] memory tokensId, uint quantity) external payable returns (bool) {\r\n        require(quantity > 0, \"Invalid quantity\");\r\n        require(msg.value == price * quantity, \"Invalid amount\");\r\n        validateTokens(tokensId);\r\n        return true;\r\n    }\r\n\r\n    function validateTokens(uint256[] memory tokensId) private {\r\n        uint tokensIdLength = tokensId.length;\r\n        require(tokensIdLength > 0, \"No tokens provided\");\r\n        for (uint i=0; i<tokensIdLength; i++) {\r\n            // call to collection contract\r\n            require(msg.sender == Collection(collectionAddress).ownerOf(tokensId[i]), \"Invalid tokensId\");\r\n        }\r\n    }\r\n\r\n    function getBalance() onlyOwner external view returns (uint256){\r\n        return address(this).balance;\r\n    }\r\n\r\n    function withdraw(uint256 amount) onlyOwner external returns (bool) {\r\n        require(amount <= address(this).balance, \"Insufficient funds\");\r\n        // send amount ether in this contract to owner\r\n        (bool sent, ) = owner.call{value: amount}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n        return true;\r\n    }\r\n}\r\n\r\n// ABI definition of collections\r\ncontract Collection {\r\n    function ownerOf(uint256 tokenId) public returns (address) {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokensId\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ISMtoys", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000006fc355d4e0ee44b292e50878f49798ff755a5bbc0000000000000000000000000000000000000000000000000214e8348c4f0000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b3bb3f5f9c7951341cf6b9bb29600b7dd357042ef1b70766aa52d313f96557bc"}]}