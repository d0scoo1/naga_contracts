{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ncontract TipJarz {\r\n\r\n    uint GoldenRation = 1618; // just the first 3 digits of the golden ratio\r\n\r\n    event Tipped(address, uint);\r\n    event Taken(address, uint);\r\n\r\n    modifier greedCheck(uint256 _amount) {\r\n        uint256 contract_balance = address(this).balance;\r\n        uint256 gr = (contract_balance * GoldenRation) / 1000;\r\n        uint256 a = gr - contract_balance;\r\n        uint256 b = contract_balance - a;\r\n        require(_amount < b, \"why so greedy ?!\");\r\n        _;\r\n    }\r\n    \r\n    receive() external payable {\r\n        emit Tipped(msg.sender, msg.value);\r\n    }\r\n\r\n    function balance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getMaxBorrowAmount() public view returns (uint256) {\r\n        uint contract_balance = address(this).balance;\r\n        uint gr = (contract_balance * GoldenRation) / 1000;\r\n        uint a = gr - contract_balance;\r\n        uint b = contract_balance - a;\r\n        return b;\r\n    }\r\n\r\n    function takeOut(uint256 _amount) public payable greedCheck(_amount) {\r\n        (bool os, ) = payable(msg.sender).call{value: _amount}(\"\");\r\n        require(os, \"\");\r\n        emit Taken(msg.sender, _amount);\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Taken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Tipped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxBorrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"takeOut\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TipJarz", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://023142b11ecace7f766e18908e39dde8c94915aee67f3f51275ca1bc5f47bd28"}]}