{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/G2U.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Glory to Ukraine\\n/// @author: manifold.xyz\\n\\nimport \\\"./ERC721Creator.sol\\\";\\n\\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                                              //\\n//                                                                                                                                                              //\\n//    kkkkkkkkkkkkkkkkkxo:;'':oxxc,,,''.';l:'.';;::c::;,;::cdkOOOxl;;;;cdkxlccx0000000000000000000000xollccldkOkkkOOkdoldkkkdlcoolc;;;,;odddddddolcccloxxxxx    //\\n//    kxkkxxxxxxxxxxxxxo:,'.':oxl'...''..,:,...',::;,;;,''''':lodlc:;;;:ldkxooxOOOOkkkxxxxxxxkkkkkkkxdoooc:ldooxkkkOkxdooxkkkdloddolldoccdddddo:;;,.,:;:ldxx    //\\n//    kkkxxxxxxxxxxxxxdl;'..,cdd;...'''.',;'...';cc;',;:;;,;;:ldxxdlcc:::cllc:cloooddxxxkkkOOOOOOOOOOOOkd::ldl;ckkkOkkxxddxkkxdddlcloOKxlodddl,;ldl,cxd:,cxx    //\\n//    kkxxxxxxxxxxxxxxdc,'.':ldc'...,,'..',....':loc;;:;,,;:clodxxxxdoc;'.';ldxkOOO0000OOOOO000000000KK0xdoddl:lkOOOkkkkkxxkkkkxdl;cox0Ooldxd:'lxd:.,odd;;dx    //\\n//    kkkxxxxxxxxxxxxxl:,..,:oo;...','...''....':odolc:'..;:ldxxkkkkkdc,'',oO000OOOOOOOOOOOOO0000OOOOkkxddddl:cdOOOOkkkkkkkkkkkkko::oxO0xloxdc';:;,.';::,:dx    //\\n//    kkkxxxxxxxxxxxxdc;,..,cdl,...,,...',;'.'',coddool:,:oxkkkOOOOOOx:,,;;cx000000OOOOO0OOkO00OOkxxxdxxkkkkxdxxdxxkkkkkkkkkkkOOkdc;coxOkoldxdc'.:l,;l;';oxx    //\\n//    kkkxxkkxxxxxxxxoc;'.',cdc'...'...',;:;,:::lddolloollxkOOOOOOkkxoc::;,;lk00OkkkxkkkkkkkOOOkkOOOOOOO000K000OxooooodddddxxxkOkoc;;lxxo:;lxxxoc::;;:clxxxk    //\\n//    kkkkkkkxxxxxxxdc,,;:cclc,'cc'...',;:::;colodxoccdocldkkxdoooollloddddxOOOOOOOOOOOkkkkOOOOOOOOOOOOOO00000KK0OOOkxxddoooodxkOdlllkKK0xc:oxxxxxxxxxxxxxkk    //\\n//    kkkkkkkkkxxxxd:,;loolc;'':xx:...';cll::ldodxxo;:lc,,:cc:cclodxxxO00KK00kxkOOOOOkkkkkkkkkkkOOOOO000000000KK00KKKKK000Okxxddddodk0KKKKx:lxxxxxxkkkkkkkkk    //\\n//    kkkkkkkkkxxxxxl,;;;;:lo:;lkkc...,:loo:;odxxxo:',,;;clodxxxddxxxddkkkkkkxkO000OOOOOOOOOO0000000000K0000KKKKKKKK000KKKKKK00Okdooddxxxd:;lxxxxxkkkkkkkkkk    //\\n//    kkkkkkkkxxxxdl:,;clxO0Od:lxko,.',coxo;:oolc:;;:loxkkOkkxxxxxkOOOOOOO00000000000000OOOOOOOOO000000000000000K00OdccdKKKKKKKKKK0Okxdol:;cdxxxxkkkkkkkkkkk    //\\n//    kkkkkkkkkxxxc'';ccokxlldocokxc,;coxxc;;;;:coxkOOOkkkOOOO0000000000000000000000OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOko;..;kKKKKKKKXXKKKK00Oxlldkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkxxxo;',;clddodOk::dkdccllc:;:coxkOOOOOO0000KKKKKKK00000000000OOOOOOOOOOkkkkkxxxxxxxxxxxxxxxxxxxxkxxo:'...l0KKKKKKXXXXXXKKKxldkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkkkkxl,,cdddxkxxdccdkxl:cccoxkkkkkOO00KKKKKKKKKKKKK00000000OOOkkkxxxxddoolllllcccccllooollllloooddooc;''..,xKK00O0XXXXXXXXXOdxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkkkkkxl;cdxoccldkkkkxoodxkOOOOOOO00KKKKKKKKKKKKKK000000OOOkkxxdoollccc::;;;,,,,,,,;;:ccc::;;;:ccllll:,'....cOK0Ok0XXXXXXXXX0xxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkkkkkkd:,:cclok00kxxxk000OOkO00KKKKKKOkxO0000000000OOOkxxdoollcc::;;;,,,,,,,,,,,,,;:lodddddddxxkkOkxl:,'...,xK0xokKXXXKKXXKOxxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkkxdolc::ldddk0OxdkO000OkkO00KKKKK0ko:',cxOO000000OOkxdollc:;;;;;;;;,,,;;;;;;:cllodk0KKXXKKKKKKK00Oxdc,,''.'l0OocdKXXXKKKK0kxxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkko:;;:lodxxoodooxO000kxxk0KXXXK00ko:,''',:lok00000Okxdoooddolc:coolllccloooooxO000KXXXKKKKK0000Okdc;,;;,'''.:k0d:o0XXXK000Oxxxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkko::loolldxolcoxOOkxodk0XXXXXX0kxc''',''''';ok00000OOkO00KKKK0OO00000Oxxddoodk0KKKKKKK00OO00O000Odll:,,,'''.,d0xllOXXXX0OOkxdxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkxlodxxolooloodolllokKXXXXXXXXKd;'.'',,''..'ck0KKKKK000KKKKKKKXXXXXKKK0koc:,,:x0KK0000OxoxK00KXXKOdlol,''...'cOOdokKXXX0kkxddxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkkkxxxddxxoodxkkxdkKXXXXXXXXKKXx;.''',,,''.,o0KXK0OOkkOOOOO00KK000KKKK0kdc;'',lk00OOOkd:,:x0KKK0dddlcl:,,''..;xKkxk0OkO0kxoodxkkkkkkkkkkkkkkkk    //\\n//    kkkkkkkkkkkkkkkk0KKKKKkx0KXXXXXXXK0KKKX0l'..'',,,',lkKKXKK00KKK000K000000OO00K0Oxo:;;;lxOOOOkxol::coddooc:,';lolc;,'.,dK0kxOOdoxkdccoxkkkkkkkkkkkkkkkk    //\\n//    OkkkkkkkkkkkkkkkOKXXXKOdxOKXXXXXXK00K0KXx;''',,,,:oO00KXXXK0xx000KKXkdxO0OkOO00Okoc:;;cdkOkxddoooollllllc:;,;cllcc;,''l0KOxkK0dxkoccoxkkkkkkkkkkkkkkkk    //\\n//    OOOOOOOOOkkkkkkkk0XXXKkddk0KXXXXXX0O000K0l''',,;:dO0OOKXKOOd:;lkOOOkdlodxdxkO00Okdl:;;:lldkkxdoddddoolcc::;;::;:::;,'';kXKkxOkk0Oo::ldkkkkkkkkkkkkkkkk    //\\n//    OOOOOOOOOOOOkkkkxk0XXKkddxOKXXXXXXKkkOO0Kx;''';clx00OOOko::lolllooodxxxddxkO00OOOxoc:;;:;:dkkddooloollcc:::;;;;:cc:,'''oKXOxkOKXko::ldkkkkkkkkkkkkOkkk    //\\n//    OOOOOOOOOOOOOOkOkdx0KKkdxkOKXXXXXXKkdkkk0Oc'',:ldk000kl,;:oxxxxdddddxxddddkOOOOOOkdoc:;;,':xxdoollllccc:::;;;;:ccc:,'''cOXKO0KXKOoccodkkkkkkkkkkkkkkkk    //\\n//    OOOOOOOOOOOOOOOOOkddkOxodO0KXX0OO00OooxxkOd,''',;clodxc,;lxkxxdddooddoooodkOOOOOOkxoc:;;;,;oxddoolllllcccc:::ccclc;,''';xKOk0NXKOdoooxkkkkkkkkkkkkkkkk    //\\n//    OOOOOOOOOOOOOOOOkkkdoxxoldO00kolooooc:ccccc'.....','.;llcoxxdooollooollloxOOO00OOkxol::::::lxxxdoooooollllllllllc:,'''''lOkkKNXKOxdddkkkkkkkkkkkkkkkkk    //\\n//    OOOOOOOOOOOOOOOkkkkkdodo:;ldxdoxO0Oxo:;,.. .....;oxo'.cdooooooooollllllodkOOO0Okkkxol::::cllloxxxoooooooooddddol:;,''''':k0k0XXKOkdxkkkkkkkkkkkkkkkkkx    //\\n//    OOOOOOOOOOOOOOOOkkkxocclc;cx0X0O0XKOl'. ..,c:'..':oc.,loooooolllccccllodxxO00Oxddxxoc:;;;cllc;:oxdoooooooodxxxdc;,'''''',dOdxXXKOxxkkkkkkkkkkkkkkkkOko    //\\n//    OOOOOOOOOOOOOOkkdoooddodxclkOKXKxoc'. ..,ldkx;''.''.'lddddoolccc::cclooddxOK0OxxkOOxolc::lllccccodoooooollcccc:;,,'''''',okod0KOkkkkkkkkkkxo::dkOOOOxl    //\\n//    OOOOOOOOOOOOkxooodkkkkxdxdoxO00d;.  ..;coxkkxo;''...:dxxxxdoolcccccclooodk0KKK0KKKK0Okxxxdccx00koooooooollc:;,,,,,,,'''''cdlokOkkkkOOOOxl;...:xOOOOkll    //\\n//    OOOOOOOOOOkdoodkkkkkkOkxxxoldo;.. .,c:cloooldkd,...,:dkkkkxdoolc:cccloodxxOKXXXXXXXXXXXK0kx0XX0xoloooooollc:;,,',,,,,'''':oodkxdoxkOOOkc....,dOOOOkocd    //\\n//    OOOOOOOOxoooxkkkkkkOOOOkkxd:.....';dOdoxkxxkkxl'...;lkOOOkxxdolcccllloddllx0KKXKKKKKXNNNK0KKOxdolloooooooollc:;,,,,,,'''';lc:;'.;xkkkko'....lkOOOOxcok    //\\n//    OOOOOOkdodkOOOOOOOOOOOOOxl,.....ck0xkkodxkkkd,.,,.';oO0Okxxxdoooooooodoc::dO00KKKKKKXXXXXXKkolooooooooooooollc:;,,;,,,,,'.... .'oxxxxd;....,dxxxxdccdx    //\\n//    kkkkkdlodxxxxxxxxdddddol;.....,dKXX0dxkddxd:.'oOo'';lxd;,:looddddddddoc:::ccodkO0KKKKKKXXKkdooooooooooooooooll:;;;;,,,,,..    ..,;,,,'. ....,,,,,'.',,    //\\n//    ::;;,,,;;;;;,,,,,,''''.......'cx0K0kooOXX0l,cOXKo,,;::...,:cloddolodollcccccccloxO0000000kdoddddddddxxxdddooolc:;,,,,,,'.  ...........   .............    //\\n//    ''...''''.....''..............',::;'';oxo;,dKXKOl;;,'...';;::;,'.;ooooooooooooodddxkkkkkxdddxxxxkkkkkkkkkxddol:'...',,,.. ............ ...............    //\\n//    '..'''...............................','':x0KKOolo:'...';;;'.. .'lddddddddxxxxxxxxxdddooodxkkkkkkOOOOxoloxxdl;.....',,'...............................    //\\n//    '''''...................................;d00OOoldd:...',;;'.....cxxxxkkkkOOOOOOO000000OOO0XXXKK0000kc'...:do,. ...,;,,................................    //\\n//    ''''''..................................,;:cllllol'..',,;,.....:xkkOOO00KKKXXXXXNNNNNNNNNNNXXKK00Ox:......c;...';::;;'.....,c;........................    //\\n//    ''''''''''...................................:ddc'..,,,;,.....;xOOOO0KXXXXXXXXXNNXXXXXKKKK00OOkxdc;;,.....'..':llcc:,.....'lo:'.......................    //\\n//    '''''''''''..................................,ld;..;l:,;'....'okkkkkO00OOkxxxxxkOOOO00OOOkkkkkxdo:cl'......':ooollc;......cdo;........................    //\\n//    '''''''''''...................................,;.';cxxc,.....ckkkkkkxxxddddoooodddxkkOOOO000Okkxlld:......'cdddool:,.....'lxl,.......................'    //\\n//    '''''''''''..........'''''......................'loldOd,....;dkOOkkkkxxxxxxdxxxxkkkOO000000000Ooldl'.....;:coddoccc;.....;lc,..........',,;:c:,'.....'    //\\n//    ''''''''''.........''''''.......................,lxxodc....'cdkOOOOOOOkkkdlcc:::ldO0000OOOOOOkoloo;......coccllloxx:......'.........':lodddooodc'....'    //\\n//    ,''''''''........''''''..........................,cxxc.....;odxO00000Oko;'...','..;dkxxxxxxxdlclo:......,lddddxO0KKl..............':odol:;,,''cdc'...'    //\\n//    ,'''''''........'''''.............................':o;....:dddxkO000xc,..,clodxdo;.'lddddddoccloc'......:oxkO0KXXXKx;...........':ldxx:'......'cd:'.''    //\\n//    ,,''''''........'''..............................',:;....'d00OkkOOxc'..;okOOkxo:;;..:oddddoccodo;......;dk00KKKK0OOOkdlclc;'...'cdxkkl'........,lo;'''    //\\n//    ,,,,,''........''...'''''''''',;,'.....'......',;cdl'....:dO0KK0kl,..'lOK000Ol'.....;dxxdlcodxdc......,okkOOOkkxxdddxkkkkkxl,..:dkOOo,..........,odl::    //\\n//    ,,,,,,'........''''''''''''';ldxdo:'.''......cdkkkx;....:xxxO00Oc...,dKXXXKKk;......:kxoloxkkkxc,;:loddxddollc:;,,'',;:okkkxc';oxOOx:...........';dkkk    //\\n//    ,,,,,,'.......'''''''''''';okOOkkkOd:'......,dkOOOl....,kXKOkOkc...'dKXXXXXXx,.....'colok0000Oxodxxdoc:;;,'............'cxkd;,lxkOkc'...........'':xkk    //\\n//    ,,,,,''......'',,,,,,,,,,ck0K0OkkkO0kc'.....:xOOOd,....lKNNNKOc....cOKXXXXXXO:..',,;ldOKKKK0OxdxOx:''...................,okl;cdkOOo,........'...'''ckO    //\\n//    ,,,''''.....'''''''''',,ckKXK0OOkOOxl:lc'..'oO00x;....:ONNNNNk,...;x00KKXXK0OxoooolokKXXXX0kdxkOOx:'.......',,,'........,oxccdxOOx:'.....'''''...'',lO    //\\n//    ,',,,,'''...'''''''''''':kKXK00OOOxc:dk:...;x00k:....'dKXXNX0l'..'o0KKKK0Okkdoc:;,',lOXNXOxdkOOOOx:'.....'':dkd:'.....'':xxloxOOkc''...'',;,'''...'';o    //\\n//    ,,,,,,''''..',,,,,,,,,,,,cdOKKK0Oo:lO0o'..'cO0Ol'....:k00Okkxdl;.;kXXXKOkkxdc''..''',oOXKkdxkOOOOx:'......'ckOxc'....''cxkddxOOOo,'...'''lxc''''..''';    //\\n//    ;,,,,,,''''''',,,,,,,,,,,:odkKKxc:oO0o,...;xK0o,',;:cdxkkkkxxxkl':OXKOkxkkl;,'.....'',o0KkdxkOOOOx:'......':ol:'....''':dxdxOOOd;''...'';xOx:'''...'',    //\\n//    ,,,,,,,,'''''',,,,,,,,,,,,cdolc:okOOo,..',lkOxoodxxkkxddolc;,cxl'cOOxxxOOd;''.......'';oOxdxOOOOOx:''....'''''.......''';dkOOOx:''...'',cddl;''''..'',    //\\n//    ;,,,,,,,,''''''',,,,,,,,,,,;;;lxkOko:;:cloxkkxxxdolc:;,,''''':xo';xxdxOOx:'''...'...''';oxdxOOOOOx:''.......''''''....''':xOOkl,''..'''',,'''''''...',    //\\n//    ;;;;;;,,,,,''''''''''''''';lookOOOxooxkkxddolc:;,''''''...''':xo',ldxkOkc,''...'''...''';oxxOOOOOx:''....'',:cc:,'''..''',oOOo;''...''''''''''',''''',    //\\n//    ;;;;;,,,,;;;,,,,,;;;:::cccdkxdO00OxxkOOd:;,''''''''''''...''':xo,;odkOOo;'''...''''...''';dkOOOOOx:'''...',lkOOOd;''..''',oOx:'''.''''',,;:clldl;,,;:c    //\\n//    ;;;;,,,,,;:cloddxkkkOOkkkkOOkk00kxxkOOOd;,,'..''''''''''''''':xkoodxOOx:''....''''''..'''':xOOOOOx:'''..'',lOOOOd;''..''':xkc,''.'',;cooddxxxkOOdoddxk    //\\n//    ;;;,,,:codxkO00OkxdollccccccloxOkkO00OOx:,,'''',,,,,,'''.''',:x0kdxOOkl,''...'';:,'''''''',cxOOOOx:'''..'',lkkxl;'''.''';okl,''''',,lxkxxxxxkOOkkxxxxx    //\\n//    ::;:coxkO000kxol::;;;,,,,,;;:okkkO00000xc,,'',,,,:ol;,'''',,,:xOxxkOOo;''''''',lxc''''''''',ckOO0x:'''..''';:;,''''''',:dOd;,;;::cloxxxxxxkO0Okxxxxxxk    //\\n//    ccodkO000Oxoc:;;;,,,,,,'',;:okkxxO00000kc,,'',,,,oOx:,,,'',,,ckkxkOOx:''''''',:xOd;,,,''''',,lk00x:,''...'''''''''',;cdkOOdoodddxxxkkxxdodk0Okkxxxdooo    //\\n//    dxkO000Oxl:;;;,,,,;;;;;;;;;okkxxxO00000x:,,,,,,,;oOx:,,,,',,,ckOkO0kl,'''',,,,:ll:,,'''''',,,;oO0x:,,''''''''',,;cldkO00Okxxxxxxxxkxdodo:;lddollc:::cc    //\\n//    kkO000kl:;;;;;;;;;::cccc::okxloxxk00000x:,,,,,,,;d0x:,,,,',,,ckOO0Oo;,'''',,,,,,''''''''''',,,;oOx:,,,,,,,;:clodxO00OO0Okxxxxxxxk0K00XNXd;;;:clodxk000    //\\n//    O000Odc:;;;;;;:coxkkOOOOkkOOl;oxxk00000d;,,,,,,,:d0xc,,,,',,,ck000x:,''''''''''''''''',,''',,,,:dd::cllooddxkOkkO0OxdkOkkkkkxxkOKXXXXXXX0xxkO00XNWWNK0    //\\n//    0KK0dc:;;;;;:lxO0000000000Oo;;oxxk0000Ol;;,,,,,,cx0xc,,,'',,,ck00kc,,'''''',,,,,;:cllc;,,;::clodkkxxxxxxxxxkOkkOOOxcoxxdoollcokXNNXXXKK000000OO0XNNX0O    //\\n//    KK0xc::;;;:cdO000000000000d:,cdxxO0000d:;;,,,,;;lO0xc,,,'',,;ck0Oo;,''',,,:clodxxkOO0OdodxxxkkkOOxxxxxdxxxOOkxddkOo::cccllodxOXXXXNNNXKKK00O000KXNNXOO    //\\n//    KKOo:::;;::oO000000000KKKOo:cdxxkO000xc;;;,,;;;:x00xc;;,'',;;ckOd:,,,,,,,:dOO00000000OkxxxxxxkOkxxxxxxxxdddlccoOXKkkOO000000OO0KK0KXXK0000000KKXNNXKOO    //\\n//    KKkl::;;::cx000xoolodOKK0OOkxxxkO00Oxc;;;,,;;;;oO00kc;;,',,;;ckxc;;;;;:cldO000000000OxxxxxxxkOOxxddoolcc:::ldkKNNNNNNNNXXKKK0000OOO0KKOOOOOOOO0O000000    //\\n//    KKkl:::;::cx00OkkxdloOK0OdokOOO00Oxoc;;;,,;;;;lk000kc;;;;;;;:lkdlooddxkO000OOkkkO00Okkxxxddoollc::::ccloxkk00KKKKXXXKK0KXXXK0K000OO0KXK0OOOOOOOOOO000K    //\\n//    KKkl:::;::clxO0KKK0OOOxdl::cxO00xl::;;;;;;;;:ok0000kl:ccloddxkOkkkkkkkOOkdollc::oxdoolcc::::clooddxxkO0KKKK0000000KKKK0OO0OkkOOkxxxkO00OkkkkkkkkkkO0KK    //\\n//    KKOocc:::::ccloddddolcc:::;:cdOOo:;;,,;;;::ldO00000OkxkkkkkO0OkxxxxxkOOxoloddddl:::cclodxkO00KKKK00OOOO0KK00KKKKK0000KK00Okxk00OOOkO0KK00OOkkOOOOO0KXX    //\\n//    KK0dccc::;::cccccc::::::;;,;:cdko::;,;;::cdkxx00000Okkxxxxk0OkxxxxxkO0OOO0KXXXXOddxO00KKXXXXXXXXKKK00OOO00OOO0KXXKK00KKKK00OO0XXKK0KNWNNXXKK00KKKKKXXX    //\\n//                                                                                                                                                              //\\n//                                                                                                                                                              //\\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract G2U is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Glory to Ukraine\\\", \\\"G2U\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/ERC721Creator.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\\n        Address.functionDelegateCall(\\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\\n            abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol)\\n        );\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "G2U", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe4e4003afe3765aca8149a82fc064c0b125b9e5a", "SwarmSource": ""}]}