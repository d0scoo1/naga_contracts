{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity 0.6.7;\r\n\r\ncontract GebAuth {\r\n    // --- Authorization ---\r\n    mapping (address => uint) public authorizedAccounts;\r\n    /**\r\n     * @notice Add auth to an account\r\n     * @param account Account to add auth to\r\n     */\r\n    function addAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 1;\r\n        emit AddAuthorization(account);\r\n    }\r\n    /**\r\n     * @notice Remove auth from an account\r\n     * @param account Account to remove auth from\r\n     */\r\n    function removeAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 0;\r\n        emit RemoveAuthorization(account);\r\n    }\r\n    /**\r\n    * @notice Checks whether msg.sender can call an authed function\r\n    **/\r\n    modifier isAuthorized {\r\n        require(authorizedAccounts[msg.sender] == 1, \"GebAuth/account-not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- Events ---\r\n    event AddAuthorization(address account);\r\n    event RemoveAuthorization(address account);\r\n\r\n    constructor () public {\r\n        authorizedAccounts[msg.sender] = 1;\r\n        emit AddAuthorization(msg.sender);\r\n    }\r\n}\r\n\r\nabstract contract CollateralAuctionHouseLike {\r\n    function terminateAuctionPrematurely(uint256 id) virtual external;\r\n}\r\nabstract contract SAFEEngineLike {\r\n    function transferCollateral(bytes32,address,address,uint256) virtual external;\r\n}\r\n\r\ncontract MinimalCollateralAuctionHouseOverlay is GebAuth {\r\n    SAFEEngineLike             public safeEngine;\r\n    CollateralAuctionHouseLike public collateralAuctionHouse;\r\n\r\n    constructor(address safeEngine_, address collateralAuctionHouse_) public GebAuth() {\r\n        require(collateralAuctionHouse_ != address(0), \"MinimalCollateralAuctionHouseOverlay/null-address\");\r\n        require(safeEngine_ != address(0), \"MinimalCollateralAuctionHouseOverlay/null-address\");\r\n        safeEngine             = SAFEEngineLike(safeEngine_);\r\n        collateralAuctionHouse = CollateralAuctionHouseLike(collateralAuctionHouse_);\r\n    }\r\n\r\n    /*\r\n    * @notify Terminate a collateral auction prematurely\r\n    * @param id ID of the auction to settle\r\n    */\r\n    function terminateAuctionPrematurely(uint256 id) external isAuthorized {\r\n        collateralAuctionHouse.terminateAuctionPrematurely(id);\r\n    }\r\n\r\n    /*\r\n    * @notify Transfer internal collateral to another address\r\n    * @param collateralType Collateral type transferred\r\n    * @param dst Collateral destination\r\n    * @param wad Amount of collateral transferred\r\n    */\r\n    function transferCollateral(\r\n        bytes32 collateralType,\r\n        address dst,\r\n        uint256 wad\r\n    ) external isAuthorized {\r\n        safeEngine.transferCollateral(collateralType, address(this), dst, wad);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safeEngine_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralAuctionHouse_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralAuctionHouse\",\"outputs\":[{\"internalType\":\"contract CollateralAuctionHouseLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safeEngine\",\"outputs\":[{\"internalType\":\"contract SAFEEngineLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"terminateAuctionPrematurely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"collateralType\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MinimalCollateralAuctionHouseOverlay", "CompilerVersion": "v0.6.7+commit.b8d736ae", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000cc88a9d330da1133df3a7bd823b95e52511a69620000000000000000000000007ffdf1dfef2bfee32054c8e922959fb235679ade", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c2b60fe8b7a4fdf57fae4cf65302f04535d8e9d3b8b435aba9b07e2bfaa3738b"}]}