{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// Lightweight interface for Collybus\n// Source: https://github.com/fiatdao/fiat-lux/blob/f49a9457fbcbdac1969c35b4714722f00caa462c/src/interfaces/ICollybus.sol\ninterface ICollybus {\n    function updateDiscountRate(uint256 tokenId_, uint256 rate_) external;\n\n    function updateSpot(address token_, uint256 spot_) external;\n}interface IRelayer {\n    enum RelayerType {\n        DiscountRate,\n        SpotPrice,\n        COUNT\n    }\n\n    function execute() external returns (bool);\n\n    function executeWithRevert() external;\n}\ncontract StaticRelayer is IRelayer {\n    /// @notice Emitted during executeWithRevert() if the Collybus was already updated\n    error StaticRelayer__executeWithRevert_collybusAlreadyUpdated(\n        IRelayer.RelayerType relayerType\n    );\n\n    /// ======== Events ======== ///\n\n    event UpdatedCollybus(\n        bytes32 tokenId,\n        uint256 rate,\n        IRelayer.RelayerType relayerType\n    );\n\n    /// ======== Storage ======== ///\n\n    address public immutable collybus;\n    IRelayer.RelayerType public immutable relayerType;\n    bytes32 public immutable encodedTokenId;\n    uint256 public immutable value;\n\n    // Flag used to ensure that the value is pushed to Collybus only once\n    bool private _updatedCollybus;\n\n    constructor(\n        address collybusAddress_,\n        IRelayer.RelayerType type_,\n        bytes32 encodedTokenId_,\n        uint256 value_\n    ) {\n        collybus = collybusAddress_;\n        relayerType = type_;\n        encodedTokenId = encodedTokenId_;\n        value = value_;\n        _updatedCollybus = false;\n    }\n\n    /// @notice Pushes the hardcoded value to Collybus for the hardcoded token id\n    /// @dev The execute will exit early after the first update\n    function execute() public override(IRelayer) returns (bool) {\n        if (_updatedCollybus) return false;\n\n        _updatedCollybus = true;\n        if (relayerType == IRelayer.RelayerType.DiscountRate) {\n            ICollybus(collybus).updateDiscountRate(\n                uint256(encodedTokenId),\n                value\n            );\n        } else if (relayerType == IRelayer.RelayerType.SpotPrice) {\n            ICollybus(collybus).updateSpot(\n                address(uint160(uint256(encodedTokenId))),\n                value\n            );\n        }\n\n        emit UpdatedCollybus(encodedTokenId, value, relayerType);\n        return true;\n    }\n\n    /// @notice The function will call `execute()` and will revert if _updatedCollybus is true\n    function executeWithRevert() public override(IRelayer) {\n        if (!execute()) {\n            revert StaticRelayer__executeWithRevert_collybusAlreadyUpdated(\n                relayerType\n            );\n        }\n    }\n}\n", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collybusAddress_\",\"type\":\"address\"},{\"internalType\":\"enum IRelayer.RelayerType\",\"name\":\"type_\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"encodedTokenId_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum IRelayer.RelayerType\",\"name\":\"relayerType\",\"type\":\"uint8\"}],\"name\":\"StaticRelayer__executeWithRevert_collybusAlreadyUpdated\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IRelayer.RelayerType\",\"name\":\"relayerType\",\"type\":\"uint8\"}],\"name\":\"UpdatedCollybus\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"collybus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodedTokenId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeWithRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerType\",\"outputs\":[{\"internalType\":\"enum IRelayer.RelayerType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "StaticRelayer", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "8000", "ConstructorArguments": "0000000000000000000000006b576f65de4b8b171aef412debc33dc53500cfdb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000b4241e89", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}