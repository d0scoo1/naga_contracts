{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\n                                        ,\u2584m    ,\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2556\r\n                                    \u2553\u2584\u2593\u2588\u2588\u258c\u2553\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2514\r\n                                  \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2584\u2584\u2584,\r\n              \u2553,              ,\u2584\u2584\u2588\u2588\u2588\u2593\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2584,\r\n               \u2580\u2588\u2593\u2584\u2565       x\u0398\u2559\u2560\u2560\u2588\u2588\u2588\u2593\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u2593\u2580  \u2590\u2588\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2556\r\n                 \u2559\u2588\u2588\u2588\u2588\u2593\u2584Q  ,\u03c6\u2592\u2592\u2592\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u2593\u2593\u2580  \u2555 \u2590\u2588\u2593\u2593\u2593\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2584\r\n                   \u2559\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2584\u2584\u2592\u2592\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u256c\u256c\u2593\u2588\u2588\u2588\u2580  \u2584\u2588\u2310 \u256b\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u258c\r\n                   /  \u2580\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2580  \u2584\u2588\u2588\u2580 \u2554\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2588\u2588\u2588\u2584\r\n                 \u2584\u2559     \u2559\u2588\u2588\u2593\u2584\u2559\u2580\u2593\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u00aa\u2580\u2580\u2514 ,\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\r\n               ,\u2593   \u2553\u2560\u2592\u2265  \u2559\u2593\u2588\u2588\u2593\u2556 \u2514\u2580\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2593\u2559       \u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\r\n              \u2584\u2588   \u2554\u2592\u2592\u2592\u2592\"   \u2514\u2580\u2588\u2588\u2588\u258c,  \u2559\u2588\u2588\u2588\u2588\u2580         ~\u03a6\u2593\u2588\u2588\u2593\u2580\u2580\u2569\u2593\u2588\u2588\u2559\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u258c\r\n             \u2593\u2588   \u03c6\u2592\u2592\u2592\u2559    \u2554\u2554  \u2559\u2588\u2588\u2588\u2588\u2584\u2584\u2588\u2588\u2588\u2580          ,         \u2588\u2588\u258c   \u2559\u2593\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2593\u2514\u2580b\r\n            \u2593\u2588   \u2554\u2592\u2592\u2592`    \u03c6\u2592\u2592\u2592\u207f  \u256b\u2588\u2588\u2588\u2588\u2588\u2588`         ,\u258c          \u256b\u2588\u2588      \u2559\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u2588\u2588\u2593\r\n           \u256b\u2588\u2500  .\u2592\u2592\u2592     \u2560\u2592\u2592\u255a   ]\u2588\u2588\u2588\u2588\u2588\u2588\u00ac         \u2593\u2588            \u2588\u2588\u258c       \u2514\u2593\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u2588\u2588\u2593\r\n          \u2590\u2588\u258c   \u2560\u2592\u2592     \u03c6\u2592\u2592\"    \u2590\u2588\u2588\u2588\u2588\u2588\u2500        \u2593\u2588\u2580\u2588\u2588\u258c          \u2588\u2588\u2588       \u256c \u2514\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u258c\r\n          \u2588\u2588   ]\u2592\u2592\u2310    .\u2592\u2592       \u2593\u2588\u2588\u2588\u2588       \u2584\u2588\u2580\u2524\u2591\u2590\u2588\u2588        \u2553\u2588\u2588\u2588\u2580      /\u256b\u2592\u03b5 \u2559\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\r\n         \u2590\u2588\u2588   \u255a\u2592\u255a     \u2560\u2592        \u2551\u2588\u2588\u2588\u2588\u2310 \u255f\u2584,\u2593\u2588\u2593\u2524Q\u2584\u2593\u2588\u2580        \u2584\u2580\u2593\u2593`      \u2553\u2592\u2593\u258c\u2592\u2554 \u2514\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u258c\r\n         \u2593\u2588\u258c   \u2592\u2592      \u2592\u2559        \u2588\u2588\u2588\u2588\u2588\u2588 \u256b\u2588\u2588\u2588\u2588\u2593\u2580\u2580\u2559          \u2593         ,\u03c6\u2592\u2551\u2588\u258c\u2592\u2592\u2265  \u2588\u2588\u2588\u256c\u2593\u2588\u2588\r\n         \u2588\u2588\u258c   \u2592\u2592      \u2592        \u2590\u2588\u2588\u2588\u2559\u2588\u2588b \u2514\u2559          \u2584\u00c6R\u2580\u2580\u2580       \u2553\u03c6\u2560\u2592\u2592\u2584\u2588\u2588\u2592\u2592\u2592\u2592  \u2559\u2588\u2588\u2588\u2563\u2588\u2588\r\n         \u2588\u2588\u258c   \u2592\u0393      \u2559        \u2588\u2588\u2588\u258c \u255f\u2588            ,\u2593,\u03c6\u03c6\u2560\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2593\u2588\u2588\u2588\u2580\u2592\u2592\u2592\u2592\u2560  \u2593\u2588\u2588\u2593\u2588\u2588\u2500\r\n         \u2588\u2588\u258c   \u255a\u2310      \u2310       \u2593\u2588\u2588\u2588               \u2554\u258c\u00ab\u2592\u2592\u2592\u2592\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2591\u2592\u2592\u2592\u2592\u2592\u2592  \u2590\u2588\u2588\u2588\u2588\u2588\r\n         \u2588\u2588\u2588   '\u03b5             ]\u2588\u2588\u2588\u2310             \u2553\u2584\u2580\u03c6\u2592\u2592\u2592\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2580\u256c\u2591\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592   \u2588\u2588\u2588\u2588\u2588\r\n         \u256b\u2588\u2588\u00b5   \u03c6             \u2588\u2588\u2588\u258c        \u2553\u2554\u03c6\u2560\u2592\u2591\u2593,\u2560\u2592\u2592\u2592\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2559\u2588\u2593\u2584`\u2559\u2560\u2592\u2592\u2592\u2592\u2592\u2592\u2592   \u2588\u2588\u2588\u2588\u2588\r\n         \u2514\u2588\u2588\u2588                \u256b\u2588\u2588\u2588       ,\u2560\u2592\u2592\u2584\u2593\u2593\u2588\u2593\u2593\u2593\u2584\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580      \u2593\u2588\u2588\u258c,`\u255a\u2592\u2592\u2592\u2592\u2592  ]\u2588\u2588\u2588\u2588\u258c\r\n          \u2593\u2588\u2588\u258c              \u2593\u2588\u2588\u2588\u00ac   \u2554  \u03c6\u2592\u2592\u2592\u2560\u2560\u2560\u2560\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2559         \u2588\u2588\u2588\u2588\u258c  \u255a\u2592\u2592\u2559  \u2593\u2588\u2588\u2588\u2588\r\n           \u2588\u2588\u2588\u2584           \u2584\u2588\u2588\u2588\u2580  \u2552  \u2560\u2265\u2560\u2592\u2592\u2592\u2591\u2584\u2593\u258c\u2568\u255a\u2592\u255a\u2593\u2588\u2588\u2588\u2588\u2588\u2514           \u2551\u2588\u2588\u2588\u2588\u2588  \u2514\u2592  ]\u2588\u2588\u2588\u2588`\r\n           \u2514\u2588\u2588\u2588\u258c         \u2593\u2588\u2588\u2588\u2559  \u2593\u2584  \u2560\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2559\u2559\u2593\u2593 \u2592\u2592\u2588\u2588\u2588\u2588             \u2590\u2588\u2588\u2588\u2588\u2588\u2588    ,\u2588\u2588\u2588\u2588\u2568\r\n            \u2514\u2588\u2588\u2588\u258c       \u2590\u2588\u2588\u2588  \u2554\u2588\u2588\u2588  \u2560\u2592\u2592\u2592\u2592\u256b\u2588\u2310,\u2584\u2593\u2593 \u2592\u2592\u2593\u2588\u2588\u258c             \u256b\u2588\u2588\u2588\u2588\u2588\u2588\u2593  \u2553\u2588\u2588\u2588\u2588\u2580\r\n              \u2588\u2588\u2588\u2588\u00b5      \u2588\u2588\u2588b  \u2580\u2559  \u03c6\u2592\u2592\u2592\u2592\u2584\u2588\u2588\u2593\u2593\u2560\u03c6\u2560\u2592\u2592\u2593\u2588\u2588\u2588             ]\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2310\u2584\u2588\u2588\u2588\u2588\u2518\r\n               \u2580\u2588\u2588\u2588\u258c     \u256b\u2588\u2588\u2588  .\u2554\u03c6\u2592\u2592\u2592\u2592\u2592\u2593\u2588\u2593\u256c\u2591\u2592\u2592\u2584\u2593\u2588\u2588\u2588\u2588\u2580              \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\r\n                \u2559\u2588\u2588\u2588\u2588\u258c    \u2593\u2588\u2588\u2593\u2584,   \u2590\u2593\u2593\u2588\u2588\u2584\u2584\u2584\u2584\u2593\u2588\u2588\u2588\u2588\u2580\u2514              ,\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\r\n                  \u2559\u2588\u2588\u2588\u2588\u258c\u00b5  \u2559\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2580                 \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\r\n                    \u2559\u2588\u2588\u2588\u2588\u2588\u2584,   \u2514\u2559\u2559\u2580\u2580\u2559                         \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\r\n                      \u2514\u2580\u2588\u2588\u2588\u2588\u2588\u2593\u2584                            \u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2559\r\n                         \u2559\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2584\u2584,                 ,\u2584\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2559\r\n                             \u2559\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2514\r\n                                 \u2559\u2559\u2580\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2559\r\n                                        \u2514\u2559\u2559\u2559\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2559\u2559\u2514\r\n\r\n         \u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2557   \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557  \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2557   \u2588\u2588\u2557\r\n        \u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551  \u2588\u2588\u2551    \u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551 \u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\r\n        \u255a\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551       \u2588\u2588\u2551   \u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2554\u2588\u2588\u2557 \u2588\u2588\u2551\r\n         \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551       \u2588\u2588\u2551   \u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2588\u2588\u2557 \u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\u255a\u2588\u2588\u2557\u2588\u2588\u2551\r\n         \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551       \u2588\u2588\u2551   \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2588\u2551\r\n         \u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d       \u255a\u2550\u255d    \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u2550\u255d\r\n*/\r\n\r\npragma solidity 0.5.10;\r\n\r\n/*\r\n * 1inch Network \r\n * https://1inch.io/\r\n *  \r\n * The 1inch Network unites decentralized protocols whose synergy enables the most lucrative, fastest and protected operations in the DeFi space.\r\n * A protocol that facilitates cost-efficient and secure atomic transactions by utilizing a wide range of protocols and performing argument validation and execution verification.\r\n * A next-generation automated market maker that protects users from front-running attacks and offers capital efficiency to liquidity providers.\r\n * A decentralized autonomous organization that governs the 1inch Network, enabling 1INCH stakers to vote for key protocol parameters and take part in the network's governance.\r\n * As a governance and utility token, 1INCH facilitates multiple tokenomics. It enables users to govern protocols and participate in the network's evolution and serves as a connector utility token in the 1inch Liquidity Protocol for high-efficiency routing.\r\n */\r\n/**\r\n * @title SafeMath\r\n * @dev Unsigned math operations with safety checks that revert on error.\r\n */\r\nlibrary SafeMath {\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n\r\n    address internal _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender), \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function isOwner(address account) public view returns (bool) {\r\n        return account == _owner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title Roles\r\n * @dev Library for managing addresses assigned to a Role.\r\n */\r\nlibrary Roles {\r\n    struct Role {\r\n        mapping (address => bool) bearer;\r\n    }\r\n\r\n    function add(Role storage role, address account) internal {\r\n        require(!has(role, account), \"Roles: account already has role\");\r\n        role.bearer[account] = true;\r\n    }\r\n\r\n    function remove(Role storage role, address account) internal {\r\n        require(has(role, account), \"Roles: account does not have role\");\r\n        role.bearer[account] = false;\r\n    }\r\n\r\n\r\n    function has(Role storage role, address account) internal view returns (bool) {\r\n        require(account != address(0), \"Roles: account is the zero address\");\r\n        return role.bearer[account];\r\n    }\r\n}\r\n\r\n/**\r\n * @title MinterRole\r\n * @dev role for addresses who has permission to mint tokens.\r\n */\r\ncontract MinterRole is Ownable {\r\n    using Roles for Roles.Role;\r\n\r\n    event MinterAdded(address indexed account);\r\n    event MinterRemoved(address indexed account);\r\n\r\n    Roles.Role private _minters;\r\n\r\n    modifier onlyMinter() {\r\n        require(isMinter(msg.sender), \"Caller has no permission\");\r\n        _;\r\n    }\r\n\r\n    function isMinter(address account) public view returns (bool) {\r\n        return(_minters.has(account) || isOwner(account));\r\n    }\r\n\r\n    function addMinter(address account) public onlyOwner {\r\n        _minters.add(account);\r\n        emit MinterAdded(account);\r\n    }\r\n\r\n    function removeMinter(address account) public onlyOwner {\r\n        _minters.remove(account);\r\n        emit MinterRemoved(account);\r\n    }\r\n}\r\n\r\n/**\r\n * @title HalterRole\r\n * @dev role for addresses who has permission to pause any token movement.\r\n */\r\ncontract HalterRole is Ownable {\r\n    using Roles for Roles.Role;\r\n\r\n    event HalterAdded(address indexed account);\r\n    event HalterRemoved(address indexed account);\r\n\r\n    Roles.Role private _halters;\r\n\r\n    modifier onlyHalter() {\r\n        require(isHalter(msg.sender), \"Caller has no permission\");\r\n        _;\r\n    }\r\n\r\n    function isHalter(address account) public view returns (bool) {\r\n        return(_halters.has(account) || isOwner(account));\r\n    }\r\n\r\n    function addHalter(address account) public onlyOwner {\r\n        _halters.add(account);\r\n        emit HalterAdded(account);\r\n    }\r\n\r\n    function removeHalter(address account) public onlyOwner {\r\n        _halters.remove(account);\r\n        emit HalterRemoved(account);\r\n    }\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://eips.ethereum.org/EIPS/eip-20\r\n */\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * See https://eips.ethereum.org/EIPS/eip-20\r\n */\r\ncontract ERC20 is IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowed;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        return _balances[owner];\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n        _transfer(from, to, value);\r\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        require(to != address(0));\r\n\r\n        _balances[from] = _balances[from].sub(value);\r\n        _balances[to] = _balances[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function _mint(address account, uint256 value) internal {\r\n        require(account != address(0));\r\n\r\n        _totalSupply = _totalSupply.add(value);\r\n        _balances[account] = _balances[account].add(value);\r\n        emit Transfer(address(0), account, value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        require(spender != address(0));\r\n        require(owner != address(0));\r\n\r\n        _allowed[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0));\r\n\r\n        _balances[account] = _balances[account].sub(amount);\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(amount));\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\r\n * tokens and those that they have an allowance for.\r\n */\r\ncontract ERC20Burnable is ERC20 {\r\n\r\n    function burn(uint256 amount) public {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    function burnFrom(address account, uint256 amount) public {\r\n        _burnFrom(account, amount);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @dev Extension of {ERC20} that adds a set of accounts with the {MinterRole},\r\n * which have permission to mint (create) new tokens as they see fit.\r\n */\r\ncontract ERC20Mintable is ERC20Burnable, MinterRole {\r\n\r\n    function mint(address account, uint256 amount) public onlyMinter returns (bool) {\r\n        _mint(account, amount);\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @dev Extension of {ERC20} that adds a possibility to temporary prevent any token movements.\r\n */\r\ncontract ERC20Haltable is ERC20Mintable, HalterRole {\r\n\r\n    bool public paused;\r\n\r\n    event Paused(address by);\r\n    event Unpaused(address by);\r\n\r\n    modifier notPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    function pause() public onlyHalter {\r\n        paused = true;\r\n        emit Paused(msg.sender);\r\n    }\r\n\r\n    function unpause() public onlyHalter {\r\n        paused = false;\r\n        emit Unpaused(msg.sender);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 value) internal notPaused {\r\n        super._transfer(from, to, value);\r\n    }\r\n\r\n    function _mint(address account, uint256 value) internal notPaused {\r\n        super._mint(account, value);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal notPaused {\r\n        super._burn(account, amount);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title ApproveAndCall Interface.\r\n * @dev ApproveAndCall system allows to communicate with smart-contracts.\r\n */\r\ninterface IApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 amount, address token, bytes calldata extraData) external;\r\n}\r\n\r\n/**\r\n * @title The main project contract.\r\n */\r\ncontract OneInch is ERC20Haltable {\r\n\r\n    string private _name = \"1inch\";\r\n    string private _symbol = \"1INCH\";\r\n    uint8 private _decimals = 18;\r\n\r\n    uint256 internal constant _emission = 1500000000 * (10 ** 18);\r\n\r\n    mapping (address => bool) private _contracts;\r\n\r\n    bool public mintingFinished;\r\n\r\n    mapping (address => uint256) internal holderMap;\r\n\r\n    address[] public holderList;\r\n\r\n    modifier onlyMinter() {\r\n        if (mintingFinished) {\r\n            revert();\r\n        }\r\n        require(isMinter(msg.sender), \"Caller has no permission\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        _addHolder(address(0));\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (value != 0) {\r\n            if (holderMap[to] == 0) {\r\n                _addHolder(to);\r\n            }\r\n            if (balanceOf(from).sub(value) == 0) {\r\n                _removeHolder(from);\r\n            }\r\n        }\r\n\r\n        super._transfer(from, to, value);\r\n    }\r\n\r\n    function _mint(address account, uint256 value) internal {\r\n        require(totalSupply().add(value) <= _emission);\r\n\r\n        if (value != 0 && holderMap[account] == 0) {\r\n            _addHolder(account);\r\n        }\r\n\r\n        super._mint(account, value);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        if (balanceOf(account).sub(amount) == 0) {\r\n            _removeHolder(account);\r\n        }\r\n\r\n        super._burn(account, amount);\r\n    }\r\n\r\n    function _addHolder(address account) internal {\r\n        holderList.push(account);\r\n        holderMap[account] = holderList.length.sub(1);\r\n    }\r\n\r\n    function _removeHolder(address account) internal {\r\n        if (holderList.length > 1) {\r\n            holderList[holderMap[account]] = holderList[holderList.length.sub(1)];\r\n            holderMap[holderList[holderList.length.sub(1)]] = holderMap[account];\r\n        }\r\n        holderMap[account] = 0;\r\n        holderList.length = holderList.length.sub(1);\r\n    }\r\n\r\n    function approveAndCall(address spender, uint256 amount, bytes memory extraData) public returns (bool) {\r\n        require(approve(spender, amount));\r\n\r\n        IApproveAndCallFallBack(spender).receiveApproval(msg.sender, amount, address(this), extraData);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n\r\n        if (_contracts[to]) {\r\n            approveAndCall(to, value, new bytes(0));\r\n        } else {\r\n            super.transfer(to, value);\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function registerContract(address addr) public onlyOwner {\r\n        require(isContract(addr));\r\n        _contracts[addr] = true;\r\n    }\r\n\r\n    function unregisterContract(address addr) external onlyOwner {\r\n        _contracts[addr] = false;\r\n    }\r\n\r\n    function finishMinting() external onlyMinter {\r\n        mintingFinished = true;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function isRegistered(address addr) public view returns (bool) {\r\n        return _contracts[addr];\r\n    }\r\n\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n\r\n    function amountOfHolders() public view returns (uint256) {\r\n        return holderList.length.sub(1);\r\n    }\r\n\r\n    function holders() public view returns (address[] memory) {\r\n        return holderList;\r\n    }\r\n\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "ERC20", "CompilerVersion": "v0.5.10+commit.5a6ea5b1", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://68aec8ef145dc54530857c7bf9f754fbfae3b2076870220cdcfad307d221c430"}]}