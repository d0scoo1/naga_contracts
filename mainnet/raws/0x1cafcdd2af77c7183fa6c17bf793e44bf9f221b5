{"status": "1", "message": "OK", "result": [{"SourceCode": "// \u9879\u76ee\u65b9\uff1a\u4e2a\u4eba\r\n// \u5f00\u53d1\u8005\uff1a\u5408\u7ea6-zero\uff0c\u524d\u7aef-\u5e08\u72ee\r\n// \u76ee\u7684\uff1a\u65e0\uff0c\u4e2a\u4eba\u7231\u597d\uff0c\u987a\u5e26\u6536\u70b9\u624b\u7eed\u8d39\r\npragma solidity ^0.4.26;\r\n\r\ncontract ERC20Basic {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\ncontract Evo {\r\n    function getTokens() payable public;\r\n}\r\n\r\ncontract EvoGet {\r\n    function Get(uint256 time, address evo) payable public {\r\n        for (uint256 i = 0; i < time; i++) {\r\n            Evo(evo).getTokens();\r\n        }\r\n        uint256 all = ERC20Basic(evo).balanceOf(address(this));\r\n        uint256 fee = all / 100 * 1;\r\n        ERC20Basic(evo).transfer(msg.sender, all - fee);\r\n        ERC20Basic(evo).transfer(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb, fee);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"evo\",\"type\":\"address\"}],\"name\":\"Get\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "EvoGet", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://76ded153532e70990afce7a4c7dd115446f8fdf69a0b8941602494182fd0c319"}]}