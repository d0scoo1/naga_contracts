{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/mining/EulDistributorOwner.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IEulDistributor {\\n    function updateRoot(bytes32 newRoot) external;\\n}\\n\\ncontract EulDistributorOwner {\\n    string public constant name = \\\"EUL Distributor Owner\\\";\\n\\n    address public immutable eulDistributor;\\n    address public owner;\\n    address public updater;\\n\\n    constructor(address eulDistributor_, address owner_, address updater_) {\\n        eulDistributor = eulDistributor_;\\n        owner = owner_;\\n        updater = updater_;\\n    }\\n\\n    // Owner-only functions\\n\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"unauthorized\\\");\\n        _;\\n    }\\n\\n    function changeOwner(address newOwner) external onlyOwner {\\n        owner = newOwner;\\n    }\\n\\n    function changeUpdater(address newUpdater) external onlyOwner {\\n        updater = newUpdater;\\n    }\\n\\n    function execute(address destination, uint value, bytes calldata payload) external onlyOwner {\\n        (bool success,) = destination.call{value: value}(payload);\\n        require(success, \\\"execute failure\\\");\\n    }\\n\\n    // Updater-only functions\\n\\n    function updateRoot(bytes32 newRoot) external {\\n        require(msg.sender == updater, \\\"unauthorized\\\");\\n        IEulDistributor(eulDistributor).updateRoot(newRoot);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eulDistributor_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updater_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"changeUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eulDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"updateRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "EulDistributorOwner", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "1000000", "ConstructorArguments": "000000000000000000000000d524e29e3baf5bb085403ca5665301e94387a7e200000000000000000000000025aa4a183800ecab962d84ccc7ada58d4e12699200000000000000000000000087f1d596ebcf28f69ded62ae4060d87b7781a9db", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv2", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://abf0aed89cf5fcb0f6626338eacf9a9dafdc81c2ce1df5745c86db446ae9ec10"}]}