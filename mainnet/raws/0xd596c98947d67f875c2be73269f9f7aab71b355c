{"status": "1", "message": "OK", "result": [{"SourceCode": "{\"Ownable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8;\\r\\n\\r\\nabstract contract Ownable {\\r\\n    address private _owner;\\r\\n    \\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n    \\r\\n    modifier onlyOwner() {\\r\\n        require(owner() == msg.sender, \\\"error owner()\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() { _transferOwnership(msg.sender); }\\r\\n\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"error newOwner\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\"},\"PBOY.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8;\\r\\n\\r\\n///                                      .     ... . ..::-==--::::.      ..                  \\r\\n///                                    .-:---:-=-==-----::------=-===-==-======:.             \\r\\n///                                    ----:--------:::::::::::------------------*.           \\r\\n///                                   :=--:------==-::::::::-::------------==---++            \\r\\n///                                   -==---==------:::::-::::::----------=+=--=*:            \\r\\n///                                   ----:-=------:::::::::::::::--------===-=+*.            \\r\\n///                                 :---:-----::::::::::::::::--::-----------===+             \\r\\n///                                :=------:::::::::::::::::::--::---------=====+-            \\r\\n///                             :::-------::::::::::::----::----:=++==----========.           \\r\\n///                             .--::---::-::-::--:-=*#%*=--:--:=%%@%*-------====+-           \\r\\n///                             .-::::::-::-------==#@@@%=-----:-#@@%+:-:-----=---+:          \\r\\n///                             :--:::::----:::::-:-=+**=::--+++-:=#+-----:--------*.         \\r\\n///                           .:---:::::---::::::::::::::--=%@@@@+=+**+=-:---:--:--+-         \\r\\n///                          :--::::::::------:::-::-::::-=+#@@@%+*****+=--:------=+.         \\r\\n///                         .--::::::::::-------:::=++##=++#%@@%##*##**+=-:--:----+=.         \\r\\n///                        .==-:-:-::::::------------::-*%%+*##*%@#*+++==--::----=+*=         \\r\\n///                         ---:::----:------------=--:::-*#**#**##*=:::---::----=++*         \\r\\n///                        .---:::::::-----=--------==-::-:-+*****+=--------------=+*         \\r\\n///                        ==--:::::::---------------=====-:--==------------------++*=        \\r\\n///                        =---::::::-:-::------------=======------=====------=---==+*+.      \\r\\n///                      :----:::::::::--:-:--:---------------==-----------========++++       \\r\\n///                     :+=---::::-::::::-====-==--=--------:--:-----============+++*%-       \\r\\n///                    .=+-------:-::------=======----=--------------=+++=++++=++++++#:       \\r\\n///                    :++=--------------===++=----=----:--:--------===++++++=+++******:      \\r\\n///                    :*==---------------=====--------------:-::------====+++++++=++==*.     \\r\\n///                   =*===----------------=-====----------------------==--=+*++===----+:     \\r\\n///                  :+===-----------::---=-----=--=-----------==---=========+*+========*-    \\r\\n///                 -*====---------::-----====-=---=+==--------==============+**+======**:    \\r\\n///               -#+===--------------:----=======-====---------=====+=--====+#**++++==+*     \\r\\n///               ++----------------::--:---==========--=--------===++=--=++=+%#*++****%-     \\r\\n///             -*=--------------------------=+=======------------=+*+----=+++%#*++++*#+      \\r\\n///           :++--------------:----:--------=+++=======---------=++**+=---=++%##*+++*%-      \\r\\n///         =#==---------------:-------------==++========--===+++#%%##*+=--==+%%#**+===*.     \\r\\n///       :=*=-----------------:------------======+==========++*#+:..-+*+-==+%%##*+----+*:    \\r\\n///      #*=-------------------------------=======-=*++===+++++***:    .---- *##**=-----=+:   \\r\\n///     -#+----:------------------------=======-----+++++++**+++- .          :%**=-----==++   \\r\\n///    :#=--:--:--::-------------------=========-=--==+++***:.:               #+=------===+.  \\r\\n///   .*+---:-::::--------------------=============+++*****%=                 **==----==-=*=  \\r\\n///  :**-----::::---:------:--:-:-:----=--=+========++**#**##*:               +#++=----==-+*: \\r\\n/// :#+---:----:--------:-----:-----------==++++=-==+****+==+*##+.            .#%**==---===++ \\r\\n/// *#*=---::----:------------:--:-----------=++++=+=++**#*+++***%+             =##=--=====+%.\\r\\n///  :#=----------------------:--:----------===++++++=-=+*+*++++***+.             ==+--====+*-\\r\\n///   :*++=--:--------------:::--------------===++==++--=++++++*#****%-             .==-=+***-\\r\\n///     :*===-------------------------==-==---=====++=---=+##****##*#+==              :===**+ \\r\\n///     :#**=-------==----------------===+=========++------=+*##%##*.                   .     \\r\\n///      %#+++=-==--=------------------==+========++==------:--==*.                           \\r\\n///      -:*#*+=+=-+=-------------=--=--=**+++*===----==--===%*=--==:                         \\r\\n///        :-#%*#*===+-------===-======--==. .:*---::=-===-*#*+#%#==+                         \\r\\n///          :+*-==+#**-==--===++-+..:=..=-     :---------=##*+**++=.                         \\r\\n///                :=: -=:.:-=    =.             :---------++#*=+*-                           \\r\\n///                          --   .                --------=*+::.                             \\r\\n///                                                 :------+:                                 \\r\\n\\r\\nimport \\\"./Ownable.sol\\\";\\r\\n\\r\\ninterface ERC721TokenReceiver {\\r\\n    function onERC721Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 tokenId,\\r\\n        bytes calldata data\\r\\n    ) external returns (bytes4);\\r\\n}\\r\\n\\r\\n/// @author jolan.eth\\r\\ncontract PBOY is Ownable {\\r\\n    string public symbol = \\\"PBOY\\\";\\r\\n    string public name = \\\"Lady with Pomeranian\\\";\\r\\n\\r\\n    string public CID;\\r\\n    \\r\\n    address public ADDRESS_SIGN = 0x1Af70e564847bE46e4bA286c0b0066Da8372F902;\\r\\n    address public ADDRESS_GENESIS = 0x038ddE6a3d83b3aAf9E16735F630713a650cBd86;\\r\\n\\r\\n    address public ADDRESS_PBOY = 0x709e17B3Ec505F80eAb064d0F2A71c743cE225B3;\\r\\n    address public ADDRESS_JOLAN = 0x51BdFa2Cbb25591AF58b202aCdcdB33325a325c2;\\r\\n\\r\\n    uint256 public SHARE_PBOY = 90;\\r\\n    uint256 public SHARE_JOLAN = 10;\\r\\n\\r\\n    uint256 public price = 1 ether;\\r\\n\\r\\n    uint256 public step = 0;\\r\\n\\r\\n    uint256 public maxStep = 7;\\r\\n    uint256 public maxPerStep = 7;\\r\\n    uint256 public stepCounter = 7;\\r\\n    \\r\\n    uint256 public tokenId = 1;\\r\\n    uint256 public totalSupply = 50;\\r\\n\\r\\n    mapping (uint256 =\\u003e address) owners;\\r\\n    mapping(address =\\u003e uint256) balances;\\r\\n    \\r\\n    mapping(uint256 =\\u003e address) approvals;\\r\\n    mapping(address =\\u003e mapping(address =\\u003e bool)) operatorApprovals;\\r\\n\\r\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\r\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\r\\n\\r\\n    constructor() {\\r\\n        _mint(ADDRESS_GENESIS, tokenId++);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function mintPBOY() public payable {\\r\\n        require(step \\u003e 0 \\u0026\\u0026 step \\u003c= maxStep);\\r\\n        require(stepCounter \\u003c maxPerStep);\\r\\n        require(msg.value == price);\\r\\n        require(tokenId \\u003c= totalSupply);\\r\\n\\r\\n        _mint(msg.sender, tokenId++);\\r\\n        stepCounter++;\\r\\n    }\\r\\n\\r\\n    function setCID(string memory _CID) public onlyOwner {\\r\\n        CID = _CID;\\r\\n    }\\r\\n\\r\\n    function setPrice(uint256 _price) public onlyOwner {\\r\\n        price = _price;\\r\\n    }\\r\\n\\r\\n    function setStep() public onlyOwner {\\r\\n        require(tokenId \\u003c totalSupply);\\r\\n        if (stepCounter \\u003c maxPerStep) {\\r\\n            while (stepCounter \\u003c maxPerStep) {\\r\\n                _mint(msg.sender, tokenId++);\\r\\n                stepCounter++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (step \\u003c maxStep) {\\r\\n            stepCounter = 0;\\r\\n            step++;\\r\\n            _mint(msg.sender, tokenId++);\\r\\n            stepCounter++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function setPboy(address _PBOY)\\r\\n    public {\\r\\n        require(msg.sender == ADDRESS_PBOY, \\\"error msg.sender\\\");\\r\\n        ADDRESS_PBOY = _PBOY;\\r\\n    }\\r\\n\\r\\n    function setJolan(address _JOLAN)\\r\\n    public {\\r\\n        require(msg.sender == ADDRESS_JOLAN, \\\"error msg.sender\\\");\\r\\n        ADDRESS_JOLAN = _JOLAN;\\r\\n    }\\r\\n\\r\\n    function withdrawEquity()\\r\\n    public onlyOwner {\\r\\n        uint256 balance = address(this).balance;\\r\\n\\r\\n        address[2] memory shareholders = [\\r\\n            ADDRESS_PBOY,\\r\\n            ADDRESS_JOLAN\\r\\n        ];\\r\\n\\r\\n        uint256[2] memory _shares = [\\r\\n            SHARE_PBOY * balance / 100,\\r\\n            SHARE_JOLAN * balance / 100\\r\\n        ];\\r\\n\\r\\n        uint i = 0;\\r\\n        while (i \\u003c 2) {\\r\\n            require(payable(shareholders[i]).send(_shares[i]));\\r\\n            i++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceId)\\r\\n    public pure returns (bool) {\\r\\n        return interfaceId == 0x80ac58cd || interfaceId == 0x5b5e139f;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address owner)\\r\\n    public view returns (uint256) {\\r\\n        require(address(0) != owner, \\\"error address(0)\\\");\\r\\n        return balances[owner];\\r\\n    }\\r\\n\\r\\n    function ownerOf(uint256 id)\\r\\n    public view returns (address) {\\r\\n        require(owners[id] != address(0), \\\"error !exist\\\");\\r\\n        return owners[id];\\r\\n    }\\r\\n\\r\\n    function tokenURI(uint256 id)\\r\\n    public view returns (string memory) {\\r\\n        require(owners[id] != address(0), \\\"error !exist\\\");\\r\\n        return string(abi.encodePacked(\\\"ipfs://\\\", CID, \\\"/\\\", _toString(id)));\\r\\n    }\\r\\n\\r\\n    function approve(address to, uint256 id)\\r\\n    public {\\r\\n        address owner = owners[id];\\r\\n        require(to != owner, \\\"error to\\\");\\r\\n        require(\\r\\n            owner == msg.sender ||\\r\\n            operatorApprovals[owner][msg.sender],\\r\\n            \\\"error owner\\\"\\r\\n        );\\r\\n        approvals[id] = to;\\r\\n        emit Approval(owner, to, id);\\r\\n    }\\r\\n\\r\\n    function getApproved(uint256 id)\\r\\n    public view returns (address) {\\r\\n        require(owners[id] != address(0), \\\"error !exist\\\");\\r\\n        return approvals[id];\\r\\n    }\\r\\n\\r\\n    function setApprovalForAll(address operator, bool approved)\\r\\n    public {\\r\\n        require(operator != msg.sender, \\\"error operator\\\");\\r\\n        operatorApprovals[msg.sender][operator] = approved;\\r\\n        emit ApprovalForAll(msg.sender, operator, approved);\\r\\n    }\\r\\n\\r\\n    function isApprovedForAll(address owner, address operator)\\r\\n    public view returns (bool) {\\r\\n        return operatorApprovals[owner][operator];\\r\\n    }\\r\\n\\r\\n    function transferFrom(address from, address to, uint256 id)\\r\\n    public {\\r\\n        require(owners[id] != address(0), \\\"error !exist\\\");\\r\\n        address owner = owners[id];\\r\\n        require(\\r\\n            msg.sender == owner ||\\r\\n            msg.sender == approvals[id] ||\\r\\n            operatorApprovals[owner][msg.sender], \\r\\n            \\\"error msg.sender\\\"\\r\\n        );\\r\\n\\r\\n        _transfer(owner, from, to, id);\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data)\\r\\n    public {\\r\\n        address owner = owners[id];\\r\\n        require(\\r\\n            msg.sender == owner ||\\r\\n            msg.sender == approvals[id] ||\\r\\n            operatorApprovals[owner][msg.sender], \\r\\n            \\\"error msg.sender\\\"\\r\\n        );\\r\\n        _transfer(owner, from, to, id);\\r\\n        require(_checkOnERC721Received(from, to, id, data), \\\"error ERC721Receiver\\\");\\r\\n    }\\r\\n\\r\\n    function _mint(address to, uint256 id)\\r\\n    private {\\r\\n        require(to != address(0), \\\"error to\\\");\\r\\n        require(owners[id] == address(0), \\\"error owners[id]\\\");\\r\\n        emit Transfer(address(0), ADDRESS_SIGN, id);\\r\\n\\r\\n        balances[to]++;\\r\\n        owners[id] = to;\\r\\n        \\r\\n        emit Transfer(ADDRESS_SIGN, to, id);\\r\\n        require(_checkOnERC721Received(ADDRESS_SIGN, to, id, \\\"\\\"), \\\"error ERC721Receiver\\\");\\r\\n    }\\r\\n\\r\\n    function _transfer(address owner, address from, address to, uint256 id)\\r\\n    private {\\r\\n        require(owner == from, \\\"errors owners[id]\\\");\\r\\n        require(address(0) != to, \\\"errors address(0)\\\");\\r\\n\\r\\n        approve(address(0), id);\\r\\n        balances[from]--;\\r\\n        balances[to]++;\\r\\n        owners[id] = to;\\r\\n        \\r\\n        emit Transfer(from, to, id);\\r\\n    }\\r\\n\\r\\n    function _checkOnERC721Received(address from, address to, uint256 id, bytes memory _data)\\r\\n    internal returns (bool) {\\r\\n        uint256 size;\\r\\n\\r\\n        assembly {\\r\\n            size := extcodesize(to)\\r\\n        }\\r\\n\\r\\n        if (size \\u003e 0)\\r\\n            try ERC721TokenReceiver(to).onERC721Received(msg.sender, from, id, _data) returns (bytes4 retval) {\\r\\n                return retval == ERC721TokenReceiver(to).onERC721Received.selector;\\r\\n            } catch (bytes memory reason) {\\r\\n                if (reason.length == 0) revert(\\\"error ERC721Receiver\\\");\\r\\n                else assembly {\\r\\n                        revert(add(32, reason), mload(reason))\\r\\n                    }\\r\\n            }\\r\\n        else return true;\\r\\n    }\\r\\n    \\r\\n    function _toString(uint256 value) private pure returns (string memory) {\\r\\n        if (value == 0) return \\\"0\\\";\\r\\n\\r\\n        uint256 digits;\\r\\n        uint256 tmp = value;\\r\\n\\r\\n        while (tmp != 0) {\\r\\n            digits++;\\r\\n            tmp /= 10;\\r\\n        }\\r\\n\\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        while (value != 0) {\\r\\n            digits -= 1;\\r\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\r\\n            value /= 10;\\r\\n        }\\r\\n\\r\\n        return string(buffer);\\r\\n    }\\r\\n}\\r\\n\"}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESS_GENESIS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADDRESS_JOLAN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADDRESS_PBOY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADDRESS_SIGN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARE_JOLAN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARE_PBOY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPerStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPBOY\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_CID\",\"type\":\"string\"}],\"name\":\"setCID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_JOLAN\",\"type\":\"address\"}],\"name\":\"setJolan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_PBOY\",\"type\":\"address\"}],\"name\":\"setPboy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"step\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stepCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PBOY", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://72c037aee337aad56e7e60362b184a08961b140d3ef888a9809814053fc00177"}]}