{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n/* \r\n\r\n  _                          _   _____   _                       \r\n | |       ___   _ __     __| | |  ___| | |   __ _   _ __    ___ \r\n | |      / _ \\ | '_ \\   / _` | | |_    | |  / _` | | '__|  / _ \\\r\n | |___  |  __/ | | | | | (_| | |  _|   | | | (_| | | |    |  __/\r\n |_____|  \\___| |_| |_|  \\__,_| |_|     |_|  \\__,_| |_|     \\___|\r\n                                                                 \r\nLendFlare.finance\r\n*/\r\n\r\npragma solidity 0.6.12;\r\n\r\ncontract MovingLeverageBase {\r\n    address public owner;\r\n\r\n    struct MovingLeverage {\r\n        uint256 origin;\r\n    }\r\n\r\n    mapping(uint256 => mapping(int128 => MovingLeverage))\r\n        public movingLeverages; // pid =>(coin id => MovingLeverage)\r\n\r\n    event SetOwner(address owner);\r\n    event SetOriginMovingLeverage(\r\n        uint256 pid,\r\n        int128 curveCoinId,\r\n        uint256 current,\r\n        uint256 blockNumber\r\n    );\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"MovingLeverageBase: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function setOwner(address _owner) public onlyOwner {\r\n        owner = _owner;\r\n\r\n        emit SetOwner(_owner);\r\n    }\r\n\r\n    constructor(address _owner) public {\r\n        owner = _owner;\r\n    }\r\n\r\n    function setOriginMovingLeverage(\r\n        uint256 _pid,\r\n        int128 _curveCoinId,\r\n        uint256 _origin\r\n    ) public onlyOwner {\r\n        MovingLeverage storage movingLeverage = movingLeverages[_pid][\r\n            _curveCoinId\r\n        ];\r\n\r\n        movingLeverage.origin = _origin;\r\n\r\n        emit SetOriginMovingLeverage(\r\n            _pid,\r\n            _curveCoinId,\r\n            _origin,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function setOriginMovingLeverageBatch(\r\n        uint256 _total,\r\n        uint256[] calldata _pids,\r\n        int128[] calldata _curveCoinIds,\r\n        uint256[] calldata _origins\r\n    ) external {\r\n        require(_total == _pids.length, \"!_pids.length\");\r\n        require(_total == _curveCoinIds.length, \"!_curveCoinIds.length\");\r\n        require(_total == _origins.length, \"!_origins.length\");\r\n\r\n        for (uint256 i = 0; i < _total; i++) {\r\n            setOriginMovingLeverage(_pids[i], _curveCoinIds[i], _origins[i]);\r\n        }\r\n    }\r\n\r\n    function get(uint256 _pid, int128 _coinId)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return movingLeverages[_pid][_coinId].origin;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"curveCoinId\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"SetOriginMovingLeverage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"_coinId\",\"type\":\"int128\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"name\":\"movingLeverages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"origin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"_curveCoinId\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"_origin\",\"type\":\"uint256\"}],\"name\":\"setOriginMovingLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_pids\",\"type\":\"uint256[]\"},{\"internalType\":\"int128[]\",\"name\":\"_curveCoinIds\",\"type\":\"int128[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_origins\",\"type\":\"uint256[]\"}],\"name\":\"setOriginMovingLeverageBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MovingLeverageBase", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000063b8c91dd55626db091da26ba96bd8dd3f36820b", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://db01e3fcd513878b6957ba84bc940edee08b23ad4cacff56529894876f8cf9be"}]}