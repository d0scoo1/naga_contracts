{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/ConvexPoolRegistry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\n\\r\\ninterface ConvexCurvePools{\\r\\n    function poolInfo(uint256 _pid) external returns(address _lptoken, address _token, address _gauge, address _crvRewards, address _stash, bool _shutdown);\\r\\n}\\r\\n\\r\\ninterface ConvexWrapper{\\r\\n    function convexPoolId() external returns(uint256 _poolId);\\r\\n}\\r\\n\\r\\n/*\\r\\nModule that maps a convex staking token to convex pool information such as lp token, convex deposit token, pool id, etc\\r\\n*/\\r\\ncontract ConvexPoolRegistry{\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 poolId;\\r\\n        address lptoken;\\r\\n        address token;\\r\\n        address gauge;\\r\\n        address crvRewards;\\r\\n    }\\r\\n\\r\\n    address public constant owner = address(0xa3C5A1e09150B75ff251c1a7815A07182c3de2FB);\\r\\n    address public constant convexCurveBooster = address(0xF403C135812408BFbE8713b5A23a04b3D48AAE31);\\r\\n\\r\\n    mapping(address => PoolInfo) public poolMapping; //map wrapped token to convex pool\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    /////// Owner Section /////////\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"!auth\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //set platform fees\\r\\n    function addPoolInfo(address _wrapperToken) external onlyOwner{\\r\\n\\r\\n        uint256 convexPid = ConvexWrapper(_wrapperToken).convexPoolId();\\r\\n        require(convexPid > 0, \\\"!pid\\\");\\r\\n\\r\\n        (address _lptoken, address _token, address _gauge, address _crvRewards, , ) = ConvexCurvePools(convexCurveBooster).poolInfo(convexPid);\\r\\n    \\r\\n        //set pool mapping\\r\\n        poolMapping[_wrapperToken] = PoolInfo({\\r\\n            poolId: convexPid,\\r\\n            lptoken: _lptoken,\\r\\n            token: _token,\\r\\n            gauge: _gauge,\\r\\n            crvRewards: _crvRewards\\r\\n        });\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrapperToken\",\"type\":\"address\"}],\"name\":\"addPoolInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexCurveBooster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolMapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lptoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"crvRewards\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ConvexPoolRegistry", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}