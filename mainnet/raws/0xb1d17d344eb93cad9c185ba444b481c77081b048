{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IWETH9 {\r\n  function deposit() external payable;\r\n\r\n  function withdraw(uint256) external;\r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface ISwapRouter {\r\n  struct ExactInputParams {\r\n    bytes path;\r\n    address recipient;\r\n    uint256 deadline;\r\n    uint256 amountIn;\r\n    uint256 amountOutMinimum;\r\n  }\r\n\r\n  function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n  struct ExactOutputParams {\r\n    bytes path;\r\n    address recipient;\r\n    uint256 deadline;\r\n    uint256 amountOut;\r\n    uint256 amountInMaximum;\r\n  }\r\n\r\n  function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\r\n}\r\n\r\ncontract TRADE {\r\n  ISwapRouter public Router = ISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\r\n  IWETH9 public WETH = IWETH9(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n  address public owner;\r\n\r\n  constructor() {\r\n    owner = msg.sender;\r\n    WETH.approve(address(Router), type(uint256).max);\r\n  }\r\n\r\n  function approveToken(address token) external {\r\n    require(msg.sender == owner);\r\n    IERC20(token).approve(address(Router), type(uint256).max);\r\n  }\r\n\r\n  function exactInput_outputETH(\r\n    bytes calldata path,\r\n    address tokenIn,\r\n    address recipient,\r\n    uint256 amountIn,\r\n    uint256 amountOutMin\r\n  ) external {\r\n    require(msg.sender == owner);\r\n    IERC20(tokenIn).transferFrom(owner, address(this), amountIn);\r\n    ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\r\n      path: path,\r\n      recipient: address(this),\r\n      deadline: block.timestamp,\r\n      amountIn: amountIn,\r\n      amountOutMinimum: amountOutMin\r\n    });\r\n    Router.exactInput(params);\r\n    uint256 balance = WETH.balanceOf(address(this));\r\n    WETH.withdraw(balance);\r\n    payable(recipient).transfer(balance);\r\n  }\r\n\r\n  function exactOutput_inputETH(\r\n    bytes calldata path,\r\n    address recipient,\r\n    uint256 amountOut,\r\n    uint256 amountInMax\r\n  ) external payable {\r\n    require(msg.sender == owner);\r\n    if (msg.value > 0) {\r\n      amountInMax += msg.value;\r\n      WETH.deposit{value: msg.value}();\r\n    }\r\n    ISwapRouter.ExactOutputParams memory params = ISwapRouter.ExactOutputParams({\r\n      path: path,\r\n      recipient: recipient,\r\n      deadline: block.timestamp,\r\n      amountOut: amountOut,\r\n      amountInMaximum: amountInMax\r\n    });\r\n    Router.exactOutput(params);\r\n  }\r\n\r\n  function getETH() external {\r\n    uint256 balance = WETH.balanceOf(address(this));\r\n    WETH.withdraw(balance);\r\n    payable(owner).transfer(balance);\r\n  }\r\n\r\n  receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Router\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH9\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"exactInput_outputETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"}],\"name\":\"exactOutput_inputETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TRADE", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://79f515cf37a66f42472a27f2acd0995ebd882e4d07327b6150c2e37e5109819b"}]}