{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/NovaUpgradeProposal.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\npragma experimental ABIEncoderV2;\\n\\ninterface IUpgradeableProxy {\\n    function upgradeTo(address newImplementation) external;\\n}\\n\\ninterface IAMB {\\n    function requireToPassMessage(\\n        address _contract,\\n        bytes calldata _data,\\n        uint256 _gas\\n    ) external returns (bytes32);\\n}\\n\\ncontract NovaUpgradeProposal {\\n    event MessagePassed(bytes32 msgId);\\n\\n    address public immutable novaProxy;\\n    address public immutable newNovaImpl;\\n    IAMB public immutable bridge;\\n    uint256 public immutable gasLimit;\\n\\n    constructor(\\n        address _novaProxy,\\n        address _newNovaImpl,\\n        address _bridge,\\n        uint256 _gasLimit\\n    ) public {\\n        novaProxy = _novaProxy;\\n        newNovaImpl = _newNovaImpl;\\n        bridge = IAMB(_bridge);\\n        gasLimit = _gasLimit;\\n    }\\n\\n    function executeProposal() external {\\n        bytes4 methodSelector = IUpgradeableProxy(address(0)).upgradeTo.selector;\\n        bytes memory data = abi.encodeWithSelector(methodSelector, newNovaImpl);\\n        bytes32 msgId = bridge.requireToPassMessage(novaProxy, data, gasLimit);\\n        emit MessagePassed(msgId);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_novaProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newNovaImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"msgId\",\"type\":\"bytes32\"}],\"name\":\"MessagePassed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"contract IAMB\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newNovaImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"novaProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NovaUpgradeProposal", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000d692fd2d0b2fbd2e52cfa5b5b9424bc981c306960000000000000000000000000cdd3705af7979fbe80a64288ebf8a9fe1151ce10000000000000000000000004c36d2919e407f0cc2ee3c993ccf8ac26d9ce64e0000000000000000000000000000000000000000000000000000000000030d40", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}