{"status": "1", "message": "OK", "result": [{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.2;\r\n\r\ncontract MincedMeat{\r\n\r\n    using SafeMath for uint256;\r\n    mapping(address => bool) public owners;        // \u7ba1\u7406\u5458\r\n    mapping(address => bool) public allowCallers;  // \u5141\u8bb8\u8c03\u7528transactionChannel\u7684\u5408\u7ea6\u5730\u5740\r\n    mapping(address => uint256) public serviceCharges;  // \u624b\u7eed\u8d39\u8bbe\u7f6e\r\n    string public prefix = \"\\x19Ethereum Signed Message:\\n32\";\r\n    ERC20 erc20;\r\n\r\n    constructor() public{\r\n        owners[msg.sender] = true;\r\n    }\r\n\r\n    // \u4ea4\u6613\u7ba1\u9053\r\n    function transactionChannel(address[] memory _from,address[] memory _to,uint256[] memory _value,bytes32[] memory _r,bytes32[] memory _s,uint8[] memory _v,address _contractAddress) public onlyAllowCallers{\r\n        erc20 = ERC20(_contractAddress);\r\n        uint256 serviceCharge = serviceCharges[_contractAddress];\r\n        if(serviceCharges[_contractAddress] == 0){\r\n            for(uint256 i=0; i<_from.length; i++){\r\n                _sendTransaction(_from[i],_to[i],_value[i],_r[i],_s[i],_v[i],_contractAddress);\r\n            }\r\n        }else{\r\n            for(uint256 i=0; i<_from.length; i++){\r\n                if(erc20.balanceOf(_from[i]) >= _value[i] && getVerifySignatureResult(_from[i],_to[i],_value[i],_r[i],_s[i],_v[i],_contractAddress) == _from[i]){\r\n                    erc20.transferFrom(_from[i],tx.origin,serviceCharge);\r\n                    erc20.transferFrom(_from[i],_to[i],_value[i].sub(serviceCharge));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // \u9a8c\u8bc1\u5e76\u53d1\u9001\u8f6c\u8d26\u4ea4\u6613\r\n    function _sendTransaction(address _from,address _to,uint256 _value,bytes32 _r,bytes32 _s,uint8 _v,address _contractAddress) private{\r\n        if(getVerifySignatureResult(_from,_to,_value, _r, _s, _v,_contractAddress) == _from){\r\n            erc20.transferFrom(_from,_to,_value);\r\n        }\r\n    }\r\n\r\n    // \u67e5\u770b\u4ea4\u6613\u7b7e\u540d\u5bf9\u5e94\u7684\u5730\u5740\r\n    function getVerifySignatureResult(address _from,address _to,uint256 _value,bytes32 _r,bytes32 _s,uint8 _v,address _contractAddress) public view returns(address){\r\n        return ecrecover(getSha3Result(_from,_to,_value,_contractAddress), _v, _r, _s);\r\n    }\r\n\r\n    // \u67e5\u770b\u968f\u673a\u6570\u7b7e\u540d\u5bf9\u5e94\u7684\u5730\u5740\r\n    function getVerifySignatureByRandom(bytes memory _random,bytes32 _r,bytes32 _s,uint8 _v) public view returns(address){\r\n        return ecrecover(keccak256(abi.encodePacked(prefix,keccak256(abi.encodePacked(_random)))),_v,_r,_s);\r\n    }\r\n\r\n    // \u83b7\u53d6sha3\u52a0\u5bc6\u7ed3\u679c\r\n    function getSha3Result(address _from,address _to,uint256 _value,address _contractAddress) public view returns(bytes32){\r\n        return keccak256(abi.encodePacked(prefix,keccak256(abi.encodePacked(_from,_to,_value,_contractAddress))));\r\n    }\r\n\r\n    // \u66f4\u65b0\u5408\u7ea6\u624b\u7eed\u8d39\r\n    function addServiceCharge(address _contractAddress,uint256 _serviceCharge) public onlyOwner{\r\n        serviceCharges[_contractAddress] = _serviceCharge;\r\n    }\r\n\r\n    // \u589e\u52a0\u5141\u8bb8\u8c03\u7528\u7ba1\u9053\u7684\u5408\u7ea6\u5730\u5740\r\n    function addCaller(address _caller) public onlyOwner{\r\n        allowCallers[_caller] = true;\r\n    }\r\n\r\n    // \u5220\u9664\u5141\u8bb8\u8c03\u7528\u7ba1\u9053\u7684\u5408\u7ea6\u5730\u5740\r\n    function removeCaller(address _caller) public onlyOwner{\r\n        allowCallers[_caller] = false;\r\n    }\r\n\r\n    // \u589e\u52a0\u7ba1\u7406\u5458\r\n    function addOwner(address _owner) public onlyOwner{\r\n        owners[_owner] = true;\r\n    }\r\n\r\n    // \u5220\u9664\u7ba1\u7406\u5458\r\n    function removeOwner(address _owner) public onlyOwner{\r\n        owners[_owner] = false;\r\n    }\r\n\r\n    //  \u4ec5\u9650\u7ba1\u7406\u5458\u64cd\u4f5c\r\n    modifier onlyOwner(){\r\n        require(owners[msg.sender], 'No authority');\r\n        _;\r\n    }\r\n\r\n    //  \u4ec5\u5141\u8bb8\u6307\u5b9a\u5730\u5740\u8c03\u7528\r\n    modifier onlyAllowCallers(){\r\n        require(allowCallers[msg.sender],'No call permission');\r\n        _;\r\n    }\r\n}\r\n\r\ninterface ERC20{\r\n    function transferFrom(address _from, address _to, uint256 _value) external;\r\n    function balanceOf(address) external returns(uint256);\r\n}\r\nlibrary SafeMath {\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a,\"When sub, a must be greater than b\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"addCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_serviceCharge\",\"type\":\"uint256\"}],\"name\":\"addServiceCharge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowCallers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getSha3Result\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_random\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"}],\"name\":\"getVerifySignatureByRandom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getVerifySignatureResult\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"removeCaller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"serviceCharges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_r\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_s\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_v\",\"type\":\"uint8[]\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"transactionChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MincedMeat", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c0ccc305452e0fef628e42e0a8b4b80961f644ae8a8068ccbb0054e836ed8314"}]}