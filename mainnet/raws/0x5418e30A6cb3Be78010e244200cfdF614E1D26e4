{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/addLiquidity.sol\": {\r\n      \"content\": \"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                                                            //\\n//      NNNNNNNN        NNNNNNNN   ffffffffffffffff           tttt                                               iiii                         //\\n//      N:::::::N       N::::::N  f::::::::::::::::f       ttt:::t                                              i::::i                        //\\n//      N::::::::N      N::::::N f::::::::::::::::::f      t:::::t                                               iiii                         //\\n//      N:::::::::N     N::::::N f::::::fffffff:::::f      t:::::t                                                                            //\\n//      N::::::::::N    N::::::N f:::::f       ffffffttttttt:::::ttttttt      aaaaaaaaaaaaa  nnnn  nnnnnnnn    iiiiiii   aaaaaaaaaaaaa        //\\n//      N:::::::::::N   N::::::N f:::::f             t:::::::::::::::::t      a::::::::::::a n:::nn::::::::nn  i:::::i   a::::::::::::a       //\\n//      N:::::::N::::N  N::::::Nf:::::::ffffff       t:::::::::::::::::t      aaaaaaaaa:::::an::::::::::::::nn  i::::i   aaaaaaaaa:::::a      //\\n//      N::::::N N::::N N::::::Nf::::::::::::f       tttttt:::::::tttttt               a::::ann:::::::::::::::n i::::i            a::::a      //\\n//      N::::::N  N::::N:::::::Nf::::::::::::f             t:::::t              aaaaaaa:::::a  n:::::nnnn:::::n i::::i     aaaaaaa:::::a      //\\n//      N::::::N   N:::::::::::Nf:::::::ffffff             t:::::t            aa::::::::::::a  n::::n    n::::n i::::i   aa::::::::::::a      //\\n//      N::::::N    N::::::::::N f:::::f                   t:::::t           a::::aaaa::::::a  n::::n    n::::n i::::i  a::::aaaa::::::a      //\\n//      N::::::N     N:::::::::N f:::::f                   t:::::t    tttttta::::a    a:::::a  n::::n    n::::n i::::i a::::a    a:::::a      //\\n//      N::::::N      N::::::::Nf:::::::f                  t::::::tttt:::::ta::::a    a:::::a  n::::n    n::::ni::::::ia::::a    a:::::a      //\\n//      N::::::N       N:::::::Nf:::::::f                  tt::::::::::::::ta:::::aaaa::::::a  n::::n    n::::ni::::::ia:::::aaaa::::::a      //\\n//      N::::::N        N::::::Nf:::::::f                    tt:::::::::::tt a::::::::::aa:::a n::::n    n::::ni::::::i a::::::::::aa:::a     //\\n//      NNNNNNNN         NNNNNNNfffffffff                      ttttttttttt    aaaaaaaaaa  aaaa nnnnnn    nnnnnniiiiiiii  aaaaaaaaaa  aaaa     //\\n//                                                                                                                                            //  \\n//                                                                                                                                            //  \\n//                                                           :?5PPPPPPPPPPPPPPPPPPPPPPPPPP5?:                                                 //  \\n//                                                          :&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&:                                                //  \\n//                                                          :#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:                                                //  \\n//                                                           .7Y5555555555&@@@@&5555555555Y7.                                                 //  \\n//                                                                        #@@@@#                                                              //  \\n//                                                                       .#@@@@#.                                                             //  \\n//                                                                       .#@@@@#.                                                             //  \\n//                                                                        #@@@@#                                                              //  \\n//                                                                     .:~&@@@@#~:.                                                           //  \\n//                                                                 ^75B#@@@@@@@@@@&B5?^                                                       //  \\n//                                                              :JB@@@@@@@@@@@@@@@@@@@@BJ^                                                    //  \\n//                                                            ^5@@@@@@@@@@@@@@@@@@@@@@@@@@P^                                                  //  \\n//                                                           J&@@@@@&&&&&&@@@&BBGB#&@@@@@@@@J                                                 //  \\n//                                                          P@@@@@@B::::.~BJ^.    .:7G@@@@@@@P.             .~~~~^                            //  \\n//                                                         5@@@@@@@B      .           5@@@@@@@P.            5@@@@@7                           //  \\n//                                 :75PGGGGGGGGGGGGGGGGGGGB@@@@@@@@B      .?PGGY:     ^@@@@@@@@#BBBBBBBBBBBB&@@@@@J                           //  \\n//                                J&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B      P@@@@@Y     .&@@@@@@@@@@@@@@@@@@@@@@@@@@J                           //  \\n//                               J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B      #@@@@@5     .&@@@@@@@@@@@@@@@@@@@@@@@@@@J                           //  \\n//                               P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B     .#@@@@@5     .&@@@@@@@@@@@@@@@@@@@@@@@@@@J                           //  \\n//                               P@@@@@@@@@@GP555555555555G@@@@@@@@B     .#@@@@@5     .&@@@@@@@GPPPPPPPPP555&@@@@@J                           //  \\n//                               P@@@@@@@@#^               J@@@@@@@B      #@@@@@5     .&@@@@@@Y             Y@@@@@7                           //  \\n//                               P@@@@@@@@G                 Y@@@@@@B     .#@@@@@5     :&@@@@@5               :^^^:                            //  \\n//                               P@@@@@@@@G                  7&@@@@&BBBBBB@@@@@@&BBBBB#@@@@&?                                                 //  \\n//                               P@@@@@@@@G                   :Y&@@@@@@@@@@@@@@@@@@@@@@@@&Y:                                                  //  \\n//                               P@@@@@@@@G                     .7G&@@@@@@@@@@@@@@@@@@&G?:                                                    //  \\n//                            ^??B@@@@@@@@#J?^                     :!JPB&@@@@@@@@&BPJ!:                                                       //  \\n//                            B@@@@@@@@@@@@@@B                          .:^~~~~^:.                                                            //  \\n//                            7PPPPPP5GP5PPPP7                                                                                                //  \\n//                                  :J#P!                                                                                                     //  \\n//                                ^5&@@@@B7.                                                                                                  //  \\n//                              ^5@@@@@@@@@B7                                                                                                 //  \\n//                            :Y&@@@@@@@@@@@@B!                                                                                               //  \\n//                           7#@@@@@@@@@@@@@@@@P^                                                                                             //  \\n//                         ^G@@@@@@@@@@@@@@@@@@@&?                                                                                            //  \\n//                        7&@@#5PP5G@#PJJJYP#@@@@@G:                                                                                          //  \\n//                       Y@@@@P    :~       .J@@@@@#^                                                                                         //  \\n//                      Y@@@@@P     .?YJ!     P@@@@@&^                                                                                        //  \\n//                     7@@@@@@P    .B@@@@^    Y@@@@@@B.                                                                                       //  \\n//                     B@@@@@@P    ^@@@@@~    Y@@@@@@@7                                                                                       //  \\n//                    .#@@@@@@P    :@@@@@~    Y@@@@@@@?                                                                                       //  \\n//                     P@@@@@@P    :@@@@@~    Y@@@@@@@~                                                                                       //  \\n//                     ^@@@@@@G .. ^@@@@@! .. Y@@@@@@P                                                                                        //  \\n//                      7@@@@@&#####@@@@@#####&@@@@@G.                                                                                        //  \\n//                       ~B@@@@@@@@@@@@@@@@@@@@@@@@J                                                                                          //  \\n//                         7B@@@@@@@@@@@@@@@@@@@&5^                                                                                           //  \\n//                           ^JG&@@@@@@@@@@@@#57:                                                                                             //  \\n//                              .^!?YY55YJ7~:.                                                                                                //  \\n//                                                                                                                                            //  \\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    \\n\\n// SPDX-License-Identifier: MIT\\n\\n// @title: Nftania NFT2.0\\n// @author: Nftania.com\\n// @custom: security-contact info@nftania.com\\n// @Contract: Nftania Add Liquidity\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract NftaniaAddLiquidity {\\n    using SafeERC20 for IERC20;\\n    address private constant FACTORY = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;  \\n    address private constant ROUTER = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\n    address private constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n    address private token;\\n    address public beneficiary;\\n    address public pairAddress;\\n  \\n    event LiquidityAdded(uint amountToken, uint amountETH, uint256 amountliquidity, uint256 totalLiquidity, address pairAddress);\\n    event LiquidityDetails(address pairAddress, uint256 amountETH);\\n\\n    fallback() external payable {} // used in the beneficiary contract\\n    receive()  external payable {} // used in the beneficiary contract\\n  \\n    function addLiquidityETH (address _token, uint tokenAmount, uint EthAmount, address _beneficiary ) external payable \\n        returns (uint amountToken, uint amountETH, uint amountliquidity, uint totalLiquidity, address _pairAddress) {\\n        require (_beneficiary != address(0),\\\"beneficiary cannot be the address of zero\\\");\\n        require (_token != address(0),\\\"token cannot be the address of zero\\\");\\n        token = _token;\\n        beneficiary = _beneficiary;\\n        IERC20(token).safeTransferFrom(msg.sender, address(this), tokenAmount); // add tokens to liquidty creation contract        \\n        IERC20(token).safeIncreaseAllowance(ROUTER, tokenAmount);                         // approve router contract to spend tokens \\n\\n        (amountToken, amountETH, amountliquidity) = \\n        IUniswapV2Router(ROUTER).addLiquidityETH {value:EthAmount} (\\n          token,              // token Address\\n          tokenAmount,        // tokens amount to be added\\n          0,                  // min tokens to be added\\n          0,                  // min tokens to be added\\n          beneficiary,      // liquidity tokens recieving address\\n          block.timestamp+120 // Deadline for liquidty addition\\n        ); \\n\\n        pairAddress = IUniswapV2Factory(FACTORY).getPair(token, WETH);\\n        totalLiquidity = IERC20(pairAddress).balanceOf(beneficiary);\\n        emit LiquidityAdded(amountToken, amountETH, amountliquidity, totalLiquidity, pairAddress);\\n        return (amountToken, amountETH, amountliquidity, totalLiquidity, pairAddress);\\n    }\\n}\\n\\ninterface IUniswapV2Router {\\n    function getAmountsOut(uint amountIn, address[] memory path)\\n    external\\n    view\\n    returns (uint[] memory amounts);\\n\\n  function addLiquidityETH(\\n    address token,\\n    uint amountTokenDesired,\\n    uint amountTokenMin,\\n    uint amountETHMin,\\n    address to,\\n    uint deadline\\n    ) \\n    external payable \\n    returns (\\n      uint amountToken, \\n      uint amountETH, \\n      uint liquidity\\n    );\\n }\\n\\ninterface IUniswapV2Pair {\\n  function token0() external view returns (address);\\n\\n  function token1() external view returns (address);\\n\\n  function getReserves()\\n    external\\n    view\\n    returns (\\n      uint112 reserve0,\\n      uint112 reserve1,\\n      uint32 blockTimestampLast\\n    );\\n\\n  function swap(\\n    uint amount0Out,\\n    uint amount1Out,\\n    address to,\\n    bytes calldata data\\n  ) external;\\n }\\n\\ninterface IUniswapV2Factory {\\n  function getPair(address token0, address token1) external view returns (address);\\n }\"\r\n    },\r\n    \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/utils/SafeERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountliquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"name\":\"LiquidityDetails\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EthAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountliquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_pairAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "NftaniaAddLiquidity", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}