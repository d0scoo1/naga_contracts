{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"main.sol\": {\r\n      \"content\": \"\\npragma solidity>0.8.0;//SPDX-License-Identifier:None\\ninterface IERC721{\\n    event Transfer(address indexed from,address indexed to,uint indexed tokenId);\\n    event Approval(address indexed owner,address indexed approved,uint indexed tokenId);\\n    event ApprovalForAll(address indexed owner,address indexed operator,bool approved);\\n    function balanceOf(address)external view returns(uint);\\n    function ownerOf(uint)external view returns(address);\\n    function safeTransferFrom(address,address,uint)external;\\n    function transferFrom(address,address,uint)external;\\n    function approve(address,uint)external;\\n    function getApproved(uint)external view returns(address);\\n    function setApprovalForAll(address,bool)external;\\n    function isApprovedForAll(address,address)external view returns(bool);\\n    function safeTransferFrom(address,address,uint,bytes calldata)external;\\n}\\ninterface IERC721Metadata{\\n    function name()external view returns(string memory);\\n    function symbol()external view returns(string memory);\\n    function tokenURI(uint)external view returns(string memory);\\n}\\ncontract LSG is IERC721,IERC721Metadata{\\n    uint public count;\\n    address private _owner;\\n    enum Pause{YES,NO}\\n    Pause status=Pause.YES;\\n    mapping(address=>uint)private _balances;\\n    mapping(uint=>address)private _owners;\\n    mapping(uint=>address)private _tokenApprovals;\\n    mapping(address=>mapping(address=>bool))private _operatorApprovals;\\n    constructor(){\\n        _owner=msg.sender;\\n    }\\n    function MINT(uint n)external{unchecked{\\n        require(status==Pause.NO);\\n        require(count<3334&&n<11);\\n        _balances[msg.sender]+=n;\\n        for(uint i=0;i<n;i++){\\n            (count++,_owners[count]=msg.sender);\\n            emit Transfer(address(0),msg.sender,count);\\n        }\\n    }}\\n    function supportsInterface(bytes4 a)external pure returns(bool){\\n        return a==type(IERC721).interfaceId||a==type(IERC721Metadata).interfaceId;\\n    }\\n    function balanceOf(address a)external view override returns(uint){\\n        return _balances[a];\\n    }\\n    function ownerOf(uint a)public view override returns(address){\\n        return _owners[a]; \\n    }\\n    function owner()external view returns(address){\\n        return _owner;\\n    }\\n    function name()external pure override returns(string memory){\\n        return\\\"Lunatic Support Group\\\";\\n    }\\n    function symbol()external pure override returns(string memory){\\n        return\\\"LSG\\\";\\n    }\\n    function approve(address a,uint b)external override{\\n        require(msg.sender==ownerOf(b)||isApprovedForAll(ownerOf(b),msg.sender));\\n        _tokenApprovals[b]=a;\\n        emit Approval(ownerOf(b),a,b);\\n    }\\n    function getApproved(uint a)public view override returns(address){\\n        return _tokenApprovals[a];\\n    }\\n    function setApprovalForAll(address a,bool b)external override{\\n        _operatorApprovals[msg.sender][a]=b;\\n        emit ApprovalForAll(msg.sender,a,b);\\n    }\\n    function isApprovedForAll(address a,address b)public view override returns(bool){\\n        return _operatorApprovals[a][b];\\n    }\\n    function transferFrom(address a,address b,uint c)public override{unchecked{\\n        require(a==ownerOf(c)||getApproved(c)==a||isApprovedForAll(ownerOf(c),a));\\n        (_tokenApprovals[c]=address(0),_balances[a]-=1,_balances[b]+=1,_owners[c]=b);\\n        emit Approval(ownerOf(c),b,c);\\n        emit Transfer(a,b,c);\\n    }}\\n    function safeTransferFrom(address a,address b,uint c)external override{\\n        transferFrom(a,b,c);\\n    }\\n    function safeTransferFrom(address a,address b,uint c,bytes memory)external override{\\n        transferFrom(a,b,c);\\n    }\\n    function tokenURI(uint a)external pure override returns(string memory){unchecked{\\n        string memory b=\\\"0\\\";\\n        if(a>0){\\n            uint256 temp=a;\\n            uint256 digits;\\n            while(temp!=0)(digits++,temp/=10);\\n            bytes memory buffer=new bytes(digits);\\n            while(a!=0)(digits-=1,buffer[digits]=bytes1(uint8(48+uint256(a%10))),a/=10);\\n            b=string(buffer);\\n        }\\n        return string(abi.encodePacked(\\\"ipfs://QmNevbpJQhSPmDJhBDhDnyc4RUhCPvNSsFjLyyzNxsh47D/\\\",b,\\\".json\\\"));\\n    }} \\n    function TogglePause()external{\\n        require(_owner==msg.sender);\\n        status=status==Pause.NO?Pause.YES:Pause.NO;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 5000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"MINT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TogglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"a\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LSG", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "5000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}