{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: UNLICENSED\r\n\r\n\r\n/*\r\n\r\n\u9453\u5875\u5e57\u8182\u84fff\u5be5\u5be2\u8183\u66a0\u7609\u7505\u7503\u69ca\u69cef\u78a3\u7dae\u760b\u805f\u78af\u98b1\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u6fa3\u5e57\u5d8c\u5879\u50b4\u5ae9\u699b\u755d\u768bi\u888d\u8018\u868c\u7d15\u6b12\u513c\u5dd3\u8974\u8e1f\u7bc1f\u7f75f\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u6f32\u852d\u7503\u7e1f\u8adbf\u9ead\u7ab6\u81a9I\u5dae\u85a4\u7bdd\u7230\u66f7\u6a14\u9ece\u3322\u00b4\u3000\u3000\uff40\u2177\u8e1f\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u8515\u6f13\u6efff\u8553\u87c7\u8e34f\u6b59\u8247\u8240\u88f2f\u775a\u9ceb\u5dd3\u8974\u9ab8\u3000\u3000\u3000\u3000\u3000\u8d12\u618a\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u698a\u7503\u9f4a\u7230f\u61c8\u6a48\u71d7\u6baa\u5e62\u7dfbI\u7ff0\u5102\u6a14\u9ece\u5922'\u201d\u3000 \u3000 ,\uff68\u50be\u7be9\u7e12\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u7b8b\u805a\u871a\u58ca\u5291\u85afi\u66b9\u76e5\u768b\u888di\u8018\u868c\u7d15\u5078\u2032\u3000\u3000\u3000 \u96eb\u5becI\u7230\u66f7f\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u9295\u98b1\u9ebc\u5bf0\u7bdd\u8782\u5f91\u6097f\u7bdd\u56a0\u7be9i\u7e12\u7e21\u9f62\u3000\u3000 \u3000 \u3000 \u2167\u8fa8f\u7bddI\u92d7f\u4ea6\u5c13\u334di:i:i;;:; : : .\r\n\u78af\u805ff\u7db4\u9ebc\u8fa8\u87a2f\u749f\u8f2f\u99f2f\u8fef\u74f2i\u8ecc\u5e36\u2032\u3000\u3000\u3000\u3000\u3000`\u5b88I\u5396\u5b69f\u594e\u4ea6\u5c13\u334di:i:i;;:;:: : : .\r\n\u7dae\u8aa3\u6492f\u66f7\u78d4\u7469\u5fb7f\u5e62\u5102\u513c\u5dd3\u8974\u7df2\u2032\u3000 \u3000 \u3000 \u3000 \u3000 `\u5b88\u67a2i\u78ec\u5edbi\u4ea6\u5c13\u334di:i:i;;:;:: : : .\r\n\u616b\u5beb\u5ee0\u5f91\u6097\u7ddef\u7bdd\u56a0\u7be9I\u7e12\u7e21\u5922'\u00b4\u3000\u3000\u3000 \u3000 \u3000 \u3000 \u3000 \u3000 `\u5b88\u5cfdf\u5f91\u6097f\u4ea6\u5c13\u334di:i:i;;:;:: : : .\r\n\u5edb\u50f5I\u6578\u755d\u7be5I\u71be\u9f8d\u868c\u7d15\u8974\u7df2\u2032\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2018\u5b88\u755d\u768b\u5f0ai\u528d\u4ea6\u5c13\u334di:i:i;;:;:: : : .\r\n\u7627i\u69f2\u7469f\u67a2\u7bdd\u78ec\u66f7f\u74f2\u8ecc\u63c4\u2032\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000,gf\u6bef\u7db4\u5f91\u6097\u56a0\u8fe9\u5fd9\u4ea6\u5c13\u334di:i:i;;:;:: : :\r\n\u8974\u7f69\u787cf\u8247\u8240\u88f2\u775a\u9ceb\u8974\u947f\u7df2'\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000 \u3000 \u596a\u5bd4f\u53a6\u5080\u63f5\u732fi\u723e\u8fe9\u5fd9\u4ea6\u5c13\u334di:i:i;;:;\r\n\u6908\u68d8\u6590\u7280\u800b\u7d4e\u7d72\u7d68\u7df2\u2032\u3000\u3000\u3000\u3000\u3000\u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u201d'\u7f68\u60b3\u842af\u8482\u6e39\u5e47f\u5ecf\u8fe9\u5fd9i\u4ea6\u5c13\u334d\r\n\u6f41\u6a17I\u7627\u5fb7\u5e62i\u5102\u5dd3\u7df2\u2032\u3000\u3000\u3000\u3000\u3000\u3000 \u3000 \u3000 \u3000 \u3000 \u3000 \u3000 r\u33a1\u2121\u301f\u201d'\u7f68\u6901\u88c2\u6ec5\u6954\u6ec4\u613c\u6130\u8fe9\u5fd9\u4ea6\r\n\u7fe6i\u78c5\u8258\u6eb2I\u6426\u513c\u5dd3\u767bzzz zzz\u339c\u339c\uff67g\u3000 \u3000 \u7df2 g\u3000 \u3000 \u752f\u9ad4i\u723a\u308e\uff61, \u201d'\u7f68\u7425\u711c\u6bf3\u5fadi\u5d6c\u5870\u614d\u7d72\r\n\u67a2\u7bdd\u78ecf\u66f7\u8fefi\u74f2\u8eccf\u8974\u66b9 \u752f\u5e57\u7df2 ,fi'\u3000\u3000 \u7df2',\u7e9c\uff61\u3000\u3000\u8d12i\u7d9f\u7895\u789a\u723a\u308e\uff61 \u201d'\u7f68\u76b4\u767c\u50b2\u4e82I\u9ef9\u9771\r\n\u7dde\u613e\u614a\u5d6c\u5d6f\u6b12\u513c\u5dd3\u8974\u9a6b \u9724I\u7df2 ,\u7df2\u3000\u3000 \uff02,\u7e9c\u7a50\u3000\u3000\u752f\u7d5b\u8de8\u98e9i\u9ae2\u99b3\u723a\u308e\uff61`'\u7b49\u8a84I\u7b74\u788cI\u7577\r\n\u7f69\u787cI\u84bb\u7b75\u787a\u8247\u8240i\u88f2\u775a\u4e80 \u7bf3'\u2019,\u7df2\u3000\u3000g\u4e80 \u2166il\u9f62\u3000\u3000\u8d12\u7f69\u787ci\u8247\u8240\u88f2\u775a\u9ceb\u723a\u9760\u98ed\u86f8I\u88d8\u88d4\r\n\u6908f\u68d8\u8c62\u8deb\u8deaI\u8859\u7d4e\u7d72\u7d68i\u723ai\u339ci\u2163 \u3000 ,\u7df2i\u4e80 \u2166\u9748,\u3000\u3000\u752f\u5085\u55a9I\u63f5\u63da\u60f9\u5c61\u7d4e\u75d9\u68cf\u655e\u88d4\u7b74\u6562\r\n\u982ci\u978f\u8902f\u8deb\u8a79\u96cb\u9ae2i\u66f7\u8fef\u74f2\u8ecc\u9724 \u3000 ,\u7df2\u852d\u7a50 \u2166\u7a50 \u3000 \u8b8e\u6908i\u68d8\u8c85f\u6590\u7280\u800bf\u7d4e\u7d72\u89daf\u8983\u9ef9\u9ecd\r\n\u8974\u853d\u622e\u8cb2\u8240\u8205I\u8085\u8084\u8086\u69fff\u8753\u2167 \u3000 \u7df2$\u615aI\u7a50,\u758a\u7a50\u3000 \u752f\u842a\u78bef\u92d7\u8f1c\u9760f\u8ab9\u81e7\u92e9f\u8902\u8deb\u8a79i\u96cb\r\n\u92d0\u7bc6f\u7627\u8711\u7b74\u88d4\u7f69\u7f67I\u7ddc\u5b75\u84fc\u2167\u3000 i\u9dc6\u5ae9\u69dei\u6b49\u76b8\u9c5a\u3000 \u5191\u7e21\u8adb\u8afa\u5f59\u6e98\u5d73\u52e0\u5c20\u9323\u7db4\u9ebc\u8fa8\u87a2\r\n\r\nTiny Levi presents you the cleanest and the most degenerate degen token you ever made. \r\n\r\nhttps://t.me/tinyleviinu\r\n\r\n*/\r\npragma solidity ^0.8.10;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}  \r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract TINYLEVI is Context, IERC20, Ownable {\r\n    mapping (address => uint) private _owned;\r\n    mapping (address => mapping (address => uint)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping (address => bool) private _isBot;\r\n    uint private constant _totalSupply = 1e9 * 10**9;\r\n\r\n    string public constant name = unicode\"Tiny Levi Inu\";\r\n    string public constant symbol = unicode\"TINYLEVI\";\r\n    uint8 public constant decimals = 9;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n\r\n    address payable public _FeeCollectionADD;\r\n    address public uniswapV2Pair;\r\n    uint public _buyFee = 12;\r\n    uint public _sellFee = 12;\r\n    uint private _feeRate = 15;\r\n    uint public _maxHeldTokens;\r\n\r\n    uint public _launchedAt;\r\n    bool private _tradingOpen;\r\n    bool private _inSwap = false;\r\n    bool public _useImpactFeeSetter = false;\r\n\r\n    struct User {\r\n        uint buy;\r\n        bool exists;\r\n    }\r\n\r\n    event FeeMultiplierUpdated(uint _multiplier);\r\n    event ImpactFeeSetterUpdated(bool _usefeesetter);\r\n    event FeeRateUpdated(uint _rate);\r\n    event FeesUpdated(uint _buy, uint _sell);\r\n    event TaxAddUpdated(address _taxwallet);\r\n    \r\n    modifier lockTheSwap {\r\n        _inSwap = true;\r\n        _;\r\n        _inSwap = false;\r\n    }\r\n    constructor (address payable TaxAdd) {\r\n        _FeeCollectionADD = TaxAdd;\r\n        _owned[address(this)] = _totalSupply;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[TaxAdd] = true;\r\n        emit Transfer(address(0), address(this), _totalSupply);\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint) {\r\n        return _owned[account];\r\n    }\r\n    function transfer(address recipient, uint amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n    \r\n    function totalSupply() public pure override returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) public override returns (bool) {\r\n       \r\n        _transfer(sender, recipient, amount);\r\n        uint allowedAmount = _allowances[sender][_msgSender()] - amount;\r\n        _approve(sender, _msgSender(), allowedAmount);\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint amount) private {\r\n        require(!_isBot[from]);\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        bool isBuy = false;\r\n        if(from != owner() && to != owner()) {\r\n            if(from == uniswapV2Pair && to != address(uniswapV2Router) && !_isExcludedFromFee[to]) {\r\n                require(_tradingOpen, \"Trading not yet enabled.\");\r\n                if((_launchedAt + (5 minutes)) > block.timestamp) {\r\n                    require((amount + balanceOf(address(to))) <= _maxHeldTokens); \r\n                }\r\n                isBuy = true;\r\n            }\r\n            if(!_inSwap && _tradingOpen && from != uniswapV2Pair) {\r\n                uint contractTokenBalance = balanceOf(address(this));\r\n                if(contractTokenBalance > 0) {\r\n                    if(_useImpactFeeSetter) {\r\n                        if(contractTokenBalance > (balanceOf(uniswapV2Pair) * _feeRate) / 100) {\r\n                            contractTokenBalance = (balanceOf(uniswapV2Pair) * _feeRate) / 100;\r\n                        }\r\n                    }\r\n                    uint burnAmount = contractTokenBalance/4;\r\n                    contractTokenBalance -= burnAmount;\r\n                    burnToken(burnAmount);\r\n                    swapTokensForEth(contractTokenBalance);\r\n                }\r\n                uint contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n                isBuy = false;\r\n            }\r\n        }\r\n        bool takeFee = true;\r\n        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]){\r\n            takeFee = false;\r\n        }\r\n        _tokenTransfer(from,to,amount,takeFee,isBuy);\r\n    }\r\n\r\n    function swapTokensForEth(uint tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n        \r\n    function sendETHToFee(uint amount) private {\r\n        _FeeCollectionADD.transfer(amount);\r\n    }\r\n\r\n    function burnToken(uint burnAmount) private lockTheSwap{\r\n        if(burnAmount > 0){\r\n            _transfer(address(this), address(0xdead),burnAmount);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    function _tokenTransfer(address sender, address recipient, uint amount, bool takefee, bool buy) private {\r\n        (uint fee) = _getFee(takefee, buy);\r\n        _transferStandard(sender, recipient, amount, fee);\r\n    }\r\n\r\n    function _getFee(bool takefee, bool buy) private view returns (uint) {\r\n        uint fee = 0;\r\n        if(takefee) {\r\n            if(buy) {\r\n                fee = _buyFee;\r\n            } else {\r\n                fee = _sellFee;\r\n            }\r\n        }\r\n        return fee;\r\n    }\r\n\r\n    function _transferStandard(address sender, address recipient, uint amount, uint fee) private {\r\n        (uint transferAmount, uint team) = _getValues(amount, fee);\r\n        _owned[sender] = _owned[sender] - amount;\r\n        _owned[recipient] = _owned[recipient] + transferAmount; \r\n        _takeTeam(team);\r\n        emit Transfer(sender, recipient, transferAmount);\r\n    }\r\n\r\n    function _getValues(uint amount, uint teamFee) private pure returns (uint, uint) {\r\n        uint team = (amount * teamFee) / 100;\r\n        uint transferAmount = amount - team;\r\n        return (transferAmount, team);\r\n    }\r\n\r\n    function _takeTeam(uint team) private {\r\n        _owned[address(this)] = _owned[address(this)] + team;\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n    function createNewPair() external onlyOwner() {\r\n        require(!_tradingOpen, \"Trading is already open\");\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Router = _uniswapV2Router;\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\r\n        \r\n    }\r\n\r\n    function addLiqNStart() external onlyOwner() {\r\n        require(!_tradingOpen, \"Trading is already open\");\r\n        _approve(address(this), address(uniswapV2Router), _totalSupply);\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        _tradingOpen = true;\r\n        _launchedAt = block.timestamp;\r\n        _maxHeldTokens = 200000000 * 10**9; \r\n\r\n\r\n    }\r\n\r\n    function manualswap() external {\r\n        uint contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }\r\n    \r\n    function manualsend() external {\r\n        uint contractETHBalance = address(this).balance;\r\n        sendETHToFee(contractETHBalance);\r\n    }\r\n\r\n    function setFeeRate(uint rate) external onlyOwner() {\r\n        require(_msgSender() == _FeeCollectionADD);\r\n        require(rate > 0, \"can't be zero\");\r\n        _feeRate = rate;\r\n        emit FeeRateUpdated(_feeRate);\r\n    }\r\n\r\n    function setFees(uint buy, uint sell) external onlyOwner() {\r\n        require(buy < _buyFee && sell < _sellFee);\r\n        _buyFee = buy;\r\n        _sellFee = sell;\r\n        emit FeesUpdated(_buyFee, _sellFee);\r\n    }\r\n\r\n    function toggleImpactFee(bool onoff) external onlyOwner() {\r\n        _useImpactFeeSetter = onoff;\r\n        emit ImpactFeeSetterUpdated(_useImpactFeeSetter);\r\n    }\r\n\r\n    function updateTaxAdd(address newAddress) external {\r\n        require(_msgSender() == _FeeCollectionADD);\r\n        _FeeCollectionADD = payable(newAddress);\r\n        emit TaxAddUpdated(_FeeCollectionADD);\r\n    }\r\n\r\n    function thisBalance() public view returns (uint) {\r\n        return balanceOf(address(this));\r\n    }\r\n\r\n    function amountInPool() public view returns (uint) {\r\n        return balanceOf(uniswapV2Pair);\r\n    }\r\n\r\n    function setBots(address[] memory bots_) external onlyOwner() {\r\n        for (uint i = 0; i < bots_.length; i++) {\r\n            if (bots_[i] != uniswapV2Pair && bots_[i] != address(uniswapV2Router)) {\r\n                _isBot[bots_[i]] = true;\r\n            }\r\n        }\r\n    }\r\n    function delBots(address[] memory bots_) external {\r\n        require(_msgSender() == _FeeCollectionADD);\r\n        for (uint i = 0; i < bots_.length; i++) {\r\n            _isBot[bots_[i]] = false;\r\n        }\r\n    }\r\n\r\n    function isBot(address ad) public view returns (bool) {\r\n        return _isBot[ad];\r\n    }\r\n    \r\n    \r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"TaxAdd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"FeeMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"FeeRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sell\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_usefeesetter\",\"type\":\"bool\"}],\"name\":\"ImpactFeeSetterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_taxwallet\",\"type\":\"address\"}],\"name\":\"TaxAddUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_FeeCollectionADD\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_launchedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxHeldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_useImpactFeeSetter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addLiqNStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"delBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"setBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sell\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thisBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"onoff\",\"type\":\"bool\"}],\"name\":\"toggleImpactFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateTaxAdd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TINYLEVI", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000a46d57c5b6b873c93946513cb431b16088d8894e", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7092956a5fa6100d15de87981f380e4a98f055ca8f227d02b5d043830b100c0b"}]}