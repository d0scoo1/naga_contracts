{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Overrides.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\nimport \\\"./Ownable.sol\\\";\\n\\ninterface ICalculations {\\n    function getPriceUsdc(address tokenAddress)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\\ninterface IYearnAddressesProvider {\\n    function addressById(string memory) external view returns (address);\\n}\\n\\ncontract CalculationsOverrides is Ownable {\\n    mapping(address => string) public calculationOverrides;\\n    address public addressesProviderAddress;\\n\\n    constructor(address _addressesProviderAddress) {\\n        addressesProviderAddress = _addressesProviderAddress;\\n    }\\n\\n    function setOverrideForToken(address tokenAddress, string memory addressesProviderId) public onlyOwner {\\n        calculationOverrides[tokenAddress] = addressesProviderId;\\n    }\\n\\n    function setAddressesProviderAddress(address _addressesProviderAddress) public onlyOwner {\\n        addressesProviderAddress = _addressesProviderAddress;\\n    }\\n\\n    function getPriceUsdc(address tokenAddress) public view returns (uint256) {\\n        string memory overrideId = calculationOverrides[tokenAddress];\\n        bool overrideSet = bytes(overrideId).length > 0;\\n        if (overrideSet) {\\n            address overrideAddress = IYearnAddressesProvider(addressesProviderAddress).addressById(overrideId);\\n            return ICalculations(overrideAddress).getPriceUsdc(tokenAddress);\\n        }\\n        revert();\\n    }\\n}\\n\"\r\n    },\r\n    \"Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.11;\\n\\n/*******************************************************\\n *                     Ownable\\n *******************************************************/\\ncontract Ownable {\\n    address public ownerAddress;\\n\\n    constructor() {\\n        ownerAddress = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == ownerAddress, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function setOwnerAddress(address _ownerAddress) public onlyOwner {\\n        ownerAddress = _ownerAddress;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressesProviderAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"addressesProviderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"calculationOverrides\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getPriceUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressesProviderAddress\",\"type\":\"address\"}],\"name\":\"setAddressesProviderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"addressesProviderId\",\"type\":\"string\"}],\"name\":\"setOverrideForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"setOwnerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CalculationsOverrides", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000009be19ee7bc4099d62737a7255f5c227fbcd6db93", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}