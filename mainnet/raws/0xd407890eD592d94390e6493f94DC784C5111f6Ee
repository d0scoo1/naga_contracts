{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/OKPCParts.sol\": {\r\n      \"content\": \"/*\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591                                                            \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588          \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\\n  \u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2591\u2591        \u2588\u2588          \u2588\u2588\u2588               \u2588\u2588          \u2588\u2588\u2588       \u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591     \u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588        \u2588\u2588          \u2588\u2588\u2588               \u2588\u2588     \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591     \u2588\u2588\u2588  \u2588\u2588\u2588          \u2588\u2588          \u2588\u2588\u2588       \u2588\u2588\u2588\u2588\u2588   \u2588\u2588     \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591     \u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588        \u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588          \u2588\u2588   \u2588\u2588     \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\\n  \u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2591\u2591     \u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588        \u2588\u2588          \u2588\u2588\u2588       \u2588\u2588\u2588\u2588\u2588   \u2588\u2588     \u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591     \u2588\u2588\u2588               \u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588       \u2588\u2588\u2588\u2588\u2588   \u2588\u2588     \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591        \u2588\u2588          \u2588\u2588\u2588               \u2588\u2588          \u2588\u2588\u2588       \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2591\u2591          \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588        \u2588\u2588\u2588\u2588\u2588       \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588          \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591                                                            \u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591     \u2588\u2588\u2588\u2588\u2588          \u2588\u2588\u2588\u2588\u2588          \u2588\u2588\u2588\u2588\u2588          \u2588\u2588\u2588\u2588\u2588     \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591     \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588     \u2588\u2588   \u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588     \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2591\u2591             \u2588\u2588\u2588\u2588\u2588          \u2588\u2588\u2588\u2588\u2588          \u2588\u2588\u2588\u2588\u2588            \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591                                                            \u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591                                                            \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2591\\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n*/\\n\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.8;\\n\\nimport {IOKPCParts} from './interfaces/IOKPCParts.sol';\\nimport '@0xsequence/sstore2/contracts/SSTORE2.sol';\\n\\ncontract OKPCParts is IOKPCParts {\\n  /* --------------------------------- ****** --------------------------------- */\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                                   CONFIG                                   */\\n  /* -------------------------------------------------------------------------- */\\n  uint256 public constant NUM_COLORS = 6;\\n  uint256 public constant NUM_HEADBANDS = 8;\\n  uint256 public constant NUM_SPEAKERS = 8;\\n  uint256 public constant NUM_WORDS = 128;\\n\\n  /* --------------------------------- ****** --------------------------------- */\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                                   STORAGE                                  */\\n  /* -------------------------------------------------------------------------- */\\n  Color[NUM_COLORS] public colors;\\n  Vector[NUM_HEADBANDS] public headbands;\\n  Vector[NUM_SPEAKERS] public speakers;\\n  bytes4[NUM_WORDS] public words;\\n\\n  /* --------------------------------- ****** --------------------------------- */\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                               INITIALIZATION                               */\\n  /* -------------------------------------------------------------------------- */\\n  constructor() {\\n    _initColors();\\n    _initHeadbands();\\n    _initSpeakers();\\n    _initWords();\\n  }\\n\\n  /* --------------------------------- ****** --------------------------------- */\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                                    PARTS                                   */\\n  /* -------------------------------------------------------------------------- */\\n  /// @notice Gets the Color by index. Accepts values between 0 and 5.\\n  function getColor(uint256 index) public view override returns (Color memory) {\\n    if (index > NUM_COLORS - 1) revert IndexOutOfBounds(index, NUM_COLORS - 1);\\n    return colors[index];\\n  }\\n\\n  /// @notice Gets the Headband by index. Accepts values between 0 and 7.\\n  function getHeadband(uint256 index)\\n    public\\n    view\\n    override\\n    returns (Vector memory)\\n  {\\n    if (index > NUM_HEADBANDS - 1)\\n      revert IndexOutOfBounds(index, NUM_HEADBANDS - 1);\\n    return headbands[index];\\n  }\\n\\n  /// @notice Gets the Speaker by index. Accepts values between 0 and 7.\\n  function getSpeaker(uint256 index)\\n    public\\n    view\\n    override\\n    returns (Vector memory)\\n  {\\n    if (index > NUM_SPEAKERS - 1)\\n      revert IndexOutOfBounds(index, NUM_SPEAKERS - 1);\\n    return speakers[index];\\n  }\\n\\n  /// @notice Gets the Word by index. Accepts values between 0 and 127.\\n  function getWord(uint256 index) public view override returns (string memory) {\\n    if (index > NUM_WORDS - 1) revert IndexOutOfBounds(index, NUM_WORDS - 1);\\n    return _toString(words[index]);\\n  }\\n\\n  /* --------------------------------- ****** --------------------------------- */\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                               INITIALIZATION                               */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /// @notice Initializes the stored Colors.\\n  function _initColors() internal {\\n    // gray\\n    colors[0] = Color(\\n      bytes6('CCCCCC'),\\n      bytes6('838383'),\\n      bytes6('4D4D4D'),\\n      'Gray'\\n    );\\n    // green\\n    colors[1] = Color(\\n      bytes6('54F8B5'),\\n      bytes6('00DC82'),\\n      bytes6('037245'),\\n      'Green'\\n    );\\n    // blue\\n    colors[2] = Color(\\n      bytes6('80B3FF'),\\n      bytes6('2E82FF'),\\n      bytes6('003D99'),\\n      'Blue'\\n    );\\n    // purple\\n    colors[3] = Color(\\n      bytes6('DF99FF'),\\n      bytes6('C13CFF'),\\n      bytes6('750DA5'),\\n      'Purple'\\n    );\\n    // yellow\\n    colors[4] = Color(\\n      bytes6('FBDA9D'),\\n      bytes6('F8B73E'),\\n      bytes6('795106'),\\n      'Yellow'\\n    );\\n    // pink\\n    colors[5] = Color(\\n      bytes6('FF99D8'),\\n      bytes6('FF44B7'),\\n      bytes6('99005E'),\\n      'Pink'\\n    );\\n  }\\n\\n  /// @notice Initializes the stored Headbands.\\n  function _initHeadbands() internal {\\n    headbands[0] = Vector(\\n      'M2 3H1V0H2V2H4V3H2ZM3 0H5H6V3H5V1H3V0ZM11 0H9V1H11V3H12V0H11ZM14 0H13V3H14H16H17V0H16V2H14V0ZM19 0H21V1H19V3H18V0H19ZM27 0H25H24V3H25V1H27V0ZM20 3V2H22V0H23V3H22H20ZM26 2V3H28H29V0H28V2H26ZM8 3H10V2H8V0H7V3H8Z',\\n      'Crest'\\n    );\\n    headbands[1] = Vector(\\n      'M11 1H12V0H11V1ZM11 2H10V1H11V2ZM13 2H11V3H13V2ZM14 1H13V2H14V1ZM16 1V0H14V1H16ZM17 2H16V1H17V2ZM19 2V3H17V2H19ZM19 1H20V2H19V1ZM19 1V0H18V1H19ZM0 1H1V2H0V1ZM1 2H2V3H1V2ZM3 1V0H1V1H3ZM4 2V1H3V2H4ZM5 2H4V3H5V2ZM6 1H5V2H6V1ZM8 1V0H6V1H8ZM8 2H9V1H8V2ZM8 2H7V3H8V2ZM24 1H25V2H24V1ZM22 1V0H24V1H22ZM22 2H21V1H22V2ZM22 2H23V3H22V2ZM26 2V3H25V2H26ZM27 1V2H26V1H27ZM29 1H27V0H29V1ZM29 2V1H30V2H29ZM29 2V3H28V2H29Z',\\n      'Ornate'\\n    );\\n    headbands[2] = Vector(\\n      'M3 0H1V1H3V2H1V3H3V2H4V3H6V2H4V1H6V0H4V1H3V0ZM27 0H29V1H27V0ZM27 2V1H26V0H24V1H26V2H24V3H26V2H27ZM27 2H29V3H27V2ZM10 0H12V1H10V0ZM10 2V1H9V0H7V1H9V2H7V3H9V2H10ZM10 2H12V3H10V2ZM18 0H20V1H18V0ZM21 1H20V2H18V3H20V2H21V3H23V2H21V1ZM21 1V0H23V1H21ZM16 0H15V1H14V3H15V2H16V0Z',\\n      'Power'\\n    );\\n    headbands[3] = Vector(\\n      'M1 3H2H3V2H2V1H4V3H5H7H8V1H10V3H11H14V2V1H16V2V3H19H20V1H22V3H23H25H26V1H28V2H27V3H28H29V0H28H26H25V2H23V0H22H20H19V2H17V1H18V0H12V1H13V2H11V0H10H8H7V2H5V0H4H2H1V3Z',\\n      'Temple'\\n    );\\n    headbands[4] = Vector(\\n      'M2 1H1V0H2V1ZM2 2V1H3V2H2ZM2 2V3H1V2H2ZM28 1H29V0H28V1ZM28 2V1H27V2H28ZM28 2H29V3H28V2ZM4 1H5V2H4V3H5V2H6V1H5V0H4V1ZM25 1H26V0H25V1ZM25 2V1H24V2H25ZM25 2H26V3H25V2ZM7 1H8V2H7V3H8V2H9V1H8V0H7V1ZM22 1H23V0H22V1ZM22 2V1H21V2H22ZM22 2H23V3H22V2ZM10 1H11V2H10V3H11V2H12V1H11V0H10V1ZM16 1H14V0H16V1ZM16 2V1H17V2H16ZM14 2H16V3H14V2ZM14 2V1H13V2H14ZM19 1H20V0H19V1ZM19 2V1H18V2H19ZM19 2H20V3H19V2Z',\\n      'Wreath'\\n    );\\n    headbands[5] = Vector(\\n      'M1 1H10V0H1V1ZM12 1H13V2H14V3H16V2H17V1H18V0H16V1V2H14V1V0H12V1ZM11 3H1V2H11V3ZM29 1H20V0H29V1ZM19 3H29V2H19V3Z',\\n      'Valiant'\\n    );\\n    headbands[6] = Vector(\\n      'M2 1H3V2H2V1ZM2 1H1V2H2V3H3V2H4V1H3V0H2V1ZM6 1H7V2H6V1ZM6 1H5V2H6V3H7V2H8V1H7V0H6V1ZM11 1H10V0H11V1ZM11 2V1H12V2H11ZM10 2H11V3H10V2ZM10 2V1H9V2H10ZM28 1H27V0H28V1ZM28 2V1H29V2H28ZM27 2H28V3H27V2ZM27 2V1H26V2H27ZM24 1H23V0H24V1ZM24 2V1H25V2H24ZM23 2H24V3H23V2ZM23 2V1H22V2H23ZM20 1H19V0H20V1ZM20 2V1H21V2H20ZM19 2H20V3H19V2ZM19 2V1H18V2H19ZM16 2H14V1H16V2ZM16 2V3H17V2H16ZM16 1V0H17V1H16ZM14 1H13V0H14V1ZM14 2V3H13V2H14Z',\\n      'Tainia'\\n    );\\n    headbands[7] = Vector(\\n      'M10 0H14V1H13V2H17V1H16V0H20V1H18V2H19V3H11V2H12V1H10V0ZM3 2H5V3H1V2H2V1H1V0H9V1H8V2H10V3H6V2H7V1H3V2ZM25 2H27V1H23V2H24V3H20V2H22V1H21V0H29V1H28V2H29V3H25V2Z',\\n      'Colossus'\\n    );\\n  }\\n\\n  /// @notice Initializes the stored Speakers.\\n  function _initSpeakers() internal {\\n    speakers[0] = Vector(\\n      'M1 1H0V2H1V3H2V2H1V1ZM1 5H0V6H1V7H2V6H1V5ZM0 9H1V10H0V9ZM1 10H2V11H1V10ZM1 13H0V14H1V15H2V14H1V13Z',\\n      'Piezo'\\n    );\\n    speakers[1] = Vector(\\n      'M1 1L1 0H0V1H1ZM1 2H2V1H1V2ZM1 2H0V3H1V2ZM1 10L1 11H0V10H1ZM1 9H2V10H1L1 9ZM1 9H0V8H1L1 9ZM1 4L1 5H0V6H1L1 7H2L2 6H1L1 5H2L2 4H1ZM1 13L1 12H2L2 13H1ZM1 14L1 13H0V14H1ZM1 14H2L2 15H1L1 14Z',\\n      'Ambient'\\n    );\\n    speakers[2] = Vector(\\n      'M0 2H1V3H2L2 1H1L1 0H0V2ZM1 5H2L2 7H1V6H0V4H1L1 5ZM2 14H1L1 15H0V13H1V12H2L2 14ZM2 10L2 8H1V9H0V11H1L1 10H2Z',\\n      'Hyper'\\n    );\\n    speakers[3] = Vector(\\n      'M1 1L1 0H0V1H1ZM1 1H2V2V3H1H0V2H1V1ZM1 5L1 4H2V5H1ZM1 5L1 6H2V7H1H0V6V5H1ZM1 13H0V12H1H2V13V14H1L1 13ZM1 14L1 15H0V14H1ZM2 9V8H1H0V9V10H1V11H2V10H1V9H2Z',\\n      'Crystal'\\n    );\\n    speakers[4] = Vector(\\n      'M2 0H1V1H0V2H1V3H2V0ZM2 5H1V4H0V7H1V6H2V5ZM2 9H1V8H0V11H1V10H2V9ZM0 13H1V12H2V15H1V14H0V13Z',\\n      'Taser'\\n    );\\n    speakers[5] = Vector(\\n      'M2 0V1V2V3H0V2H1V1V0H2ZM0 4V5V6V7H2V6H1L1 5H2V4H0ZM2 10V11H0V10H1V9H0V8H2V9V10ZM0 12V13H1V14V15H2V14L2 13V12H0Z',\\n      'Buster'\\n    );\\n    speakers[6] = Vector(\\n      'M0 0V1L2 1V0H0ZM1 3V2H2V3H1ZM2 5V4H0V5H2ZM1 11V10H2V11H1ZM2 13V12H0V13H2ZM2 15V14H1V15H2ZM2 7V6H1V7H2ZM0 8V9H2V8H0Z',\\n      'Tower'\\n    );\\n    speakers[7] = Vector(\\n      'M2 1V2V3H0V2L1 2V1H2ZM1 11V10H0V9H2L2 10V11H1ZM2 14V13H0V14H1V15H2V14ZM1 5V6H0V7H2L2 6V5H1Z',\\n      'Blaster'\\n    );\\n  }\\n\\n  /// @notice Initializes the stored Words.\\n  function _initWords() internal {\\n    words = [\\n      bytes4('WAIT'),\\n      'OK',\\n      'INFO',\\n      'HELP',\\n      'WARN',\\n      'ERR',\\n      'OOF',\\n      'WHAT',\\n      'RARE',\\n      '200%',\\n      'GATO',\\n      'ABRA',\\n      'POOF',\\n      'FUN',\\n      'BYTE',\\n      'POLY',\\n      'FANG',\\n      'PAIN',\\n      'BOOT',\\n      'DRAW',\\n      'MINT',\\n      'WORM',\\n      'PUP',\\n      'PLUS',\\n      'DOC',\\n      'QUIT',\\n      'BEAT',\\n      'MIDI',\\n      'UPUP',\\n      'HUSH',\\n      'ACK',\\n      'MOON',\\n      'GHST',\\n      'UFO',\\n      'SEE',\\n      'MON',\\n      'TRIP',\\n      'NICE',\\n      'YUP',\\n      'EXIT',\\n      'CUTE',\\n      'OHNO',\\n      'GROW',\\n      'DEAD',\\n      'OPEN',\\n      'THEM',\\n      'DRIP',\\n      'ESC',\\n      '404',\\n      'PSA',\\n      'BGS',\\n      'BOMB',\\n      'NOUN',\\n      'SKY',\\n      'SK8',\\n      'CATS',\\n      'CT',\\n      'GAME',\\n      'DAO',\\n      'BRAP',\\n      'LOOK',\\n      'MYTH',\\n      'ZERO',\\n      'QI',\\n      '5000',\\n      'LORD',\\n      'DUEL',\\n      'SWRD',\\n      'MEME',\\n      'SAD',\\n      'ORB',\\n      'LIFE',\\n      'PRTY',\\n      'DEF',\\n      'AIR',\\n      'ISLE',\\n      'ROSE',\\n      'ANON',\\n      'OKOK',\\n      'MEOW',\\n      'KING',\\n      'WISE',\\n      'ROZE',\\n      'NOBU',\\n      'DAMN',\\n      'HUNT',\\n      'BETA',\\n      'FORT',\\n      'SWIM',\\n      'HALO',\\n      'UP',\\n      'YUM',\\n      'SNAP',\\n      'APES',\\n      'BIRD',\\n      'NOON',\\n      'VIBE',\\n      'MAKE',\\n      'CRWN',\\n      'PLAY',\\n      'JOY',\\n      'FREN',\\n      'DING',\\n      'GAZE',\\n      'HACK',\\n      'CRY',\\n      'SEER',\\n      'OWL',\\n      'LOUD',\\n      'RISE',\\n      'LOVE',\\n      'SKRT',\\n      'QTPI',\\n      'WAND',\\n      'REKT',\\n      'BEAR',\\n      'CODA',\\n      'ILY',\\n      'SNKE',\\n      'FLY',\\n      'ZKP',\\n      'LUSH',\\n      'SUP',\\n      'GOWN',\\n      'BAG',\\n      'BALM',\\n      'LIVE',\\n      'LVL'\\n    ];\\n  }\\n\\n  /* --------------------------------- ****** --------------------------------- */\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                                   HELPERS                                  */\\n  /* -------------------------------------------------------------------------- */\\n  /// @notice Convert a bytes4 to a string.\\n  function _toString(bytes4 b) private pure returns (string memory) {\\n    uint256 numChars = 0;\\n\\n    for (uint256 i; i < 4; i++) {\\n      if (b[i] == bytes1(0)) break;\\n      numChars++;\\n    }\\n\\n    bytes memory result = new bytes(numChars);\\n    for (uint256 i; i < numChars; i++) result[i] = b[i];\\n\\n    return string(abi.encodePacked(result));\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IOKPCParts.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.7;\\n\\ninterface IOKPCParts {\\n  // errors\\n  error IndexOutOfBounds(uint256 index, uint256 maxIndex);\\n\\n  // structures\\n  struct Color {\\n    bytes6 light;\\n    bytes6 regular;\\n    bytes6 dark;\\n    string name;\\n  }\\n\\n  struct Vector {\\n    string data;\\n    string name;\\n  }\\n\\n  // functions\\n  function getColor(uint256 index) external view returns (Color memory);\\n\\n  function getHeadband(uint256 index) external view returns (Vector memory);\\n\\n  function getSpeaker(uint256 index) external view returns (Vector memory);\\n\\n  function getWord(uint256 index) external view returns (string memory);\\n}\\n\"\r\n    },\r\n    \"@0xsequence/sstore2/contracts/SSTORE2.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./utils/Bytecode.sol\\\";\\n\\n/**\\n  @title A key-value storage with auto-generated keys for storing chunks of data with a lower write & read cost.\\n  @author Agustin Aguilar <aa@horizon.io>\\n\\n  Readme: https://github.com/0xsequence/sstore2#readme\\n*/\\nlibrary SSTORE2 {\\n  error WriteError();\\n\\n  /**\\n    @notice Stores `_data` and returns `pointer` as key for later retrieval\\n    @dev The pointer is a contract address with `_data` as code\\n    @param _data to be written\\n    @return pointer Pointer to the written `_data`\\n  */\\n  function write(bytes memory _data) internal returns (address pointer) {\\n    // Append 00 to _data so contract can't be called\\n    // Build init code\\n    bytes memory code = Bytecode.creationCodeFor(\\n      abi.encodePacked(\\n        hex'00',\\n        _data\\n      )\\n    );\\n\\n    // Deploy contract using create\\n    assembly { pointer := create(0, add(code, 32), mload(code)) }\\n\\n    // Address MUST be non-zero\\n    if (pointer == address(0)) revert WriteError();\\n  }\\n\\n  /**\\n    @notice Reads the contents of the `_pointer` code as data, skips the first byte \\n    @dev The function is intended for reading pointers generated by `write`\\n    @param _pointer to be read\\n    @return data read from `_pointer` contract\\n  */\\n  function read(address _pointer) internal view returns (bytes memory) {\\n    return Bytecode.codeAt(_pointer, 1, type(uint256).max);\\n  }\\n\\n  /**\\n    @notice Reads the contents of the `_pointer` code as data, skips the first byte \\n    @dev The function is intended for reading pointers generated by `write`\\n    @param _pointer to be read\\n    @param _start number of bytes to skip\\n    @return data read from `_pointer` contract\\n  */\\n  function read(address _pointer, uint256 _start) internal view returns (bytes memory) {\\n    return Bytecode.codeAt(_pointer, _start + 1, type(uint256).max);\\n  }\\n\\n  /**\\n    @notice Reads the contents of the `_pointer` code as data, skips the first byte \\n    @dev The function is intended for reading pointers generated by `write`\\n    @param _pointer to be read\\n    @param _start number of bytes to skip\\n    @param _end index before which to end extraction\\n    @return data read from `_pointer` contract\\n  */\\n  function read(address _pointer, uint256 _start, uint256 _end) internal view returns (bytes memory) {\\n    return Bytecode.codeAt(_pointer, _start + 1, _end + 1);\\n  }\\n}\\n\"\r\n    },\r\n    \"@0xsequence/sstore2/contracts/utils/Bytecode.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n\\nlibrary Bytecode {\\n  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);\\n\\n  /**\\n    @notice Generate a creation code that results on a contract with `_code` as bytecode\\n    @param _code The returning value of the resulting `creationCode`\\n    @return creationCode (constructor) for new contract\\n  */\\n  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {\\n    /*\\n      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size\\n      0x01    0x80         0x80        DUP1                size size\\n      0x02    0x60         0x600e      PUSH1 14            14 size size\\n      0x03    0x60         0x6000      PUSH1 00            0 14 size size\\n      0x04    0x39         0x39        CODECOPY            size\\n      0x05    0x60         0x6000      PUSH1 00            0 size\\n      0x06    0xf3         0xf3        RETURN\\n      <CODE>\\n    */\\n\\n    return abi.encodePacked(\\n      hex\\\"63\\\",\\n      uint32(_code.length),\\n      hex\\\"80_60_0E_60_00_39_60_00_F3\\\",\\n      _code\\n    );\\n  }\\n\\n  /**\\n    @notice Returns the size of the code on a given address\\n    @param _addr Address that may or may not contain code\\n    @return size of the code on the given `_addr`\\n  */\\n  function codeSize(address _addr) internal view returns (uint256 size) {\\n    assembly { size := extcodesize(_addr) }\\n  }\\n\\n  /**\\n    @notice Returns the code of a given address\\n    @dev It will fail if `_end < _start`\\n    @param _addr Address that may or may not contain code\\n    @param _start number of bytes of code to skip on read\\n    @param _end index before which to end extraction\\n    @return oCode read from `_addr` deployed bytecode\\n\\n    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd\\n  */\\n  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {\\n    uint256 csize = codeSize(_addr);\\n    if (csize == 0) return bytes(\\\"\\\");\\n\\n    if (_start > csize) return bytes(\\\"\\\");\\n    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); \\n\\n    unchecked {\\n      uint256 reqSize = _end - _start;\\n      uint256 maxSize = csize - _start;\\n\\n      uint256 size = maxSize < reqSize ? maxSize : reqSize;\\n\\n      assembly {\\n        // allocate output byte array - this could also be done without assembly\\n        // by using o_code = new bytes(size)\\n        oCode := mload(0x40)\\n        // new \\\"memory end\\\" including padding\\n        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n        // store length in memory\\n        mstore(oCode, size)\\n        // actually retrieve the code, this needs assembly\\n        extcodecopy(_addr, add(oCode, 0x20), _start, size)\\n      }\\n    }\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxIndex\",\"type\":\"uint256\"}],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NUM_COLORS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUM_HEADBANDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUM_SPEAKERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUM_WORDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"bytes6\",\"name\":\"light\",\"type\":\"bytes6\"},{\"internalType\":\"bytes6\",\"name\":\"regular\",\"type\":\"bytes6\"},{\"internalType\":\"bytes6\",\"name\":\"dark\",\"type\":\"bytes6\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getColor\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes6\",\"name\":\"light\",\"type\":\"bytes6\"},{\"internalType\":\"bytes6\",\"name\":\"regular\",\"type\":\"bytes6\"},{\"internalType\":\"bytes6\",\"name\":\"dark\",\"type\":\"bytes6\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct IOKPCParts.Color\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getHeadband\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct IOKPCParts.Vector\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSpeaker\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct IOKPCParts.Vector\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getWord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"headbands\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"speakers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"words\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "OKPCParts", "CompilerVersion": "v0.8.8+commit.dddeac2f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}