{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.4;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function symbol() external view returns(string memory);\r\n    function name() external view returns(string memory);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IXUSD {\r\n    function addStable(address stable) external;\r\n    function getOwner() external view returns (address);\r\n}\r\n\r\ncontract NewTokenProposal {\r\n\r\n    // most recent token proposed\r\n    address public pendingStableToken;\r\n\r\n    // time token was proposed\r\n    uint256 public proposedTimestamp;\r\n\r\n    // wait time for proposition approval\r\n    uint256 public constant propositionWaitTime = 800000; // 28 day approval period\r\n\r\n    // XUSD Token\r\n    address public XUSD;\r\n\r\n    // owner\r\n    modifier onlyOwner(){\r\n        require(msg.sender == getOwner(), 'Only Owner');\r\n        _;\r\n    }\r\n\r\n    // Events\r\n    event StableProposed(address stable);\r\n    event StableApproved(address stable);\r\n\r\n    constructor(){\r\n        proposedTimestamp = block.number;\r\n    }\r\n\r\n    function approvePendingStable() external onlyOwner {\r\n        require(pendingStableToken != address(0), 'Invalid Stable');\r\n        require(proposedTimestamp + propositionWaitTime <= block.number, 'Insufficient Time Has Passed');\r\n\r\n        // add stable to XUSD\r\n        IXUSD(XUSD).addStable(pendingStableToken);\r\n        emit StableApproved(pendingStableToken);\r\n\r\n        // clear up data\r\n        pendingStableToken = address(0);\r\n        proposedTimestamp = block.number;\r\n    }\r\n\r\n    function proposeStable(address stable) external onlyOwner {\r\n        require(stable != address(0), 'Zero Address');\r\n        require(IERC20(stable).decimals() == 18, 'Stable Must Have 18 Decimals');\r\n\r\n        pendingStableToken = stable;\r\n        proposedTimestamp = block.number;\r\n\r\n        emit StableProposed(stable);\r\n    }\r\n\r\n    function pairXUSD(address XUSD_) external {\r\n        require(\r\n            XUSD == address(0) &&\r\n            XUSD_ != address(0),\r\n            'token paired'\r\n        );\r\n        XUSD = XUSD_;\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return IXUSD(XUSD).getOwner();\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stable\",\"type\":\"address\"}],\"name\":\"StableApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stable\",\"type\":\"address\"}],\"name\":\"StableProposed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"XUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvePendingStable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"XUSD_\",\"type\":\"address\"}],\"name\":\"pairXUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingStableToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stable\",\"type\":\"address\"}],\"name\":\"proposeStable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"propositionWaitTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NewTokenProposal", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://278939bb1e18457421a0639ae48f1df112111dd32065b59efaaf1b147eb524ad"}]}