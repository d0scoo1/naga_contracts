{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n}\r\n\r\ncontract Ownable {\r\n\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract ZenswapDistribution is Ownable {\r\n    \r\n    token public tokenReward;\r\n    \r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Set the token smart contract address\r\n     */\r\n    constructor() public {\r\n        \r\n        tokenReward = token(0x0D1C63E12fDE9e5cADA3E272576183AbA9cfedA2);\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Distribute token to multiple address\r\n     * \r\n     */\r\n    function distributeToken(address[] _addresses, uint256[] _amount) public onlyOwner {\r\n    \r\n    uint256 addressCount = _addresses.length;\r\n    uint256 amountCount = _amount.length;\r\n    require(addressCount == amountCount);\r\n    \r\n    for (uint256 i = 0; i < addressCount; i++) {\r\n        uint256 _tokensAmount = _amount[i] * 10 ** uint256(18);\r\n        tokenReward.transfer(_addresses[i], _tokensAmount);\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Withdraw an \"amount\" of available tokens in the contract\r\n     * \r\n     */\r\n    function withdrawToken(address _address, uint256 _amount) public onlyOwner {\r\n        \r\n        uint256 _tokensAmount = _amount * 10 ** uint256(18); \r\n        tokenReward.transfer(_address, _tokensAmount);\r\n    }\r\n    \r\n    /**\r\n     * Set a token contract address\r\n     * \r\n     */\r\n    function setTokenReward(address _address) public onlyOwner {\r\n        \r\n        tokenReward = token(_address);\r\n    }\r\n    \r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setTokenReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"distributeToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "ZenswapDistribution", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://8bf5e99b29f330bda58ac41ed78dcf761cbfabb5189c434e5d6733c9713e6c9a"}]}