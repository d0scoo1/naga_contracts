{"status": "1", "message": "OK", "result": [{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\npragma solidity 0.8.10;\r\n\r\ncontract ReportingToken{\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event CommitOwnership(address admin);\r\n    event AcceptOwnership(address admin);\r\n\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string constant private _name = \"ReportingToken\";\r\n    string constant private _symbol = \"RPT\";\r\n\r\n    address public admin;\r\n    address public future_admin;\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    function name() external pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() external pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() external pure  returns (uint8) {\r\n        return 0;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function assign(address account)external {\r\n        require(msg.sender == admin, \"onlyOwner\");\r\n\r\n        require(account != address(0), \"assign to the zero address\");\r\n        require(_balances[account] == 0, \"already assigned\");\r\n\r\n        unchecked {\r\n            _totalSupply += 1;\r\n            _balances[account] += 1;\r\n        }\r\n\r\n        emit Transfer(address(0), account, 1);\r\n    }\r\n\r\n    function resign(address account)external {\r\n        require(msg.sender == admin || msg.sender == account, \"onlyOwner or holder\");\r\n\r\n        require(account != address(0), \"zero address\");\r\n        require(_balances[account] == 1, \"not assigned\");\r\n\r\n        unchecked {\r\n            _balances[account] -= 1;\r\n            _totalSupply -= 1;\r\n        }\r\n\r\n        emit Transfer(account, address(0), 1);\r\n    }\r\n\r\n    function commit_transfer_ownership(address addr)external {\r\n        /***\r\n        *@notice Transfer ownership of GaugeController to `addr`\r\n        *@param addr Address to have ownership transferred to\r\n        */\r\n        require (msg.sender == admin, \"onlyOwner\");\r\n        future_admin = addr;\r\n        emit CommitOwnership(addr);\r\n    }\r\n\r\n    function accept_transfer_ownership()external {\r\n        /***\r\n        *@notice Accept a transfer of ownership\r\n        */\r\n        address _future_admin = future_admin;\r\n        require(msg.sender == _future_admin, \"onlyFutureOwner\");\r\n\r\n        admin = _future_admin;\r\n\r\n        emit AcceptOwnership(_future_admin);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AcceptOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"CommitOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accept_transfer_ownership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"commit_transfer_ownership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"future_admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ReportingToken", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2555c70ba3dbaf80ee3e2bb3246046d618285f9759b03dc1447facd42bbf8aa3"}]}