{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/BasisPoints.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title BasisPoints\\n/// @notice Provides a function for multiplying in basis points\\nlibrary BasisPoints {\\n\\n  uint128 public constant BASE = 10000;\\n\\n  /**  @notice Calculate _input * _basisPoints / _base rounding down\\n    *  @dev from Mikhail Vladimirov's response here: https://ethereum.stackexchange.com/questions/55701/how-to-do-solidity-percentage-calculation/55702\\n    */\\n  function mulByBp(uint256 _input, uint256 _basisPoints) public pure returns (uint256) {\\n    uint256 a = _input / BASE;\\n    uint256 b = _input % BASE;\\n    uint256 c = _basisPoints / BASE;\\n    uint256 d = _basisPoints % BASE;\\n\\n    return a * c * BASE + a * d + b * c + b * d / BASE;\\n  }\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basisPoints\",\"type\":\"uint256\"}],\"name\":\"mulByBp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "BasisPoints", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}