// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "../utils/Data.sol";

uint256 constant ARMS_PART_COUNT = 2;
uint256 constant LEGS_PART_COUNT = 2;
uint256 constant EARS_PART_COUNT = 5;
uint256 constant EYES_PART_COUNT = 8;

library Traits {
    using Data for Data.Reader;

    struct Model {
        uint256 id;
        uint256 x;
        uint256 y;
        bool flip;
    }

    struct Part {
        Model[] models;
    }

    struct Trait {
        uint256 nameId;
        uint256 materialId;
        Part[] parts;
    }

    function _getTrait(
        bytes memory data,
        uint256 pos,
        uint256 partCount
    ) private pure returns (Trait memory) {
        Data.Reader memory reader = Data.Reader(pos);
        Trait memory trait = Trait(
            reader.nextUint8(data),
            reader.nextUint8(data),
            new Part[](partCount)
        );

        for (uint256 i; i < partCount; i++) {
            uint256 modelCount = reader.nextUint8(data);
            Part memory part = trait.parts[i];
            part.models = new Model[](modelCount);

            for (uint256 j; j < modelCount; j++) {
                part.models[j] = Model(
                    reader.nextUint8(data),
                    reader.nextUint8(data),
                    reader.nextUint8(data),
                    reader.nextUint8(data) == 1
                );
            }
        }

        return trait;
    }

    function getBody(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x00\x01\x02\x00\x45\x30\x00\x01\x66\xb8\x00\x09\x02\x02\x02\x3b\x25\x00\x01\x66\xb8\x00\x0a\x03\x02\x03\x44\x2c\x00\x04\x6a\xb9\x00\x0c\x04\x02\x05\x38\x2c\x00\x06\x61\xb5\x00\x0d\x05\x02\x07\x44\x2c\x00\x08\x66\xb8\x00\x0e\x06\x02\x09\x46\x30\x00\x0a\x65\xb6\x00\x0f\x07\x02\x0b\x45\x26\x00\x0c\x66\xb2\x00\x10\x08\x02\x0d\x45\x2b\x00\x0e\x66\xb8\x00";
        bytes8 index = "\x00\x0b\x16\x21\x2c\x37\x42\x4d";

        return _getTrait(data, uint8(index[i]), 1);
    }

    function getCheeks(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x11\x01\x01\x00\x1a\x6b\x00\x12\x01\x01\x01\x20\x6b\x00\x13\x01\x01\x02\x14\x6b\x00\x14\x01\x01\x03\x14\x6b\x00";
        bytes4 index = "\x00\x07\x0e\x15";

        return _getTrait(data, uint8(index[i]), 1);
    }

    function getLegs(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x00\x01\x02\x00\x47\xb8\x00\x00\xb9\xb8\x01\x02\x01\x5d\xc4\x00\x01\xa3\xc4\x01\x15\x09\x02\x02\x38\xb6\x00\x02\xc8\xb6\x01\x02\x03\x54\xc1\x00\x03\xac\xc1\x01\x16\x0a\x02\x04\x47\xb8\x00\x04\xb9\xb8\x01\x02\x05\x5d\xc4\x00\x05\xa3\xc4\x01\x17\x0b\x02\x06\x36\xbb\x00\x06\xca\xbb\x01\x02\x07\x5a\xc5\x00\x07\xa6\xc5\x01\x18\x0c\x02\x08\x3b\xba\x00\x08\xc5\xba\x01\x02\x09\x5c\xc2\x00\x09\xa4\xc2\x01\x19\x0d\x02\x0a\x05\xba\x00\x0a\xfb\xba\x01\x02\x0b\x1e\xc5\x00\x0b\xe2\xc5\x01\x1a\x0e\x02\x0c\x40\xb7\x00\x0c\xc0\xb7\x01\x02\x0d\x58\xc5\x00\x0d\xa8\xc5\x01\x0e\x06\x02\x0e\x37\xb9\x00\x0e\xc9\xb9\x01\x02\x0f\x51\xc3\x00\x0f\xaf\xc3\x01";
        bytes8 index = "\x00\x14\x28\x3c\x50\x64\x78\x8c";

        return _getTrait(data, uint8(index[i]), LEGS_PART_COUNT);
    }

    function getArms(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x00\x01\x02\x00\x0a\xa6\x00\x00\xf6\xa6\x01\x02\x01\x22\x69\x00\x01\xde\x69\x01\x15\x09\x02\x02\x04\x9e\x00\x02\xfc\x9e\x01\x02\x03\x1f\x69\x00\x03\xe1\x69\x01\x17\x0b\x02\x04\x04\xb8\x00\x04\xfc\xb8\x01\x02\x05\x04\x60\x00\x05\xfc\x60\x01\x18\x0c\x02\x06\x1c\xaa\x00\x06\xe4\xaa\x01\x02\x07\x20\x7f\x00\x07\xe0\x7f\x01\x19\x0d\x02\x08\x0d\xa5\x00\x08\xf3\xa5\x01\x02\x09\xe9\x6f\x01\x09\x17\x6f\x00\x0a\x03\x02\x0a\x0d\xa3\x00\x0a\xf3\xa3\x01\x02\x0b\x07\x6c\x00\x0b\xf9\x6c\x01\x1a\x0e\x02\x0c\x01\x92\x00\x0c\xff\x92\x01\x02\x0d\x02\x5a\x00\x0d\xfe\x5a\x01\x0e\x06\x02\x0e\x02\x7a\x00\x0e\xfe\x7a\x01\x02\x0f\x04\x39\x00\x0f\xfc\x39\x01";
        bytes8 index = "\x00\x14\x28\x3c\x50\x64\x78\x8c";

        return _getTrait(data, uint8(index[i]), ARMS_PART_COUNT);
    }

    function getEars(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x00\x01\x01\x00\x1c\x4c\x00\x01\x00\xe4\x4c\x01\x01\x01\x37\x1f\x00\x01\x01\xc9\x1f\x01\x01\x02\x67\x03\x00\x1b\x0f\x01\x03\x1f\x49\x00\x01\x03\xe1\x49\x01\x01\x04\x39\x23\x00\x01\x04\xc7\x23\x01\x01\x05\x64\x04\x00\x1c\x10\x01\x06\x15\x48\x00\x01\x06\xeb\x48\x01\x01\x07\x15\x11\x00\x01\x07\xeb\x11\x01\x01\x08\x6a\x03\x00\x16\x0a\x01\x09\x1a\x4d\x00\x01\x09\xe6\x4d\x01\x01\x0a\x2d\x0d\x00\x01\x0a\xd3\x0d\x01\x01\x0b\x72\x07\x00\x1a\x0e\x01\x0c\x16\x21\x00\x01\x0c\xea\x21\x01\x01\x0d\x38\x07\x00\x01\x0d\xc8\x07\x01\x01\x0e\x68\x02\x00\x0e\x06\x01\x0f\x0c\x10\x00\x01\x0f\xf3\x10\x01\x01\x10\x33\x04\x00\x01\x10\xcd\x04\x01\x01\x11\x52\x03\x00\x0a\x03\x01\x12\x2f\x1d\x00\x01\x12\xd1\x1d\x01\x01\x13\x54\x08\x00\x01\x13\xac\x08\x01\x01\x14\x77\x05\x00\x0f\x07\x01\x15\x12\x4d\x00\x01\x15\xee\x4d\x01\x01\x16\x37\x13\x00\x01\x16\xc9\x13\x01\x01\x17\x68\x03\x00";
        bytes8 index = "\x00\x1b\x36\x51\x6c\x87\xa2\xbd";

        return _getTrait(data, uint8(index[i]), EARS_PART_COUNT);
    }

    function getEyes(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x15\x11\x02\x00\x3e\x87\x00\x01\x46\x90\x00\x02\x00\xc2\x87\x01\x01\xba\x90\x01\x02\x02\x4d\x53\x00\x03\x57\x5c\x00\x02\x02\xb3\x53\x01\x03\xa9\x5c\x01\x02\x04\x6f\x4c\x00\x05\x7e\x56\x00\x02\x06\x5c\x3a\x00\x07\x63\x41\x00\x02\x06\xa4\x3a\x01\x07\x9d\x41\x01\x02\x08\x77\x34\x00\x09\x7e\x3a\x00\x1d\x12\x01\x0a\x41\x8b\x00\x01\x0a\xbf\x8b\x01\x01\x0b\x51\x5a\x00\x01\x0b\xaf\x5a\x01\x01\x0c\x70\x4e\x00\x01\x0d\x5d\x40\x00\x01\x0d\xa3\x40\x01\x01\x0e\x75\x35\x00\x18\x13\x01\x0f\x44\x82\x00\x01\x0f\xbc\x82\x01\x01\x10\x53\x5e\x00\x01\x10\xad\x5e\x01\x02\x11\x65\x52\x00\x11\x9b\x52\x01\x01\x12\x5c\x43\x00\x01\x12\xa4\x43\x01\x02\x13\x6d\x36\x00\x13\x93\x36\x01\x19\x11\x02\x00\x3e\x87\x00\x14\x42\x8e\x00\x02\x00\xc2\x87\x01\x14\xbe\x8e\x01\x02\x02\x4d\x53\x00\x15\x53\x5b\x00\x02\x02\xb3\x53\x01\x15\xad\x5b\x01\x02\x04\x6f\x4c\x00\x16\x74\x53\x00\x02\x06\x5c\x3a\x00\x17\x61\x40\x00\x02\x06\xa4\x3a\x01\x17\x9f\x40\x01\x02\x08\x77\x34\x00\x18\x79\x39\x00\x16\x14\x01\x19\x44\x89\x00\x01\x19\xbc\x89\x01\x01\x1a\x51\x5e\x00\x01\x1a\xaf\x5e\x01\x01\x1b\x6d\x53\x00\x01\x1c\x59\x48\x00\x01\x1c\xa7\x48\x01\x01\x1d\x74\x3e\x00\x17\x11\x02\x1e\x3b\x7e\x00\x1f\x3b\x81\x00\x02\x1e\xc5\x7e\x01\x1f\xc5\x81\x01\x02\x20\x40\x46\x00\x21\x46\x4b\x00\x02\x20\xc0\x46\x01\x21\xba\x4b\x01\x02\x22\x6d\x47\x00\x23\x73\x4b\x00\x02\x24\x4e\x27\x00\x25\x52\x2d\x00\x02\x24\xb2\x27\x01\x25\xae\x2d\x01\x02\x26\x6f\x25\x00\x27\x76\x28\x00\x1a\x11\x02\x00\x3e\x87\x00\x28\x42\x89\x00\x02\x00\xc2\x87\x01\x28\xbe\x89\x01\x02\x02\x4d\x53\x00\x29\x52\x56\x00\x02\x02\xb3\x53\x01\x29\xae\x56\x01\x02\x04\x6f\x4c\x00\x2a\x73\x4d\x00\x02\x06\x5c\x3a\x00\x2b\x63\x3d\x00\x02\x06\xa4\x3a\x01\x2b\x9d\x3d\x01\x02\x08\x77\x34\x00\x2c\x79\x36\x00\x1e\x15\x01\x2d\x48\x84\x00\x01\x2d\xb8\x84\x01\x01\x2e\x53\x56\x00\x01\x2e\xad\x56\x01\x01\x2f\x75\x4b\x00\x01\x30\x5d\x43\x00\x01\x30\xa3\x43\x01\x01\x31\x76\x36\x00";
        bytes
            memory index = "\x00\x00\x00\x4a\x00\x74\x00\xa6\x00\xf0\x01\x1a\x01\x64\x01\xae";
        Data.Reader memory reader = Data.Reader(i << 1);

        return _getTrait(data, reader.nextUint16(index), EYES_PART_COUNT);
    }

    function getNose(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x00\x16\x03\x00\x7f\x78\x00\x00\x81\x78\x01\x01\x72\x6a\x00\x15\x17\x03\x00\x7f\x78\x00\x00\x81\x78\x01\x02\x76\x6b\x00\x1d\x16\x03\x00\x7f\x78\x00\x00\x81\x78\x01\x03\x74\x69\x00\x1b\x18\x05\x00\x7f\x78\x00\x00\x81\x78\x01\x04\x6e\x6b\x00\x05\x73\x6f\x00\x05\x8d\x6f\x01\x16\x16\x04\x00\x7f\x78\x00\x00\x81\x78\x01\x06\x6c\x70\x00\x06\x94\x70\x01\x1c\x19\x03\x00\x81\x78\x01\x00\x7f\x78\x00\x07\x74\x73\x00\x0e\x1a\x03\x00\x7f\x78\x00\x00\x81\x78\x01\x08\x70\x6b\x00\x0f\x1b\x03\x00\x7f\x78\x00\x00\x81\x78\x01\x09\x70\x6c\x00";
        bytes8 index = "\x00\x0f\x1e\x2d\x44\x57\x66\x75";

        return _getTrait(data, uint8(index[i]), 1);
    }

    function getMouth(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x21\x16\x00\x22\x1c\x01\x00\x6c\x87\x00\x23\x1c\x01\x01\x64\x87\x00\x24\x1c\x01\x02\x65\x87\x00\x25\x16\x01\x03\x39\x7f\x00\x26\x16\x01\x04\x38\x7c\x00\x27\x1c\x01\x05\x3a\x7e\x00\x28\x1c\x01\x06\x37\x81\x00";
        bytes8 index = "\x00\x03\x0a\x11\x18\x1f\x26\x2d";

        return _getTrait(data, uint8(index[i]), 1);
    }

    function getTeeth(uint256 i) internal pure returns (Trait memory) {
        bytes
            memory data = "\x29\x1d\x00\x2a\x1d\x02\x00\x6c\x88\x00\x00\x94\x88\x01\x2b\x1d\x02\x01\x6e\x88\x00\x01\x92\x88\x01\x2c\x1d\x02\x02\x6c\x88\x00\x02\x94\x88\x01\x2d\x1d\x01\x03\x6c\x88\x00\x2e\x1d\x01\x03\x94\x88\x01\x2f\x1d\x02\x04\x80\x87\x00\x04\x80\x87\x01\x30\x1d\x01\x05\x6d\x87\x00";
        bytes8 index = "\x00\x03\x0e\x19\x24\x2b\x32\x3d";

        return _getTrait(data, uint8(index[i]), 1);
    }
}
