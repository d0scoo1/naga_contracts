// SPDX-License-Identifier: MIT
/**
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOxlc;'...      ...',:cxXMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0xc,.   ..,:cloddddolc'   'xNMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNOxl,.  .;ldOKNNNNNXXXXXXN0;  :0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWOl'   .;oOXNWWMMWNKKKKKKKXN0,  lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;. .:lxKNWNNXKXNXXKK0KKKXNWX:  cXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXk;  'o0WMMWNKKKKKKK0000KKKNWMWx. ,0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNXOxol:,'.  .oXWMWWNXKKKKKKKKKKKKKXWMMMNc .dWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0ko:,.   ..';cld0WMMMWWWNNNNNNNNNNNNNK0Okxxd'  cOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0xl;..  .':ldO0XNNWWNNNNXXXXXXXXXXXXXXXXNNNNX0kdc,.   .;o0WMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMWX0xl;.. .':lxOKNWWNNXXXKKKKKKKKKKKKKKKKKKKKKKKKKKKKXXNNX0dc'   .;dXWMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMNKOdc;.  ..:ok0NWWNNXXKKKKKKKKK0OOkxxddolcc:ccloodooodxxk0KXXNWWWXkc.   .l0WMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMWNX0kdl:'.  .':lx0XWWNNXXKKKKKKK0Oxoc:;:;;oxOOOkxl,..;lodxxc..,ccc;,:ox0NWMWXx:.  .c0WMMMMMMMMMMMMMMMMMMMMM
MMNK0Okkxdol:;'..   .':ok0XNNNXXKKKKKKK0Okdl:cloc;..'codkXWMMMMN0dc:coxO0Oo:lxOx,.;:::ld0NMW0l.  .oXMMMMMMMMMMMMMMMMMMMM
Ko,..       ..',cldk0XNNNXXKKKKKK0Okxxxxo'.;dKWMMNo.'oddd0WMMMMMMMWKxolodkK0ookXOlokxdl::coONWKl.  'xNMMMMMMMMMMMMMMMMMM
,   'ldxxkOO0KXXNNXXXKKKKK0Okxxdddoooddc,,o0XXXKOc':ddddkXWMMMMMMMMMMWXkdx0WXkONW0kKNX0kxoc:cd0N0:  .cXMMMMMMMMMMMMMMMMM
. .lO0KKKXXXKKK0OOkkxxdxddddoodxkOOO0K0kkO0KK0Oxl;;cloddx0XWMMMMMMMMMMMWX0KWMNXWMNXNMMMWXOxdo:;ckKd.  ;0WMMMMMMMMMMMMMMM
:  ,OWWNXXKK00OOkxxxxxkO0KKKKXXNWWWMMMWWWMMMMMMMWWXK0000kxxO0XWMMMMMMMMMMNNMMWWMMWWMMMMMMWKxdddc,;dd'  'OWMMMMMMMMMMMMMM
Xl. .dXMMMMMMMWWWWWWWWMMMMMMMMMMMMMWWX0OOOOO000KKXNWWMMMWX0OkkOXWMMMMMMMMWWMMMMMMMMMMMMMMMWOdddddc';l'  'OMMMMMMMMMMMMMM
MWk,  ,xNMWX00KKKKXXXXXXXKKKK000OOOkkxxdddddddddddxkOKWMMMMMWWXKXNWMMMMMMMMMMMMMMMMMMMMWNX0xddddddo;..   :XMMMMMMMMMMMMM
MMMXd.  ,xXNKOxddddddddddddddddxkkOOOOOOkkxxdddddddddOXWMMMNXNWWWWMMMMMMMMMMMMMMMMMMMMMWNXK0Oxolc:cl,    .dWMMMMMMMMMMMM
MMMMWKo'  'oKNX0kddddddddddkO00OkxdddxxxdooooollcclodxxO000OxxkOKNWMMMWWMMMMMMMMMMMMMMMMMMMMWWX0koc;.     ;0WMMMMMMMMMMM
MMMMMMMXx;. .:xKNX0Oxdddk0K0xolodxxdx0WWWXOkOXX0kocllc:coddddddddxOKNWWNKKXWMMMMMMMMMMMMMMMMMMMMMMWN0d:.   .ckNMMMMMMMMM
MMMMMMMMMN0l'  .;oOKKKKK0xc;:lxXMMWXO0WX0XWXXN0k0K0K0d:'..;lodddddddk0NWN0dodxxxxxkkO0KXNWMMMMMMMMMMMMWXkc.   'dKWMMMMMM
MMMMMMMMMMMMNOo;.  ..,,'.'o0X0k0WNXWWNW0;'lONWx,lkk0dcxxc;. .'ldxdddddkNMMk..,;::ccllodxkkOOOOO0O00KXNWMMWXx:.  'dXMMMMM
MMMMMMMMMMMMMMMWKko:,'.  .:xKWNXNXo:d0WNc ':coo;dN0kooXXkl.  .cxkxdddd0WMNxldxdxkxxkkxdddddddddddddddxkO0XNWW0c.  ;OWMMM
MMMMMMMMMMMMMMMMMMMMWNKx;.  .:xKWMO. .:dc.:K0d:.cXWXKXNO;   .'oxxxxxx0NNXkl;'...cdc;dklcccccclloooddddddddxk0XN0:. .oXMM
MMMMMMMMMMMMMMMMMMMMMMMMNOl'.  .ck0l.:xl, .OMWN0ONW0xxl.  .cxkxo:;,,cOKx:...:c.  ..:d;         ......',;;:clodk0Kd.  cXM
MMMMMMMMMMMMMMMMMMMMMMMMMMMNOo'   '' '0WXklkWWKO0XNKl'...:xxoc..':l,.:d,.;oOOl.  ,oo,                       ..',:oc.  cN
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0,  ,docxWMNXNWMXxddl,,ldoxOl. .';:lx:.:xddOKOl. .cd;.                    ....'.        .d
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0,  ;0NWWMXkk0NXd;,:x00kOk:..',,..,;.'l;;dOk:.  :o;.        ....  'lodxkO0KXXK:  .,;'.  .
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:  .l0XKX0dlc:coOK0kdkOc .cd:.';,.;occxkc..' .:odkoclo:.;k0KXO'.dWMMWNXNMMMXc  ,KWN0koc
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx'  .;::cloxO00OkkO00x' :kOd:,',coldd:..:xo. .,o0NWWWk'lNMMM0,.dWMMNd:OWMWO,  ;KMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMWWNNXK0Okxdl,   .:x0NMWNXXXXKKOOk:..,,,,:c::oOk:':x0K0xoxdlkNMMWk,lNMMM0,.dWMMNc'xN0dl'  ;XMMMMMM
MMMMMMMMMMMMNK0Okxdolc:;,'....        ..ck0KKXXOlcdkkkOK0xddxkK0l..xNX00x:dXWNNKc.lNMMWO,lNMMM0,.dWMMNl.cdx0Kc  ;XMMMMMM
MMMMMMMMMMMMk'.         ....',,. .lxkOOl.:0NNNNk..kWMMMXkxKWWWWWk..dWMWWd.:XMMMXc.lNMMMO'cXMMW0'.dWMMNd:xKWWXl  ;XMMMMMM
MMMMMMMMMMMWd.  .:llodkk00KXNNK: ;KWMMWd.cXMMMWO..kWMMW0''0WMMMWk..dWMMWd.:XMMMXc.oNMMW0lxNWXx; .dWWWNKKNXKXKl  ;KMMMMMM
MMMMMMMMMMMWd   cXWMMMMWWWMMMMX: ;KMMMWd.cNMMMWk..kWMMMO''OWMMMWk..dWMMWd,dNMWKo..oNWWWNNWWN0d;..dXKKK0x0K0KKl  ,KMMMMMM
MMMMMMMMMMMWo   cNMMMWKloKWMMW0, ;KMMMWd.cNMMMWk..kWMMWk.'OWMMMWk..xWMMWXXWWWKo' .oXXKXXOOXK0K0,.dXKOd;.o000Kl  ,KMMMMMM
MMMMMMMMMMMWo   cNMMMWk.'OWNOdc. ;KMMMWx,oNMMMWk..kWMMW0xONWWWWWk..xNXXNW0OXX0K0;.oKK0KO,cKK0K0;.okddk:.o000Kl  ,KMMMMMM
MMMMMMMMMMMWo   cNMMMWk..dxookO; ;KMMMWNKNWMMMWk..kNWNWWWNNXKKXXk..kK00XO,cKK00Kc.oXK0Kk':KK0K0;.;dkKXo'dKKK0l  '0MMMMMM
MMMMMMMMMMMWo   cNMMMWk..cxKWWK; ;KMMMMWNNWWNNNk..xKKKXNdlOKO00Xk..kK00Kk.:KK0K0c.dXK0Kk':KK0KO;.xXK0K0OK00KKo  '0MMMMMM
MMMMMMMMMMMWo   cXMMMW0dONWWWWK; ;KNXXN0:oXK0KXx..kK00XK;'OKO00Xk.'OK00Kx.:KK0K0c.dXK0Kk':KK00O;.kXKKKK0Okddo,  '0MMMMMM
MMMMMMMMMMMWo   cXWNNXXXNWNXKXK; :KK0KXk.:KK00Kx..kK00X0,'OKO00Kk.'OXK0Kd.:KKKK0c.dXK0Kk,:KKOOx'.;lc:;'...     .:KMMMMMM
MMMMMMMMMMMWo   cXX0KK0xd0XKKXK; :KK0KXx.:KK00Xx..kK00KO''OXOKKKk.'OX000d.:KXKK0:.lOkdo:..,,...    ..',;:clodkO0XWMMMMMM
MMMMMMMMMMMWl   cNNKkdc..OXK0XK; :KK00Xx.:KK0KXx..kKKKKk''0XO00Kk.'kK0OOl.'llc:,. ..        ...,cxOKXNWWMMMMMMMMMMMMMMMM
MMMMMMMMMMMWl   :Oxlokx'.kXK0XK; :XX0KKx.:KK0KXx..xXKKXk.'k0OOkxc. ','..                     ..:OWMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWl   .cdOKN0;,OXK0XK; cXK00Kx.:XXKKXd..cxdol;. .....                .'ldoc::::'.  .oXMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWo   ;0XK0KXOOKK00XK; cXX000l.'llc;,.        ..',;;;;,'..     ..,:loxkkxdddoc'  .c0WMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWo   :XXKKKXXK00Okko. .;,'..       ..',:cloxkxdolc:,..   ':loxkOOOkxxdddddc'  .;OWMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWo   ,xxdol:;,'..        ..',:codk0KXNWWMMMMWKxc,'..    .:dOKXXKOxdddddddo'  'xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWl            ..',:cldkO0KXNWWMMMMMMMMMMMMMMMMMMWNX0xo:'.  ..,lOK0kdddddo;  .xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWo...',:cldxk0KXNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOxl.  lK0xdddddc.  :XMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMWX0KXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWl  lK0xddddc.  .kWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNc .oKOxdddl.  .dWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX; .oKOdddl.  .dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0, .o0Oxxl.  .xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO. .xK0k:.  ,OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWd. ;O0o'  .lXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWl  ,l,.  ;OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNc      ;kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMX;   .:kNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0, 'l0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM0ldKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
0xSHARK by 0xSHARKDEV
 */
pragma solidity ^0.8.10;

import "./ERC721A.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/math/SafeMath.sol";
import "@openzeppelin/contracts/utils/Strings.sol";

contract SHARKS is ERC721A, Ownable {

    uint256 public constant MAX_DEV_MINT = 200;
    uint256 public constant MAX_TOKENS = 3334;
    uint256 public constant MAX_PER_MINT = 20;
    
    
    address public constant w1 = 0xE80D75E8Fa54a77188D712E70DdaEF0a81C41d29; //owner
    address public constant w2 = 0x87c56882216A3Ae8d2A1530b1A413dA144a721C1; //marketing team
    address public constant w3 = 0x0e07828cF40e030f2ED5059175aCE30d16e4576D; //dev wallet
    

    uint256 private tokenPrice = 0.02 ether; //price

    bool public publicSaleStarted = false;

    string private baseURI;

    event PriceChanged(
        uint256 newPrice,
        uint256 timestamp
    );

    constructor() ERC721A("Sharksss", "Sharksss", MAX_PER_MINT,MAX_TOKENS) {
    }
    // Used to set price
    function setPrice(uint256 _newPrice) public onlyOwner {
        tokenPrice = _newPrice;
        emit PriceChanged(tokenPrice,block.timestamp);
    }
    function togglePublicSaleStarted() external onlyOwner {
        publicSaleStarted = !publicSaleStarted;
    }

    function setBaseURI(string memory _newBaseURI) external onlyOwner {
        baseURI = _newBaseURI;
    }

    function _baseURI() internal view override returns (string memory) {
        return baseURI;
    }

    // sale mint function
    function mintShark(uint256 tokens) external payable {
        require(publicSaleStarted, "sale has not started");
        require(tokens <= MAX_PER_MINT, "Cannot purchase this many tokens in a transaction");
        require(totalSupply() + tokens <= MAX_TOKENS, "max supply reached");
        require(tokens > 0, "cannot mint 0 sharkx");
        require(msg.value >= tokenPrice * tokens, "not enough eth");
         _safeMint(msg.sender, tokens);
    }
    // dev mint function - should be executed before publicsale
    function mintDevShark(uint256 DevTokens) public onlyOwner {
        require(totalSupply() + MAX_DEV_MINT <= MAX_TOKENS, "max supply reached");
        require(DevTokens % MAX_PER_MINT == 0,"can only mint a multiple of 20");
        uint256 numChunks = DevTokens / MAX_PER_MINT;
        for (uint256 i = 0; i < numChunks; i++) {
          _safeMint(msg.sender, MAX_PER_MINT);
        }
    }
    /// withdraw 
    function withdrawfunds() public onlyOwner {
        uint256 balance = address(this).balance;
        require(balance > 0, "Insufficent balance");
        _widthdraw(w3, ((balance * 15) / 100)); //dev
        _widthdraw(w2, ((balance * 10) / 100)); //promo
        _widthdraw(w1, address(this).balance);// artist
    }
    function numberMinted(address owner) public view returns (uint256) {
       return _numberMinted(owner);
    }
    function _widthdraw(address _address, uint256 _amount) private {
        (bool success, ) = _address.call{value: _amount}("");
        require(success, "Failed to widthdraw");
    }
}