// SPDX-License-Identifier: Unlicense

pragma solidity ^0.8.4;

import './TRKeys.sol';

/// @notice The Reliquary Grail of Arcane
library TRGrailArcane {

  function getElement() public pure returns (string memory) {
    return 'Arcane';
  }

  function getPalette() public pure returns (string memory) {
    return 'Cosmic';
  }

  function getEssence() public pure returns (string memory) {
    return 'Unknown';
  }

  function getStyle() public pure returns (string memory) {
    return 'Pajamas';
  }

  function getSpeed() public pure returns (string memory) {
    return 'Swift';
  }

  function getGravity() public pure returns (string memory) {
    return 'Massive';
  }

  function getDisplay() public pure returns (string memory) {
    return 'Normal';
  }

  function getColorCount() public pure returns (uint256) {
    return 5;
  }

  function getRelicType() public pure returns (string memory) {
    return TRKeys.RELIC_TYPE_GRAIL;
  }

  function getRuneflux() public pure returns (uint256) {
    return 800;
  }

  function getCorruption() public pure returns (uint256) {
    return 150;
  }

  function getGlyph() public pure returns (uint256[] memory) {
    uint256[] memory glyph = new uint256[](64);
    glyph[0]  = uint256(1111111111111111111111000000000000000000000000000000);
    glyph[1]  = uint256(1111111111111111111111000000000000000000000000000000);
    glyph[2]  = uint256(111111111111111111111100000000000000000000000000000000);
    glyph[3]  = uint256(111111111111111111111100000000000000000000000000000000);
    glyph[4]  = uint256(11111111111111111111110000000000000000000000000000000000);
    glyph[5]  = uint256(11111111111111111111110000000000000000000000000000000000);
    glyph[6]  = uint256(1111111111111111111111000000000000000000000000000000000000);
    glyph[7]  = uint256(1111111111111111111111000000000000000000000000000000000000);
    glyph[8]  = uint256(111111111111111111111100000000000000000000000000000000000000);
    glyph[9]  = uint256(111111111111111111111100000000000000000000000000000000000000);
    glyph[10] = uint256(11111111111111111111119999999999999999000000000000000000000000);
    glyph[11] = uint256(11111111111111111111119999999999999999000000000000000000000000);
    glyph[12] = uint256(1111111111111111111199990000000000000000999900000000000000000000);
    glyph[13] = uint256(1111111111111111111199990000000000000000999900000000000000000000);
    glyph[14] = uint256(1111111111111111119900000000000000000000000099000000000000000000);
    glyph[15] = uint256(1111111111111111119900000000000000000000000099000000000000000000);
    glyph[16] = uint256(1111111111111111119944666666444444446666664499000000000000000000);
    glyph[17] = uint256(1111111111111111119944666666444444446666664499000000000000000000);
    glyph[18] = uint256(1111111111111188664477777755660000667777775544668800000000000000);
    glyph[19] = uint256(1111111111111188664477777755660000667777775544668800000000000000);
    glyph[20] = uint256(1111111111111188886677775555776666777755557766888800000000000000);
    glyph[21] = uint256(1111111111111188886677775555776666777755557766888800000000000000);
    glyph[22] = uint256(1111111111110000996655557777776666555577777766990000000000000000);
    glyph[23] = uint256(1111111111110000996655557777776666555577777766990000000000000000);
    glyph[24] = uint256(1111111111000000990044557777440000445577884400990000000000000000);
    glyph[25] = uint256(1111111111000000990044557777440000445577884400990000000000000000);
    glyph[26] = uint256(1111111100000000990000444444000000004444440000990000000000000000);
    glyph[27] = uint256(1111111100000000990000444444000000004444440000990000000000000000);
    glyph[28] = uint256(1111110000000000990099999999000000009999999900990000000000000000);
    glyph[29] = uint256(1111110000000000990099999999000000009999999900990000000000000000);
    glyph[30] = uint256(1111000000005599996666666666666600666666666666999955000000000000);
    glyph[31] = uint256(1111000000005599996666666666666600666666666666999955000000000000);
    glyph[32] = uint256(1100000000009933996699999999666666669999999966993399000000000000);
    glyph[33] = uint256(1100000000009933996699999999666666669999999966993399000000000000);
    glyph[34] = uint256(449933996666009900996666993399336666993399440000000000);
    glyph[35] = uint256(449933996666009900996666993399336666993399440000000000);
    glyph[36] = uint256(9933996666666666666666666666666666993399000000000000);
    glyph[37] = uint256(9933996666666666666666666666666666993399000000000000);
    glyph[38] = uint256(449933998888888888888899999999999999993399440000000000);
    glyph[39] = uint256(449933998888888888888899999999999999993399440000000000);
    glyph[40] = uint256(99998888888888889999999999999999999900000000000000);
    glyph[41] = uint256(99998888888888889999999999999999999900000000000000);
    glyph[42] = uint256(998888888888888899999999999999990000000000000000);
    glyph[43] = uint256(998888888888888899999999999999990000000000000000);
    glyph[44] = uint256(998888888888888899999999999999990000000000000011);
    glyph[45] = uint256(998888888888888899999999999999990000000000000011);
    glyph[46] = uint256(9988888888888899999999999999000000000000001111);
    glyph[47] = uint256(9988888888888899999999999999000000000000001111);
    glyph[48] = uint256(9988888888888899999999999999000000000000111111);
    glyph[49] = uint256(9988888888888899999999999999000000000000111111);
    glyph[50] = uint256(99888888888899999999999900000000000011111111);
    glyph[51] = uint256(99888888888899999999999900000000000011111111);
    glyph[52] = uint256(99998888888899999999999900000000001111111111);
    glyph[53] = uint256(99998888888899999999999900000000001111111111);
    glyph[54] = uint256(99999988888899999999999900000000111111111111);
    glyph[55] = uint256(99999988888899999999999900000000111111111111);
    glyph[56] = uint256(9999999999888899999999999999000011111111111111);
    glyph[57] = uint256(9999999999888899999999999999000011111111111111);
    glyph[58] = uint256(999999999999999999999999999999991111111111111111);
    glyph[59] = uint256(999999999999999999999999999999991111111111111111);
    glyph[60] = uint256(99999999999988888899999999999999999911111111111111);
    glyph[61] = uint256(99999999999988888899999999999999999911111111111111);
    glyph[62] = uint256(9999999999998888888899999999999999999999111111111111);
    glyph[63] = uint256(9999999999998888888899999999999999999999111111111111);
    return glyph;
  }

  function getDescription() public pure returns (string memory) {
    return "The Grail of Arcane honors the Chain Runners for building an awesome on-chain community and for their commitment to openly building great experiences around their nascent cyberpunk universe. This piece recreates Runner #6923, submitted by Tiamat.";
  }

}
