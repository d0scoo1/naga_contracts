//
//      ################################################################################
//      ################################################################################
//      ################################################################################
//      ########################################################//########//############
//      #######################,,,,,#########################***,,***##***,,***#########
//      ##################&&,..     ..*####################**,,,,,,,,**,,,,,,,,**#######
//      #############&&        %%          /###############,,,,,,,,,,,,,,,,,,,,,,#######
//      #############%%        &&...       /###############,,,,,,,,,,,,,,,,,,,,,,#######
//      ########%%###     ..#####%%%,,.       ###############***,,,,,,,,,,,,***#########
//      #####%%%((     ,,,##########%%#**     ///###############//,,,,,,,,//############
//      #####&&&     **###############%&&        #################///,,///##############
//      #####&&&     #################%&&        ####################,,#################
//      ###&&     #######################&&*  ##########################################
//      ###&&     ####################%&&        #######################################
//      #####&&&..     (((#######(((##/            (((##################################
//      ########&&        #####&&                    .##################################
//      ##########&&&                 ,####%&&          ################################
//      #############&&&&&       #############&&&          #############################
//      ##################&&   ##################&&          ###########################
//      ###########################################&&%          ########################
//      ##############################################&&          ######################
//      ################################################&&&          ###################
//      ###################################################&&          #################
//      ################################################&&&               ##############
//      ##############################################&&     &&&            ############
//      ###########################################&&%       ###&&             #########
//      ###########################################&&%     #######&&&            #######
//      ########################################################&&     &&&       #######
//      #####################################################&&&       ###&&   #########
//      ###################################################&&        ###################
//      ###################################################&&     ######################
//      ################################################################################
//
//                                       flipmap.art
//
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "../../flipmaps-app/contracts/Flipmap.sol";

contract Flipkey1155 is ERC1155, Ownable, ERC1155Supply {
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    string public name = 'Flipkeys';

    mapping(address => bool)    public _contracts;
    mapping(uint256 => bytes)   public _keys;

    Flipmap     private flipmap;

    modifier onlyContractOrOwner() {
        require(msg.sender == owner() || _contracts[msg.sender] == true);
        _;
    }

    constructor(address flipmapAddress) ERC1155("") {
        _keys[1] = hex"77c3fd0a0a0ac90808edf10e000000000000000000000000000000000000000000004000000000000001500000001400000554000003550000155500003575500055554000d50d540055554003540354001445000d5000d5000040000d4000d5000150003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[2] = hex"e06addeedc17d17b1af5f5f55a500000000005a570d000094000070d8f200025500008f28f200009400008f270d000955700070d5a50095555c005a500009540095c000000025500025500000000954009540000000009555570000000000095570000000000002570000000000000255000000000000025700000000000002570000000000000267000000000000026700000000000002670000000000000267000000000000026700000000000002650000000000000265550000000000026555000000000002650900000000000267000000000000026700000005a500026709005a570d000255550070d8f200025555008f28f200009700008f270d000000000070d5a500000000005a9";
        _keys[3] = hex"5612deffdd006f6cb70f0f0f00000000000000002aaaaaaaaaaaaaa82aaa00000000aaa82aa03ffffffc0aa82a83f555555fc2a82a8fd5555557f2a82a8f57ffffd5f2a82a8d5ffffff572a82a8f5ffffff5f2a82a83d7ffffd7caa82aa0f555555f0aa82aa83d5d757c2aa82aaa0ffd7ff0aaa82aaa800d7002aaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa0d70aaaaa82aaaa80d702aaaa82aaaa8fd7f2aaaa82aaaa8d5572aaaa82aaaa0fd7f0aaaa82aaaa3fd7fcaaaa82aaaa35555caaaa82aaaa3f55fcaaaa82aaaa0fd7f0aaaa82aaaa8d5572aaaa82aaaa8dff72aaaa82aaaa8fc3f2aaaa80000000000000000";
        _keys[4] = hex"db0a0af5ef4de6d14c0c0b090000000000000000000e000000000000003580000000000000d5600000003030035b580000000cc00d60d600030303003540358000cc000035800d600030000035603550000000000d589580000030300356560000000cc000d55800000003000035600000000000000d58000000000000035600000000000000d5800000000000003560000d000000000d58003580000000035600d60000000000d58358d00000000035635b58000000000d5b5563400303000356558d8000cc0000d595b6000030000035655800000000000d5b50000000000003560000000c0c0000d5800000033000003540000000c000000d000000000000000000000000000000000000";
        _keys[5] = hex"45af18b4b432e3e61e0a0a0a000000000000000000000000000000000000000000000000000003fabc00000000003d5a97f000000000faaaaa9c00000003eaaaaaa70000000fa5ffffa9c000003e9f0000fa7000003e9c00003a7000003e9c00003a7000003e9c00003a7000003e9c0000fa7000000fa70003e9c0000003e9fffea700000000faaaaa9c000000003eaaaa70000000000ff69fc00000000003f69c000000000000369c000000000000369c000000000000369c00000000000036aa700000000000f6aa700000000000f6a5c00000000000f69f000000000000f6aa700000000000f6aa70000000000036a5c00000000000379f0000000000000ff00000000000000000000000";
        _keys[6] = hex"c0f8a85a04c68785c294e51d55005500550055007f000000000000fc7a000000000000ac780000000000006c000000155400000100000055550000010000015ea540000100000d700950000140000d5c0558000040000d55555800004000035555600000400000d55580000000000035560000010000000d5800000100000001500000010000000d580000014000000d580000004000000d580000004000000dd800000040000035d800000000000009d800000100000035d80000010000000958000001000000015800000140000035d800000040000009d80000004000003558000000400000356800000039000002a000002d3a000000000000ad3f000000000000fd0055005500550055";
        _keys[7] = hex"77c3fd0a0a0ac90808edf10e000000000000000000000000000000000000000000004000000000000001500000001400000554000003550000015000003575500014450000d50d540055554003540354005555400d5000d5001445000d4000d5000040003500003400055400350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[8] = hex"77c3fd0a0a0ac90808edf10e000000000000000000000000000000000000000000008000000000000002a00000001400000aa80000035500002aaa000035755000aaaa8000d50d54002aaa0003540354000aa8000d5000d50002a0000d4000d5000080003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[9] = hex"77c3fd0a0a0ac90808edf10e000000000000000000000000000000000000000000000000000000000008080000001400002a2a000003550000aaaa800035755000aaaa8000d50d54002aaa0003540354000aa8000d5000d50002a0000d4000d5000080003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[10] = hex"3db18b262f4e6611280dd636000000000000000000000000000000000000000000004000000000000001500000001400000554000003550000155500003575500055554000d50d540055554003540354001445000d5000d5000040000d4000d5000150003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[11] = hex"63023ffd244be3c77999fb695a500000000005a570d000094000070d8f200025500008f28f200009400008f270d000955700070d5a50095555c005a500009540095c000000025500025500000000954009540000000009555570000000000095570000000000002570000000000000255000000000000025700000000000002570000000000000267000000000000026700000000000002670000000000000267000000000000026700000000000002650000000000000265550000000000026555000000000002650900000000000267000000000000026700000005a500026709005a570d000255550070d8f200025555008f28f200009700008f270d000000000070d5a500000000005a9";
        _keys[12] = hex"b9648e51eb8315d7aeba0f9200000000000000002aaaaaaaaaaaaaa82aaa00000000aaa82aa03ffffffc0aa82a83f555555fc2a82a8fd5555557f2a82a8f57ffffd5f2a82a8d5ffffff572a82a8f5ffffff5f2a82a83d7ffffd7caa82aa0f555555f0aa82aa83d5d757c2aa82aaa0ffd7ff0aaa82aaa800d7002aaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa0d70aaaaa82aaaa80d702aaaa82aaaa8fd7f2aaaa82aaaa8d5572aaaa82aaaa0fd7f0aaaa82aaaa3fd7fcaaaa82aaaa35555caaaa82aaaa3f55fcaaaa82aaaa0fd7f0aaaa82aaaa8d5572aaaa82aaaa8dff72aaaa82aaaa8fc3f2aaaa80000000000000000";
        _keys[13] = hex"8998ff0b1c58c7a1b645ee500000000000000000000e000000000000003580000000000000d5600000003030035b580000000cc00d60d600030303003540358000cc000035800d600030000035603550000000000d589580000030300356560000000cc000d55800000003000035600000000000000d58000000000000035600000000000000d5800000000000003560000d000000000d58003580000000035600d60000000000d58358d00000000035635b58000000000d5b5563400303000356558d8000cc0000d595b6000030000035655800000000000d5b50000000000003560000000c0c0000d5800000033000003540000000c000000d000000000000000000000000000000000000";
        _keys[14] = hex"a22085afe31bc0915c1a2f4c000000000000000000000000000000000000000000000000000003fabc00000000003d5a97f000000000faaaaa9c00000003eaaaaaa70000000fa5ffffa9c000003e9f0000fa7000003e9c00003a7000003e9c00003a7000003e9c00003a7000003e9c0000fa7000000fa70003e9c0000003e9fffea700000000faaaaa9c000000003eaaaa70000000000ff69fc00000000003f69c000000000000369c000000000000369c000000000000369c00000000000036aa700000000000f6aa700000000000f6a5c00000000000f69f000000000000f6aa700000000000f6aa70000000000036a5c00000000000379f0000000000000ff00000000000000000000000";
        _keys[15] = hex"b5f03bd02bac9bd9c9da259555005500550055007f000000000000fc7a000000000000ac780000000000006c000000155400000100000055550000010000015ea540000100000d700950000140000d5c0558000040000d55555800004000035555600000400000d55580000000000035560000010000000d5800000100000001500000010000000d580000014000000d580000004000000d580000004000000dd800000040000035d800000000000009d800000100000035d80000010000000958000001000000015800000140000035d800000040000009d80000004000003558000000400000356800000039000002a000002d3a000000000000ad3f000000000000fd0055005500550055";
        _keys[16] = hex"303227f489959d2ceee5ea87000000000000000000000000000000000000000000004000000000000001500000001400000554000003550000015000003575500014450000d50d540055554003540354005555400d5000d5001445000d4000d5000040003500003400055400350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[17] = hex"568180fc4d5fdee2ffe7d635000000000000000000000000000000000000000000008000000000000002a00000001400000aa80000035500002aaa000035755000aaaa8000d50d54002aaa0003540354000aa8000d5000d50002a0000d4000d5000080003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[18] = hex"853157fa4929b50205e8ed3c000000000000000000000000000000000000000000000000000000000008080000001400002a2a000003550000aaaa800035755000aaaa8000d50d54002aaa0003540354000aa8000d5000d50002a0000d4000d5000080003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[19] = hex"f86892bc2c334fb1caa057db000000000000000000000000000000000000000000004000000000000001500000001400000554000003550000155500003575500055554000d50d540055554003540354001445000d5000d5000040000d4000d5000150003500003400000000350000d5000000000d50035540000000035435555000000000d5550d54000000003d50035500000000034000d54000000000000035500000000000000d54000000000000035500000000000000d540000000000003555000000000000d75540000000000354d5500000000003503554000000000000d75400000000000354d000000000000d500000000000000d4000000000000000000000000000000000000";
        _keys[20] = hex"47fed02b7fd485f758ee15f55a500000000005a570d000094000070d8f200025500008f28f200009400008f270d000955700070d5a50095555c005a500009540095c000000025500025500000000954009540000000009555570000000000095570000000000002570000000000000255000000000000025700000000000002570000000000000267000000000000026700000000000002670000000000000267000000000000026700000000000002650000000000000265550000000000026555000000000002650900000000000267000000000000026700000005a500026709005a570d000255550070d8f200025555008f28f200009700008f270d000000000070d5a500000000005a9";
        _keys[21] = hex"1f0538cc365813256cfccab600000000000000002aaaaaaaaaaaaaa82aaa00000000aaa82aa03ffffffc0aa82a83f555555fc2a82a8fd5555557f2a82a8f57ffffd5f2a82a8d5ffffff572a82a8f5ffffff5f2a82a83d7ffffd7caa82aa0f555555f0aa82aa83d5d757c2aa82aaa0ffd7ff0aaa82aaa800d7002aaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa8d72aaaaa82aaaaa0d70aaaaa82aaaa80d702aaaa82aaaa8fd7f2aaaa82aaaa8d5572aaaa82aaaa0fd7f0aaaa82aaaa3fd7fcaaaa82aaaa35555caaaa82aaaa3f55fcaaaa82aaaa0fd7f0aaaa82aaaa8d5572aaaa82aaaa8dff72aaaa82aaaa8fc3f2aaaa80000000000000000";
        _keys[22] = hex"670887625341c1a58bfcfcfc5600000000000095580000000000002560000000000000098000000000000002000000955400000000000255550000000000096aa94000000000096aa94000000000095aa54000000000025ff50000000000025ff5000000000000955400000000000009400000000000000940000000600000094000000960000009400000096000000940000009600000094000000960000009400000090000025555400000000002402540000000000000950000000000000254000000000000095000000000000025424000000000009509400000000002555540000000000255554000008000000000000002600000000000000958000000000000255600000000000095";
        _keys[23] = hex"240aeb141414cf0202929fa0000000000000000000000000000000000000000d50000000000000d554000000000001555500000000000199d500000000000074d500000000000003540000000000000d500000000000003550000000000000d503500000000003540d5000000000035535400000000000d55500000000000035540000000000000d500000000000000d400000000000000d400000000000000d400000000000000d400000000000001555000000000000354d000000000000354000000000000355500000000000003540000000000003554d00000000000005550000000000000d400000000000000d40000000000000034000038000000000000000000000000000000000";
        _keys[24] = hex"eb0aa4f1f976ddb8970adceb0000000000000000000000000000000002800000000002800aa0000000000aa008200002800008200820002aa80008200820007d7d000820095000d7d7000950069000aaaa000a90041002aaaa800410041002aeba800410041002aaaa80041006a000aaaa0006a005600028280005600820000aa00008200820000690000820082000014000082009500005500009500a90000550000a9004100001400004100410000550000410041000055000041006a00001400006a0056000055000056008201555555008200820141450540820082000145050082008200014554008200aa0001451500aa0028014145054028000001554501500000000000000000000";

        flipmap = Flipmap(flipmapAddress);
    }

    function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyContractOrOwner {
        _mint(account, id, amount, data);
    }

    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public onlyContractOrOwner {
        _mintBatch(to, ids, amounts, data);
    }

    function getKeyIds() internal pure returns (uint256[] memory keyIds) {
        keyIds = new uint256[](24);
        for(uint256 i=0; i<24; i++) {
            keyIds[i] = i+1;
        }
    }

    function mintRandom(address to) public onlyContractOrOwner {
        uint256 keyId = getRandomKey(random(string(abi.encodePacked(toString(block.timestamp)))));
        bytes memory data;
        mint(to, keyId, 1, data);
    }

    function mintRandomBatch(address to, uint256 amount) public onlyContractOrOwner {
        uint256[] memory amounts = new uint256[](24);
        for(uint256 i=0; i<amount; i++) {
            uint256 keyId = getRandomKey(random(string(abi.encodePacked(toString(block.timestamp), toString(i)))));
            amounts[keyId-1]++;
        }
        bytes memory data;
        mintBatch(to, getKeyIds(), amounts, data);
    }

    function setKeyData(uint256 key, bytes memory data) public onlyOwner {
        _keys[key] = data;
    }

    function addContract(address contractAddress) public onlyOwner {
        _contracts[contractAddress] = true;
    }

    function removeContract(address contractAddress) public onlyOwner {
        _contracts[contractAddress] = false;
    }

    function random(string memory input) internal pure returns (uint256) {
        return uint256(keccak256(abi.encodePacked(input)));
    }

    function getRandomKey(uint256 randomness) internal pure returns (uint256 key) {
        key = 1;
        for(uint256 i=24; i>1; i--) {
            if(randomness % (i+1) == 0) {
                key = i;
                break;
            }
        }
    }

    function getByOwner(address owner) view public returns(uint256[] memory ids, uint256[] memory result) {
        uint256 totalTokens;
        for(uint256 i = 0; i <= 24; i++) {
            if(balanceOf(owner, i) > 0) {
                totalTokens++;
            }
        }
        result = new uint256[](totalTokens);
        ids = new uint256[](totalTokens);
        uint256 resultIndex = 0;
        for (uint256 t = 1; t <= 24; t++) {
            if (balanceOf(owner, t) > 0) {
                result[resultIndex] += balanceOf(owner, t);
                ids[resultIndex] = t;
                resultIndex++;
            }
        }
    }

    function uri(uint256 tokenId) override public view returns (string memory) {
        string memory tokenName = string(abi.encodePacked('Key #', toString(tokenId)));
        string memory description = 'Flipkeys unlock the secret of the Flipverse.';
        string memory image = string(abi.encodePacked('data:image/svg+xml;base64,', Base64.encode(bytes(makeSVG(tokenId)))));
        string memory json = string(abi.encodePacked('{"name": "', tokenName, '", "description": "', description, '", "image": "', image, '"}'));
        return string(abi.encodePacked('data:application/json;base64,', Base64.encode(bytes(json))));
    }

    function makeSVG(uint256 tokenId) public view returns (string memory) {
        bytes memory data = _keys[tokenId];

        // Unflip
        string memory svgString = '<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 1000 1000"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32" shape-rendering="crispEdges"><g>';
        string memory svg = flipmap.tokenSvgData(data);
        svg = getSlice(279, bytes(svg).length, svg);
        svg = string(abi.encodePacked(svgString, svg));
        return svg;
    }

    function getSlice(uint256 begin, uint256 end, string memory text) public pure returns (string memory) {
        bytes memory a = new bytes(end-begin+1);
        for(uint i=0;i<=end-begin;i++){
            a[i] = bytes(text)[i+begin-1];
        }
        return string(a);
    }

    function toString(uint256 value) public pure returns (string memory) {
        if (value == 0) {
            return "0";
        }
        uint256 temp = value;
        uint256 digits;
        while (temp != 0) {
            digits++;
            temp /= 10;
        }
        bytes memory buffer = new bytes(digits);
        while (value != 0) {
            digits -= 1;
            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));
            value /= 10;
        }
        return string(buffer);
    }

    // The following functions are overrides required by Solidity.

    function _beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    internal
    override(ERC1155, ERC1155Supply)
    {
        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);
    }
}
